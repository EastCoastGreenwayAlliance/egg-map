{"version":3,"sources":["webpack:///0.3dbb278452a5b619e573.js","webpack:///./lib/ecgClientRouter.js"],"names":["webpackJsonp","361","module","exports","__webpack_require__","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","_typeof","Symbol","iterator","obj","constructor","prototype","root","factory","apply","this","modules","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","default","object","property","hasOwnProperty","p","s","global","NumberUtil","IllegalArgumentException","Double","Comparable","Clonable","Comparator","Serializable","RuntimeException","message","stack","Error","AssertionFailedException","arguments","length","Assert","Coordinate","x","y","z","NULL_ORDINATE","_x","_y","DimensionalComparator","dimensionsToTest","Iterator","Collection","IndexOutOfBoundsException$1","List","NoSuchElementException","OperationNotSupported","ArrayList","array_","addAll","CoordinateList","coord","ensureCapacity","add","_coord","allowRepeated","Envelope","minx","maxx","miny","maxy","init","env","p1","p2","x1","x2","y1","y2","Exception","NotRepresentableException","Location","MathUtil","StringBuffer","str","Integer","Character","DD","hi","lo","dd","parse","CGAlgorithmsDD","CoordinateSequence","System","HCoordinate","w","_p","_p2","_x2","_y2","_w","_p3","_p4","q1","q2","px","py","pw","qx","qy","qw","CoordinateSequenceFactory","GeometryComponentFilter","Geometry","envelope","SRID","userData","getSRID","CoordinateFilter","BoundaryNodeRule","Mod2BoundaryNodeRule","EndPointBoundaryNodeRule","MultiValentEndPointBoundaryNodeRule","MonoValentEndPointBoundaryNodeRule","CoordinateArrays","ForwardComparator","BidirectionalComparator","Map$1","SortedMap","Set","HashSet","colorOf","BLACK","color","parentOf","parent","setColor","leftOf","left","rightOf","right","TreeMap","root_","size_","Lineal","SortedSet","TreeSet","Arrays","Dimension","GeometryFilter","CoordinateSequenceFilter","GeometryCollection","geometries","hasNullElements","MultiLineString","lineStrings","BoundaryOp","geom","geomFact","bnRule","endpointMap","MOD2_BOUNDARY_RULE","_geom","getFactory","Counter","count","PrintStream","StringReader","DecimalFormat","ByteArrayOutputStream","IOException","LineNumberReader","StringUtil","CoordinateSequences","LineString","points","Puntal","Point","coordinates","Polygonal","Polygon","shell","holes","createLinearRing","isEmpty","hasNonEmptyElements","MultiPoint","LinearRing","GeometryFactory","getCoordinateSequenceFactory","create","hasInterface","_points","_factory","validateConstruction","MultiPolygon","polygons","GeometryEditor","isUserDataCopied","GeometryEditorOperation","NoOpGeometryOperation","CoordinateOperation","CoordinateSequenceOperation","CoordinateArraySequence","dimension","Array","Number","isInteger","size","fill","coordSeq","getDimension","getCoordinateCopy","_coordinates","_size","_dimension","CoordinateArraySequenceFactory","is","a","b","forEach","set","sharedDelete","key","has","_keys","splice","_values","_itp","sharedGet","list","objectOnly","TypeError","indexOf","mapHas","sharedSet","push","sharedClear","sharedKeys","sharedIterator","sharedValues","mapEntries","itp","array","array2","done","next","v","k","sharedSize","sharedForEach","callback","context","it","entries","r","HashMap","map_","MapImpl","PrecisionModel","modelType","scale","FLOATING","Type","FIXED","setScale","pm","nameToTypeMap","put","precisionModel","coordinateSequenceFactory","getDefaultCoordinateSequenceFactory","_precisionModel","_precisionModel2","_SRID","_coordinateSequenceFactory","WKTParser","geometryFactory","WKTWriter","parser","LineIntersector","result","inputLines","map","intPt","intLineIndex","_isProper","pa","pb","RobustLineIntersector","RobustDeterminant","RayCrossingCounter","crossingCount","isPointOnSegment","CGAlgorithms","LineSegment","p0","ls","x0","y0","IntersectionMatrix","matrix","setAll","FALSE","elements","other","INTERIOR","BOUNDARY","EXTERIOR","Centroid","areaBasePt","triangleCent3","areasum2","cg3","lineCentSum","totalLength","ptCount","ptCentSum","EmptyStackException","Stack","UniqueCoordinateArrayFilter","treeSet","ConvexHull","geomFactory","inputPts","geometry","extractCoordinates","pts","filterCoordinates","RadialComparator","origin","GeometryTransformer","inputGeom","pruneEmptyGeometry","preserveGeometryCollectionType","preserveCollections","preserveType","LineStringSnapper","snapTolerance","srcPts","seg","allowSnappingToSourceVertices","_isClosed","srcLine","getCoordinates","_snapTolerance","isClosed","GeometrySnapper","srcGeom","SnapTransformer","snapPts","isSelfSnap","_snapPts","CommonBits","isFirst","commonMantissaBitsCount","commonBits","commonSignExp","CommonBitsRemover","commonCoord","ccFilter","CommonCoordinateFilter","commonBitsX","commonBitsY","Translater","trans","GeometryCollectionIterator","atStart","max","index","subcollectionIterator","getNumGeometries","PointLocator","boundaryRule","OGC_SFS_BOUNDARY_RULE","isIn","numBoundaries","Octant","SegmentString","BasicSegmentString","data","Boundable","ItemBoundable","bounds","item","PriorityQueue","items","ItemVisitor","SpatialIndex","AbstractNode","childBoundables","level","BoundablePair","boundable1","boundable2","_distance","itemDistance","distance","AbstractSTRtree","built","itemBoundables","nodeCapacity","DEFAULT_NODE_CAPACITY","isTrue","IntersectsOp$1","ItemDistance","STRtree","STRtreeNode","SegmentPointComparator","SegmentNode","segString","segmentIndex","segmentOctant","_isInterior","equals2D","getCoordinate","SegmentNodeList","nodeMap","edge","NodeVertexIterator","nodeList","nodeIt","currNode","nextNode","currSegIndex","getEdge","readNextNode","NodableSegmentString","NodedSegmentString","MonotoneChainOverlapAction","tempEnv1","tempEnv2","overlapSeg1","overlapSeg2","MonotoneChain","start","end","id","Quadrant","MonotoneChainBuilder","Noder","SinglePassNoder","segInt","setSegmentIntersector","MCIndexNoder","monoChains","idCounter","nodedSegStrings","nOverlaps","si","SegmentOverlapAction","TopologyException","pt","msg","_msg","msgWithCoord","SegmentIntersector","InteriorIntersectionFinder","findAllIntersections","isCheckEndSegmentsOnly","li","interiorIntersection","intSegments","intersections","intersectionCount","keepIntersections","FastNodingValidator","segStrings","_isValid","EdgeNodingValidator","nv","edges","toSegmentStrings","GeometryCollectionMapper","mapOp","Position","TopologyLocation","location","on","ON","gl","_on","LEFT","RIGHT","Label","elt","onLoc","lbl","geomIndex","_onLoc","NONE","setLocation","_onLoc2","leftLoc","rightLoc","_geomIndex","_onLoc3","_leftLoc","_rightLoc","setLocations","EdgeRing","startDe","maxNodeDegree","label","ring","_isHole","computePoints","computeRing","MinimalEdgeRing","MaximalEdgeRing","GraphComponent","_isInResult","_isCovered","_isCoveredSet","_isVisited","Node","NodeMap","nodeFact","EdgeEnd","node","dx","dy","quadrant","_edge","_edge2","DirectedEdge","_isForward","sym","nextMin","edgeRing","minEdgeRing","depth","isForward","getNumPoints","computeDirectedLabel","NodeFactory","PlanarGraph","nodes","edgeEndList","PolygonBuilder","shellList","LineBuilder","op","ptLocator","lineEdgesList","resultLineList","PointBuilder","resultPointList","PointOnGeometryLocator","SimplePointInAreaLocator","EdgeEndStar","edgeMap","edgeList","ptInAreaLocation","DirectedEdgeStar","resultAreaEdgeList","SCANNING_FOR_INCOMING","LINKING_TO_OUTGOING","OverlayNodeFactory","MonotoneChain$1","mce","chainIndex","SweepLineEvent","xValue","eventType","insertEvent","deleteEventIndex","DELETE","INSERT","EdgeSetIntersector","SegmentIntersector$1","_hasIntersection","hasProper","hasProperInterior","properIntersectionPoint","includeProper","recordIsolated","isSelfIntersection","numIntersections","numTests","bdyNodes","_isDone","isDoneWhenProperInt","SimpleMCSweepLineIntersector","events","IntervalRTreeNode$1","min","POSITIVE_INFINITY","NEGATIVE_INFINITY","NodeComparator","IntervalRTreeLeafNode","IntervalRTreeBranchNode","node1","node2","n1","n2","buildExtent","SortedPackedIntervalRTree","leaves","LinearComponentExtracter","lines","isForcedToLineString","_lines","ArrayListVisitor","IndexedPointInAreaLocator","g","IntervalIndexedGeometry","SegmentVisitor","counter","EdgeIntersection","dist","EdgeIntersectionList","MonotoneChainIndexer","MonotoneChainEdge","e","startIndex","env1","env2","mcb","getChainStartIndices","Depth","j","NULL_VALUE","Edge","eiList","_isIsolated","depthDelta","_pts","GeometryGraph","parentGeom","lineEdgeMap","boundaryNodeRule","useBoundaryDeterminationRule","argIndex","boundaryNodes","_hasTooFewPoints","invalidPoint","areaPtLocator","_argIndex","_parentGeom","GeometryGraphOperation","resultPrecisionModel","arg","g0","setComputationPrecision","getPrecisionModel","_g","g1","_g2","_g3","compareTo","OrientedCoordinateArray","_orientation","orientation","EdgeList","ocaMap","OverlayOp","resultGeom","graph","resultPolyList","SnapOverlayOp","cbr","g2","computeSnapTolerance","SnapIfNeededOverlayOp","InteriorPointArea","interiorPoint","maxWidth","SafeBisectorFinder","poly","centreY","hiY","MAX_VALUE","loY","getEnvelopeInternal","getMaxY","getMinY","avg","InteriorPointLine","centroid","minDistance","getCentroid","addInterior","addEndpoints","InteriorPointPoint","MonotoneChainSelectAction","selectedSegment","NodeBase","subnode","Interval","interval","DoubleBits","CVTFWD","NumW","Qty","Sign","Expo","Mant","Bin","Inf","32","64","ExW","isFinite","Math","pow","abs","Key","computeKey","Node$1","centre","getMin","getMax","IntervalSize","Root","Bintree","minExtent","PointInRing","MCPointInRing","tree","crossings","buildIndex","MCSelecter","mcp","Angle","Triangle","MinimumBoundingCircle","input","extremalPts","radius","MinimumDiameter","isConvex","convexHullPts","minBaseSeg","minWidthPt","minPtIndex","minWidth","_inputGeom","Densifier","distanceTolerance","DensifyTransformer","HalfEdge","_orig","_sym","_next","orig","MarkHalfEdge","_isMarked","EdgeGraph","vertexMap","DissolveHalfEdge","_isStart","DissolveEdgeGraph","LineDissolver","nodeEdgeStack","ringStartEdge","NodeBase$1","Key$1","itemEnv","Node$2","centrex","centrey","getMinX","getMaxX","Root$1","Quadtree","GeoJSONParser","GeoJSONReader","GeoJSONWriter","WKTReader","p2c","OL3Parser","olReference","ol","ScaledNoder","noder","scaleFactor","offsetX","offsetY","isScaled","_noder","_scaleFactor","isIntegerPrecision","IsSimpleOp","isClosedEndpointsInInterior","nonSimpleLocation","isInBoundary","EndpointInfo","degree","BufferParameters","quadrantSegments","DEFAULT_QUADRANT_SEGMENTS","endCapStyle","CAP_ROUND","joinStyle","JOIN_ROUND","mitreLimit","DEFAULT_MITRE_LIMIT","_isSingleSided","simplifyFactor","DEFAULT_SIMPLIFY_FACTOR","setQuadrantSegments","_quadrantSegments","setEndCapStyle","_quadrantSegments2","_endCapStyle","setJoinStyle","setMitreLimit","RightmostEdgeFinder","minIndex","minCoord","minDe","orientedDe","LinkedList","BufferSubgraph","finder","dirEdgeList","rightMostCoord","BufferInputLineSimplifier","inputLine","distanceTol","isDeleted","angleOrientation","COUNTERCLOCKWISE","OffsetSegmentString","ptList","minimimVertexDistance","OffsetSegmentGenerator","maxCurveSegmentError","filletAngleQuantum","closingSegLengthFactor","segList","bufParams","s0","s1","s2","seg0","seg1","offset0","offset1","side","_hasNarrowConcaveAngle","PI","getQuadrantSegments","getJoinStyle","MAX_CLOSING_SEG_LEN_FACTOR","OffsetCurveBuilder","SubgraphDepthLocater","subgraphs","cga","DepthSegment","upwardSeg","leftDepth","OffsetCurveSetBuilder","curveBuilder","curveList","IntersectionAdder","hasInterior","numInteriorIntersections","numProperIntersections","BufferBuilder","workingPrecisionModel","workingNoder","NodingValidator","HotPixel","originalPt","ptScaled","p0Scaled","p1Scaled","corner","safeEnv","initCorners","MCIndexPointSnapper","HotPixelSnapAction","hotPixel","parentEdge","hotPixelVertexIndex","_isNodeAdded","InteriorIntersectionFinderAdder","interiorIntersections","MCIndexSnapRounder","pointSnapper","setPrecisionModel","getScale","BufferOp","argGeom","resultGeometry","saveException","PolygonExtracter","comps","GeometryLocation","component","segIndex","INSIDE_AREA","_component","_pt","PointExtracter","ConnectedElementLocationFilter","locations","DistanceOp","terminateDistance","minDistanceLocation","EdgeString","directedEdges","GraphComponent$1","DirectedEdge$1","from","to","edgeDirection","angle","directionPt","atan2","LineMergeDirectedEdge","Edge$1","dirEdge","de0","de1","setDirectedEdges","DirectedEdgeStar$1","outEdges","sorted","Node$3","deStar","LineMergeEdge","line","NodeMap$1","PlanarGraph$1","dirEdges","LineMergeGraph","LineMerger","mergedLineStrings","edgeStrings","PolygonizeDirectedEdge","PolygonizeEdge","ConnectedInteriorTester","geomGraph","disconnectedRingcoord","EdgeEndBuilder","EdgeEndBundle","edgeEnds","_e","getDirectedCoordinate","getLabel","insert","EdgeEndBundleStar","RelateNode","RelateNodeFactory","RelateNodeGraph","ConsistentAreaTester","nodeGraph","IndexedNestedRingTester","rings","totalEnv","nestedPt","TopologyValidationError","errorType","_errorType","copy","IsValidOp","parentGeometry","isSelfTouchingRingFormingHoleValid","validErr","EdgeRing$1","deList","lowestEdge","ringPts","_isProcessed","_isIncludedSet","_isIncluded","EnvelopeComparator","PolygonizeGraph","Polygonizer","lineStringAdder","LineStringAdder","dangles","cutEdges","invalidRingLines","holeList","polyList","isCheckingRingsValid","extractOnlyPolygonal","RelateComputer","im","isolatedEdges","RectangleContains","rectEnv","rectangle","RectangleLineIntersector","diagUp0","diagUp1","diagDown0","diagDown1","ShortCircuitedGeometryVisitor","RectangleIntersects","EnvelopeIntersectsVisitor","_intersects","GeometryContainsPointVisitor","rectSeq","_containsPoint","getExteriorRing","getCoordinateSequence","RectangleIntersectsSegmentVisitor","rectIntersector","hasIntersection","RelateOp","_relate","GeometryCombiner","skipEmpty","inputGeoms","geoms","extractFactory","PointGeometryUnion","pointGeom","otherGeom","GeometryExtracter","sortIndex","CascadedPolygonUnion","inputPolys","polys","UnaryUnionOp","extract","_geoms","PrecisionReducerCoordinateOperation","targetPM","removeCollapsed","GeometryPrecisionReducer","changePrecisionModel","isPointwise","DouglasPeuckerLineSimplifier","usePt","DouglasPeuckerSimplifier","isEnsureValidTopology","DPTransformer","TaggedLineSegment","TaggedLineString","parentLine","segs","resultSegs","minimumSize","_parentLine","LineSegmentIndex","LineSegmentVisitor","querySeg","TaggedLineStringSimplifier","inputIndex","outputIndex","linePts","TaggedLinesSimplifier","TopologyPreservingSimplifier","lineSimplifier","linestringMap","LineStringTransformer","LineStringMapBuilderFilter","tps","SplitSegment","segLen","splitPt","minimumLen","getLength","ConstraintSplitPointFinder","NonEncroachingSplitPointFinder","TrianglePredicate","Vertex","_z","ConstraintVertex","_isOnConstraint","constraint","QuadEdge","_rot","vertex","IncrementalDelaunayTriangulator","subdiv","isUsingTolerance","getTolerance","QuadEdgeLocator","LastFoundQuadEdgeLocator","lastEdge","LocateFailureException","_seg","msgWithSpatial","TriangleVisitor","QuadEdgeSubdivision","visitedKey","quadEdges","startingEdge","tolerance","edgeCoincidenceTolerance","frameVertex","frameEnv","locator","triEdges","EDGE_COINCIDENCE_TOL_FACTOR","createFrame","initSubdiv","TriangleCircumcentreVisitor","TriangleEdgesListVisitor","triList","TriangleVertexListVisitor","TriangleCoordinatesVisitor","coordList","triCoords","Segment","z1","z2","_z2","_data","KdNodeVisitor","KdNode","KdTree","numberOfNodes","BestMatchVisitor","matchNode","matchDist","ConformingDelaunayTriangulator","initialVertices","segVertices","segments","incDel","convexHull","splitFinder","kdt","vertexFactory","computeAreaEnv","DelaunayTriangulationBuilder","siteCoords","ConformingDelaunayTriangulationBuilder","constraintLines","constraintVertexMap","VoronoiDiagramBuilder","clipEnv","diagramEnv","LinearLocation","componentIndex","segmentFraction","loc","_segmentIndex","_segmentFraction","normalize","_componentIndex","_segmentIndex2","_segmentFraction2","doNormalize","LinearIterator","linearGeom","numLines","currentLine","vertexIndex","linear","_linear","getComponentIndex","segmentEndVertexIndex","loadCurrentLine","LocationIndexOfPoint","LocationIndexOfLine","LinearGeometryBuilder","ignoreInvalidLines","fixInvalidLines","lastPt","ExtractLineByLocation","LocationIndexedLine","checkGeometryType","LengthIndexOfPoint","LengthLocationMap","LengthIndexedLine","UnionOp","arrayLike","relativeStart","parseInt","relativeEnd","writable","val","floor","parseFloat","isNaN","trunc","ceil","extend","target","source","interfaces_","getClass","equalsWithTolerance","doubleToLongBits","longBitsToDouble","isInfinite","inherits","shouldNeverReachHere","assertion","_assertion","equals","expectedValue","actualValue","_expectedValue","_actualValue","setOrdinate","ordinateIndex","X","Y","Z","getOrdinate","equals3D","equalInZ","clone","CloneNotSupportedException","toString","distance3D","dz","sqrt","hashCode","setCoordinate","f","compare","o1","o2","c1","c2","compX","compY","serialVersionUID","NaN","hasNext","remove","toArray","clear","element","oldElement","Iterator_","len","found","arrayList","arrayList_","position_","coll","isChanged","toCoordinateArray","coordArrayType","_coord2","_coord3","_allowRepeated","last","_allowRepeated2","_coord4","_allowRepeated3","direction","_i","_coord5","_allowRepeated4","prev","_coord6","_allowRepeated5","inc","closeRing","getArea","getWidth","getHeight","otherEnvelope","isNull","intersection","intersects","intMinX","intMinY","covers","expandToInclude","h","translate","transX","transY","setToNull","maxExtent","expandBy","deltaX","deltaY","contains","q","minq","maxq","minp","maxp","toLocationSymbol","locationValue","log10","ln","log","LOG_10","v1","v2","v3","v4","clamp","_min","_max","wrap","_v","_v2","_v3","average","append","setCharAt","substr","intValue","isWhitespace","toUpperCase","le","extractSignificantDigits","insertDecimalPoint","magnitude","mag","TEN","divide","gt","lt","ONE","multiply","decimalPointPos","buf","numDigits","MAX_PRINT_DIGITS","digit","rebiasBy10","digitChar","subtract","valueOf","selfAdd","continueExtractingDigits","remMag","sqr","doubleValue","negate","isZero","selfSubtract","getSpecialNumberString","selfDivide","_y3","yhi","ylo","hc","tc","hy","ty","C","U","u","SPLIT","dump","_y4","createNaN","ge","exp","selfMultiply","reciprocal","fhi","flo","rint","setValue","_value","isNegative","ax","axdd","diffSq","d2","_y5","H","S","T","t","zhi","zlo","_y6","hx","tx","selfSqr","ex","_y7","toStandardNotation","toSciNotation","specialStr","sigDigits","num","charAt","stringOfChar","numZeroes","zeroes","SCI_NOT_ZERO","digits","expStr","SCI_NOT_EXPONENT_CHAR","IllegalStateException","trailingDigits","substring","digitsWithDecimal","isPositive","_y8","signum","strlen","signCh","numBeforeDec","ch","isDigit","NumberFormatException","val2","numDecPlaces","xAbs","xLog10","xMag","TWO_PI","PI_2","E","EPS","orientationIndex","orientationIndexFilter","dx1","dy1","dx2","dy2","signOfDet2x2","denom1","denom2","denom","numx1","numx2","numx","fracP","numy1","numy2","numy","fracQ","pc","detsum","detleft","detright","det","errbound","DP_SAFE_EPSILON","getX","expandEnvelope","getY","M","arraycopy","src","srcPos","dest","destPos","getProperty","line.separator","xInt","yInt","filter","isGeometryCollection","getSortIndex","SORTINDEX_GEOMETRYCOLLECTION","getGeometryN","isRectangle","equalsTopo","equalsExact","geometryChanged","geometryChangedFilter","geometryChangedAction","equalsNorm","norm","compareToSameClass","_o","comp","getUserData","getEnvelope","toGeometry","checkNotGeometryCollection","equal","computeEnvelopeInternal","setSRID","setUserData","aElement","bElement","comparison","isGeometryCollectionOrDerived","SORTINDEX_MULTIPOINT","SORTINDEX_MULTILINESTRING","SORTINDEX_MULTIPOLYGON","SORTINDEX_POINT","SORTINDEX_LINESTRING","SORTINDEX_LINEARRING","SORTINDEX_POLYGON","boundaryCount","ENDPOINT_BOUNDARY_RULE","MULTIVALENT_ENDPOINT_BOUNDARY_RULE","MONOVALENT_ENDPOINT_BOUNDARY_RULE","isRing","ptNotInList","testPts","testPt","scroll","firstCoordinate","newCoordinates","coord1","coord2","coordinateComparator","hasRepeatedPoints","removeRepeatedPoints","reverse","mid","tmp","removeNull","nonNull","newCoord","copyDeep","srcStart","destStart","isEqualReversed","pts1","pts2","atLeastNCoordinatesOrNothing","coordinate","increasingDirection","minCoordinate","npts","extractPts","iPts","forwardComp","OLDcompare","dir1","dir2","i1","i2","comparePt","values","entrySet","javascript","util","Iterator_$1","hashSet","hashSet_","cmp","getValue","getKey","oldValue","fixAfterInsertion","rotateLeft","rotateRight","getFirstEntry","successor","Iterator_$2","treeSet_","sort","comparator","slice","concat","asList","toDimensionSymbol","dimensionValue","SYM_FALSE","TRUE","SYM_TRUE","DONTCARE","SYM_DONTCARE","P","SYM_P","L","SYM_L","A","SYM_A","toDimensionValue","dimensionSymbol","seq","isDone","isGeometryChanged","childCoordinates","area","isEquivalentClass","otherCollection","getBoundaryDimension","sum","numPoints","revGeoms","createGeometryCollection","theseElements","otherElements","gc","thisGeom","holeComp","_filter","_filter2","_filter3","getBoundary","getGeometryType","nLines","revLines","createMultiLineString","boundaryMultiLineString","mLine","getEmptyMultiPoint","bdyPts","computeBoundaryCoordinates","createPoint","createMultiPointFromCoords","boundaryLineString","getStartPoint","createMultiPoint","getEndPoint","addEndpoint","getCoordinateN","entry","valence","bop","chars","String","getStackTrace","os","ps","printStackTrace","_t","stackTrace","stringReader","lineNumberReader","readLine","NEWLINE","split","separator","separatorlen","tokenList","tmpString","pos","token","res","SIMPLE_ORDINATE_FORMAT","format","spaces","copyCoord","minDim","dim","isEqual","cs1","cs2","cs1Size","fact","newseq","swap","cs","ensureValidRing","createClosedRing","isSimple","otherLineString","getPointN","computeLength","createLineString","isCoordinate","point","_other","shellCoordinates","signedArea","getNumInteriorRing","prevX","prevY","otherPolygon","thisShell","otherPolygonShell","clockwise","uniqueCoordinates","isCCW","otherShell","shellComp","nHole1","nHole2","thisHole","getInteriorRingN","otherHole","isValid","MINIMUM_VALID_SIZE","createMultiPolygon","allRings","polygon","allRingsArray","setCopyUserData","edit","operation","editInternal","editGeometryCollection","editPolygon","getName","collection","collectionForType","newPolygon","createPolygon","hole","coords","editCoordinates","cloneCoordinates","strBuf","readResolve","instance","instanceObject","MapPolyfill","proto","delete","keys","Map","otherPrecisionModel","getMaximumSignificantDigits","otherSigDigits","isFloating","FLOATING_SINGLE","getType","description","makePrecise","round","maxSigDigits","mostPrecise","pm1","pm2","maximumPreciseValue","buildGeometry","geomList","geomClass","isHeterogeneous","hasGeometryCollection","partClass","toGeometryArray","geom0","toPolygonArray","toLineStringArray","toPointArray","_coordinates2","_shell","createGeometry","_coordinates4","ptSeq","toMultiPolygonArray","multiPolygons","multiPolygonArray","geometryArray","toMultiLineStringArray","multiLineStrings","multiLineStringArray","lineStringArray","toMultiPointArray","multiPoints","multiPointArray","toLinearRingArray","linearRings","linearRingArray","pointArray","polygonArray","createPointFromInternalCoord","exemplar","regExes","typeStr","emptyTypeStr","parenComma","doubleParenComma","trimParens","read","wkt","type","replace","matches","exec","search","toLowerCase","write","extractGeometry","wktType","_coordinate","_point","multipoint","_multipoint","join","linestring","_linestring","linearring","_linearring","multilinestring","_multilinestring","_polygon","multipolygon","_multipolygon","geometrycollection","trim","components","wktArray","toLineString","getIndexAlongSegment","intIndex","computeIntLineIndex","getTopologySummary","catBuf","isEndPoint","isCollinear","computeIntersection","p3","p4","computeIntersect","getIntersectionNum","dist0","getEdgeDistance","dist1","isProper","isInteriorIntersection","inputLineIndex","getIntersection","NO_INTERSECTION","computeEdgeDistance","COLLINEAR_INTERSECTION","getEndpoint","ptIndex","isIntersection","getIntersectionAlongSegment","pdx","pdy","nonRobustComputeEdgeDistance","DONT_INTERSECT","DO_INTERSECT","COLLINEAR","POINT_INTERSECTION","isInSegmentEnvelopes","env0","normalizeToMinimum","n3","n4","normPt","smallestInAbsValue","safeHCoordinateIntersection","nearestEndpoint","intersectionWithNormalization","x3","x4","xabs","checkDD","intPtDD","out","println","normalizeToEnvCentre","computeCollinearIntersection","p1q1p2","p1q2p2","q1p1q2","q1p2q2","n00","n01","n10","n11","minX0","minY0","maxX0","maxY0","minX1","minY1","maxX1","maxY1","intMaxX","intMaxY","intMidX","intMidY","Pq1","Pq2","Qp1","Qp2","nearestPt","minDist","distancePointLine","sign","countSegment","xIntSign","isPointInPolygon","getLocation","isOnSegment","locatePointInRing","_ring","distanceLineLine","B","D","noIntersection","r_num","s_num","isPointInRing","nPts","hiPt","hiIndex","iPrev","iNext","disc","computeOrientation","distancePointLinePerpendicular","len2","isOnLine","lineIntersector","CLOCKWISE","STRAIGHT","minX","orient0","orient1","isVertical","project","projectionFactor","pf0","pf1","newp0","newp1","distancePerpendicular","minY","midPoint","closestPoints","closestPt","close00","closestPoint","close01","close10","close11","factor","maxX","comp0","temp","lineIntersection","maxY","pointAlongOffset","segmentLengthFraction","offsetDistance","segx","segy","ux","uy","setCoordinates","inputPt","segFrac","isHorizontal","pointAlong","bits0","java","lang","hash0","bits1","isIntersects","isDisjoint","isCovers","isCoveredBy","dimensionSymbols","row","col","_row","column","isContains","setAtLeast","minimumDimensionSymbols","_row2","minimumDimensionValue","setAtLeastIfValid","isWithin","isTouches","dimensionOfGeometryA","dimensionOfGeometryB","isOverlaps","isEquals","ai","bi","transpose","requiredDimensionSymbols","isCrosses","actualDimensionValue","requiredDimensionSymbol","actualDimensionSymbols","freeze","addPoint","setBasePoint","basePt","addLineSegments","lineLen","segmentLen","midx","midy","addHole","isPositiveArea","addTriangle","cent","addShell","centroid3","area2","_poly","IndexOutOfBoundsException","pop","peek","empty","preSort","computeOctRing","octPts","computeOctPts","lineOrPolygon","cleanRing","linearRing","original","cleanedRing","previousDistinctCoordinate","currentCoordinate","nextCoordinate","isBetween","cleanedRingCoordinates","c3","reduce","polyPts","reducedSet","reducedPts","padArray3","getConvexHull","sortedPts","cHS","grahamScan","cH","pad","polarCompare","dxp","dyp","dxq","dyq","orient","oq","transformPoint","transformCoordinates","transformPolygon","isAllValidLinearRings","transformLinearRing","createCoordinateSequence","getInputGeometry","transformMultiLineString","transGeomList","transformGeom","transformLineString","transformMultiPoint","transformMultiPolygon","transformGeometryCollection","transform","seqSize","snapVertices","srcCoords","srcPt","snapVert","findSnapForVertex","snapTo","snapSegments","distinctPtCount","snapPt","findSegmentIndexToSnap","snapIndex","setAllowSnappingToSourceVertices","snapGeom","extractTargetCoordinates","snapToSelf","cleanResult","snapTrans","snappedGeom","buffer","computeMinimumSegmentLength","ptSet","minSegLen","snap","snapper0","snapper1","computeOverlaySnapTolerance","computeSizeBasedSnapTolerance","fixedSnapTol","SNAP_PRECISION_FACTOR","snapLine","snapper","newPts","getCommon","numBits","signExpBits","numCommonMostSigMantissaBits","zeroLowerBits","bits","numStr","Long","toBinaryString","padStr","bitStr","getBit","nBits","num1","num2","addCommonBits","removeCommonBits","invCoord","getCommonCoordinate","xp","yp","isAtomic","UnsupportedOperationException","locateInternal","shellLoc","locateInPolygonRing","holeLoc","locate","updateLocationInfo","computeLocation","ml","mpoly","geomi","octant","_dx","_dy","adx","ady","setData","getData","getSegmentOctant","getBounds","getItem","poll","minItem","reorder","child","visitItem","query","getLevel","getChildBoundables","addChildBoundable","childBoundable","computeBounds","Collections","reverseOrder","alen","singletonList","expandToQueue","priQ","isComp1","isComposite","isComp2","expand","isLeaves","nd","bndComposite","bndOther","children","bp","getDistance","getBoundable","getNodeCapacity","lastNode","build","removeItem","childToRemove","itemsTree","valuesTree","valuesTreeForNode","valuesTreeForChild","boundablesAtLevel","boundables","_level","top","_boundables","boundable","searchBounds","getIntersectsOp","_searchBounds","visitor","_searchBounds2","_visitor","_searchBounds3","_node","_matches","createNode","createHigherLevels","getRoot","_searchBounds4","_item","childToPrune","boundablesOfALevel","parentBoundables","createParentBoundables","maxChildDepth","childDepth","newLevel","sortedChildBoundables","getComparator","compareDoubles","IntersectsOp","item1","item2","createParentBoundablesFromVerticalSlices","verticalSlices","createParentBoundablesFromVerticalSlice","intersectsOp","sliceCount","sliceCapacity","slices","boundablesAddedToSlice","searchEnv","_searchEnv","yComparator","minLeafCount","xComparator","nearestNeighbour","itemDist","initBndPair","_itemDist","_initBndPair","maxDistance","distanceLowerBound","minPair","bndPair","currentDistance","_itemDist2","bnd","centreX","aBounds","bBounds","relativeSign","xSign","ySign","compareValue","compareSign0","compareSign1","print","maxSegmentIndex","isInterior","getSplitCoordinates","eiPrev","ei","addEdgeCoordinates","addCollapsedNodes","collapsedVertexIndexes","findCollapsesFromInsertedNodes","findCollapsesFromExistingVertices","ei0","ei1","lastSegStartPt","useIntPt1","addSplitEdges","newEdge","createSplitEdge","findCollapseIndex","collapsedVertexIndex","numVerticesBetween","maxSegIndex","ipt","eiNew","checkSplitEdgesCorrectness","splitEdges","edgePts","split0","pt0","splitn","splitnPts","ptn","addIntersection","safeOctant","_intPt","addIntersectionNode","getNodeList","normalizedSegmentIndex","nextSegIndex","nextPt","addIntersections","getNodedSubstrings","resultEdgelist","_segStrings","_resultEdgelist","ss","overlap","mc1","start1","mc2","start2","getLineSegment","computeSelect","start0","end0","mcs","select","computeOverlaps","mc","mco","computeOverlapsInternal","setId","getEndIndex","getStartIndex","getContext","getId","end1","p00","p01","p10","p11","mid0","mid1","isNorthern","quad","NE","NW","isOpposite","quad1","quad2","commonHalfPlane","isInHalfPlane","halfPlane","SE","SW","startIndexList","findChainEnd","toIntArray","safeStart","chainQuad","getChains","mcList","computeNodes","getMonotoneChains","getIndex","segStr","segChains","inputSegStrings","intersectChains","overlapAction","queryChain","overlapChains","testChain","ss1","ss2","processIntersections","e0","segIndex0","e1","segIndex1","getInteriorIntersection","setCheckEndSegmentsOnly","getIntersectionSegments","getIntersections","setFindAllIntersections","setKeepIntersections","isEndSegment","createAllIntersectionsFinder","createAnyIntersectionFinder","createIntersectionCounter","execute","checkInteriorIntersections","checkValid","getErrorMessage","intSegs","computeIntersections","mapped","opposite","position","setAllLocations","locValue","setAllLocationsIfNull","isLine","merge","newLoc","getLocations","flip","posIndex","isArea","isAnyNull","locIndex","_locValue","isEqualOnSide","allPositionsEqual","getGeometryCount","_location","_geomIndex2","_geomIndex3","_location2","toLine","toLineLabel","lineLabel","isIsolated","de","isFirstEdge","getEdgeRing","mergeLabel","addPoints","setEdgeRing","getNext","getLinearRing","computeMaxNodeDegree","getNode","getEdges","getOutgoingDegree","isHole","setInResult","containsPoint","isShell","getMaxNodeDegree","getShell","deLabel","_deLabel","setShell","toPolygon","holeLR","er","setMinEdgeRing","getNextMin","buildMinimalRings","minEdgeRings","getMinEdgeRing","minEr","linkDirectedEdgesForMinimalEdgeRings","linkMinimalDirectedEdges","setVisited","isVisited","isInResult","isCovered","isCoveredSet","setLabel","setCovered","updateIM","computeIM","isIncidentEdgeInResult","computeMergedLocation","label2","eltIndex","nLoc","onLocation","thisLoc","setNode","setLabelBoundary","find","addNode","getBoundaryNodes","compareDirection","getDy","className","lastDotPos","lastIndexOf","getDx","getQuadrant","computeLabel","getDepth","setDepth","depthVal","isInteriorAreaEdge","setNextMin","getDepthDelta","isLineEdge","isExteriorIfArea0","isExteriorIfArea1","getSym","printEdge","printReverse","setSym","setVisitedEdge","setEdgeDepths","directionFactor","oppositePos","delta","oppositeDepth","setNext","depthFactor","currLocation","nextLocation","printEdges","getNodeIterator","linkResultDirectedEdges","nodeit","debugPrintln","isBoundaryNode","linkAllDirectedEdges","matchInSameDirection","ep0","ep1","getEdgeEnds","debugPrint","getEdgeIterator","findEdgeInSameDirection","eCoord","insertEdge","findEdgeEnd","ee","addEdges","edgesToAdd","de2","getNodes","findEdge","sortShellsAndHoles","edgeRings","freeHoleList","computePolygons","placeFreeHoles","findEdgeRingContaining","buildMinimalEdgeRings","maxEdgeRings","findShell","placePolygonHoles","buildMaximalEdgeRings","getPolygons","testEr","testRing","testEnv","minShell","minEnv","tryShell","tryRing","tryEnv","isContained","shellCount","collectLines","opCode","getGraph","collectLineEdge","collectBoundaryTouchEdge","labelIsolatedLine","targetIndex","getArgGeometry","findCoveredLineEdges","buildLines","isResultOfOp","isCoveredByA","labelIsolatedLines","edgesList","INTERSECTION","filterCoveredNodeToPoint","isCoveredByLA","extractNonCoveredResultNodes","getDegree","containsPointInPolygon","getNextCW","iNextCW","propagateSideLabels","startLoc","currLoc","isAreaLabelsConsistent","computeEdgeEndLabels","getBoundaryNodeRule","checkAreaLabelsConsistent","lastEdgeIndex","startLabel","findIndex","eSearch","getGeometry","computeLabelling","hasDimensionalCollapseEdge","insertEdgeEnd","getResultAreaEdges","firstOut","incoming","state","nextOut","nextIn","getRightmostEdge","deLast","quad0","updateLabelling","nodeLabel","prevOut","firstIn","computeDepths","edgeIndex","startDepth","targetLastDepth","nextDepth","endIndex","_startDepth","currDepth","nextDe","mergeSymLabels","eLabel","eLoc","computeIntersectsForChain","isDelete","setDeleteEventIndex","getObject","pe","getInsertEvent","isInsert","isSameLabel","ev","getDeleteEventIndex","isTrivialIntersection","isAdjacentSegments","getProperIntersectionPoint","setIsDoneIfProperInt","hasProperInteriorIntersection","isBoundaryPointInternal","hasProperIntersection","isBoundaryPoint","setBoundaryNodes","bdyNodes0","bdyNodes1","setIsolated","prepareEvents","processOverlaps","edges0","edges1","_si","_si2","testAllSegments","addEdge","edgeSet","getMonotoneChainEdge","getStartIndexes","ev0","mc0","ev1","_edges","queryMin","queryMax","mid2","buildTree","IntervalRTreeNode","buildLevel","buildRoot","printNode","setForceToLineString","getLines","forceToLineString","_lines2","_geom2","_geom3","_lines3","_lines4","_forceToLineString","_geom4","_lines5","_forceToLineString2","getItems","rcc","addLine","getSegmentIndex","chainIndex0","chainIndex1","_mce","computeIntersects","depthValue","minDepth","newValue","getDelta","depthAtLocation","getCollapsedEdge","setName","isEqualForward","isEqualReverse","iRev","isCollapsed","getMaximumSegmentIndex","isPointwiseEqual","setDepthDelta","getEdgeIntersectionList","insertBoundaryPoint","determineBoundary","computeSelfNodes","computeRingSelfNodes","_li","_computeRingSelfNodes","isDoneIfProperInt","esi","createEdgeSetIntersector","isRings","computeAllSegments","addSelfIntersectionNodes","computeSplitEdges","edgelist","computeEdgeIntersections","hasTooFewPoints","insertPoint","addPolygon","addPolygonRing","addLineString","getInvalidPoint","getBoundaryPoints","addSelfIntersectionNode","lr","cwLeft","cwRight","eiIt","addCollection","oca","compareOriented","orientation1","orientation2","limit1","limit2","compPt","done1","done2","edgeColl","findEdgeIndex","findEqualEdge","insertUniqueEdge","existingEdge","existingLabel","labelToMerge","cancelDuplicateResultEdges","computeGeometry","opcode","createEmptyResult","replaceCollapsedEdges","newEdges","updateNodeLabelling","getResultGeometry","overlayOpCode","computeOverlay","insertUniqueEdges","copyPoints","baseSplitEdges","computeLabelsFromDepths","labelIncompleteNodes","findResultAreaEdges","polyBuilder","lineBuilder","pointBuilder","labelIncompleteNode","graphNode","nodeCount","ni","overlayOp","geom1","MapOp","symDifference","SYMDIFFERENCE","resultDimension","dim0","dim1","UNION","DIFFERENCE","difference","loc0","loc1","_loc","_loc2","selfSnap","remGeom","prepareResult","prepGeom","union","isSuccess","savedException","width","bisector","horizontalBisector","widestIntersection","widestGeometry","getInteriorPoint","bisectY","getBisectorY","updateInterval","process","hasChildren","isPrunable","hasItems","addAllItems","subSize","addAllItemsFromOverlapping","resultItems","isSearchMatch","itemInterval","maxSubDepth","sqd","nodeSize","getSubnodeIndex","subnodeIndex","overlaps","exponent","powerOf2","getInterval","computeLevel","computeInterval","getPoint","searchInterval","childNode","createSubnode","getSubnode","createExpanded","addInterval","expandInt","largerNode","isZeroWidth","maxAbs","scaledInterval","MIN_BINARY_EXPONENT","insertContained","isZeroArea","collectStats","insertInterval","ensureExtent","foundItems","_interval","_foundItems","del","isInside","testLineSegment","mcEnv","testMonotoneChain","rayEnv","mcSelecter","toDegrees","radians","PI_TIMES_2","isAcute","dx0","dy0","isObtuse","interiorAngle","anglePrev","angleNext","normalizePositive","angleBetween","tip1","tail","tip2","a1","a2","diff","ang1","ang2","delAngle","toRadians","angleDegrees","getTurn","crossproduct","sin","angleBetweenOriented","angDel","PI_OVER_2","PI_OVER_4","interpolateZ","longestSideLength","circumcentre","area3D","inCentre","m00","m01","m10","m11","v0","lenAB","lenBC","lenCA","maxLen","cx","cy","ay","bx","by","perpendicularBisector","angleBisector","len0","frac","uz","vx","vy","vz","crossx","crossy","crossz","absSq","len1","circum","getRadius","compute","getDiameter","getExtremalPoints","computeCirclePoints","hullPts","lowestPoint","Q","pointWitMinAngleWithX","R","pointWithMinAngleWithSegment","computeCentre","getFarthestPoints","getCircle","centrePoint","getCentre","minSin","minAngPt","minAng","ang","getWidthCoordinate","computeMinimumDiameter","getSupportingSegment","computeWidthConvex","convexGeom","computeConvexRingMinDiameter","currMaxIndex","findMaxPerpDistance","maxPerpDistance","nextPerpDistance","maxIndex","nextIndex","getMinimumRectangle","minPara","maxPara","minPerp","maxPerp","paraC","computeC","perpC","maxPerpLine","computeSegmentForLine","minPerpLine","maxParaLine","minParaLine","getMinimumDiameter","algorithm","setDistanceTolerance","densifyPoints","precModel","densifiedSegCount","densifiedSegLen","segFract","densify","densifier","roughGeom","createValidArea","roughAreaGeom","oNext","insertAfter","ecmp","ePrev","save","compareAngularDirection","quadrant2","prevNode","mark","setMark","isMarked","setMarkBoth","markBoth","eAdj","eAdjDest","createEdge","isValidEdge","eSame","getVertexEdges","setStart","isStart","updateRingStartEdge","getResult","computeResult","eNode","stackEdges","buildRing","eStartRing","eNext","buildLine","eStart","lineString","doneStart","dissolve","geomgraph","getNodeCount","visitItems","visit","computeQuadLevel","_itemEnv","quadSize","dMax","insertNode","addEnv","expandEnv","isZeroX","isZeroY","insertEnv","queryAll","posEnv","delX","delY","quadtree","strtree","geometryTypes","json","JSON","parse$1","extract$1","Feature","feature","bbox","FeatureCollection","featureCollection","features","sub","geoJson","shellGeoJson","holeGeoJson","reducePrecision","_len","convertFromPoint","convertFromLineString","convertFromLinearRing","convertFromPolygon","convertFromMultiPoint","convertFromMultiLineString","convertFromMultiPolygon","convertFromCollection","getLinearRings","multiPoint","getPoints","multiLineString","getLineStrings","multiPolygon","getGeometries","convertToPoint","convertToLineString","convertToLinearRing","convertToPolygon","convertToMultiPoint","convertToMultiLineString","convertToMultiPolygon","convertToCollection","geometryCollection","io","rescale","nodedSegmentStrings","roundPts","splitSS","intSegStrings","noding","isSimpleMultiPoint","mp","isSimplePolygonal","isSimpleLinearGeometry","hasClosedEndpointIntersection","endPoints","eiInfo","getNonSimpleLocation","hasNonEndpointIntersection","computeSimple","isSimpleGeometryCollection","getEndCapStyle","isSingleSided","quadSegs","JOIN_BEVEL","JOIN_MITRE","setSimplifyFactor","getSimplifyFactor","getMitreLimit","setSingleSided","bufferDistanceError","alpha","cos","CAP_FLAT","CAP_SQUARE","getRightmostSide","getRightmostSideOfSegment","checkForRightmostCoordinate","findRightmostEdgeAtVertex","pPrev","pNext","usePrev","findRightmostEdgeAtNode","star","addLast","removeFirst","shift","clearVisitedEdges","getRightmostCoordinate","computeNodeDepth","startEdge","copySymDepths","computeDepth","outsideDepth","addReachable","findResultEdges","nodesVisited","nodeQueue","startNode","adjNode","edgeEnv","nodeStack","symNode","getDirectedEdges","isDeletable","i0","isConcave","isShallow","isShallowSampled","deleteShallowConcavities","midIndex","findNextNonDeletedIndex","lastIndex","isMiddleVertexDeleted","isShallowConcavity","NUM_PTS_TO_CHECK","simplify","collapseLine","INIT","KEEP","COORDINATE_ARRAY_TYPE","addPt","bufPt","isRedundant","addPts","startPt","setMinimumVertexDistance","addNextSegment","addStartPoint","computeOffsetSegment","outsideTurn","addCollinear","addOutsideTurn","addInsideTurn","addLineEndCap","offsetL","offsetR","addFilletArc","squareCapSideOffset","squareCapLOffset","squareCapROffset","addMitreJoin","isMitreWithinLimit","addLimitedMitreJoin","addFilletCorner","startAngle","endAngle","OFFSET_SEGMENT_SEPARATION_FACTOR","addBevelJoin","createSquare","addSegments","addFirstSegment","addLastSegment","initSideSegments","ang0","angDiff","angDiffHalf","midAng","mitreMidAng","mitreDist","bevelDelta","bevelHalfLen","bevelMidX","bevelMidY","bevelMidPt","mitreMidLine","bevelEndLeft","bevelEndRight","offset","sideSign","totalAngle","nSegs","initAngle","currAngleInc","currAngle","INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR","createCircle","CURVE_VERTEX_SNAP_DISTANCE_FACTOR","hasNarrowConcaveAngle","getOffsetCurve","isRightSide","posDistance","segGen","getSegGen","computePointCurve","computeOffsetCurve","curvePts","computeSingleSidedBufferCurve","distTol","simplifyTolerance","simp2","simp1","computeRingBufferCurve","simp","computeLineBufferCurve","getLineCurve","getBufferParameters","bufDistance","getRingCurve","copyCoordinates","findStabbedSegments","stabbingRayLeftPt","stabbedSegments","bsg","_stabbingRayLeftPt","_stabbedSegments","ds","_stabbingRayLeftPt2","_stabbedSegments2","orientIndex","compareX","compare0","curve","addCurve","offsetSide","shellCoord","isErodedCompletely","holeCoord","isTriangleErodedCompletely","triangleCoord","bufferDistance","tri","getCurves","cwLeftLoc","cwRightLoc","ringCoord","envMinDimension","getLineIntersector","hasInteriorIntersection","setWorkingPrecisionModel","mergeDelta","existingDelta","newDelta","buildSubgraphs","subgraphList","processedGraphs","subgraph","locater","createSubgraphs","createEmptyResultGeometry","getNoder","curveSetBuilder","bufferSegStrList","computeNodedEdges","oldLabel","setNoder","lLoc","rLoc","convertSegStrings","checkEndPtVertexIntersections","ss0","_ss","_ss2","pts0","checkCollapses","_ss3","checkCollapse","intersectsScaled","segMinx","segMaxx","segMiny","segMaxy","isOutsidePixelEnv","intersectsToleranceSquare","copyScaled","pScaled","getSafeEnvelope","safeTolerance","SAFE_ENV_EXPANSION_FACTOR","intersectsPixelClosure","intersectsLeft","intersectsBottom","addSnappedNode","_hotPixel","pixelEnv","hotPixelSnapAction","isNodeAdded","getInteriorIntersections","checkCorrectness","inputSegmentStrings","resultSegStrings","snapRound","findInteriorIntersections","computeIntersectionSnaps","computeVertexSnaps","intFinderAdder","edge0","bufferFixedPrecision","fixedPM","bufBuilder","bufferReducedPrecision","precDigits","MAX_PRECISION_DIGITS","precisionDigits","sizeBasedScaleFactor","precisionScaleFactor","bufferOriginalPrecision","argPM","bufferOp","gBuf","geomBuf","bufOp","_distance2","params","_g4","_distance3","maxPrecisionDigits","envMax","expandByDistance","bufEnvMax","bufEnvPrecisionDigits","minUnitLog10","CAP_BUTT","isInsideArea","getGeometryComponent","computeContainmentDistance","locPtPoly","polyGeomIndex","_locPtPoly","locationsIndex","insideLocs","locs","_polys","_locPtPoly2","ptLoc","_locPtPoly3","computeMinDistanceLinesPoints","locGeom","computeMinDistance","computeFacetDistance","lines0","lines1","computeMinDistanceLines","updateMinDistance","computeMinDistancePoints","nearestLocations","nearestPoints","coord0","segClosestPoint","line0","line1","_locGeom","points0","points1","pt1","isWithinDistance","forwardDirectedEdges","reverseDirectedEdges","coordinateList","directedEdge","getEdgeDirection","getLine","setMarked","setContext","getComponentWithVisitedState","visitedState","visited","marked","isRemoved","getDirectionPt","getAngle","getFromNode","setEdge","getToNode","toEdges","getOutEdges","addOutEdge","getDirEdge","fromNode","getOppositeNode","getNextEdge","sortEdges","getNextCWEdge","modi","getEdgesBetween","node0","commonEdges","retainAll","findNodesOfDegree","nodesFound","nodeIterator","dirEdgeIterator","edgeIterator","_de","findNode","startCoordinate","endCoordinate","endNode","directedEdge0","directedEdge1","buildEdgeStringsForUnprocessedNodes","buildEdgeStringsStartingAt","buildEdgeStringsForNonDegree2Nodes","buildEdgeStringsForObviousStartNodes","getMergedLineStrings","buildEdgeStringStartingWith","buildEdgeStringsForIsolatedLoops","edgeString","current","linemerge","overlay","isInRing","setRing","getRing","visitInteriorRing","findDifferentPoint","intDe","visitLinkedDirectedEdges","visitShellInteriors","setInteriorEdgesInResult","buildEdgeRings","hasUnvisitedShellEdge","isInteriorsConnected","createEdgeEndForNext","eiCurr","eiNext","createEdgeEndForPrev","computeEdgeEnds","_l","computeLabelOn","foundInterior","computeLabelSide","computeLabelSides","eb","updateIMFromEdges","insertEdgeEnds","copyNodesAndLabels","computeIntersectionNodes","eeBuilder","eeList","edgeIt","isNodeEdgeAreaLabelsConsistent","hasDuplicateRings","eeb","isNodeConsistentArea","intersector","getNestedPoint","isNonNested","innerRing","innerRingPts","results","searchRing","searchRingPts","innerRingPt","findPtNotNode","getErrorType","getMessage","errMsg","locStr","ERROR","REPEATED_POINT","HOLE_OUTSIDE_SHELL","NESTED_HOLES","DISCONNECTED_INTERIOR","SELF_INTERSECTION","RING_SELF_INTERSECTION","NESTED_SHELLS","DUPLICATE_RINGS","TOO_FEW_POINTS","INVALID_COORDINATE","RING_NOT_CLOSED","checkInvalidCoordinates","checkHolesNotNested","nestedTester","innerHole","checkConsistentArea","cat","checkShellInsideHole","shellPts","holePts","shellPt","holePt","checkNoSelfIntersectingRings","checkNoSelfIntersectingRing","checkConnectedInteriors","cit","nodeSet","checkHolesInShell","pir","checkTooFewPoints","getValidationError","checkClosedRing","_g5","checkClosedRings","_g6","checkShellsNotNested","_g7","setSelfTouchingRingFormingHoleValid","checkShellNotNested","polyShell","badNestedPt","testCoords","searchEdge","isIncluded","isIncludedSet","startDE","isOuterHole","hasShell","getPolygon","isProcessed","_hole","holeER","setIncluded","getOuterHole","adjRing","computeHole","isOuterShell","getLineString","updateIncluded","adjShell","setProcessed","findDirEdgesInRing","minShellEnv","tryShellRing","tryShellEnv","obj0","obj1","r0","r1","findEdgeRing","computeDepthParity","computeNextCWEdges","iNode","endPt","nStart","nEnd","deleteCutEdges","findLabeledEdgeRings","cutLines","getEdgeRings","maximalRings","convertMaximalToMinimalEdgeRings","edgeRingList","ringEdges","intNodes","findIntersectionNodes","computeNextCCWEdges","deleteDangles","nodesToRemove","dangleLines","deleteAllEdges","nodeOutEdges","toNode","getDegreeNonDeleted","edgeRingStarts","currLabel","prevDE","outDE","firstOutDE","prevInDE","inDE","polygonize","getInvalidRingLines","findValidRings","validEdgeRingList","invalidRingList","findShellsAndHoles","assignHolesToShells","includeAll","findDisjointShells","extractPolygons","getDangles","getCutEdges","setCheckRingsValid","findOuterShells","outerHoleER","assignHoleToShell","isMoreToScan","computeProperIntersectionIM","dimA","dimB","labelIsolatedEdges","thisIndex","labelIsolatedEdge","computeDisjointIM","labelIsolatedNodes","ee0","ee1","labelNodeEdges","labelIntersectionNodes","labelIsolatedNode","ga","gb","isContainedInBoundary","isPointContainedInBoundary","isLineStringContainedInBoundary","isLineSegmentContainedInBoundary","segEnv","isSegUpwards","applyTo","ecpVisitor","riVisitor","elementEnv","rectPt","checkIntersectionWithLineStrings","testLine","checkIntersectionWithSegments","seq1","getIntersectionMatrix","relate","touches","within","coveredBy","relOp","intersectionPattern","relateWithCheck","_a","_b","disjoint","crosses","extractElements","elems","elemGeom","combine","combiner","createList","_obj","_obj2","obj2","exteriorCoords","ptComp","_sortIndex","reduceToGeometries","geomTree","unionTree","extractByEnvelope","disjointGeoms","intersectingGeoms","elem","unionOptimized","g0Env","g1Env","unionActual","commonEnv","unionUsingEnvelopeIntersection","STRTREE_NODE_CAPACITY","itemTree","binaryUnion","unionSafe","repeatedUnion","restrictToPolygons","common","disjointPolys","g0Int","g1Int","bufferUnion","gColl","unionAll","unionNoOpt","unionWithNull","unionPoints","ptGeom","unionLines","lineGeom","unionPolygons","unionLA","_geoms2","valid","reducedCoords","noRepeatedCoordList","noRepeatedCoords","minLength","collapsedCoords","fixPolygonalTopology","geomToBuffer","changePM","bufGeom","finalGeom","reducePointwise","geomEdit","createFactory","finalRemoveCollapsed","newPM","createEditor","setRemoveCollapsedComponents","inputFactory","setChangePrecisionModel","reducePW","setPointwise","reducer","precision","simplifySection","setEnsureValid","tss","rawGeom","rawAreaGeom","removeDegenerateRings","simpResult","getParent","addToResult","asLineString","getResultSize","resultSegsSize","getSegment","getParentCoordinates","getMinimumSize","asLinearRing","getSegments","getResultCoordinates","flatten","newSeg","hasBadIntersection","sectionIndex","candidateSeg","hasBadOutputIntersection","hasBadInputIntersection","isValidToSimplify","furthestPtIndex","findFurthestPoint","querySegs","maxDist","midPt","isInLineSection","taggedLines","tlss","taggedLine","minSize","splitAt","minFrac","pointAlongReverse","actualLen","getConstrainedLength","setMinimumLength","minLen","getSplitPoint","findSplitPoint","encroachPt","lineSeg","midPtLen","splitSeg","projPt","projectedSplitPoint","nonEncroachDiam","maxSplitLen","triArea","isInCircleDDNormalized","bdx","bdy","cdx","cdy","abdet","bcdet","cadet","alift","blift","clift","checkRobustInCircle","nonRobustInCircle","isInCircleNonRobust","isInCircleDD","isInCircleDDSlow","isInCircleCC","circumCentre","toPoint","isInCircleDDFast","aTerm","triAreaDDFast","bTerm","cTerm","pTerm","cc","ccRadius","isInCircleNormalized","triAreaDDSlow","isInCircleRobust","t1","t2","circleCenter","cab","cbc","hcc","nre","err","dot","magn","getZ","_x3","isInCircle","interpolateZValue","crossProduct","setZ","times","cross","classify","sa","BEHIND","BEYOND","ORIGIN","DESTINATION","BETWEEN","circumRadiusRatio","edgeLength","el","ptLen","getConstraint","setOnConstraint","isOnConstraint","setConstraint","equalsNonOriented","qe","equalsOriented","toLineSegment","dNext","lPrev","rPrev","rot","oPrev","setOrig","lNext","invRot","setDest","rNext","isLive","getPrimary","dPrev","makeEdge","q0","q3","base","beta","t3","t4","connect","insertSite","isVertexOfEdge","isOnEdge","insertSites","vertices","locateFromEdge","getTriangleVertices","includeFrame","visitTriangles","isFrameVertex","getVoronoiCellPolygon","cellPts","startQE","cellPoly","setLocator","ea","ec","isFrameBorderEdge","leftTri","getTriangleEdges","rightTri","vLeftTriOther","vRightTriOther","triVisitor","edgeStack","visitedEdges","fetchTriangleToVisit","isFrameEdge","getTriangleCoordinates","getTriangles","getVertices","vd","curr","edgeCount","isFrame","getPrimaryEdges","getVertexUniqueEdges","visitedVertices","qd","priQE","eSym","eRot","eRotSym","iter","maxIter","getVoronoiCellPolygons","cells","getVoronoiDiagram","vorCells","triPtsList","tris","triPt","locEdge","triEdge","ccVertex","checkTriangleSize","getEndZ","getStartZ","getStart","getEnd","getEndY","getStartX","getStartY","getEndX","isRepeated","getRight","setLeft","_left","getCount","getLeft","increment","setRight","_right","findBestMatchNode","insertExact","queryEnv","_queryEnv","_result","queryNode","_queryEnv2","currentNode","odd","discriminant","searchLeft","searchRight","queryEnvelope","leafNode","isOddLevel","isLessThan","toCoordinates","kdnodes","_kdnodes","includeRepeated","update","getInitialVertices","getKDT","enforceConstraints","addConstraintVertices","splits","enforceGabriel","MAX_SPLIT_ITER","getVertexFactory","getPointArray","setConstraints","computeConvexHull","hull","findNonGabrielPoint","segRadius","closestNonGabriel","testRadius","testDist","getConstraintSegments","setSplitPointFinder","segsToInsert","newSegments","segsToRemove","splitVertex","createVertex","removeAll","getSubdivision","computeBoundingBox","vertexEnv","computeVertexEnvelope","allPointsEnv","setVertexFactory","formInitialDelaunay","kdnode","snappedV","siteEnv","toVertices","setTolerance","setSites","extractUniqueCoordinates","unique","coordsCopy","verts","createSiteVertices","containsKey","createVertices","createConstraintSegments","sites","cdt","constraintSegs","_line","_constraintSegs","getDiagram","clipGeometryCollection","setClipEnvelope","clipPoly","clipped","quadedge","triangulate","isEndpoint","lineComp","nseg","toLowest","pointAlongSegmentByFraction","getSegmentFraction","setToEnd","lastLine","isOnSameSegment","snapToVertex","getSegmentLength","lenToStart","lenToEnd","compareLocationValues","componentIndex1","segmentIndex1","segmentFraction1","isVertex","getEndLocation","componentIndex0","segmentIndex0","segmentFraction0","getVertexIndex","getSegmentEnd","getSegmentStart","isEndOfLine","indexOfFromStart","minComponentIndex","minSegmentIndex","segDistance","candidateComponentIndex","candidateSegmentIndex","indexOfAfter","endLoc","closestAfter","indicesOf","subLine","locPt","subLineLoc","endLine","getLastCoordinate","rawPts","validCoordinateSequence","setFixInvalidLines","allowRepeatedPoints","setIgnoreInvalidLines","computeLinear","builder","computeLine","startSegmentIndex","lastSegmentIndex","newCoordinateArray","clampIndex","extractPoint","_index","indexLow","isValidIndex","extractLine","ptMeasure","segmentStartMeasure","segMeasureToPt","segmentNearestMeasure","projFactor","resolveHigher","compIndex","_length","resolveLower","forwardLength","getLocationForward","_linearGeom","_length2","positiveIndex","locationOf","_index2","locLow","startIndex2","endIndex2","resolveStartLower","linearref","args","_key","centPt","interiorPt","toText","version","_defineProperty","_jsts","jsts","newObj","ROUTER","user","table","CARTODB_USER","DBTABLE_EDGES","findRoute","start_lat","start_lng","target_lat","target_lng","success_callback","failure_callback","self","northbound","findNearestSegmentToLatLng","start_segment","target_segment","console","dir","sql","cartodb","SQL","wktreader","gfactory","rows","segment","debug","title","mypoints","firstpoint","lastpoint","route","assemblePath","routeDecorate","routeSerialize","errmsg","error","errors","lat","lng","closest_segment","directionclause","wanted_lat","wanted_lng","universe_segments","poisoned","target_geom","here","candidates","candidate","nextsegment","fork","rad2deg","deg2rad","thisstep","nextstep","dx11","dx22","dx12","dx21","thispoints","nextpoints","newpoint","TRANSITION_CODES","RIGHT_TURN","code","text","RIGHT_SOFT","RIGHT_HARD","LEFT_TURN","LEFT_SOFT","LEFT_HARD","ARRIVE","OTHER","this_last","this_prev","next_first","next_second","thislon2","thislat2","thislon1","thislat1","nextlon2","nextlat2","nextlon1","nextlat1","thisaz","nextaz","turntype","transition","wanted_start","wanted_end","closest_point_start","closest_lng","closest_lat","closest_point_end","closest_distance_start","closest_distance","closest_distance_end","total_meters","meters","wktwriter","properties","startpoint_wanted","endpoint_wanted","startpoint_trail","endpoint_trail","startpoint_meters","endpoint_meters","routestep"],"mappings":"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","file":"0.3dbb278452a5b619e573.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 361:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof=typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};(function webpackUniversalModuleDefinition(root,factory){if(( false?'undefined':_typeof(exports))==='object'&&( false?'undefined':_typeof(module))==='object')module.exports=factory();else if(true)!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else if((typeof exports==='undefined'?'undefined':_typeof(exports))==='object')exports[\"ecgClientRouter\"]=factory();else root[\"ecgClientRouter\"]=factory();})(this,function(){return(/******/function(modules){// webpackBootstrap\n/******/// The module cache\n/******/var installedModules={};/******//******/// The require function\n/******/function __webpack_require__(moduleId){/******//******/// Check if module is in cache\n/******/if(installedModules[moduleId]){/******/return installedModules[moduleId].exports;/******/}/******/// Create a new module (and put it into the cache)\n/******/var module=installedModules[moduleId]={/******/i:moduleId,/******/l:false,/******/exports:{}/******/};/******//******/// Execute the module function\n/******/modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);/******//******/// Flag the module as loaded\n/******/module.l=true;/******//******/// Return the exports of the module\n/******/return module.exports;/******/}/******//******//******/// expose the modules object (__webpack_modules__)\n/******/__webpack_require__.m=modules;/******//******/// expose the module cache\n/******/__webpack_require__.c=installedModules;/******//******/// identity function for calling harmony imports with the correct context\n/******/__webpack_require__.i=function(value){return value;};/******//******/// define getter function for harmony exports\n/******/__webpack_require__.d=function(exports,name,getter){/******/if(!__webpack_require__.o(exports,name)){/******/Object.defineProperty(exports,name,{/******/configurable:false,/******/enumerable:true,/******/get:getter/******/});/******/}/******/};/******//******/// getDefaultExport function for compatibility with non-harmony modules\n/******/__webpack_require__.n=function(module){/******/var getter=module&&module.__esModule?/******/function getDefault(){return module['default'];}:/******/function getModuleExports(){return module;};/******/__webpack_require__.d(getter,'a',getter);/******/return getter;/******/};/******//******/// Object.prototype.hasOwnProperty.call\n/******/__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property);};/******//******/// __webpack_public_path__\n/******/__webpack_require__.p=\"\";/******//******/// Load entry module and return exports\n/******/return __webpack_require__(__webpack_require__.s=1);/******/}(/************************************************************************//******/[/* 0 *//***/function(module,exports,__webpack_require__){/**\n * JSTS. See https://github.com/bjornharrtell/jsts\n * https://github.com/bjornharrtell/jsts/blob/master/LICENSE_EDLv1.txt\n * https://github.com/bjornharrtell/jsts/blob/master/LICENSE_EPLv1.txt\n * https://github.com/bjornharrtell/jsts/blob/master/LICENSE_LICENSE_ES6_COLLECTIONS.txt\n * @license\n */(function(global,factory){true?factory(exports):typeof define==='function'&&define.amd?define(['exports'],factory):factory(global.jsts=global.jsts||{});})(this,function(exports){'use strict';/* Polyfill service v3.13.0\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service\n *\n * - Array.prototype.fill, License: CC0 */if(!('fill'in Array.prototype)){Object.defineProperty(Array.prototype,'fill',{configurable:true,value:function fill(value){if(this===undefined||this===null){throw new TypeError(this+' is not an object');}var arrayLike=Object(this);var length=Math.max(Math.min(arrayLike.length,9007199254740991),0)||0;var relativeStart=1 in arguments?parseInt(Number(arguments[1]),10)||0:0;relativeStart=relativeStart<0?Math.max(length+relativeStart,0):Math.min(relativeStart,length);var relativeEnd=2 in arguments&&arguments[2]!==undefined?parseInt(Number(arguments[2]),10)||0:length;relativeEnd=relativeEnd<0?Math.max(length+arguments[2],0):Math.min(relativeEnd,length);while(relativeStart<relativeEnd){arrayLike[relativeStart]=value;++relativeStart;}return arrayLike;},writable:true});}Number.isFinite=Number.isFinite||function(value){return typeof value==='number'&&isFinite(value);};Number.isInteger=Number.isInteger||function(val){return typeof val==='number'&&isFinite(val)&&Math.floor(val)===val;};Number.parseFloat=Number.parseFloat||parseFloat;Number.isNaN=Number.isNaN||function(value){return value!==value;// eslint-disable-line\n};Math.trunc=Math.trunc||function(x){return x<0?Math.ceil(x):Math.floor(x);};var extend=function extend(target,source){for(var key in source){if(source.hasOwnProperty(key))target[key]=source[key];}};function NumberUtil(){}extend(NumberUtil.prototype,{interfaces_:function interfaces_(){return[];},getClass:function getClass(){return NumberUtil;}});NumberUtil.equalsWithTolerance=function(x1,x2,tolerance){return Math.abs(x1-x2)<=tolerance;};function IllegalArgumentException(){}function Double(){}Double.isNaN=function(n){return Number.isNaN(n);};Double.doubleToLongBits=function(n){return n;};Double.longBitsToDouble=function(n){return n;};Double.isInfinite=function(n){return!Number.isFinite(n);};Double.MAX_VALUE=Number.MAX_VALUE;function Comparable(){}function Clonable(){}function Comparator(){}function Serializable(){}function RuntimeException(message){this.name='RuntimeException';this.message=message;this.stack=new Error().stack;Error.call(this,message);}RuntimeException.prototype=Object.create(Error.prototype);RuntimeException.prototype.constructor=Error;var inherits=function inherits(c,p){c.prototype=Object.create(p.prototype);c.prototype.constructor=c;};function AssertionFailedException(){if(arguments.length===0){RuntimeException.call(this);}else if(arguments.length===1){var message=arguments[0];RuntimeException.call(this,message);}}inherits(AssertionFailedException,RuntimeException);extend(AssertionFailedException.prototype,{interfaces_:function interfaces_(){return[];},getClass:function getClass(){return AssertionFailedException;}});function Assert(){}extend(Assert.prototype,{interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Assert;}});Assert.shouldNeverReachHere=function(){if(arguments.length===0){Assert.shouldNeverReachHere(null);}else if(arguments.length===1){var message=arguments[0];throw new AssertionFailedException(\"Should never reach here\"+(message!==null?\": \"+message:\"\"));}};Assert.isTrue=function(){if(arguments.length===1){var assertion=arguments[0];Assert.isTrue(assertion,null);}else if(arguments.length===2){var _assertion=arguments[0],message=arguments[1];if(!_assertion){if(message===null){throw new AssertionFailedException();}else{throw new AssertionFailedException(message);}}}};Assert.equals=function(){if(arguments.length===2){var expectedValue=arguments[0],actualValue=arguments[1];Assert.equals(expectedValue,actualValue,null);}else if(arguments.length===3){var _expectedValue=arguments[0],_actualValue=arguments[1],message=arguments[2];if(!_actualValue.equals(_expectedValue)){throw new AssertionFailedException(\"Expected \"+_expectedValue+\" but encountered \"+_actualValue+(message!==null?\": \"+message:\"\"));}}};function Coordinate(){this.x=null;this.y=null;this.z=null;if(arguments.length===0){Coordinate.call(this,0.0,0.0);}else if(arguments.length===1){var c=arguments[0];Coordinate.call(this,c.x,c.y,c.z);}else if(arguments.length===2){var x=arguments[0],y=arguments[1];Coordinate.call(this,x,y,Coordinate.NULL_ORDINATE);}else if(arguments.length===3){var _x=arguments[0],_y=arguments[1],z=arguments[2];this.x=_x;this.y=_y;this.z=z;}}extend(Coordinate.prototype,{setOrdinate:function setOrdinate(ordinateIndex,value){switch(ordinateIndex){case Coordinate.X:this.x=value;break;case Coordinate.Y:this.y=value;break;case Coordinate.Z:this.z=value;break;default:throw new IllegalArgumentException(\"Invalid ordinate index: \"+ordinateIndex);}},equals2D:function equals2D(){if(arguments.length===1){var other=arguments[0];if(this.x!==other.x){return false;}if(this.y!==other.y){return false;}return true;}else if(arguments.length===2){var c=arguments[0],tolerance=arguments[1];if(!NumberUtil.equalsWithTolerance(this.x,c.x,tolerance)){return false;}if(!NumberUtil.equalsWithTolerance(this.y,c.y,tolerance)){return false;}return true;}},getOrdinate:function getOrdinate(ordinateIndex){switch(ordinateIndex){case Coordinate.X:return this.x;case Coordinate.Y:return this.y;case Coordinate.Z:return this.z;}throw new IllegalArgumentException(\"Invalid ordinate index: \"+ordinateIndex);},equals3D:function equals3D(other){return this.x===other.x&&this.y===other.y&&(this.z===other.z||Double.isNaN(this.z)&&Double.isNaN(other.z));},equals:function equals(other){if(!(other instanceof Coordinate)){return false;}return this.equals2D(other);},equalInZ:function equalInZ(c,tolerance){return NumberUtil.equalsWithTolerance(this.z,c.z,tolerance);},compareTo:function compareTo(o){var other=o;if(this.x<other.x)return-1;if(this.x>other.x)return 1;if(this.y<other.y)return-1;if(this.y>other.y)return 1;return 0;},clone:function clone(){try{var coord=null;return coord;}catch(e){if(e instanceof CloneNotSupportedException){Assert.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\");return null;}else throw e;}finally{}},copy:function copy(){return new Coordinate(this);},toString:function toString(){return\"(\"+this.x+\", \"+this.y+\", \"+this.z+\")\";},distance3D:function distance3D(c){var dx=this.x-c.x;var dy=this.y-c.y;var dz=this.z-c.z;return Math.sqrt(dx*dx+dy*dy+dz*dz);},distance:function distance(c){var dx=this.x-c.x;var dy=this.y-c.y;return Math.sqrt(dx*dx+dy*dy);},hashCode:function hashCode(){var result=17;result=37*result+Coordinate.hashCode(this.x);result=37*result+Coordinate.hashCode(this.y);return result;},setCoordinate:function setCoordinate(other){this.x=other.x;this.y=other.y;this.z=other.z;},interfaces_:function interfaces_(){return[Comparable,Clonable,Serializable];},getClass:function getClass(){return Coordinate;}});Coordinate.hashCode=function(){if(arguments.length===1){var x=arguments[0];var f=Double.doubleToLongBits(x);return Math.trunc(f^f>>>32);}};function DimensionalComparator(){this.dimensionsToTest=2;if(arguments.length===0){DimensionalComparator.call(this,2);}else if(arguments.length===1){var dimensionsToTest=arguments[0];if(dimensionsToTest!==2&&dimensionsToTest!==3)throw new IllegalArgumentException(\"only 2 or 3 dimensions may be specified\");this.dimensionsToTest=dimensionsToTest;}}extend(DimensionalComparator.prototype,{compare:function compare(o1,o2){var c1=o1;var c2=o2;var compX=DimensionalComparator.compare(c1.x,c2.x);if(compX!==0)return compX;var compY=DimensionalComparator.compare(c1.y,c2.y);if(compY!==0)return compY;if(this.dimensionsToTest<=2)return 0;var compZ=DimensionalComparator.compare(c1.z,c2.z);return compZ;},interfaces_:function interfaces_(){return[Comparator];},getClass:function getClass(){return DimensionalComparator;}});DimensionalComparator.compare=function(a,b){if(a<b)return-1;if(a>b)return 1;if(Double.isNaN(a)){if(Double.isNaN(b))return 0;return-1;}if(Double.isNaN(b))return 1;return 0;};Coordinate.DimensionalComparator=DimensionalComparator;Coordinate.serialVersionUID=6683108902428366910;Coordinate.NULL_ORDINATE=Double.NaN;Coordinate.X=0;Coordinate.Y=1;Coordinate.Z=2;/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Iterator.html\n * @constructor\n * @private\n */function Iterator(){}/**\n * Returns true if the iteration has more elements.\n * @return {boolean}\n */Iterator.prototype.hasNext=function(){};/**\n * Returns the next element in the iteration.\n * @return {Object}\n */Iterator.prototype.next=function(){};/**\n * Removes from the underlying collection the last element returned by the\n * iterator (optional operation).\n */Iterator.prototype.remove=function(){};/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Collection.html\n *\n * @constructor\n * @private\n */function Collection(){}/**\n * Ensures that this collection contains the specified element (optional\n * operation).\n * @param {Object} e\n * @return {boolean}\n */Collection.prototype.add=function(){};/**\n * Appends all of the elements in the specified collection to the end of this\n * list, in the order that they are returned by the specified collection's\n * iterator (optional operation).\n * @param {javascript.util.Collection} c\n * @return {boolean}\n */Collection.prototype.addAll=function(){};/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */Collection.prototype.isEmpty=function(){};/**\n * Returns an iterator over the elements in this collection.\n * @return {javascript.util.Iterator}\n */Collection.prototype.iterator=function(){};/**\n * Returns an iterator over the elements in this collection.\n * @return {number}\n */Collection.prototype.size=function(){};/**\n * Returns an array containing all of the elements in this collection.\n * @return {Array}\n */Collection.prototype.toArray=function(){};/**\n * Removes a single instance of the specified element from this collection if it\n * is present. (optional)\n * @param {Object} e\n * @return {boolean}\n */Collection.prototype.remove=function(){};/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */function IndexOutOfBoundsException$1(message){this.message=message||'';}IndexOutOfBoundsException$1.prototype=new Error();/**\n * @type {string}\n */IndexOutOfBoundsException$1.prototype.name='IndexOutOfBoundsException';/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/List.html\n *\n * @extends {javascript.util.Collection}\n * @constructor\n * @private\n */function List(){}List.prototype=Object.create(Collection.prototype);List.prototype.constructor=List;/**\n * Returns the element at the specified position in this list.\n * @param {number} index\n * @return {Object}\n */List.prototype.get=function(){};/**\n * Replaces the element at the specified position in this list with the\n * specified element (optional operation).\n * @param {number} index\n * @param {Object} e\n * @return {Object}\n */List.prototype.set=function(){};/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */List.prototype.isEmpty=function(){};/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */function NoSuchElementException(message){this.message=message||'';}NoSuchElementException.prototype=new Error();/**\n * @type {string}\n */NoSuchElementException.prototype.name='NoSuchElementException';/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */function OperationNotSupported(message){this.message=message||'';}OperationNotSupported.prototype=new Error();/**\n * @type {string}\n */OperationNotSupported.prototype.name='OperationNotSupported';/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html\n *\n * @extends List\n * @private\n */function ArrayList(){/**\n   * @type {Array}\n   * @private\n  */this.array_=[];if(arguments[0]instanceof Collection){this.addAll(arguments[0]);}}ArrayList.prototype=Object.create(List.prototype);ArrayList.prototype.constructor=ArrayList;ArrayList.prototype.ensureCapacity=function(){};ArrayList.prototype.interfaces_=function(){return[List,Collection];};/**\n * @override\n */ArrayList.prototype.add=function(e){if(arguments.length===1){this.array_.push(e);}else{this.array_.splice(arguments[0],arguments[1]);}return true;};ArrayList.prototype.clear=function(){this.array_=[];};/**\n * @override\n */ArrayList.prototype.addAll=function(c){for(var i=c.iterator();i.hasNext();){this.add(i.next());}return true;};/**\n * @override\n */ArrayList.prototype.set=function(index,element){var oldElement=this.array_[index];this.array_[index]=element;return oldElement;};/**\n * @override\n */ArrayList.prototype.iterator=function(){return new Iterator_(this);};/**\n * @override\n */ArrayList.prototype.get=function(index){if(index<0||index>=this.size()){throw new IndexOutOfBoundsException$1();}return this.array_[index];};/**\n * @override\n */ArrayList.prototype.isEmpty=function(){return this.array_.length===0;};/**\n * @override\n */ArrayList.prototype.size=function(){return this.array_.length;};/**\n * @override\n */ArrayList.prototype.toArray=function(){var array=[];for(var i=0,len=this.array_.length;i<len;i++){array.push(this.array_[i]);}return array;};/**\n * @override\n */ArrayList.prototype.remove=function(o){var found=false;for(var i=0,len=this.array_.length;i<len;i++){if(this.array_[i]===o){this.array_.splice(i,1);found=true;break;}}return found;};/**\n * @extends {Iterator}\n * @param {ArrayList} arrayList\n * @constructor\n * @private\n */var Iterator_=function Iterator_(arrayList){/**\n   * @type {ArrayList}\n   * @private\n  */this.arrayList_=arrayList;/**\n   * @type {number}\n   * @private\n  */this.position_=0;};/**\n * @override\n */Iterator_.prototype.next=function(){if(this.position_===this.arrayList_.size()){throw new NoSuchElementException();}return this.arrayList_.get(this.position_++);};/**\n * @override\n */Iterator_.prototype.hasNext=function(){if(this.position_<this.arrayList_.size()){return true;}else{return false;}};/**\n * TODO: should be in ListIterator\n * @override\n */Iterator_.prototype.set=function(element){return this.arrayList_.set(this.position_-1,element);};/**\n * @override\n */Iterator_.prototype.remove=function(){this.arrayList_.remove(this.arrayList_.get(this.position_));};function CoordinateList(){ArrayList.apply(this);if(arguments.length===0){}else if(arguments.length===1){var coord=arguments[0];this.ensureCapacity(coord.length);this.add(coord,true);}else if(arguments.length===2){var _coord=arguments[0],allowRepeated=arguments[1];this.ensureCapacity(_coord.length);this.add(_coord,allowRepeated);}}inherits(CoordinateList,ArrayList);extend(CoordinateList.prototype,{getCoordinate:function getCoordinate(i){return this.get(i);},addAll:function addAll(){if(arguments.length===2){var coll=arguments[0],allowRepeated=arguments[1];var isChanged=false;for(var i=coll.iterator();i.hasNext();){this.add(i.next(),allowRepeated);isChanged=true;}return isChanged;}else return ArrayList.prototype.addAll.apply(this,arguments);},clone:function clone(){var clone=ArrayList.prototype.clone.call(this);for(var i=0;i<this.size();i++){clone.add(i,this.get(i).copy());}return clone;},toCoordinateArray:function toCoordinateArray(){return this.toArray(CoordinateList.coordArrayType);},add:function add(){if(arguments.length===1){var coord=arguments[0];ArrayList.prototype.add.call(this,coord);}else if(arguments.length===2){if(arguments[0]instanceof Array&&typeof arguments[1]===\"boolean\"){var _coord2=arguments[0],allowRepeated=arguments[1];this.add(_coord2,allowRepeated,true);return true;}else if(arguments[0]instanceof Coordinate&&typeof arguments[1]===\"boolean\"){var _coord3=arguments[0],_allowRepeated=arguments[1];if(!_allowRepeated){if(this.size()>=1){var last=this.get(this.size()-1);if(last.equals2D(_coord3))return null;}}ArrayList.prototype.add.call(this,_coord3);}else if(arguments[0]instanceof Object&&typeof arguments[1]===\"boolean\"){var obj=arguments[0],_allowRepeated2=arguments[1];this.add(obj,_allowRepeated2);return true;}}else if(arguments.length===3){if(typeof arguments[2]===\"boolean\"&&arguments[0]instanceof Array&&typeof arguments[1]===\"boolean\"){var _coord4=arguments[0],_allowRepeated3=arguments[1],direction=arguments[2];if(direction){for(var i=0;i<_coord4.length;i++){this.add(_coord4[i],_allowRepeated3);}}else{for(var i=_coord4.length-1;i>=0;i--){this.add(_coord4[i],_allowRepeated3);}}return true;}else if(typeof arguments[2]===\"boolean\"&&Number.isInteger(arguments[0])&&arguments[1]instanceof Coordinate){var _i=arguments[0],_coord5=arguments[1],_allowRepeated4=arguments[2];if(!_allowRepeated4){var size=this.size();if(size>0){if(_i>0){var prev=this.get(_i-1);if(prev.equals2D(_coord5))return null;}if(_i<size){var next=this.get(_i);if(next.equals2D(_coord5))return null;}}}ArrayList.prototype.add.call(this,_i,_coord5);}}else if(arguments.length===4){var _coord6=arguments[0],_allowRepeated5=arguments[1],start=arguments[2],end=arguments[3];var inc=1;if(start>end)inc=-1;for(var i=start;i!==end;i+=inc){this.add(_coord6[i],_allowRepeated5);}return true;}},closeRing:function closeRing(){if(this.size()>0)this.add(new Coordinate(this.get(0)),false);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return CoordinateList;}});CoordinateList.coordArrayType=new Array(0).fill(null);function Envelope(){this.minx=null;this.maxx=null;this.miny=null;this.maxy=null;if(arguments.length===0){this.init();}else if(arguments.length===1){if(arguments[0]instanceof Coordinate){var p=arguments[0];this.init(p.x,p.x,p.y,p.y);}else if(arguments[0]instanceof Envelope){var env=arguments[0];this.init(env);}}else if(arguments.length===2){var p1=arguments[0],p2=arguments[1];this.init(p1.x,p2.x,p1.y,p2.y);}else if(arguments.length===4){var x1=arguments[0],x2=arguments[1],y1=arguments[2],y2=arguments[3];this.init(x1,x2,y1,y2);}}extend(Envelope.prototype,{getArea:function getArea(){return this.getWidth()*this.getHeight();},equals:function equals(other){if(!(other instanceof Envelope)){return false;}var otherEnvelope=other;if(this.isNull()){return otherEnvelope.isNull();}return this.maxx===otherEnvelope.getMaxX()&&this.maxy===otherEnvelope.getMaxY()&&this.minx===otherEnvelope.getMinX()&&this.miny===otherEnvelope.getMinY();},intersection:function intersection(env){if(this.isNull()||env.isNull()||!this.intersects(env))return new Envelope();var intMinX=this.minx>env.minx?this.minx:env.minx;var intMinY=this.miny>env.miny?this.miny:env.miny;var intMaxX=this.maxx<env.maxx?this.maxx:env.maxx;var intMaxY=this.maxy<env.maxy?this.maxy:env.maxy;return new Envelope(intMinX,intMaxX,intMinY,intMaxY);},isNull:function isNull(){return this.maxx<this.minx;},getMaxX:function getMaxX(){return this.maxx;},covers:function covers(){if(arguments.length===1){if(arguments[0]instanceof Coordinate){var p=arguments[0];return this.covers(p.x,p.y);}else if(arguments[0]instanceof Envelope){var other=arguments[0];if(this.isNull()||other.isNull()){return false;}return other.getMinX()>=this.minx&&other.getMaxX()<=this.maxx&&other.getMinY()>=this.miny&&other.getMaxY()<=this.maxy;}}else if(arguments.length===2){var x=arguments[0],y=arguments[1];if(this.isNull())return false;return x>=this.minx&&x<=this.maxx&&y>=this.miny&&y<=this.maxy;}},intersects:function intersects(){if(arguments.length===1){if(arguments[0]instanceof Envelope){var other=arguments[0];if(this.isNull()||other.isNull()){return false;}return!(other.minx>this.maxx||other.maxx<this.minx||other.miny>this.maxy||other.maxy<this.miny);}else if(arguments[0]instanceof Coordinate){var p=arguments[0];return this.intersects(p.x,p.y);}}else if(arguments.length===2){var x=arguments[0],y=arguments[1];if(this.isNull())return false;return!(x>this.maxx||x<this.minx||y>this.maxy||y<this.miny);}},getMinY:function getMinY(){return this.miny;},getMinX:function getMinX(){return this.minx;},expandToInclude:function expandToInclude(){if(arguments.length===1){if(arguments[0]instanceof Coordinate){var p=arguments[0];this.expandToInclude(p.x,p.y);}else if(arguments[0]instanceof Envelope){var other=arguments[0];if(other.isNull()){return null;}if(this.isNull()){this.minx=other.getMinX();this.maxx=other.getMaxX();this.miny=other.getMinY();this.maxy=other.getMaxY();}else{if(other.minx<this.minx){this.minx=other.minx;}if(other.maxx>this.maxx){this.maxx=other.maxx;}if(other.miny<this.miny){this.miny=other.miny;}if(other.maxy>this.maxy){this.maxy=other.maxy;}}}}else if(arguments.length===2){var x=arguments[0],y=arguments[1];if(this.isNull()){this.minx=x;this.maxx=x;this.miny=y;this.maxy=y;}else{if(x<this.minx){this.minx=x;}if(x>this.maxx){this.maxx=x;}if(y<this.miny){this.miny=y;}if(y>this.maxy){this.maxy=y;}}}},minExtent:function minExtent(){if(this.isNull())return 0.0;var w=this.getWidth();var h=this.getHeight();if(w<h)return w;return h;},getWidth:function getWidth(){if(this.isNull()){return 0;}return this.maxx-this.minx;},compareTo:function compareTo(o){var env=o;if(this.isNull()){if(env.isNull())return 0;return-1;}else{if(env.isNull())return 1;}if(this.minx<env.minx)return-1;if(this.minx>env.minx)return 1;if(this.miny<env.miny)return-1;if(this.miny>env.miny)return 1;if(this.maxx<env.maxx)return-1;if(this.maxx>env.maxx)return 1;if(this.maxy<env.maxy)return-1;if(this.maxy>env.maxy)return 1;return 0;},translate:function translate(transX,transY){if(this.isNull()){return null;}this.init(this.getMinX()+transX,this.getMaxX()+transX,this.getMinY()+transY,this.getMaxY()+transY);},toString:function toString(){return\"Env[\"+this.minx+\" : \"+this.maxx+\", \"+this.miny+\" : \"+this.maxy+\"]\";},setToNull:function setToNull(){this.minx=0;this.maxx=-1;this.miny=0;this.maxy=-1;},getHeight:function getHeight(){if(this.isNull()){return 0;}return this.maxy-this.miny;},maxExtent:function maxExtent(){if(this.isNull())return 0.0;var w=this.getWidth();var h=this.getHeight();if(w>h)return w;return h;},expandBy:function expandBy(){if(arguments.length===1){var distance=arguments[0];this.expandBy(distance,distance);}else if(arguments.length===2){var deltaX=arguments[0],deltaY=arguments[1];if(this.isNull())return null;this.minx-=deltaX;this.maxx+=deltaX;this.miny-=deltaY;this.maxy+=deltaY;if(this.minx>this.maxx||this.miny>this.maxy)this.setToNull();}},contains:function contains(){if(arguments.length===1){if(arguments[0]instanceof Envelope){var other=arguments[0];return this.covers(other);}else if(arguments[0]instanceof Coordinate){var p=arguments[0];return this.covers(p);}}else if(arguments.length===2){var x=arguments[0],y=arguments[1];return this.covers(x,y);}},centre:function centre(){if(this.isNull())return null;return new Coordinate((this.getMinX()+this.getMaxX())/2.0,(this.getMinY()+this.getMaxY())/2.0);},init:function init(){if(arguments.length===0){this.setToNull();}else if(arguments.length===1){if(arguments[0]instanceof Coordinate){var p=arguments[0];this.init(p.x,p.x,p.y,p.y);}else if(arguments[0]instanceof Envelope){var env=arguments[0];this.minx=env.minx;this.maxx=env.maxx;this.miny=env.miny;this.maxy=env.maxy;}}else if(arguments.length===2){var p1=arguments[0],p2=arguments[1];this.init(p1.x,p2.x,p1.y,p2.y);}else if(arguments.length===4){var x1=arguments[0],x2=arguments[1],y1=arguments[2],y2=arguments[3];if(x1<x2){this.minx=x1;this.maxx=x2;}else{this.minx=x2;this.maxx=x1;}if(y1<y2){this.miny=y1;this.maxy=y2;}else{this.miny=y2;this.maxy=y1;}}},getMaxY:function getMaxY(){return this.maxy;},distance:function distance(env){if(this.intersects(env))return 0;var dx=0.0;if(this.maxx<env.minx)dx=env.minx-this.maxx;else if(this.minx>env.maxx)dx=this.minx-env.maxx;var dy=0.0;if(this.maxy<env.miny)dy=env.miny-this.maxy;else if(this.miny>env.maxy)dy=this.miny-env.maxy;if(dx===0.0)return dy;if(dy===0.0)return dx;return Math.sqrt(dx*dx+dy*dy);},hashCode:function hashCode(){var result=17;result=37*result+Coordinate.hashCode(this.minx);result=37*result+Coordinate.hashCode(this.maxx);result=37*result+Coordinate.hashCode(this.miny);result=37*result+Coordinate.hashCode(this.maxy);return result;},interfaces_:function interfaces_(){return[Comparable,Serializable];},getClass:function getClass(){return Envelope;}});Envelope.intersects=function(){if(arguments.length===3){var p1=arguments[0],p2=arguments[1],q=arguments[2];if(q.x>=(p1.x<p2.x?p1.x:p2.x)&&q.x<=(p1.x>p2.x?p1.x:p2.x)&&q.y>=(p1.y<p2.y?p1.y:p2.y)&&q.y<=(p1.y>p2.y?p1.y:p2.y)){return true;}return false;}else if(arguments.length===4){var _p=arguments[0],_p2=arguments[1],q1=arguments[2],q2=arguments[3];var minq=Math.min(q1.x,q2.x);var maxq=Math.max(q1.x,q2.x);var minp=Math.min(_p.x,_p2.x);var maxp=Math.max(_p.x,_p2.x);if(minp>maxq)return false;if(maxp<minq)return false;minq=Math.min(q1.y,q2.y);maxq=Math.max(q1.y,q2.y);minp=Math.min(_p.y,_p2.y);maxp=Math.max(_p.y,_p2.y);if(minp>maxq)return false;if(maxp<minq)return false;return true;}};Envelope.serialVersionUID=5873921885273102420;function Exception(){}function NotRepresentableException(){Exception.call(this,\"Projective point not representable on the Cartesian plane.\");}inherits(NotRepresentableException,Exception);extend(NotRepresentableException.prototype,{interfaces_:function interfaces_(){return[];},getClass:function getClass(){return NotRepresentableException;}});function Location(){}extend(Location.prototype,{interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Location;}});Location.toLocationSymbol=function(locationValue){switch(locationValue){case Location.EXTERIOR:return'e';case Location.BOUNDARY:return'b';case Location.INTERIOR:return'i';case Location.NONE:return'-';}throw new IllegalArgumentException(\"Unknown location value: \"+locationValue);};Location.INTERIOR=0;Location.BOUNDARY=1;Location.EXTERIOR=2;Location.NONE=-1;var hasInterface=function hasInterface(o,i){return o.interfaces_&&o.interfaces_().indexOf(i)>-1;};function MathUtil(){}extend(MathUtil.prototype,{interfaces_:function interfaces_(){return[];},getClass:function getClass(){return MathUtil;}});MathUtil.log10=function(x){var ln=Math.log(x);if(Double.isInfinite(ln))return ln;if(Double.isNaN(ln))return ln;return ln/MathUtil.LOG_10;};MathUtil.min=function(v1,v2,v3,v4){var min=v1;if(v2<min)min=v2;if(v3<min)min=v3;if(v4<min)min=v4;return min;};MathUtil.clamp=function(){if(typeof arguments[2]===\"number\"&&typeof arguments[0]===\"number\"&&typeof arguments[1]===\"number\"){var x=arguments[0],min=arguments[1],max=arguments[2];if(x<min)return min;if(x>max)return max;return x;}else if(Number.isInteger(arguments[2])&&Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var _x=arguments[0],_min=arguments[1],_max=arguments[2];if(_x<_min)return _min;if(_x>_max)return _max;return _x;}};MathUtil.wrap=function(index,max){if(index<0){return max- -index%max;}return index%max;};MathUtil.max=function(){if(arguments.length===3){var v1=arguments[0],v2=arguments[1],v3=arguments[2];var max=v1;if(v2>max)max=v2;if(v3>max)max=v3;return max;}else if(arguments.length===4){var _v=arguments[0],_v2=arguments[1],_v3=arguments[2],v4=arguments[3];var max=_v;if(_v2>max)max=_v2;if(_v3>max)max=_v3;if(v4>max)max=v4;return max;}};MathUtil.average=function(x1,x2){return(x1+x2)/2.0;};MathUtil.LOG_10=Math.log(10);function StringBuffer(str){this.str=str;}StringBuffer.prototype.append=function(e){this.str+=e;};StringBuffer.prototype.setCharAt=function(i,c){this.str=this.str.substr(0,i)+c+this.str.substr(i+1);};StringBuffer.prototype.toString=function(e){return this.str;};function Integer(value){this.value=value;}Integer.prototype.intValue=function(){return this.value;};Integer.prototype.compareTo=function(o){if(this.value<o)return-1;if(this.value>o)return 1;return 0;};Integer.isNaN=function(n){return Number.isNaN(n);};function Character(){}Character.isWhitespace=function(c){return c<=32&&c>=0||c==127;};Character.toUpperCase=function(c){return c.toUpperCase();};function DD(){this.hi=0.0;this.lo=0.0;if(arguments.length===0){this.init(0.0);}else if(arguments.length===1){if(typeof arguments[0]===\"number\"){var x=arguments[0];this.init(x);}else if(arguments[0]instanceof DD){var dd=arguments[0];this.init(dd);}else if(typeof arguments[0]===\"string\"){var str=arguments[0];DD.call(this,DD.parse(str));}}else if(arguments.length===2){var hi=arguments[0],lo=arguments[1];this.init(hi,lo);}}extend(DD.prototype,{le:function le(y){return this.hi<y.hi||this.hi===y.hi&&this.lo<=y.lo;},extractSignificantDigits:function extractSignificantDigits(insertDecimalPoint,magnitude){var y=this.abs();var mag=DD.magnitude(y.hi);var scale=DD.TEN.pow(mag);y=y.divide(scale);if(y.gt(DD.TEN)){y=y.divide(DD.TEN);mag+=1;}else if(y.lt(DD.ONE)){y=y.multiply(DD.TEN);mag-=1;}var decimalPointPos=mag+1;var buf=new StringBuffer();var numDigits=DD.MAX_PRINT_DIGITS-1;for(var i=0;i<=numDigits;i++){if(insertDecimalPoint&&i===decimalPointPos){buf.append('.');}var digit=Math.trunc(y.hi);if(digit<0||digit>9){}if(digit<0){break;}var rebiasBy10=false;var digitChar=0;if(digit>9){rebiasBy10=true;digitChar='9';}else{digitChar='0'+digit;}buf.append(digitChar);y=y.subtract(DD.valueOf(digit)).multiply(DD.TEN);if(rebiasBy10)y.selfAdd(DD.TEN);var continueExtractingDigits=true;var remMag=DD.magnitude(y.hi);if(remMag<0&&Math.abs(remMag)>=numDigits-i)continueExtractingDigits=false;if(!continueExtractingDigits)break;}magnitude[0]=mag;return buf.toString();},sqr:function sqr(){return this.multiply(this);},doubleValue:function doubleValue(){return this.hi+this.lo;},subtract:function subtract(){if(arguments[0]instanceof DD){var y=arguments[0];return this.add(y.negate());}else if(typeof arguments[0]===\"number\"){var _y=arguments[0];return this.add(-_y);}},equals:function equals(){if(arguments.length===1){var y=arguments[0];return this.hi===y.hi&&this.lo===y.lo;}},isZero:function isZero(){return this.hi===0.0&&this.lo===0.0;},selfSubtract:function selfSubtract(){if(arguments[0]instanceof DD){var y=arguments[0];if(this.isNaN())return this;return this.selfAdd(-y.hi,-y.lo);}else if(typeof arguments[0]===\"number\"){var _y2=arguments[0];if(this.isNaN())return this;return this.selfAdd(-_y2,0.0);}},getSpecialNumberString:function getSpecialNumberString(){if(this.isZero())return\"0.0\";if(this.isNaN())return\"NaN \";return null;},min:function min(x){if(this.le(x)){return this;}else{return x;}},selfDivide:function selfDivide(){if(arguments.length===1){if(arguments[0]instanceof DD){var y=arguments[0];return this.selfDivide(y.hi,y.lo);}else if(typeof arguments[0]===\"number\"){var _y3=arguments[0];return this.selfDivide(_y3,0.0);}}else if(arguments.length===2){var yhi=arguments[0],ylo=arguments[1];var hc=null,tc=null,hy=null,ty=null,C=null,c=null,U=null,u=null;C=this.hi/yhi;c=DD.SPLIT*C;hc=c-C;u=DD.SPLIT*yhi;hc=c-hc;tc=C-hc;hy=u-yhi;U=C*yhi;hy=u-hy;ty=yhi-hy;u=hc*hy-U+hc*ty+tc*hy+tc*ty;c=(this.hi-U-u+this.lo-C*ylo)/yhi;u=C+c;this.hi=u;this.lo=C-u+c;return this;}},dump:function dump(){return\"DD<\"+this.hi+\", \"+this.lo+\">\";},divide:function divide(){if(arguments[0]instanceof DD){var y=arguments[0];var hc=null,tc=null,hy=null,ty=null,C=null,c=null,U=null,u=null;C=this.hi/y.hi;c=DD.SPLIT*C;hc=c-C;u=DD.SPLIT*y.hi;hc=c-hc;tc=C-hc;hy=u-y.hi;U=C*y.hi;hy=u-hy;ty=y.hi-hy;u=hc*hy-U+hc*ty+tc*hy+tc*ty;c=(this.hi-U-u+this.lo-C*y.lo)/y.hi;u=C+c;var zhi=u;var zlo=C-u+c;return new DD(zhi,zlo);}else if(typeof arguments[0]===\"number\"){var _y4=arguments[0];if(Double.isNaN(_y4))return DD.createNaN();return DD.copy(this).selfDivide(_y4,0.0);}},ge:function ge(y){return this.hi>y.hi||this.hi===y.hi&&this.lo>=y.lo;},pow:function pow(exp){if(exp===0.0)return DD.valueOf(1.0);var r=new DD(this);var s=DD.valueOf(1.0);var n=Math.abs(exp);if(n>1){while(n>0){if(n%2===1){s.selfMultiply(r);}n/=2;if(n>0)r=r.sqr();}}else{s=r;}if(exp<0)return s.reciprocal();return s;},ceil:function ceil(){if(this.isNaN())return DD.NaN;var fhi=Math.ceil(this.hi);var flo=0.0;if(fhi===this.hi){flo=Math.ceil(this.lo);}return new DD(fhi,flo);},compareTo:function compareTo(o){var other=o;if(this.hi<other.hi)return-1;if(this.hi>other.hi)return 1;if(this.lo<other.lo)return-1;if(this.lo>other.lo)return 1;return 0;},rint:function rint(){if(this.isNaN())return this;var plus5=this.add(0.5);return plus5.floor();},setValue:function setValue(){if(arguments[0]instanceof DD){var value=arguments[0];this.init(value);return this;}else if(typeof arguments[0]===\"number\"){var _value=arguments[0];this.init(_value);return this;}},max:function max(x){if(this.ge(x)){return this;}else{return x;}},sqrt:function sqrt(){if(this.isZero())return DD.valueOf(0.0);if(this.isNegative()){return DD.NaN;}var x=1.0/Math.sqrt(this.hi);var ax=this.hi*x;var axdd=DD.valueOf(ax);var diffSq=this.subtract(axdd.sqr());var d2=diffSq.hi*(x*0.5);return axdd.add(d2);},selfAdd:function selfAdd(){if(arguments.length===1){if(arguments[0]instanceof DD){var y=arguments[0];return this.selfAdd(y.hi,y.lo);}else if(typeof arguments[0]===\"number\"){var _y5=arguments[0];var H=null,h=null,S=null,s=null,e=null,f=null;S=this.hi+_y5;e=S-this.hi;s=S-e;s=_y5-e+(this.hi-s);f=s+this.lo;H=S+f;h=f+(S-H);this.hi=H+h;this.lo=h+(H-this.hi);return this;}}else if(arguments.length===2){var yhi=arguments[0],ylo=arguments[1];var H=null,h=null,T=null,t=null,S=null,s=null,e=null,f=null;S=this.hi+yhi;T=this.lo+ylo;e=S-this.hi;f=T-this.lo;s=S-e;t=T-f;s=yhi-e+(this.hi-s);t=ylo-f+(this.lo-t);e=s+T;H=S+e;h=e+(S-H);e=t+h;var zhi=H+e;var zlo=e+(H-zhi);this.hi=zhi;this.lo=zlo;return this;}},selfMultiply:function selfMultiply(){if(arguments.length===1){if(arguments[0]instanceof DD){var y=arguments[0];return this.selfMultiply(y.hi,y.lo);}else if(typeof arguments[0]===\"number\"){var _y6=arguments[0];return this.selfMultiply(_y6,0.0);}}else if(arguments.length===2){var yhi=arguments[0],ylo=arguments[1];var hx=null,tx=null,hy=null,ty=null,C=null,c=null;C=DD.SPLIT*this.hi;hx=C-this.hi;c=DD.SPLIT*yhi;hx=C-hx;tx=this.hi-hx;hy=c-yhi;C=this.hi*yhi;hy=c-hy;ty=yhi-hy;c=hx*hy-C+hx*ty+tx*hy+tx*ty+(this.hi*ylo+this.lo*yhi);var zhi=C+c;hx=C-zhi;var zlo=c+hx;this.hi=zhi;this.lo=zlo;return this;}},selfSqr:function selfSqr(){return this.selfMultiply(this);},floor:function floor(){if(this.isNaN())return DD.NaN;var fhi=Math.floor(this.hi);var flo=0.0;if(fhi===this.hi){flo=Math.floor(this.lo);}return new DD(fhi,flo);},negate:function negate(){if(this.isNaN())return this;return new DD(-this.hi,-this.lo);},clone:function clone(){try{return null;}catch(ex){if(ex instanceof CloneNotSupportedException){return null;}else throw ex;}finally{}},multiply:function multiply(){if(arguments[0]instanceof DD){var y=arguments[0];if(y.isNaN())return DD.createNaN();return DD.copy(this).selfMultiply(y);}else if(typeof arguments[0]===\"number\"){var _y7=arguments[0];if(Double.isNaN(_y7))return DD.createNaN();return DD.copy(this).selfMultiply(_y7,0.0);}},isNaN:function isNaN(){return Double.isNaN(this.hi);},intValue:function intValue(){return Math.trunc(this.hi);},toString:function toString(){var mag=DD.magnitude(this.hi);if(mag>=-3&&mag<=20)return this.toStandardNotation();return this.toSciNotation();},toStandardNotation:function toStandardNotation(){var specialStr=this.getSpecialNumberString();if(specialStr!==null)return specialStr;var magnitude=new Array(1).fill(null);var sigDigits=this.extractSignificantDigits(true,magnitude);var decimalPointPos=magnitude[0]+1;var num=sigDigits;if(sigDigits.charAt(0)==='.'){num=\"0\"+sigDigits;}else if(decimalPointPos<0){num=\"0.\"+DD.stringOfChar('0',-decimalPointPos)+sigDigits;}else if(sigDigits.indexOf('.')===-1){var numZeroes=decimalPointPos-sigDigits.length;var zeroes=DD.stringOfChar('0',numZeroes);num=sigDigits+zeroes+\".0\";}if(this.isNegative())return\"-\"+num;return num;},reciprocal:function reciprocal(){var hc=null,tc=null,hy=null,ty=null,C=null,c=null,U=null,u=null;C=1.0/this.hi;c=DD.SPLIT*C;hc=c-C;u=DD.SPLIT*this.hi;hc=c-hc;tc=C-hc;hy=u-this.hi;U=C*this.hi;hy=u-hy;ty=this.hi-hy;u=hc*hy-U+hc*ty+tc*hy+tc*ty;c=(1.0-U-u-C*this.lo)/this.hi;var zhi=C+c;var zlo=C-zhi+c;return new DD(zhi,zlo);},toSciNotation:function toSciNotation(){if(this.isZero())return DD.SCI_NOT_ZERO;var specialStr=this.getSpecialNumberString();if(specialStr!==null)return specialStr;var magnitude=new Array(1).fill(null);var digits=this.extractSignificantDigits(false,magnitude);var expStr=DD.SCI_NOT_EXPONENT_CHAR+magnitude[0];if(digits.charAt(0)==='0'){throw new IllegalStateException(\"Found leading zero: \"+digits);}var trailingDigits=\"\";if(digits.length>1)trailingDigits=digits.substring(1);var digitsWithDecimal=digits.charAt(0)+\".\"+trailingDigits;if(this.isNegative())return\"-\"+digitsWithDecimal+expStr;return digitsWithDecimal+expStr;},abs:function abs(){if(this.isNaN())return DD.NaN;if(this.isNegative())return this.negate();return new DD(this);},isPositive:function isPositive(){return this.hi>0.0||this.hi===0.0&&this.lo>0.0;},lt:function lt(y){return this.hi<y.hi||this.hi===y.hi&&this.lo<y.lo;},add:function add(){if(arguments[0]instanceof DD){var y=arguments[0];return DD.copy(this).selfAdd(y);}else if(typeof arguments[0]===\"number\"){var _y8=arguments[0];return DD.copy(this).selfAdd(_y8);}},init:function init(){if(arguments.length===1){if(typeof arguments[0]===\"number\"){var x=arguments[0];this.hi=x;this.lo=0.0;}else if(arguments[0]instanceof DD){var dd=arguments[0];this.hi=dd.hi;this.lo=dd.lo;}}else if(arguments.length===2){var hi=arguments[0],lo=arguments[1];this.hi=hi;this.lo=lo;}},gt:function gt(y){return this.hi>y.hi||this.hi===y.hi&&this.lo>y.lo;},isNegative:function isNegative(){return this.hi<0.0||this.hi===0.0&&this.lo<0.0;},trunc:function trunc(){if(this.isNaN())return DD.NaN;if(this.isPositive())return this.floor();else return this.ceil();},signum:function signum(){if(this.hi>0)return 1;if(this.hi<0)return-1;if(this.lo>0)return 1;if(this.lo<0)return-1;return 0;},interfaces_:function interfaces_(){return[Serializable,Comparable,Clonable];},getClass:function getClass(){return DD;}});DD.sqr=function(x){return DD.valueOf(x).selfMultiply(x);};DD.valueOf=function(){if(typeof arguments[0]===\"string\"){var str=arguments[0];return DD.parse(str);}else if(typeof arguments[0]===\"number\"){var x=arguments[0];return new DD(x);}};DD.sqrt=function(x){return DD.valueOf(x).sqrt();};DD.parse=function(str){var i=0;var strlen=str.length;while(Character.isWhitespace(str.charAt(i))){i++;}var isNegative=false;if(i<strlen){var signCh=str.charAt(i);if(signCh==='-'||signCh==='+'){i++;if(signCh==='-')isNegative=true;}}var val=new DD();var numDigits=0;var numBeforeDec=0;var exp=0;while(true){if(i>=strlen)break;var ch=str.charAt(i);i++;if(Character.isDigit(ch)){var d=ch-'0';val.selfMultiply(DD.TEN);val.selfAdd(d);numDigits++;continue;}if(ch==='.'){numBeforeDec=numDigits;continue;}if(ch==='e'||ch==='E'){var expStr=str.substring(i);try{exp=Integer.parseInt(expStr);}catch(ex){if(ex instanceof NumberFormatException){throw new NumberFormatException(\"Invalid exponent \"+expStr+\" in string \"+str);}else throw ex;}finally{}break;}throw new NumberFormatException(\"Unexpected character '\"+ch+\"' at position \"+i+\" in string \"+str);}var val2=val;var numDecPlaces=numDigits-numBeforeDec-exp;if(numDecPlaces===0){val2=val;}else if(numDecPlaces>0){var scale=DD.TEN.pow(numDecPlaces);val2=val.divide(scale);}else if(numDecPlaces<0){var scale=DD.TEN.pow(-numDecPlaces);val2=val.multiply(scale);}if(isNegative){return val2.negate();}return val2;};DD.createNaN=function(){return new DD(Double.NaN,Double.NaN);};DD.copy=function(dd){return new DD(dd);};DD.magnitude=function(x){var xAbs=Math.abs(x);var xLog10=Math.log(xAbs)/Math.log(10);var xMag=Math.trunc(Math.floor(xLog10));var xApprox=Math.pow(10,xMag);if(xApprox*10<=xAbs)xMag+=1;return xMag;};DD.stringOfChar=function(ch,len){var buf=new StringBuffer();for(var i=0;i<len;i++){buf.append(ch);}return buf.toString();};DD.PI=new DD(3.141592653589793116e+00,1.224646799147353207e-16);DD.TWO_PI=new DD(6.283185307179586232e+00,2.449293598294706414e-16);DD.PI_2=new DD(1.570796326794896558e+00,6.123233995736766036e-17);DD.E=new DD(2.718281828459045091e+00,1.445646891729250158e-16);DD.NaN=new DD(Double.NaN,Double.NaN);DD.EPS=1.23259516440783e-32;DD.SPLIT=134217729.0;DD.MAX_PRINT_DIGITS=32;DD.TEN=DD.valueOf(10.0);DD.ONE=DD.valueOf(1.0);DD.SCI_NOT_EXPONENT_CHAR=\"E\";DD.SCI_NOT_ZERO=\"0.0E0\";function CGAlgorithmsDD(){}extend(CGAlgorithmsDD.prototype,{interfaces_:function interfaces_(){return[];},getClass:function getClass(){return CGAlgorithmsDD;}});CGAlgorithmsDD.orientationIndex=function(p1,p2,q){var index=CGAlgorithmsDD.orientationIndexFilter(p1,p2,q);if(index<=1)return index;var dx1=DD.valueOf(p2.x).selfAdd(-p1.x);var dy1=DD.valueOf(p2.y).selfAdd(-p1.y);var dx2=DD.valueOf(q.x).selfAdd(-p2.x);var dy2=DD.valueOf(q.y).selfAdd(-p2.y);return dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum();};CGAlgorithmsDD.signOfDet2x2=function(x1,y1,x2,y2){var det=x1.multiply(y2).selfSubtract(y1.multiply(x2));return det.signum();};CGAlgorithmsDD.intersection=function(p1,p2,q1,q2){var denom1=DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p2.x).selfSubtract(p1.x));var denom2=DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p2.y).selfSubtract(p1.y));var denom=denom1.subtract(denom2);var numx1=DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));var numx2=DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));var numx=numx1.subtract(numx2);var fracP=numx.selfDivide(denom).doubleValue();var x=DD.valueOf(p1.x).selfAdd(DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(fracP)).doubleValue();var numy1=DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));var numy2=DD.valueOf(p2.y).selfSubtract(p1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));var numy=numy1.subtract(numy2);var fracQ=numy.selfDivide(denom).doubleValue();var y=DD.valueOf(q1.y).selfAdd(DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(fracQ)).doubleValue();return new Coordinate(x,y);};CGAlgorithmsDD.orientationIndexFilter=function(pa,pb,pc){var detsum=null;var detleft=(pa.x-pc.x)*(pb.y-pc.y);var detright=(pa.y-pc.y)*(pb.x-pc.x);var det=detleft-detright;if(detleft>0.0){if(detright<=0.0){return CGAlgorithmsDD.signum(det);}else{detsum=detleft+detright;}}else if(detleft<0.0){if(detright>=0.0){return CGAlgorithmsDD.signum(det);}else{detsum=-detleft-detright;}}else{return CGAlgorithmsDD.signum(det);}var errbound=CGAlgorithmsDD.DP_SAFE_EPSILON*detsum;if(det>=errbound||-det>=errbound){return CGAlgorithmsDD.signum(det);}return 2;};CGAlgorithmsDD.signum=function(x){if(x>0)return 1;if(x<0)return-1;return 0;};CGAlgorithmsDD.DP_SAFE_EPSILON=1e-15;function CoordinateSequence(){}extend(CoordinateSequence.prototype,{setOrdinate:function setOrdinate(index,ordinateIndex,value){},size:function size(){},getOrdinate:function getOrdinate(index,ordinateIndex){},getCoordinate:function getCoordinate(){if(arguments.length===1){var i=arguments[0];}else if(arguments.length===2){var index=arguments[0],coord=arguments[1];}},getCoordinateCopy:function getCoordinateCopy(i){},getDimension:function getDimension(){},getX:function getX(index){},clone:function clone(){},expandEnvelope:function expandEnvelope(env){},copy:function copy(){},getY:function getY(index){},toCoordinateArray:function toCoordinateArray(){},interfaces_:function interfaces_(){return[Clonable];},getClass:function getClass(){return CoordinateSequence;}});CoordinateSequence.X=0;CoordinateSequence.Y=1;CoordinateSequence.Z=2;CoordinateSequence.M=3;function System(){}System.arraycopy=function(src,srcPos,dest,destPos,len){var c=0;for(var i=srcPos;i<srcPos+len;i++){dest[destPos+c]=src[i];c++;}};System.getProperty=function(name){return{'line.separator':'\\n'}[name];};function HCoordinate(){this.x=null;this.y=null;this.w=null;if(arguments.length===0){this.x=0.0;this.y=0.0;this.w=1.0;}else if(arguments.length===1){var p=arguments[0];this.x=p.x;this.y=p.y;this.w=1.0;}else if(arguments.length===2){if(typeof arguments[0]===\"number\"&&typeof arguments[1]===\"number\"){var _x=arguments[0],_y=arguments[1];this.x=_x;this.y=_y;this.w=1.0;}else if(arguments[0]instanceof HCoordinate&&arguments[1]instanceof HCoordinate){var p1=arguments[0],p2=arguments[1];this.x=p1.y*p2.w-p2.y*p1.w;this.y=p2.x*p1.w-p1.x*p2.w;this.w=p1.x*p2.y-p2.x*p1.y;}else if(arguments[0]instanceof Coordinate&&arguments[1]instanceof Coordinate){var _p=arguments[0],_p2=arguments[1];this.x=_p.y-_p2.y;this.y=_p2.x-_p.x;this.w=_p.x*_p2.y-_p2.x*_p.y;}}else if(arguments.length===3){var _x2=arguments[0],_y2=arguments[1],_w=arguments[2];this.x=_x2;this.y=_y2;this.w=_w;}else if(arguments.length===4){var _p3=arguments[0],_p4=arguments[1],q1=arguments[2],q2=arguments[3];var px=_p3.y-_p4.y;var py=_p4.x-_p3.x;var pw=_p3.x*_p4.y-_p4.x*_p3.y;var qx=q1.y-q2.y;var qy=q2.x-q1.x;var qw=q1.x*q2.y-q2.x*q1.y;this.x=py*qw-qy*pw;this.y=qx*pw-px*qw;this.w=px*qy-qx*py;}}extend(HCoordinate.prototype,{getY:function getY(){var a=this.y/this.w;if(Double.isNaN(a)||Double.isInfinite(a)){throw new NotRepresentableException();}return a;},getX:function getX(){var a=this.x/this.w;if(Double.isNaN(a)||Double.isInfinite(a)){throw new NotRepresentableException();}return a;},getCoordinate:function getCoordinate(){var p=new Coordinate();p.x=this.getX();p.y=this.getY();return p;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return HCoordinate;}});HCoordinate.intersection=function(p1,p2,q1,q2){var px=p1.y-p2.y;var py=p2.x-p1.x;var pw=p1.x*p2.y-p2.x*p1.y;var qx=q1.y-q2.y;var qy=q2.x-q1.x;var qw=q1.x*q2.y-q2.x*q1.y;var x=py*qw-qy*pw;var y=qx*pw-px*qw;var w=px*qy-qx*py;var xInt=x/w;var yInt=y/w;if(Double.isNaN(xInt)||Double.isInfinite(xInt)||Double.isNaN(yInt)||Double.isInfinite(yInt)){throw new NotRepresentableException();}return new Coordinate(xInt,yInt);};function CoordinateSequenceFactory(){}extend(CoordinateSequenceFactory.prototype,{create:function create(){if(arguments.length===1){if(arguments[0]instanceof Array){var coordinates=arguments[0];}else if(hasInterface(arguments[0],CoordinateSequence)){var coordSeq=arguments[0];}}else if(arguments.length===2){var size=arguments[0],dimension=arguments[1];}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return CoordinateSequenceFactory;}});function GeometryComponentFilter(){}extend(GeometryComponentFilter.prototype,{filter:function filter(geom){},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return GeometryComponentFilter;}});function Geometry(){this.envelope=null;this.factory=null;this.SRID=null;this.userData=null;var factory=arguments[0];this.factory=factory;this.SRID=factory.getSRID();}extend(Geometry.prototype,{isGeometryCollection:function isGeometryCollection(){return this.getSortIndex()===Geometry.SORTINDEX_GEOMETRYCOLLECTION;},getFactory:function getFactory(){return this.factory;},getGeometryN:function getGeometryN(n){return this;},getArea:function getArea(){return 0.0;},isRectangle:function isRectangle(){return false;},equals:function equals(){if(arguments.length===1){if(arguments[0]instanceof Geometry){var _g=arguments[0];if(_g===null)return false;return this.equalsTopo(_g);}else if(arguments[0]instanceof Object){var o=arguments[0];if(!(o instanceof Geometry))return false;var g=o;return this.equalsExact(g);}}},equalsExact:function equalsExact(other){return this===other||this.equalsExact(other,0);},geometryChanged:function geometryChanged(){this.apply(Geometry.geometryChangedFilter);},geometryChangedAction:function geometryChangedAction(){this.envelope=null;},equalsNorm:function equalsNorm(g){if(g===null)return false;return this.norm().equalsExact(g.norm());},getLength:function getLength(){return 0.0;},getNumGeometries:function getNumGeometries(){return 1;},compareTo:function compareTo(){if(arguments.length===1){var o=arguments[0];var other=o;if(this.getSortIndex()!==other.getSortIndex()){return this.getSortIndex()-other.getSortIndex();}if(this.isEmpty()&&other.isEmpty()){return 0;}if(this.isEmpty()){return-1;}if(other.isEmpty()){return 1;}return this.compareToSameClass(o);}else if(arguments.length===2){var _o=arguments[0],comp=arguments[1];var other=_o;if(this.getSortIndex()!==other.getSortIndex()){return this.getSortIndex()-other.getSortIndex();}if(this.isEmpty()&&other.isEmpty()){return 0;}if(this.isEmpty()){return-1;}if(other.isEmpty()){return 1;}return this.compareToSameClass(_o,comp);}},getUserData:function getUserData(){return this.userData;},getSRID:function getSRID(){return this.SRID;},getEnvelope:function getEnvelope(){return this.getFactory().toGeometry(this.getEnvelopeInternal());},checkNotGeometryCollection:function checkNotGeometryCollection(g){if(g.getSortIndex()===Geometry.SORTINDEX_GEOMETRYCOLLECTION){throw new IllegalArgumentException(\"This method does not support GeometryCollection arguments\");}},equal:function equal(a,b,tolerance){if(tolerance===0){return a.equals(b);}return a.distance(b)<=tolerance;},norm:function norm(){var copy=this.copy();copy.normalize();return copy;},getPrecisionModel:function getPrecisionModel(){return this.factory.getPrecisionModel();},getEnvelopeInternal:function getEnvelopeInternal(){if(this.envelope===null){this.envelope=this.computeEnvelopeInternal();}return new Envelope(this.envelope);},setSRID:function setSRID(SRID){this.SRID=SRID;},setUserData:function setUserData(userData){this.userData=userData;},compare:function compare(a,b){var i=a.iterator();var j=b.iterator();while(i.hasNext()&&j.hasNext()){var aElement=i.next();var bElement=j.next();var comparison=aElement.compareTo(bElement);if(comparison!==0){return comparison;}}if(i.hasNext()){return 1;}if(j.hasNext()){return-1;}return 0;},hashCode:function hashCode(){return this.getEnvelopeInternal().hashCode();},isGeometryCollectionOrDerived:function isGeometryCollectionOrDerived(){if(this.getSortIndex()===Geometry.SORTINDEX_GEOMETRYCOLLECTION||this.getSortIndex()===Geometry.SORTINDEX_MULTIPOINT||this.getSortIndex()===Geometry.SORTINDEX_MULTILINESTRING||this.getSortIndex()===Geometry.SORTINDEX_MULTIPOLYGON){return true;}return false;},interfaces_:function interfaces_(){return[Clonable,Comparable,Serializable];},getClass:function getClass(){return Geometry;}});Geometry.hasNonEmptyElements=function(geometries){for(var i=0;i<geometries.length;i++){if(!geometries[i].isEmpty()){return true;}}return false;};Geometry.hasNullElements=function(array){for(var i=0;i<array.length;i++){if(array[i]===null){return true;}}return false;};Geometry.serialVersionUID=8763622679187376702;Geometry.SORTINDEX_POINT=0;Geometry.SORTINDEX_MULTIPOINT=1;Geometry.SORTINDEX_LINESTRING=2;Geometry.SORTINDEX_LINEARRING=3;Geometry.SORTINDEX_MULTILINESTRING=4;Geometry.SORTINDEX_POLYGON=5;Geometry.SORTINDEX_MULTIPOLYGON=6;Geometry.SORTINDEX_GEOMETRYCOLLECTION=7;Geometry.geometryChangedFilter={interfaces_:function interfaces_(){return[GeometryComponentFilter];},filter:function filter(geom){geom.geometryChangedAction();}};function CoordinateFilter(){}extend(CoordinateFilter.prototype,{filter:function filter(coord){},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return CoordinateFilter;}});function BoundaryNodeRule(){}extend(BoundaryNodeRule.prototype,{isInBoundary:function isInBoundary(boundaryCount){},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return BoundaryNodeRule;}});function Mod2BoundaryNodeRule(){}extend(Mod2BoundaryNodeRule.prototype,{isInBoundary:function isInBoundary(boundaryCount){return boundaryCount%2===1;},interfaces_:function interfaces_(){return[BoundaryNodeRule];},getClass:function getClass(){return Mod2BoundaryNodeRule;}});function EndPointBoundaryNodeRule(){}extend(EndPointBoundaryNodeRule.prototype,{isInBoundary:function isInBoundary(boundaryCount){return boundaryCount>0;},interfaces_:function interfaces_(){return[BoundaryNodeRule];},getClass:function getClass(){return EndPointBoundaryNodeRule;}});function MultiValentEndPointBoundaryNodeRule(){}extend(MultiValentEndPointBoundaryNodeRule.prototype,{isInBoundary:function isInBoundary(boundaryCount){return boundaryCount>1;},interfaces_:function interfaces_(){return[BoundaryNodeRule];},getClass:function getClass(){return MultiValentEndPointBoundaryNodeRule;}});function MonoValentEndPointBoundaryNodeRule(){}extend(MonoValentEndPointBoundaryNodeRule.prototype,{isInBoundary:function isInBoundary(boundaryCount){return boundaryCount===1;},interfaces_:function interfaces_(){return[BoundaryNodeRule];},getClass:function getClass(){return MonoValentEndPointBoundaryNodeRule;}});BoundaryNodeRule.Mod2BoundaryNodeRule=Mod2BoundaryNodeRule;BoundaryNodeRule.EndPointBoundaryNodeRule=EndPointBoundaryNodeRule;BoundaryNodeRule.MultiValentEndPointBoundaryNodeRule=MultiValentEndPointBoundaryNodeRule;BoundaryNodeRule.MonoValentEndPointBoundaryNodeRule=MonoValentEndPointBoundaryNodeRule;BoundaryNodeRule.MOD2_BOUNDARY_RULE=new Mod2BoundaryNodeRule();BoundaryNodeRule.ENDPOINT_BOUNDARY_RULE=new EndPointBoundaryNodeRule();BoundaryNodeRule.MULTIVALENT_ENDPOINT_BOUNDARY_RULE=new MultiValentEndPointBoundaryNodeRule();BoundaryNodeRule.MONOVALENT_ENDPOINT_BOUNDARY_RULE=new MonoValentEndPointBoundaryNodeRule();BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE=BoundaryNodeRule.MOD2_BOUNDARY_RULE;function CoordinateArrays(){}extend(CoordinateArrays.prototype,{interfaces_:function interfaces_(){return[];},getClass:function getClass(){return CoordinateArrays;}});CoordinateArrays.isRing=function(pts){if(pts.length<4)return false;if(!pts[0].equals2D(pts[pts.length-1]))return false;return true;};CoordinateArrays.ptNotInList=function(testPts,pts){for(var i=0;i<testPts.length;i++){var testPt=testPts[i];if(CoordinateArrays.indexOf(testPt,pts)<0)return testPt;}return null;};CoordinateArrays.scroll=function(coordinates,firstCoordinate){var i=CoordinateArrays.indexOf(firstCoordinate,coordinates);if(i<0)return null;var newCoordinates=new Array(coordinates.length).fill(null);System.arraycopy(coordinates,i,newCoordinates,0,coordinates.length-i);System.arraycopy(coordinates,0,newCoordinates,coordinates.length-i,i);System.arraycopy(newCoordinates,0,coordinates,0,coordinates.length);};CoordinateArrays.equals=function(){if(arguments.length===2){var coord1=arguments[0],coord2=arguments[1];if(coord1===coord2)return true;if(coord1===null||coord2===null)return false;if(coord1.length!==coord2.length)return false;for(var i=0;i<coord1.length;i++){if(!coord1[i].equals(coord2[i]))return false;}return true;}else if(arguments.length===3){var _coord=arguments[0],_coord2=arguments[1],coordinateComparator=arguments[2];if(_coord===_coord2)return true;if(_coord===null||_coord2===null)return false;if(_coord.length!==_coord2.length)return false;for(var i=0;i<_coord.length;i++){if(coordinateComparator.compare(_coord[i],_coord2[i])!==0)return false;}return true;}};CoordinateArrays.intersection=function(coordinates,env){var coordList=new CoordinateList();for(var i=0;i<coordinates.length;i++){if(env.intersects(coordinates[i]))coordList.add(coordinates[i],true);}return coordList.toCoordinateArray();};CoordinateArrays.hasRepeatedPoints=function(coord){for(var i=1;i<coord.length;i++){if(coord[i-1].equals(coord[i])){return true;}}return false;};CoordinateArrays.removeRepeatedPoints=function(coord){if(!CoordinateArrays.hasRepeatedPoints(coord))return coord;var coordList=new CoordinateList(coord,false);return coordList.toCoordinateArray();};CoordinateArrays.reverse=function(coord){var last=coord.length-1;var mid=Math.trunc(last/2);for(var i=0;i<=mid;i++){var tmp=coord[i];coord[i]=coord[last-i];coord[last-i]=tmp;}};CoordinateArrays.removeNull=function(coord){var nonNull=0;for(var i=0;i<coord.length;i++){if(coord[i]!==null)nonNull++;}var newCoord=new Array(nonNull).fill(null);if(nonNull===0)return newCoord;var j=0;for(var i=0;i<coord.length;i++){if(coord[i]!==null)newCoord[j++]=coord[i];}return newCoord;};CoordinateArrays.copyDeep=function(){if(arguments.length===1){var coordinates=arguments[0];var copy=new Array(coordinates.length).fill(null);for(var i=0;i<coordinates.length;i++){copy[i]=new Coordinate(coordinates[i]);}return copy;}else if(arguments.length===5){var src=arguments[0],srcStart=arguments[1],dest=arguments[2],destStart=arguments[3],length=arguments[4];for(var i=0;i<length;i++){dest[destStart+i]=new Coordinate(src[srcStart+i]);}}};CoordinateArrays.isEqualReversed=function(pts1,pts2){for(var i=0;i<pts1.length;i++){var p1=pts1[i];var p2=pts2[pts1.length-i-1];if(p1.compareTo(p2)!==0)return false;}return true;};CoordinateArrays.envelope=function(coordinates){var env=new Envelope();for(var i=0;i<coordinates.length;i++){env.expandToInclude(coordinates[i]);}return env;};CoordinateArrays.toCoordinateArray=function(coordList){return coordList.toArray(CoordinateArrays.coordArrayType);};CoordinateArrays.atLeastNCoordinatesOrNothing=function(n,c){return c.length>=n?c:[];};CoordinateArrays.indexOf=function(coordinate,coordinates){for(var i=0;i<coordinates.length;i++){if(coordinate.equals(coordinates[i])){return i;}}return-1;};CoordinateArrays.increasingDirection=function(pts){for(var i=0;i<Math.trunc(pts.length/2);i++){var j=pts.length-1-i;var comp=pts[i].compareTo(pts[j]);if(comp!==0)return comp;}return 1;};CoordinateArrays.compare=function(pts1,pts2){var i=0;while(i<pts1.length&&i<pts2.length){var compare=pts1[i].compareTo(pts2[i]);if(compare!==0)return compare;i++;}if(i<pts2.length)return-1;if(i<pts1.length)return 1;return 0;};CoordinateArrays.minCoordinate=function(coordinates){var minCoord=null;for(var i=0;i<coordinates.length;i++){if(minCoord===null||minCoord.compareTo(coordinates[i])>0){minCoord=coordinates[i];}}return minCoord;};CoordinateArrays.extract=function(pts,start,end){start=MathUtil.clamp(start,0,pts.length);end=MathUtil.clamp(end,-1,pts.length);var npts=end-start+1;if(end<0)npts=0;if(start>=pts.length)npts=0;if(end<start)npts=0;var extractPts=new Array(npts).fill(null);if(npts===0)return extractPts;var iPts=0;for(var i=start;i<=end;i++){extractPts[iPts++]=pts[i];}return extractPts;};function ForwardComparator(){}extend(ForwardComparator.prototype,{compare:function compare(o1,o2){var pts1=o1;var pts2=o2;return CoordinateArrays.compare(pts1,pts2);},interfaces_:function interfaces_(){return[Comparator];},getClass:function getClass(){return ForwardComparator;}});function BidirectionalComparator(){}extend(BidirectionalComparator.prototype,{compare:function compare(o1,o2){var pts1=o1;var pts2=o2;if(pts1.length<pts2.length)return-1;if(pts1.length>pts2.length)return 1;if(pts1.length===0)return 0;var forwardComp=CoordinateArrays.compare(pts1,pts2);var isEqualRev=CoordinateArrays.isEqualReversed(pts1,pts2);if(isEqualRev)return 0;return forwardComp;},OLDcompare:function OLDcompare(o1,o2){var pts1=o1;var pts2=o2;if(pts1.length<pts2.length)return-1;if(pts1.length>pts2.length)return 1;if(pts1.length===0)return 0;var dir1=CoordinateArrays.increasingDirection(pts1);var dir2=CoordinateArrays.increasingDirection(pts2);var i1=dir1>0?0:pts1.length-1;var i2=dir2>0?0:pts1.length-1;for(var i=0;i<pts1.length;i++){var comparePt=pts1[i1].compareTo(pts2[i2]);if(comparePt!==0)return comparePt;i1+=dir1;i2+=dir2;}return 0;},interfaces_:function interfaces_(){return[Comparator];},getClass:function getClass(){return BidirectionalComparator;}});CoordinateArrays.ForwardComparator=ForwardComparator;CoordinateArrays.BidirectionalComparator=BidirectionalComparator;CoordinateArrays.coordArrayType=new Array(0).fill(null);/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Map.html\n *\n * @constructor\n * @private\n */function Map$1(){}/**\n * Returns the value to which the specified key is mapped, or null if this map\n * contains no mapping for the key.\n * @param {Object} key\n * @return {Object}\n */Map$1.prototype.get=function(){};/**\n * Associates the specified value with the specified key in this map (optional\n * operation).\n * @param {Object} key\n * @param {Object} value\n * @return {Object}\n */Map$1.prototype.put=function(){};/**\n * Returns the number of key-value mappings in this map.\n * @return {number}\n */Map$1.prototype.size=function(){};/**\n * Returns a Collection view of the values contained in this map.\n * @return {javascript.util.Collection}\n */Map$1.prototype.values=function(){};/**\n * Returns a {@link Set} view of the mappings contained in this map.\n * The set is backed by the map, so changes to the map are\n * reflected in the set, and vice-versa.  If the map is modified\n * while an iteration over the set is in progress (except through\n * the iterator's own <tt>remove</tt> operation, or through the\n * <tt>setValue</tt> operation on a map entry returned by the\n * iterator) the results of the iteration are undefined.  The set\n * supports element removal, which removes the corresponding\n * mapping from the map, via the <tt>Iterator.remove</tt>,\n * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n * <tt>clear</tt> operations.  It does not support the\n * <tt>add</tt> or <tt>addAll</tt> operations.\n *\n * @return {Set} a set view of the mappings contained in this map\n */Map$1.prototype.entrySet=function(){};/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedMap.html\n *\n * @extends {Map}\n * @constructor\n * @private\n */function SortedMap(){}SortedMap.prototype=new Map$1();/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Set.html\n *\n * @extends {Collection}\n * @constructor\n * @private\n */function Set(){}Set.prototype=new Collection();/**\n * Returns true if this set contains the specified element. More formally,\n * returns true if and only if this set contains an element e such that (o==null ?\n * e==null : o.equals(e)).\n * @param {Object} e\n * @return {boolean}\n */Set.prototype.contains=function(){};/**\n * @see http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html\n *\n * @extends {javascript.util.Set}\n * @constructor\n * @private\n */function HashSet(){/**\n   * @type {Array}\n   * @private\n  */this.array_=[];if(arguments[0]instanceof Collection){this.addAll(arguments[0]);}}HashSet.prototype=new Set();/**\n * @override\n */HashSet.prototype.contains=function(o){for(var i=0,len=this.array_.length;i<len;i++){var e=this.array_[i];if(e===o){return true;}}return false;};/**\n * @override\n */HashSet.prototype.add=function(o){if(this.contains(o)){return false;}this.array_.push(o);return true;};/**\n * @override\n */HashSet.prototype.addAll=function(c){for(var i=c.iterator();i.hasNext();){this.add(i.next());}return true;};/**\n * @override\n */HashSet.prototype.remove=function(o){throw new javascript.util.OperationNotSupported();};/**\n * @override\n */HashSet.prototype.size=function(){return this.array_.length;};/**\n * @override\n */HashSet.prototype.isEmpty=function(){return this.array_.length===0;};/**\n * @override\n */HashSet.prototype.toArray=function(){var array=[];for(var i=0,len=this.array_.length;i<len;i++){array.push(this.array_[i]);}return array;};/**\n * @override\n */HashSet.prototype.iterator=function(){return new Iterator_$1(this);};/**\n * @extends {Iterator}\n * @param {HashSet} hashSet\n * @constructor\n * @private\n */var Iterator_$1=function Iterator_(hashSet){/**\n   * @type {HashSet}\n   * @private\n   */this.hashSet_=hashSet;/**\n   * @type {number}\n   * @private\n   */this.position_=0;};/**\n * @override\n */Iterator_$1.prototype.next=function(){if(this.position_===this.hashSet_.size()){throw new NoSuchElementException();}return this.hashSet_.array_[this.position_++];};/**\n * @override\n */Iterator_$1.prototype.hasNext=function(){if(this.position_<this.hashSet_.size()){return true;}else{return false;}};/**\n * @override\n */Iterator_$1.prototype.remove=function(){throw new OperationNotSupported();};var BLACK=0;var RED=1;function colorOf(p){return p==null?BLACK:p.color;}function parentOf(p){return p==null?null:p.parent;}function setColor(p,c){if(p!==null)p.color=c;}function leftOf(p){return p==null?null:p.left;}function rightOf(p){return p==null?null:p.right;}/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeMap.html\n *\n * @extends {SortedMap}\n * @constructor\n * @private\n */function TreeMap(){/**\n   * @type {Object}\n   * @private\n   */this.root_=null;/**\n   * @type {number}\n   * @private\n  */this.size_=0;}TreeMap.prototype=new SortedMap();/**\n * @override\n */TreeMap.prototype.get=function(key){var p=this.root_;while(p!==null){var cmp=key['compareTo'](p.key);if(cmp<0){p=p.left;}else if(cmp>0){p=p.right;}else{return p.value;}}return null;};/**\n * @override\n */TreeMap.prototype.put=function(key,value){if(this.root_===null){this.root_={key:key,value:value,left:null,right:null,parent:null,color:BLACK,getValue:function getValue(){return this.value;},getKey:function getKey(){return this.key;}};this.size_=1;return null;}var t=this.root_,parent,cmp;do{parent=t;cmp=key['compareTo'](t.key);if(cmp<0){t=t.left;}else if(cmp>0){t=t.right;}else{var oldValue=t.value;t.value=value;return oldValue;}}while(t!==null);var e={key:key,left:null,right:null,value:value,parent:parent,color:BLACK,getValue:function getValue(){return this.value;},getKey:function getKey(){return this.key;}};if(cmp<0){parent.left=e;}else{parent.right=e;}this.fixAfterInsertion(e);this.size_++;return null;};/**\n * @param {Object} x\n */TreeMap.prototype.fixAfterInsertion=function(x){x.color=RED;while(x!=null&&x!=this.root_&&x.parent.color==RED){if(parentOf(x)==leftOf(parentOf(parentOf(x)))){var y=rightOf(parentOf(parentOf(x)));if(colorOf(y)==RED){setColor(parentOf(x),BLACK);setColor(y,BLACK);setColor(parentOf(parentOf(x)),RED);x=parentOf(parentOf(x));}else{if(x==rightOf(parentOf(x))){x=parentOf(x);this.rotateLeft(x);}setColor(parentOf(x),BLACK);setColor(parentOf(parentOf(x)),RED);this.rotateRight(parentOf(parentOf(x)));}}else{var y=leftOf(parentOf(parentOf(x)));if(colorOf(y)==RED){setColor(parentOf(x),BLACK);setColor(y,BLACK);setColor(parentOf(parentOf(x)),RED);x=parentOf(parentOf(x));}else{if(x==leftOf(parentOf(x))){x=parentOf(x);this.rotateRight(x);}setColor(parentOf(x),BLACK);setColor(parentOf(parentOf(x)),RED);this.rotateLeft(parentOf(parentOf(x)));}}}this.root_.color=BLACK;};/**\n * @override\n */TreeMap.prototype.values=function(){var arrayList=new ArrayList();var p=this.getFirstEntry();if(p!==null){arrayList.add(p.value);while((p=TreeMap.successor(p))!==null){arrayList.add(p.value);}}return arrayList;};/**\n * @override\n */TreeMap.prototype.entrySet=function(){var hashSet=new HashSet();var p=this.getFirstEntry();if(p!==null){hashSet.add(p);while((p=TreeMap.successor(p))!==null){hashSet.add(p);}}return hashSet;};/**\n * @param {Object} p\n */TreeMap.prototype.rotateLeft=function(p){if(p!=null){var r=p.right;p.right=r.left;if(r.left!=null)r.left.parent=p;r.parent=p.parent;if(p.parent==null)this.root_=r;else if(p.parent.left==p)p.parent.left=r;else p.parent.right=r;r.left=p;p.parent=r;}};/**\n * @param {Object} p\n */TreeMap.prototype.rotateRight=function(p){if(p!=null){var l=p.left;p.left=l.right;if(l.right!=null)l.right.parent=p;l.parent=p.parent;if(p.parent==null)this.root_=l;else if(p.parent.right==p)p.parent.right=l;else p.parent.left=l;l.right=p;p.parent=l;}};/**\n * @return {Object}\n */TreeMap.prototype.getFirstEntry=function(){var p=this.root_;if(p!=null){while(p.left!=null){p=p.left;}}return p;};/**\n * @param {Object} t\n * @return {Object}\n * @private\n */TreeMap.successor=function(t){if(t===null)return null;else if(t.right!==null){var p=t.right;while(p.left!==null){p=p.left;}return p;}else{var p=t.parent;var ch=t;while(p!==null&&ch===p.right){ch=p;p=p.parent;}return p;}};/**\n * @override\n */TreeMap.prototype.size=function(){return this.size_;};function Lineal(){}extend(Lineal.prototype,{interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Lineal;}});/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedSet.html\n *\n * @extends {Set}\n * @constructor\n * @private\n */function SortedSet(){}SortedSet.prototype=new Set();/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeSet.html\n *\n * @extends {SortedSet}\n * @constructor\n * @private\n */function TreeSet(){/**\n   * @type {Array}\n   * @private\n  */this.array_=[];if(arguments[0]instanceof Collection){this.addAll(arguments[0]);}}TreeSet.prototype=new SortedSet();/**\n * @override\n */TreeSet.prototype.contains=function(o){for(var i=0,len=this.array_.length;i<len;i++){var e=this.array_[i];if(e['compareTo'](o)===0){return true;}}return false;};/**\n * @override\n */TreeSet.prototype.add=function(o){if(this.contains(o)){return false;}for(var i=0,len=this.array_.length;i<len;i++){var e=this.array_[i];if(e['compareTo'](o)===1){this.array_.splice(i,0,o);return true;}}this.array_.push(o);return true;};/**\n * @override\n */TreeSet.prototype.addAll=function(c){for(var i=c.iterator();i.hasNext();){this.add(i.next());}return true;};/**\n * @override\n */TreeSet.prototype.remove=function(e){throw new OperationNotSupported();};/**\n * @override\n */TreeSet.prototype.size=function(){return this.array_.length;};/**\n * @override\n */TreeSet.prototype.isEmpty=function(){return this.array_.length===0;};/**\n * @override\n */TreeSet.prototype.toArray=function(){var array=[];for(var i=0,len=this.array_.length;i<len;i++){array.push(this.array_[i]);}return array;};/**\n * @override\n */TreeSet.prototype.iterator=function(){return new Iterator_$2(this);};/**\n * @extends {javascript.util.Iterator}\n * @param {javascript.util.TreeSet} treeSet\n * @constructor\n * @private\n */var Iterator_$2=function Iterator_(treeSet){/**\n   * @type {javascript.util.TreeSet}\n   * @private\n   */this.treeSet_=treeSet;/**\n   * @type {number}\n   * @private\n   */this.position_=0;};/**\n * @override\n */Iterator_$2.prototype.next=function(){if(this.position_===this.treeSet_.size()){throw new NoSuchElementException();}return this.treeSet_.array_[this.position_++];};/**\n * @override\n */Iterator_$2.prototype.hasNext=function(){if(this.position_<this.treeSet_.size()){return true;}else{return false;}};/**\n * @override\n */Iterator_$2.prototype.remove=function(){throw new OperationNotSupported();};/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Arrays.html\n *\n * @constructor\n * @private\n */function Arrays(){}/**\n */Arrays.sort=function(){var a=arguments[0],i,t,comparator,compare;if(arguments.length===1){compare=function compare(a,b){return a.compareTo(b);};a.sort(compare);return;}else if(arguments.length===2){comparator=arguments[1];compare=function compare(a,b){return comparator['compare'](a,b);};a.sort(compare);}else if(arguments.length===3){t=a.slice(arguments[1],arguments[2]);t.sort();var r=a.slice(0,arguments[1]).concat(t,a.slice(arguments[2],a.length));a.splice(0,a.length);for(i=0;i<r.length;i++){a.push(r[i]);}return;}else if(arguments.length===4){t=a.slice(arguments[1],arguments[2]);comparator=arguments[3];compare=function compare(a,b){return comparator['compare'](a,b);};t.sort(compare);r=a.slice(0,arguments[1]).concat(t,a.slice(arguments[2],a.length));a.splice(0,a.length);for(i=0;i<r.length;i++){a.push(r[i]);}return;}};/**\n * @param {Array} array\n * @return {ArrayList}\n */Arrays.asList=function(array){var arrayList=new ArrayList();for(var i=0,len=array.length;i<len;i++){arrayList.add(array[i]);}return arrayList;};function Dimension(){}extend(Dimension.prototype,{interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Dimension;}});Dimension.toDimensionSymbol=function(dimensionValue){switch(dimensionValue){case Dimension.FALSE:return Dimension.SYM_FALSE;case Dimension.TRUE:return Dimension.SYM_TRUE;case Dimension.DONTCARE:return Dimension.SYM_DONTCARE;case Dimension.P:return Dimension.SYM_P;case Dimension.L:return Dimension.SYM_L;case Dimension.A:return Dimension.SYM_A;}throw new IllegalArgumentException(\"Unknown dimension value: \"+dimensionValue);};Dimension.toDimensionValue=function(dimensionSymbol){switch(Character.toUpperCase(dimensionSymbol)){case Dimension.SYM_FALSE:return Dimension.FALSE;case Dimension.SYM_TRUE:return Dimension.TRUE;case Dimension.SYM_DONTCARE:return Dimension.DONTCARE;case Dimension.SYM_P:return Dimension.P;case Dimension.SYM_L:return Dimension.L;case Dimension.SYM_A:return Dimension.A;}throw new IllegalArgumentException(\"Unknown dimension symbol: \"+dimensionSymbol);};Dimension.P=0;Dimension.L=1;Dimension.A=2;Dimension.FALSE=-1;Dimension.TRUE=-2;Dimension.DONTCARE=-3;Dimension.SYM_FALSE='F';Dimension.SYM_TRUE='T';Dimension.SYM_DONTCARE='*';Dimension.SYM_P='0';Dimension.SYM_L='1';Dimension.SYM_A='2';function GeometryFilter(){}extend(GeometryFilter.prototype,{filter:function filter(geom){},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return GeometryFilter;}});function CoordinateSequenceFilter(){}extend(CoordinateSequenceFilter.prototype,{filter:function filter(seq,i){},isDone:function isDone(){},isGeometryChanged:function isGeometryChanged(){},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return CoordinateSequenceFilter;}});function GeometryCollection(){this.geometries=null;var geometries=arguments[0],factory=arguments[1];Geometry.call(this,factory);if(geometries===null){geometries=[];}if(Geometry.hasNullElements(geometries)){throw new IllegalArgumentException(\"geometries must not contain null elements\");}this.geometries=geometries;}inherits(GeometryCollection,Geometry);extend(GeometryCollection.prototype,{computeEnvelopeInternal:function computeEnvelopeInternal(){var envelope=new Envelope();for(var i=0;i<this.geometries.length;i++){envelope.expandToInclude(this.geometries[i].getEnvelopeInternal());}return envelope;},getGeometryN:function getGeometryN(n){return this.geometries[n];},getSortIndex:function getSortIndex(){return Geometry.SORTINDEX_GEOMETRYCOLLECTION;},getCoordinates:function getCoordinates(){var coordinates=new Array(this.getNumPoints()).fill(null);var k=-1;for(var i=0;i<this.geometries.length;i++){var childCoordinates=this.geometries[i].getCoordinates();for(var j=0;j<childCoordinates.length;j++){k++;coordinates[k]=childCoordinates[j];}}return coordinates;},getArea:function getArea(){var area=0.0;for(var i=0;i<this.geometries.length;i++){area+=this.geometries[i].getArea();}return area;},equalsExact:function equalsExact(){if(arguments.length===2){var other=arguments[0],tolerance=arguments[1];if(!this.isEquivalentClass(other)){return false;}var otherCollection=other;if(this.geometries.length!==otherCollection.geometries.length){return false;}for(var i=0;i<this.geometries.length;i++){if(!this.geometries[i].equalsExact(otherCollection.geometries[i],tolerance)){return false;}}return true;}else return Geometry.prototype.equalsExact.apply(this,arguments);},normalize:function normalize(){for(var i=0;i<this.geometries.length;i++){this.geometries[i].normalize();}Arrays.sort(this.geometries);},getCoordinate:function getCoordinate(){if(this.isEmpty())return null;return this.geometries[0].getCoordinate();},getBoundaryDimension:function getBoundaryDimension(){var dimension=Dimension.FALSE;for(var i=0;i<this.geometries.length;i++){dimension=Math.max(dimension,this.geometries[i].getBoundaryDimension());}return dimension;},getDimension:function getDimension(){var dimension=Dimension.FALSE;for(var i=0;i<this.geometries.length;i++){dimension=Math.max(dimension,this.geometries[i].getDimension());}return dimension;},getLength:function getLength(){var sum=0.0;for(var i=0;i<this.geometries.length;i++){sum+=this.geometries[i].getLength();}return sum;},getNumPoints:function getNumPoints(){var numPoints=0;for(var i=0;i<this.geometries.length;i++){numPoints+=this.geometries[i].getNumPoints();}return numPoints;},getNumGeometries:function getNumGeometries(){return this.geometries.length;},reverse:function reverse(){var n=this.geometries.length;var revGeoms=new Array(n).fill(null);for(var i=0;i<this.geometries.length;i++){revGeoms[i]=this.geometries[i].reverse();}return this.getFactory().createGeometryCollection(revGeoms);},compareToSameClass:function compareToSameClass(){if(arguments.length===1){var o=arguments[0];var theseElements=new TreeSet(Arrays.asList(this.geometries));var otherElements=new TreeSet(Arrays.asList(o.geometries));return this.compare(theseElements,otherElements);}else if(arguments.length===2){var _o=arguments[0],comp=arguments[1];var gc=_o;var n1=this.getNumGeometries();var n2=gc.getNumGeometries();var i=0;while(i<n1&&i<n2){var thisGeom=this.getGeometryN(i);var otherGeom=gc.getGeometryN(i);var holeComp=thisGeom.compareToSameClass(otherGeom,comp);if(holeComp!==0)return holeComp;i++;}if(i<n1)return 1;if(i<n2)return-1;return 0;}},apply:function apply(){if(hasInterface(arguments[0],CoordinateFilter)){var filter=arguments[0];for(var i=0;i<this.geometries.length;i++){this.geometries[i].apply(filter);}}else if(hasInterface(arguments[0],CoordinateSequenceFilter)){var _filter=arguments[0];if(this.geometries.length===0)return null;for(var i=0;i<this.geometries.length;i++){this.geometries[i].apply(_filter);if(_filter.isDone()){break;}}if(_filter.isGeometryChanged())this.geometryChanged();}else if(hasInterface(arguments[0],GeometryFilter)){var _filter2=arguments[0];_filter2.filter(this);for(var i=0;i<this.geometries.length;i++){this.geometries[i].apply(_filter2);}}else if(hasInterface(arguments[0],GeometryComponentFilter)){var _filter3=arguments[0];_filter3.filter(this);for(var i=0;i<this.geometries.length;i++){this.geometries[i].apply(_filter3);}}},getBoundary:function getBoundary(){this.checkNotGeometryCollection(this);Assert.shouldNeverReachHere();return null;},clone:function clone(){var gc=Geometry.prototype.clone.call(this);gc.geometries=new Array(this.geometries.length).fill(null);for(var i=0;i<this.geometries.length;i++){gc.geometries[i]=this.geometries[i].clone();}return gc;},getGeometryType:function getGeometryType(){return\"GeometryCollection\";},copy:function copy(){var geometries=new Array(this.geometries.length).fill(null);for(var i=0;i<geometries.length;i++){geometries[i]=this.geometries[i].copy();}return new GeometryCollection(geometries,this.factory);},isEmpty:function isEmpty(){for(var i=0;i<this.geometries.length;i++){if(!this.geometries[i].isEmpty()){return false;}}return true;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return GeometryCollection;}});GeometryCollection.serialVersionUID=-5694727726395021467;function MultiLineString(){var lineStrings=arguments[0],factory=arguments[1];GeometryCollection.call(this,lineStrings,factory);}inherits(MultiLineString,GeometryCollection);extend(MultiLineString.prototype,{getSortIndex:function getSortIndex(){return Geometry.SORTINDEX_MULTILINESTRING;},equalsExact:function equalsExact(){if(arguments.length===2){var other=arguments[0],tolerance=arguments[1];if(!this.isEquivalentClass(other)){return false;}return GeometryCollection.prototype.equalsExact.call(this,other,tolerance);}else return GeometryCollection.prototype.equalsExact.apply(this,arguments);},getBoundaryDimension:function getBoundaryDimension(){if(this.isClosed()){return Dimension.FALSE;}return 0;},isClosed:function isClosed(){if(this.isEmpty()){return false;}for(var i=0;i<this.geometries.length;i++){if(!this.geometries[i].isClosed()){return false;}}return true;},getDimension:function getDimension(){return 1;},reverse:function reverse(){var nLines=this.geometries.length;var revLines=new Array(nLines).fill(null);for(var i=0;i<this.geometries.length;i++){revLines[nLines-1-i]=this.geometries[i].reverse();}return this.getFactory().createMultiLineString(revLines);},getBoundary:function getBoundary(){return new BoundaryOp(this).getBoundary();},getGeometryType:function getGeometryType(){return\"MultiLineString\";},copy:function copy(){var lineStrings=new Array(this.geometries.length).fill(null);for(var i=0;i<lineStrings.length;i++){lineStrings[i]=this.geometries[i].copy();}return new MultiLineString(lineStrings,this.factory);},interfaces_:function interfaces_(){return[Lineal];},getClass:function getClass(){return MultiLineString;}});MultiLineString.serialVersionUID=8166665132445433741;function BoundaryOp(){this.geom=null;this.geomFact=null;this.bnRule=null;this.endpointMap=null;if(arguments.length===1){var geom=arguments[0];BoundaryOp.call(this,geom,BoundaryNodeRule.MOD2_BOUNDARY_RULE);}else if(arguments.length===2){var _geom=arguments[0],bnRule=arguments[1];this.geom=_geom;this.geomFact=_geom.getFactory();this.bnRule=bnRule;}}extend(BoundaryOp.prototype,{boundaryMultiLineString:function boundaryMultiLineString(mLine){if(this.geom.isEmpty()){return this.getEmptyMultiPoint();}var bdyPts=this.computeBoundaryCoordinates(mLine);if(bdyPts.length===1){return this.geomFact.createPoint(bdyPts[0]);}return this.geomFact.createMultiPointFromCoords(bdyPts);},getBoundary:function getBoundary(){if(this.geom instanceof LineString)return this.boundaryLineString(this.geom);if(this.geom instanceof MultiLineString)return this.boundaryMultiLineString(this.geom);return this.geom.getBoundary();},boundaryLineString:function boundaryLineString(line){if(this.geom.isEmpty()){return this.getEmptyMultiPoint();}if(line.isClosed()){var closedEndpointOnBoundary=this.bnRule.isInBoundary(2);if(closedEndpointOnBoundary){return line.getStartPoint();}else{return this.geomFact.createMultiPoint();}}return this.geomFact.createMultiPoint([line.getStartPoint(),line.getEndPoint()]);},getEmptyMultiPoint:function getEmptyMultiPoint(){return this.geomFact.createMultiPoint();},computeBoundaryCoordinates:function computeBoundaryCoordinates(mLine){var bdyPts=new ArrayList();this.endpointMap=new TreeMap();for(var i=0;i<mLine.getNumGeometries();i++){var line=mLine.getGeometryN(i);if(line.getNumPoints()===0)continue;this.addEndpoint(line.getCoordinateN(0));this.addEndpoint(line.getCoordinateN(line.getNumPoints()-1));}for(var it=this.endpointMap.entrySet().iterator();it.hasNext();){var entry=it.next();var counter=entry.getValue();var valence=counter.count;if(this.bnRule.isInBoundary(valence)){bdyPts.add(entry.getKey());}}return CoordinateArrays.toCoordinateArray(bdyPts);},addEndpoint:function addEndpoint(pt){var counter=this.endpointMap.get(pt);if(counter===null){counter=new Counter();this.endpointMap.put(pt,counter);}counter.count++;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return BoundaryOp;}});BoundaryOp.getBoundary=function(){if(arguments.length===1){var g=arguments[0];var bop=new BoundaryOp(g);return bop.getBoundary();}else if(arguments.length===2){var _g=arguments[0],bnRule=arguments[1];var bop=new BoundaryOp(_g,bnRule);return bop.getBoundary();}};function Counter(){this.count=null;}extend(Counter.prototype,{interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Counter;}});function PrintStream(){}function StringReader(){}function DecimalFormat(){}function ByteArrayOutputStream(){}function IOException(){}function LineNumberReader(){}function StringUtil(){}extend(StringUtil.prototype,{interfaces_:function interfaces_(){return[];},getClass:function getClass(){return StringUtil;}});StringUtil.chars=function(c,n){var ch=new Array(n).fill(null);for(var i=0;i<n;i++){ch[i]=c;}return new String(ch);};StringUtil.getStackTrace=function(){if(arguments.length===1){var t=arguments[0];var os=new ByteArrayOutputStream();var ps=new PrintStream(os);t.printStackTrace(ps);return os.toString();}else if(arguments.length===2){var _t=arguments[0],depth=arguments[1];var stackTrace=\"\";var stringReader=new StringReader(StringUtil.getStackTrace(_t));var lineNumberReader=new LineNumberReader(stringReader);for(var i=0;i<depth;i++){try{stackTrace+=lineNumberReader.readLine()+StringUtil.NEWLINE;}catch(e){if(e instanceof IOException){Assert.shouldNeverReachHere();}else throw e;}finally{}}return stackTrace;}};StringUtil.split=function(s,separator){var separatorlen=separator.length;var tokenList=new ArrayList();var tmpString=\"\"+s;var pos=tmpString.indexOf(separator);while(pos>=0){var token=tmpString.substring(0,pos);tokenList.add(token);tmpString=tmpString.substring(pos+separatorlen);pos=tmpString.indexOf(separator);}if(tmpString.length>0)tokenList.add(tmpString);var res=new Array(tokenList.size()).fill(null);for(var i=0;i<res.length;i++){res[i]=tokenList.get(i);}return res;};StringUtil.toString=function(){if(arguments.length===1){var d=arguments[0];return StringUtil.SIMPLE_ORDINATE_FORMAT.format(d);}};StringUtil.spaces=function(n){return StringUtil.chars(' ',n);};StringUtil.NEWLINE=System.getProperty(\"line.separator\");StringUtil.SIMPLE_ORDINATE_FORMAT=new DecimalFormat(\"0.#\");function CoordinateSequences(){}extend(CoordinateSequences.prototype,{interfaces_:function interfaces_(){return[];},getClass:function getClass(){return CoordinateSequences;}});CoordinateSequences.copyCoord=function(src,srcPos,dest,destPos){var minDim=Math.min(src.getDimension(),dest.getDimension());for(var dim=0;dim<minDim;dim++){dest.setOrdinate(destPos,dim,src.getOrdinate(srcPos,dim));}};CoordinateSequences.isRing=function(seq){var n=seq.size();if(n===0)return true;if(n<=3)return false;return seq.getOrdinate(0,CoordinateSequence.X)===seq.getOrdinate(n-1,CoordinateSequence.X)&&seq.getOrdinate(0,CoordinateSequence.Y)===seq.getOrdinate(n-1,CoordinateSequence.Y);};CoordinateSequences.isEqual=function(cs1,cs2){var cs1Size=cs1.size();var cs2Size=cs2.size();if(cs1Size!==cs2Size)return false;var dim=Math.min(cs1.getDimension(),cs2.getDimension());for(var i=0;i<cs1Size;i++){for(var d=0;d<dim;d++){var v1=cs1.getOrdinate(i,d);var v2=cs2.getOrdinate(i,d);if(cs1.getOrdinate(i,d)===cs2.getOrdinate(i,d))continue;if(Double.isNaN(v1)&&Double.isNaN(v2))continue;return false;}}return true;};CoordinateSequences.extend=function(fact,seq,size){var newseq=fact.create(size,seq.getDimension());var n=seq.size();CoordinateSequences.copy(seq,0,newseq,0,n);if(n>0){for(var i=n;i<size;i++){CoordinateSequences.copy(seq,n-1,newseq,i,1);}}return newseq;};CoordinateSequences.reverse=function(seq){var last=seq.size()-1;var mid=Math.trunc(last/2);for(var i=0;i<=mid;i++){CoordinateSequences.swap(seq,i,last-i);}};CoordinateSequences.swap=function(seq,i,j){if(i===j)return null;for(var dim=0;dim<seq.getDimension();dim++){var tmp=seq.getOrdinate(i,dim);seq.setOrdinate(i,dim,seq.getOrdinate(j,dim));seq.setOrdinate(j,dim,tmp);}};CoordinateSequences.copy=function(src,srcPos,dest,destPos,length){for(var i=0;i<length;i++){CoordinateSequences.copyCoord(src,srcPos+i,dest,destPos+i);}};CoordinateSequences.toString=function(){if(arguments.length===1){var cs=arguments[0];var size=cs.size();if(size===0)return\"()\";var dim=cs.getDimension();var buf=new StringBuffer();buf.append('(');for(var i=0;i<size;i++){if(i>0)buf.append(\" \");for(var d=0;d<dim;d++){if(d>0)buf.append(\",\");buf.append(StringUtil.toString(cs.getOrdinate(i,d)));}}buf.append(')');return buf.toString();}};CoordinateSequences.ensureValidRing=function(fact,seq){var n=seq.size();if(n===0)return seq;if(n<=3)return CoordinateSequences.createClosedRing(fact,seq,4);var isClosed=seq.getOrdinate(0,CoordinateSequence.X)===seq.getOrdinate(n-1,CoordinateSequence.X)&&seq.getOrdinate(0,CoordinateSequence.Y)===seq.getOrdinate(n-1,CoordinateSequence.Y);if(isClosed)return seq;return CoordinateSequences.createClosedRing(fact,seq,n+1);};CoordinateSequences.createClosedRing=function(fact,seq,size){var newseq=fact.create(size,seq.getDimension());var n=seq.size();CoordinateSequences.copy(seq,0,newseq,0,n);for(var i=n;i<size;i++){CoordinateSequences.copy(seq,0,newseq,i,1);}return newseq;};function LineString(){this.points=null;var points=arguments[0],factory=arguments[1];Geometry.call(this,factory);this.init(points);}inherits(LineString,Geometry);extend(LineString.prototype,{computeEnvelopeInternal:function computeEnvelopeInternal(){if(this.isEmpty()){return new Envelope();}return this.points.expandEnvelope(new Envelope());},isRing:function isRing(){return this.isClosed()&&this.isSimple();},getSortIndex:function getSortIndex(){return Geometry.SORTINDEX_LINESTRING;},getCoordinates:function getCoordinates(){return this.points.toCoordinateArray();},equalsExact:function equalsExact(){if(arguments.length===2){var other=arguments[0],tolerance=arguments[1];if(!this.isEquivalentClass(other)){return false;}var otherLineString=other;if(this.points.size()!==otherLineString.points.size()){return false;}for(var i=0;i<this.points.size();i++){if(!this.equal(this.points.getCoordinate(i),otherLineString.points.getCoordinate(i),tolerance)){return false;}}return true;}else return Geometry.prototype.equalsExact.apply(this,arguments);},normalize:function normalize(){for(var i=0;i<Math.trunc(this.points.size()/2);i++){var j=this.points.size()-1-i;if(!this.points.getCoordinate(i).equals(this.points.getCoordinate(j))){if(this.points.getCoordinate(i).compareTo(this.points.getCoordinate(j))>0){CoordinateSequences.reverse(this.points);}return null;}}},getCoordinate:function getCoordinate(){if(this.isEmpty())return null;return this.points.getCoordinate(0);},getBoundaryDimension:function getBoundaryDimension(){if(this.isClosed()){return Dimension.FALSE;}return 0;},isClosed:function isClosed(){if(this.isEmpty()){return false;}return this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints()-1));},getEndPoint:function getEndPoint(){if(this.isEmpty()){return null;}return this.getPointN(this.getNumPoints()-1);},getDimension:function getDimension(){return 1;},getLength:function getLength(){return CGAlgorithms.computeLength(this.points);},getNumPoints:function getNumPoints(){return this.points.size();},reverse:function reverse(){var seq=this.points.copy();CoordinateSequences.reverse(seq);var revLine=this.getFactory().createLineString(seq);return revLine;},compareToSameClass:function compareToSameClass(){if(arguments.length===1){var o=arguments[0];var line=o;var i=0;var j=0;while(i<this.points.size()&&j<line.points.size()){var comparison=this.points.getCoordinate(i).compareTo(line.points.getCoordinate(j));if(comparison!==0){return comparison;}i++;j++;}if(i<this.points.size()){return 1;}if(j<line.points.size()){return-1;}return 0;}else if(arguments.length===2){var _o=arguments[0],comp=arguments[1];var line=_o;return comp.compare(this.points,line.points);}},apply:function apply(){if(hasInterface(arguments[0],CoordinateFilter)){var filter=arguments[0];for(var i=0;i<this.points.size();i++){filter.filter(this.points.getCoordinate(i));}}else if(hasInterface(arguments[0],CoordinateSequenceFilter)){var _filter=arguments[0];if(this.points.size()===0)return null;for(var i=0;i<this.points.size();i++){_filter.filter(this.points,i);if(_filter.isDone())break;}if(_filter.isGeometryChanged())this.geometryChanged();}else if(hasInterface(arguments[0],GeometryFilter)){var _filter2=arguments[0];_filter2.filter(this);}else if(hasInterface(arguments[0],GeometryComponentFilter)){var _filter3=arguments[0];_filter3.filter(this);}},getBoundary:function getBoundary(){return new BoundaryOp(this).getBoundary();},isEquivalentClass:function isEquivalentClass(other){return other instanceof LineString;},clone:function clone(){var ls=Geometry.prototype.clone.call(this);ls.points=this.points.clone();return ls;},getCoordinateN:function getCoordinateN(n){return this.points.getCoordinate(n);},getGeometryType:function getGeometryType(){return\"LineString\";},copy:function copy(){return new LineString(this.points.copy(),this.factory);},getCoordinateSequence:function getCoordinateSequence(){return this.points;},isEmpty:function isEmpty(){return this.points.size()===0;},init:function init(points){if(points===null){points=this.getFactory().getCoordinateSequenceFactory().create([]);}if(points.size()===1){throw new IllegalArgumentException(\"Invalid number of points in LineString (found \"+points.size()+\" - must be 0 or >= 2)\");}this.points=points;},isCoordinate:function isCoordinate(pt){for(var i=0;i<this.points.size();i++){if(this.points.getCoordinate(i).equals(pt)){return true;}}return false;},getStartPoint:function getStartPoint(){if(this.isEmpty()){return null;}return this.getPointN(0);},getPointN:function getPointN(n){return this.getFactory().createPoint(this.points.getCoordinate(n));},interfaces_:function interfaces_(){return[Lineal];},getClass:function getClass(){return LineString;}});LineString.serialVersionUID=3110669828065365560;function Puntal(){}extend(Puntal.prototype,{interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Puntal;}});function Point(){this.coordinates=null;var coordinates=arguments[0],factory=arguments[1];Geometry.call(this,factory);this.init(coordinates);}inherits(Point,Geometry);extend(Point.prototype,{computeEnvelopeInternal:function computeEnvelopeInternal(){if(this.isEmpty()){return new Envelope();}var env=new Envelope();env.expandToInclude(this.coordinates.getX(0),this.coordinates.getY(0));return env;},getSortIndex:function getSortIndex(){return Geometry.SORTINDEX_POINT;},getCoordinates:function getCoordinates(){return this.isEmpty()?[]:[this.getCoordinate()];},equalsExact:function equalsExact(){if(arguments.length===2){var other=arguments[0],tolerance=arguments[1];if(!this.isEquivalentClass(other)){return false;}if(this.isEmpty()&&other.isEmpty()){return true;}if(this.isEmpty()!==other.isEmpty()){return false;}return this.equal(other.getCoordinate(),this.getCoordinate(),tolerance);}else return Geometry.prototype.equalsExact.apply(this,arguments);},normalize:function normalize(){},getCoordinate:function getCoordinate(){return this.coordinates.size()!==0?this.coordinates.getCoordinate(0):null;},getBoundaryDimension:function getBoundaryDimension(){return Dimension.FALSE;},getDimension:function getDimension(){return 0;},getNumPoints:function getNumPoints(){return this.isEmpty()?0:1;},reverse:function reverse(){return this.copy();},getX:function getX(){if(this.getCoordinate()===null){throw new IllegalStateException(\"getX called on empty Point\");}return this.getCoordinate().x;},compareToSameClass:function compareToSameClass(){if(arguments.length===1){var other=arguments[0];var point=other;return this.getCoordinate().compareTo(point.getCoordinate());}else if(arguments.length===2){var _other=arguments[0],comp=arguments[1];var point=_other;return comp.compare(this.coordinates,point.coordinates);}},apply:function apply(){if(hasInterface(arguments[0],CoordinateFilter)){var filter=arguments[0];if(this.isEmpty()){return null;}filter.filter(this.getCoordinate());}else if(hasInterface(arguments[0],CoordinateSequenceFilter)){var _filter=arguments[0];if(this.isEmpty())return null;_filter.filter(this.coordinates,0);if(_filter.isGeometryChanged())this.geometryChanged();}else if(hasInterface(arguments[0],GeometryFilter)){var _filter2=arguments[0];_filter2.filter(this);}else if(hasInterface(arguments[0],GeometryComponentFilter)){var _filter3=arguments[0];_filter3.filter(this);}},getBoundary:function getBoundary(){return this.getFactory().createGeometryCollection(null);},clone:function clone(){var p=Geometry.prototype.clone.call(this);p.coordinates=this.coordinates.clone();return p;},getGeometryType:function getGeometryType(){return\"Point\";},copy:function copy(){return new Point(this.coordinates.copy(),this.factory);},getCoordinateSequence:function getCoordinateSequence(){return this.coordinates;},getY:function getY(){if(this.getCoordinate()===null){throw new IllegalStateException(\"getY called on empty Point\");}return this.getCoordinate().y;},isEmpty:function isEmpty(){return this.coordinates.size()===0;},init:function init(coordinates){if(coordinates===null){coordinates=this.getFactory().getCoordinateSequenceFactory().create([]);}Assert.isTrue(coordinates.size()<=1);this.coordinates=coordinates;},isSimple:function isSimple(){return true;},interfaces_:function interfaces_(){return[Puntal];},getClass:function getClass(){return Point;}});Point.serialVersionUID=4902022702746614570;function Polygonal(){}extend(Polygonal.prototype,{interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Polygonal;}});function Polygon(){this.shell=null;this.holes=null;var shell=arguments[0],holes=arguments[1],factory=arguments[2];Geometry.call(this,factory);if(shell===null){shell=this.getFactory().createLinearRing();}if(holes===null){holes=[];}if(Geometry.hasNullElements(holes)){throw new IllegalArgumentException(\"holes must not contain null elements\");}if(shell.isEmpty()&&Geometry.hasNonEmptyElements(holes)){throw new IllegalArgumentException(\"shell is empty but holes are not\");}this.shell=shell;this.holes=holes;}inherits(Polygon,Geometry);extend(Polygon.prototype,{computeEnvelopeInternal:function computeEnvelopeInternal(){return this.shell.getEnvelopeInternal();},getSortIndex:function getSortIndex(){return Geometry.SORTINDEX_POLYGON;},getCoordinates:function getCoordinates(){if(this.isEmpty()){return[];}var coordinates=new Array(this.getNumPoints()).fill(null);var k=-1;var shellCoordinates=this.shell.getCoordinates();for(var x=0;x<shellCoordinates.length;x++){k++;coordinates[k]=shellCoordinates[x];}for(var i=0;i<this.holes.length;i++){var childCoordinates=this.holes[i].getCoordinates();for(var j=0;j<childCoordinates.length;j++){k++;coordinates[k]=childCoordinates[j];}}return coordinates;},getArea:function getArea(){var area=0.0;area+=Math.abs(CGAlgorithms.signedArea(this.shell.getCoordinateSequence()));for(var i=0;i<this.holes.length;i++){area-=Math.abs(CGAlgorithms.signedArea(this.holes[i].getCoordinateSequence()));}return area;},isRectangle:function isRectangle(){if(this.getNumInteriorRing()!==0)return false;if(this.shell===null)return false;if(this.shell.getNumPoints()!==5)return false;var seq=this.shell.getCoordinateSequence();var env=this.getEnvelopeInternal();for(var i=0;i<5;i++){var x=seq.getX(i);if(!(x===env.getMinX()||x===env.getMaxX()))return false;var y=seq.getY(i);if(!(y===env.getMinY()||y===env.getMaxY()))return false;}var prevX=seq.getX(0);var prevY=seq.getY(0);for(var i=1;i<=4;i++){var x=seq.getX(i);var y=seq.getY(i);var xChanged=x!==prevX;var yChanged=y!==prevY;if(xChanged===yChanged)return false;prevX=x;prevY=y;}return true;},equalsExact:function equalsExact(){if(arguments.length===2){var other=arguments[0],tolerance=arguments[1];if(!this.isEquivalentClass(other)){return false;}var otherPolygon=other;var thisShell=this.shell;var otherPolygonShell=otherPolygon.shell;if(!thisShell.equalsExact(otherPolygonShell,tolerance)){return false;}if(this.holes.length!==otherPolygon.holes.length){return false;}for(var i=0;i<this.holes.length;i++){if(!this.holes[i].equalsExact(otherPolygon.holes[i],tolerance)){return false;}}return true;}else return Geometry.prototype.equalsExact.apply(this,arguments);},normalize:function normalize(){if(arguments.length===0){this.normalize(this.shell,true);for(var i=0;i<this.holes.length;i++){this.normalize(this.holes[i],false);}Arrays.sort(this.holes);}else if(arguments.length===2){var ring=arguments[0],clockwise=arguments[1];if(ring.isEmpty()){return null;}var uniqueCoordinates=new Array(ring.getCoordinates().length-1).fill(null);System.arraycopy(ring.getCoordinates(),0,uniqueCoordinates,0,uniqueCoordinates.length);var minCoordinate=CoordinateArrays.minCoordinate(ring.getCoordinates());CoordinateArrays.scroll(uniqueCoordinates,minCoordinate);System.arraycopy(uniqueCoordinates,0,ring.getCoordinates(),0,uniqueCoordinates.length);ring.getCoordinates()[uniqueCoordinates.length]=uniqueCoordinates[0];if(CGAlgorithms.isCCW(ring.getCoordinates())===clockwise){CoordinateArrays.reverse(ring.getCoordinates());}}},getCoordinate:function getCoordinate(){return this.shell.getCoordinate();},getNumInteriorRing:function getNumInteriorRing(){return this.holes.length;},getBoundaryDimension:function getBoundaryDimension(){return 1;},getDimension:function getDimension(){return 2;},getLength:function getLength(){var len=0.0;len+=this.shell.getLength();for(var i=0;i<this.holes.length;i++){len+=this.holes[i].getLength();}return len;},getNumPoints:function getNumPoints(){var numPoints=this.shell.getNumPoints();for(var i=0;i<this.holes.length;i++){numPoints+=this.holes[i].getNumPoints();}return numPoints;},reverse:function reverse(){var poly=this.copy();poly.shell=this.shell.copy().reverse();poly.holes=new Array(this.holes.length).fill(null);for(var i=0;i<this.holes.length;i++){poly.holes[i]=this.holes[i].copy().reverse();}return poly;},convexHull:function convexHull(){return this.getExteriorRing().convexHull();},compareToSameClass:function compareToSameClass(){if(arguments.length===1){var o=arguments[0];var thisShell=this.shell;var otherShell=o.shell;return thisShell.compareToSameClass(otherShell);}else if(arguments.length===2){var _o=arguments[0],comp=arguments[1];var poly=_o;var thisShell=this.shell;var otherShell=poly.shell;var shellComp=thisShell.compareToSameClass(otherShell,comp);if(shellComp!==0)return shellComp;var nHole1=this.getNumInteriorRing();var nHole2=poly.getNumInteriorRing();var i=0;while(i<nHole1&&i<nHole2){var thisHole=this.getInteriorRingN(i);var otherHole=poly.getInteriorRingN(i);var holeComp=thisHole.compareToSameClass(otherHole,comp);if(holeComp!==0)return holeComp;i++;}if(i<nHole1)return 1;if(i<nHole2)return-1;return 0;}},apply:function apply(){if(hasInterface(arguments[0],CoordinateFilter)){var filter=arguments[0];this.shell.apply(filter);for(var i=0;i<this.holes.length;i++){this.holes[i].apply(filter);}}else if(hasInterface(arguments[0],CoordinateSequenceFilter)){var _filter=arguments[0];this.shell.apply(_filter);if(!_filter.isDone()){for(var i=0;i<this.holes.length;i++){this.holes[i].apply(_filter);if(_filter.isDone())break;}}if(_filter.isGeometryChanged())this.geometryChanged();}else if(hasInterface(arguments[0],GeometryFilter)){var _filter2=arguments[0];_filter2.filter(this);}else if(hasInterface(arguments[0],GeometryComponentFilter)){var _filter3=arguments[0];_filter3.filter(this);this.shell.apply(_filter3);for(var i=0;i<this.holes.length;i++){this.holes[i].apply(_filter3);}}},getBoundary:function getBoundary(){if(this.isEmpty()){return this.getFactory().createMultiLineString();}var rings=new Array(this.holes.length+1).fill(null);rings[0]=this.shell;for(var i=0;i<this.holes.length;i++){rings[i+1]=this.holes[i];}if(rings.length<=1)return this.getFactory().createLinearRing(rings[0].getCoordinateSequence());return this.getFactory().createMultiLineString(rings);},clone:function clone(){var poly=Geometry.prototype.clone.call(this);poly.shell=this.shell.clone();poly.holes=new Array(this.holes.length).fill(null);for(var i=0;i<this.holes.length;i++){poly.holes[i]=this.holes[i].clone();}return poly;},getGeometryType:function getGeometryType(){return\"Polygon\";},copy:function copy(){var shell=this.shell.copy();var holes=new Array(this.holes.length).fill(null);for(var i=0;i<holes.length;i++){holes[i]=this.holes[i].copy();}return new Polygon(shell,holes,this.factory);},getExteriorRing:function getExteriorRing(){return this.shell;},isEmpty:function isEmpty(){return this.shell.isEmpty();},getInteriorRingN:function getInteriorRingN(n){return this.holes[n];},interfaces_:function interfaces_(){return[Polygonal];},getClass:function getClass(){return Polygon;}});Polygon.serialVersionUID=-3494792200821764533;function MultiPoint(){var points=arguments[0],factory=arguments[1];GeometryCollection.call(this,points,factory);}inherits(MultiPoint,GeometryCollection);extend(MultiPoint.prototype,{getSortIndex:function getSortIndex(){return Geometry.SORTINDEX_MULTIPOINT;},isValid:function isValid(){return true;},equalsExact:function equalsExact(){if(arguments.length===2){var other=arguments[0],tolerance=arguments[1];if(!this.isEquivalentClass(other)){return false;}return GeometryCollection.prototype.equalsExact.call(this,other,tolerance);}else return GeometryCollection.prototype.equalsExact.apply(this,arguments);},getCoordinate:function getCoordinate(){if(arguments.length===1){var n=arguments[0];return this.geometries[n].getCoordinate();}else return GeometryCollection.prototype.getCoordinate.apply(this,arguments);},getBoundaryDimension:function getBoundaryDimension(){return Dimension.FALSE;},getDimension:function getDimension(){return 0;},getBoundary:function getBoundary(){return this.getFactory().createGeometryCollection(null);},getGeometryType:function getGeometryType(){return\"MultiPoint\";},copy:function copy(){var points=new Array(this.geometries.length).fill(null);for(var i=0;i<points.length;i++){points[i]=this.geometries[i].copy();}return new MultiPoint(points,this.factory);},interfaces_:function interfaces_(){return[Puntal];},getClass:function getClass(){return MultiPoint;}});MultiPoint.serialVersionUID=-8048474874175355449;function LinearRing(){if(arguments[0]instanceof Coordinate&&arguments[1]instanceof GeometryFactory){var points=arguments[0],factory=arguments[1];LinearRing.call(this,factory.getCoordinateSequenceFactory().create(points),factory);}else if(hasInterface(arguments[0],CoordinateSequence)&&arguments[1]instanceof GeometryFactory){var _points=arguments[0],_factory=arguments[1];LineString.call(this,_points,_factory);this.validateConstruction();}}inherits(LinearRing,LineString);extend(LinearRing.prototype,{getSortIndex:function getSortIndex(){return Geometry.SORTINDEX_LINEARRING;},getBoundaryDimension:function getBoundaryDimension(){return Dimension.FALSE;},isClosed:function isClosed(){if(this.isEmpty()){return true;}return LineString.prototype.isClosed.call(this);},reverse:function reverse(){var seq=this.points.copy();CoordinateSequences.reverse(seq);var rev=this.getFactory().createLinearRing(seq);return rev;},validateConstruction:function validateConstruction(){if(!this.isEmpty()&&!LineString.prototype.isClosed.call(this)){throw new IllegalArgumentException(\"Points of LinearRing do not form a closed linestring\");}if(this.getCoordinateSequence().size()>=1&&this.getCoordinateSequence().size()<LinearRing.MINIMUM_VALID_SIZE){throw new IllegalArgumentException(\"Invalid number of points in LinearRing (found \"+this.getCoordinateSequence().size()+\" - must be 0 or >= 4)\");}},getGeometryType:function getGeometryType(){return\"LinearRing\";},copy:function copy(){return new LinearRing(this.points.copy(),this.factory);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return LinearRing;}});LinearRing.MINIMUM_VALID_SIZE=4;LinearRing.serialVersionUID=-4261142084085851829;function MultiPolygon(){var polygons=arguments[0],factory=arguments[1];GeometryCollection.call(this,polygons,factory);}inherits(MultiPolygon,GeometryCollection);extend(MultiPolygon.prototype,{getSortIndex:function getSortIndex(){return Geometry.SORTINDEX_MULTIPOLYGON;},equalsExact:function equalsExact(){if(arguments.length===2){var other=arguments[0],tolerance=arguments[1];if(!this.isEquivalentClass(other)){return false;}return GeometryCollection.prototype.equalsExact.call(this,other,tolerance);}else return GeometryCollection.prototype.equalsExact.apply(this,arguments);},getBoundaryDimension:function getBoundaryDimension(){return 1;},getDimension:function getDimension(){return 2;},reverse:function reverse(){var n=this.geometries.length;var revGeoms=new Array(n).fill(null);for(var i=0;i<this.geometries.length;i++){revGeoms[i]=this.geometries[i].reverse();}return this.getFactory().createMultiPolygon(revGeoms);},getBoundary:function getBoundary(){if(this.isEmpty()){return this.getFactory().createMultiLineString();}var allRings=new ArrayList();for(var i=0;i<this.geometries.length;i++){var polygon=this.geometries[i];var rings=polygon.getBoundary();for(var j=0;j<rings.getNumGeometries();j++){allRings.add(rings.getGeometryN(j));}}var allRingsArray=new Array(allRings.size()).fill(null);return this.getFactory().createMultiLineString(allRings.toArray(allRingsArray));},getGeometryType:function getGeometryType(){return\"MultiPolygon\";},copy:function copy(){var polygons=new Array(this.geometries.length).fill(null);for(var i=0;i<polygons.length;i++){polygons[i]=this.geometries[i].copy();}return new MultiPolygon(polygons,this.factory);},interfaces_:function interfaces_(){return[Polygonal];},getClass:function getClass(){return MultiPolygon;}});MultiPolygon.serialVersionUID=-551033529766975875;function GeometryEditor(){this.factory=null;this.isUserDataCopied=false;if(arguments.length===0){}else if(arguments.length===1){var factory=arguments[0];this.factory=factory;}}extend(GeometryEditor.prototype,{setCopyUserData:function setCopyUserData(isUserDataCopied){this.isUserDataCopied=isUserDataCopied;},edit:function edit(geometry,operation){if(geometry===null)return null;var result=this.editInternal(geometry,operation);if(this.isUserDataCopied){result.setUserData(geometry.getUserData());}return result;},editInternal:function editInternal(geometry,operation){if(this.factory===null)this.factory=geometry.getFactory();if(geometry instanceof GeometryCollection){return this.editGeometryCollection(geometry,operation);}if(geometry instanceof Polygon){return this.editPolygon(geometry,operation);}if(geometry instanceof Point){return operation.edit(geometry,this.factory);}if(geometry instanceof LineString){return operation.edit(geometry,this.factory);}Assert.shouldNeverReachHere(\"Unsupported Geometry class: \"+geometry.getClass().getName());return null;},editGeometryCollection:function editGeometryCollection(collection,operation){var collectionForType=operation.edit(collection,this.factory);var geometries=new ArrayList();for(var i=0;i<collectionForType.getNumGeometries();i++){var geometry=this.edit(collectionForType.getGeometryN(i),operation);if(geometry===null||geometry.isEmpty()){continue;}geometries.add(geometry);}if(collectionForType.getClass()===MultiPoint){return this.factory.createMultiPoint(geometries.toArray([]));}if(collectionForType.getClass()===MultiLineString){return this.factory.createMultiLineString(geometries.toArray([]));}if(collectionForType.getClass()===MultiPolygon){return this.factory.createMultiPolygon(geometries.toArray([]));}return this.factory.createGeometryCollection(geometries.toArray([]));},editPolygon:function editPolygon(polygon,operation){var newPolygon=operation.edit(polygon,this.factory);if(newPolygon===null)newPolygon=this.factory.createPolygon(null);if(newPolygon.isEmpty()){return newPolygon;}var shell=this.edit(newPolygon.getExteriorRing(),operation);if(shell===null||shell.isEmpty()){return this.factory.createPolygon();}var holes=new ArrayList();for(var i=0;i<newPolygon.getNumInteriorRing();i++){var hole=this.edit(newPolygon.getInteriorRingN(i),operation);if(hole===null||hole.isEmpty()){continue;}holes.add(hole);}return this.factory.createPolygon(shell,holes.toArray([]));},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return GeometryEditor;}});function GeometryEditorOperation(){}GeometryEditor.GeometryEditorOperation=GeometryEditorOperation;function NoOpGeometryOperation(){}extend(NoOpGeometryOperation.prototype,{edit:function edit(geometry,factory){return geometry;},interfaces_:function interfaces_(){return[GeometryEditorOperation];},getClass:function getClass(){return NoOpGeometryOperation;}});function CoordinateOperation(){}extend(CoordinateOperation.prototype,{edit:function edit(geometry,factory){var coords=this.editCoordinates(geometry.getCoordinates(),geometry);if(coords===null)return geometry;if(geometry instanceof LinearRing){return factory.createLinearRing(coords);}if(geometry instanceof LineString){return factory.createLineString(coords);}if(geometry instanceof Point){if(coords.length>0){return factory.createPoint(coords[0]);}else{return factory.createPoint();}}return geometry;},interfaces_:function interfaces_(){return[GeometryEditorOperation];},getClass:function getClass(){return CoordinateOperation;}});function CoordinateSequenceOperation(){}extend(CoordinateSequenceOperation.prototype,{edit:function edit(geometry,factory){if(geometry instanceof LinearRing){return factory.createLinearRing(this.edit(geometry.getCoordinateSequence(),geometry));}if(geometry instanceof LineString){return factory.createLineString(this.edit(geometry.getCoordinateSequence(),geometry));}if(geometry instanceof Point){return factory.createPoint(this.edit(geometry.getCoordinateSequence(),geometry));}return geometry;},interfaces_:function interfaces_(){return[GeometryEditorOperation];},getClass:function getClass(){return CoordinateSequenceOperation;}});GeometryEditor.NoOpGeometryOperation=NoOpGeometryOperation;GeometryEditor.CoordinateOperation=CoordinateOperation;GeometryEditor.CoordinateSequenceOperation=CoordinateSequenceOperation;function CoordinateArraySequence(){this.dimension=3;this.coordinates=null;if(arguments.length===1){if(arguments[0]instanceof Array){var coordinates=arguments[0];CoordinateArraySequence.call(this,coordinates,3);}else if(Number.isInteger(arguments[0])){var size=arguments[0];this.coordinates=new Array(size).fill(null);for(var i=0;i<size;i++){this.coordinates[i]=new Coordinate();}}else if(hasInterface(arguments[0],CoordinateSequence)){var coordSeq=arguments[0];if(coordSeq===null){this.coordinates=new Array(0).fill(null);return null;}this.dimension=coordSeq.getDimension();this.coordinates=new Array(coordSeq.size()).fill(null);for(var i=0;i<this.coordinates.length;i++){this.coordinates[i]=coordSeq.getCoordinateCopy(i);}}}else if(arguments.length===2){if(arguments[0]instanceof Array&&Number.isInteger(arguments[1])){var _coordinates=arguments[0],dimension=arguments[1];this.coordinates=_coordinates;this.dimension=dimension;if(_coordinates===null)this.coordinates=new Array(0).fill(null);}else if(Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var _size=arguments[0],_dimension=arguments[1];this.coordinates=new Array(_size).fill(null);this.dimension=_dimension;for(var i=0;i<_size;i++){this.coordinates[i]=new Coordinate();}}}}extend(CoordinateArraySequence.prototype,{setOrdinate:function setOrdinate(index,ordinateIndex,value){switch(ordinateIndex){case CoordinateSequence.X:this.coordinates[index].x=value;break;case CoordinateSequence.Y:this.coordinates[index].y=value;break;case CoordinateSequence.Z:this.coordinates[index].z=value;break;default:throw new IllegalArgumentException(\"invalid ordinateIndex\");}},size:function size(){return this.coordinates.length;},getOrdinate:function getOrdinate(index,ordinateIndex){switch(ordinateIndex){case CoordinateSequence.X:return this.coordinates[index].x;case CoordinateSequence.Y:return this.coordinates[index].y;case CoordinateSequence.Z:return this.coordinates[index].z;}return Double.NaN;},getCoordinate:function getCoordinate(){if(arguments.length===1){var i=arguments[0];return this.coordinates[i];}else if(arguments.length===2){var index=arguments[0],coord=arguments[1];coord.x=this.coordinates[index].x;coord.y=this.coordinates[index].y;coord.z=this.coordinates[index].z;}},getCoordinateCopy:function getCoordinateCopy(i){return new Coordinate(this.coordinates[i]);},getDimension:function getDimension(){return this.dimension;},getX:function getX(index){return this.coordinates[index].x;},clone:function clone(){var cloneCoordinates=new Array(this.size()).fill(null);for(var i=0;i<this.coordinates.length;i++){cloneCoordinates[i]=this.coordinates[i].clone();}return new CoordinateArraySequence(cloneCoordinates,this.dimension);},expandEnvelope:function expandEnvelope(env){for(var i=0;i<this.coordinates.length;i++){env.expandToInclude(this.coordinates[i]);}return env;},copy:function copy(){var cloneCoordinates=new Array(this.size()).fill(null);for(var i=0;i<this.coordinates.length;i++){cloneCoordinates[i]=this.coordinates[i].copy();}return new CoordinateArraySequence(cloneCoordinates,this.dimension);},toString:function toString(){if(this.coordinates.length>0){var strBuf=new StringBuffer(17*this.coordinates.length);strBuf.append('(');strBuf.append(this.coordinates[0]);for(var i=1;i<this.coordinates.length;i++){strBuf.append(\", \");strBuf.append(this.coordinates[i]);}strBuf.append(')');return strBuf.toString();}else{return\"()\";}},getY:function getY(index){return this.coordinates[index].y;},toCoordinateArray:function toCoordinateArray(){return this.coordinates;},interfaces_:function interfaces_(){return[CoordinateSequence,Serializable];},getClass:function getClass(){return CoordinateArraySequence;}});CoordinateArraySequence.serialVersionUID=-915438501601840650;function CoordinateArraySequenceFactory(){}extend(CoordinateArraySequenceFactory.prototype,{readResolve:function readResolve(){return CoordinateArraySequenceFactory.instance();},create:function create(){if(arguments.length===1){if(arguments[0]instanceof Array){var coordinates=arguments[0];return new CoordinateArraySequence(coordinates);}else if(hasInterface(arguments[0],CoordinateSequence)){var coordSeq=arguments[0];return new CoordinateArraySequence(coordSeq);}}else if(arguments.length===2){var size=arguments[0],dimension=arguments[1];if(dimension>3)dimension=3;if(dimension<2)return new CoordinateArraySequence(size);return new CoordinateArraySequence(size,dimension);}},interfaces_:function interfaces_(){return[CoordinateSequenceFactory,Serializable];},getClass:function getClass(){return CoordinateArraySequenceFactory;}});CoordinateArraySequenceFactory.instance=function(){return CoordinateArraySequenceFactory.instanceObject;};CoordinateArraySequenceFactory.serialVersionUID=-4099577099607551657;CoordinateArraySequenceFactory.instanceObject=new CoordinateArraySequenceFactory();// shared pointer\nvar i;// shortcuts\nvar defineProperty=Object.defineProperty;function is(a,b){return a===b||a!==a&&b!==b;}// eslint-disable-line\nvar MapPolyfill=createCollection({// WeakMap#delete(key:void*):boolean\n'delete':sharedDelete,// :was Map#get(key:void*[, d3fault:void*]):void*\n// Map#has(key:void*):boolean\nhas:mapHas,// Map#get(key:void*):boolean\nget:sharedGet,// Map#set(key:void*, value:void*):void\nset:sharedSet,// Map#keys(void):Iterator\nkeys:sharedKeys,// Map#values(void):Iterator\nvalues:sharedValues,// Map#entries(void):Iterator\nentries:mapEntries,// Map#forEach(callback:Function, context:void*):void ==> callback.call(context, key, value, mapObject) === not in specs`\nforEach:sharedForEach,// Map#clear():\nclear:sharedClear});/**\n * ES6 collection constructor\n * @return {Function} a collection class\n */function createCollection(proto,objectOnly){function Collection(a){if(!this||this.constructor!==Collection)return new Collection(a);this._keys=[];this._values=[];this._itp=[];// iteration pointers\nthis.objectOnly=objectOnly;// parse initial iterable argument passed\nif(a)init.call(this,a);}// define size for non object-only collections\nif(!objectOnly){defineProperty(proto,'size',{get:sharedSize});}// set prototype\nproto.constructor=Collection;Collection.prototype=proto;return Collection;}/** parse initial iterable argument passed */function init(a){// init Set argument, like `[1,2,3,{}]`\nif(this.add)a.forEach(this.add,this);// init Map argument like `[[1,2], [{}, 4]]`\nelse a.forEach(function(a){this.set(a[0],a[1]);},this);}/** delete */function sharedDelete(key){if(this.has(key)){this._keys.splice(i,1);this._values.splice(i,1);// update iteration pointers\nthis._itp.forEach(function(p){if(i<p[0])p[0]--;});}// Aurora here does it while Canary doesn't\nreturn i>-1;}function sharedGet(key){return this.has(key)?this._values[i]:undefined;}function has(list,key){if(this.objectOnly&&key!==Object(key))throw new TypeError('Invalid value used as weak collection key');// NaN or 0 passed\nif(key!==key||key===0)for(i=list.length;i--&&!is(list[i],key);){}// eslint-disable-line\nelse i=list.indexOf(key);return i>-1;}function mapHas(value){return has.call(this,this._keys,value);}/** @chainable */function sharedSet(key,value){this.has(key)?this._values[i]=value:this._values[this._keys.push(key)-1]=value;return this;}function sharedClear(){(this._keys||0).length=this._values.length=0;}/** keys, values, and iterate related methods */function sharedKeys(){return sharedIterator(this._itp,this._keys);}function sharedValues(){return sharedIterator(this._itp,this._values);}function mapEntries(){return sharedIterator(this._itp,this._keys,this._values);}function sharedIterator(itp,array,array2){var p=[0];var done=false;itp.push(p);return{next:function next(){var v;var k=p[0];if(!done&&k<array.length){v=array2?[array[k],array2[k]]:array[k];p[0]++;}else{done=true;itp.splice(itp.indexOf(p),1);}return{done:done,value:v};}};}function sharedSize(){return this._values.length;}function sharedForEach(callback,context){var it=this.entries();for(;;){var r=it.next();if(r.done)break;callback.call(context,r.value[1],r.value[0],this);}}var MapImpl=typeof Map==='undefined'||!Map.prototype.values?MapPolyfill:Map;/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html\n *\n * @extends {javascript.util.Map}\n * @constructor\n * @private\n */function HashMap(){/**\n   * @type {Object}\n   * @private\n  */this.map_=new MapImpl();}HashMap.prototype=new Map$1();/**\n * @override\n */HashMap.prototype.get=function(key){return this.map_.get(key)||null;};/**\n * @override\n */HashMap.prototype.put=function(key,value){this.map_.set(key,value);return value;};/**\n * @override\n */HashMap.prototype.values=function(){var arrayList=new ArrayList();var it=this.map_.values();var o=it.next();while(!o.done){arrayList.add(o.value);o=it.next();}return arrayList;};/**\n * @override\n */HashMap.prototype.entrySet=function(){var hashSet=new HashSet();this.map_.entries().forEach(function(entry){return hashSet.add(entry);});return hashSet;};/**\n * @override\n */HashMap.prototype.size=function(){return this.map_.size();};function PrecisionModel(){this.modelType=null;this.scale=null;if(arguments.length===0){this.modelType=PrecisionModel.FLOATING;}else if(arguments.length===1){if(arguments[0]instanceof Type){var modelType=arguments[0];this.modelType=modelType;if(modelType===PrecisionModel.FIXED){this.setScale(1.0);}}else if(typeof arguments[0]===\"number\"){var scale=arguments[0];this.modelType=PrecisionModel.FIXED;this.setScale(scale);}else if(arguments[0]instanceof PrecisionModel){var pm=arguments[0];this.modelType=pm.modelType;this.scale=pm.scale;}}}extend(PrecisionModel.prototype,{equals:function equals(other){if(!(other instanceof PrecisionModel)){return false;}var otherPrecisionModel=other;return this.modelType===otherPrecisionModel.modelType&&this.scale===otherPrecisionModel.scale;},compareTo:function compareTo(o){var other=o;var sigDigits=this.getMaximumSignificantDigits();var otherSigDigits=other.getMaximumSignificantDigits();return new Integer(sigDigits).compareTo(new Integer(otherSigDigits));},getScale:function getScale(){return this.scale;},isFloating:function isFloating(){return this.modelType===PrecisionModel.FLOATING||this.modelType===PrecisionModel.FLOATING_SINGLE;},getType:function getType(){return this.modelType;},toString:function toString(){var description=\"UNKNOWN\";if(this.modelType===PrecisionModel.FLOATING){description=\"Floating\";}else if(this.modelType===PrecisionModel.FLOATING_SINGLE){description=\"Floating-Single\";}else if(this.modelType===PrecisionModel.FIXED){description=\"Fixed (Scale=\"+this.getScale()+\")\";}return description;},makePrecise:function makePrecise(){if(typeof arguments[0]===\"number\"){var val=arguments[0];if(Double.isNaN(val))return val;if(this.modelType===PrecisionModel.FLOATING_SINGLE){var floatSingleVal=val;return floatSingleVal;}if(this.modelType===PrecisionModel.FIXED){return Math.round(val*this.scale)/this.scale;}return val;}else if(arguments[0]instanceof Coordinate){var coord=arguments[0];if(this.modelType===PrecisionModel.FLOATING)return null;coord.x=this.makePrecise(coord.x);coord.y=this.makePrecise(coord.y);}},getMaximumSignificantDigits:function getMaximumSignificantDigits(){var maxSigDigits=16;if(this.modelType===PrecisionModel.FLOATING){maxSigDigits=16;}else if(this.modelType===PrecisionModel.FLOATING_SINGLE){maxSigDigits=6;}else if(this.modelType===PrecisionModel.FIXED){maxSigDigits=1+Math.trunc(Math.ceil(Math.log(this.getScale())/Math.log(10)));}return maxSigDigits;},setScale:function setScale(scale){this.scale=Math.abs(scale);},interfaces_:function interfaces_(){return[Serializable,Comparable];},getClass:function getClass(){return PrecisionModel;}});PrecisionModel.mostPrecise=function(pm1,pm2){if(pm1.compareTo(pm2)>=0)return pm1;return pm2;};function Type(){this.name=null;var name=arguments[0];this.name=name;Type.nameToTypeMap.put(name,this);}extend(Type.prototype,{readResolve:function readResolve(){return Type.nameToTypeMap.get(this.name);},toString:function toString(){return this.name;},interfaces_:function interfaces_(){return[Serializable];},getClass:function getClass(){return Type;}});Type.serialVersionUID=-5528602631731589822;Type.nameToTypeMap=new HashMap();PrecisionModel.Type=Type;PrecisionModel.serialVersionUID=7777263578777803835;PrecisionModel.FIXED=new Type(\"FIXED\");PrecisionModel.FLOATING=new Type(\"FLOATING\");PrecisionModel.FLOATING_SINGLE=new Type(\"FLOATING SINGLE\");PrecisionModel.maximumPreciseValue=9007199254740992.0;function GeometryFactory(){this.precisionModel=null;this.coordinateSequenceFactory=null;this.SRID=null;if(arguments.length===0){GeometryFactory.call(this,new PrecisionModel(),0);}else if(arguments.length===1){if(hasInterface(arguments[0],CoordinateSequenceFactory)){var coordinateSequenceFactory=arguments[0];GeometryFactory.call(this,new PrecisionModel(),0,coordinateSequenceFactory);}else if(arguments[0]instanceof PrecisionModel){var precisionModel=arguments[0];GeometryFactory.call(this,precisionModel,0,GeometryFactory.getDefaultCoordinateSequenceFactory());}}else if(arguments.length===2){var _precisionModel=arguments[0],SRID=arguments[1];GeometryFactory.call(this,_precisionModel,SRID,GeometryFactory.getDefaultCoordinateSequenceFactory());}else if(arguments.length===3){var _precisionModel2=arguments[0],_SRID=arguments[1],_coordinateSequenceFactory=arguments[2];this.precisionModel=_precisionModel2;this.coordinateSequenceFactory=_coordinateSequenceFactory;this.SRID=_SRID;}}extend(GeometryFactory.prototype,{toGeometry:function toGeometry(envelope){if(envelope.isNull()){return this.createPoint(null);}if(envelope.getMinX()===envelope.getMaxX()&&envelope.getMinY()===envelope.getMaxY()){return this.createPoint(new Coordinate(envelope.getMinX(),envelope.getMinY()));}if(envelope.getMinX()===envelope.getMaxX()||envelope.getMinY()===envelope.getMaxY()){return this.createLineString([new Coordinate(envelope.getMinX(),envelope.getMinY()),new Coordinate(envelope.getMaxX(),envelope.getMaxY())]);}return this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(),envelope.getMinY()),new Coordinate(envelope.getMinX(),envelope.getMaxY()),new Coordinate(envelope.getMaxX(),envelope.getMaxY()),new Coordinate(envelope.getMaxX(),envelope.getMinY()),new Coordinate(envelope.getMinX(),envelope.getMinY())]),null);},createLineString:function createLineString(){if(arguments.length===0){return this.createLineString(this.getCoordinateSequenceFactory().create([]));}else if(arguments.length===1){if(arguments[0]instanceof Array){var coordinates=arguments[0];return this.createLineString(coordinates!==null?this.getCoordinateSequenceFactory().create(coordinates):null);}else if(hasInterface(arguments[0],CoordinateSequence)){var _coordinates=arguments[0];return new LineString(_coordinates,this);}}},createMultiLineString:function createMultiLineString(){if(arguments.length===0){return new MultiLineString(null,this);}else if(arguments.length===1){var lineStrings=arguments[0];return new MultiLineString(lineStrings,this);}},buildGeometry:function buildGeometry(geomList){var geomClass=null;var isHeterogeneous=false;var hasGeometryCollection=false;for(var i=geomList.iterator();i.hasNext();){var geom=i.next();var partClass=geom.getClass();if(geomClass===null){geomClass=partClass;}if(partClass!==geomClass){isHeterogeneous=true;}if(geom.isGeometryCollectionOrDerived())hasGeometryCollection=true;}if(geomClass===null){return this.createGeometryCollection();}if(isHeterogeneous||hasGeometryCollection){return this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList));}var geom0=geomList.iterator().next();var isCollection=geomList.size()>1;if(isCollection){if(geom0 instanceof Polygon){return this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList));}else if(geom0 instanceof LineString){return this.createMultiLineString(GeometryFactory.toLineStringArray(geomList));}else if(geom0 instanceof Point){return this.createMultiPoint(GeometryFactory.toPointArray(geomList));}Assert.shouldNeverReachHere(\"Unhandled class: \"+geom0.getClass().getName());}return geom0;},createMultiPointFromCoords:function createMultiPointFromCoords(coordinates){return this.createMultiPoint(coordinates!==null?this.getCoordinateSequenceFactory().create(coordinates):null);},createPoint:function createPoint(){if(arguments.length===0){return this.createPoint(this.getCoordinateSequenceFactory().create([]));}else if(arguments.length===1){if(arguments[0]instanceof Coordinate){var coordinate=arguments[0];return this.createPoint(coordinate!==null?this.getCoordinateSequenceFactory().create([coordinate]):null);}else if(hasInterface(arguments[0],CoordinateSequence)){var coordinates=arguments[0];return new Point(coordinates,this);}}},getCoordinateSequenceFactory:function getCoordinateSequenceFactory(){return this.coordinateSequenceFactory;},createPolygon:function createPolygon(){if(arguments.length===0){return new Polygon(null,null,this);}else if(arguments.length===1){if(hasInterface(arguments[0],CoordinateSequence)){var coordinates=arguments[0];return this.createPolygon(this.createLinearRing(coordinates));}else if(arguments[0]instanceof Array){var _coordinates2=arguments[0];return this.createPolygon(this.createLinearRing(_coordinates2));}else if(arguments[0]instanceof LinearRing){var shell=arguments[0];return this.createPolygon(shell,null);}}else if(arguments.length===2){var _shell=arguments[0],holes=arguments[1];return new Polygon(_shell,holes,this);}},getSRID:function getSRID(){return this.SRID;},createGeometryCollection:function createGeometryCollection(){if(arguments.length===0){return new GeometryCollection(null,this);}else if(arguments.length===1){var geometries=arguments[0];return new GeometryCollection(geometries,this);}},createGeometry:function createGeometry(g){var editor=new GeometryEditor(this);return editor.edit(g,{edit:function edit(){if(arguments.length===2){var coordSeq=arguments[0],geometry=arguments[1];return this.coordinateSequenceFactory.create(coordSeq);}}});},getPrecisionModel:function getPrecisionModel(){return this.precisionModel;},createLinearRing:function createLinearRing(){if(arguments.length===0){return this.createLinearRing(this.getCoordinateSequenceFactory().create([]));}else if(arguments.length===1){if(arguments[0]instanceof Array){var coordinates=arguments[0];return this.createLinearRing(coordinates!==null?this.getCoordinateSequenceFactory().create(coordinates):null);}else if(hasInterface(arguments[0],CoordinateSequence)){var _coordinates3=arguments[0];return new LinearRing(_coordinates3,this);}}},createMultiPolygon:function createMultiPolygon(){if(arguments.length===0){return new MultiPolygon(null,this);}else if(arguments.length===1){var polygons=arguments[0];return new MultiPolygon(polygons,this);}},createMultiPoint:function createMultiPoint(){if(arguments.length===0){return new MultiPoint(null,this);}else if(arguments.length===1){if(arguments[0]instanceof Array){var point=arguments[0];return new MultiPoint(point,this);}else if(arguments[0]instanceof Array){var coordinates=arguments[0];return this.createMultiPoint(coordinates!==null?this.getCoordinateSequenceFactory().create(coordinates):null);}else if(hasInterface(arguments[0],CoordinateSequence)){var _coordinates4=arguments[0];if(_coordinates4===null){return this.createMultiPoint(new Array(0).fill(null));}var points=new Array(_coordinates4.size()).fill(null);for(var i=0;i<_coordinates4.size();i++){var ptSeq=this.getCoordinateSequenceFactory().create(1,_coordinates4.getDimension());CoordinateSequences.copy(_coordinates4,i,ptSeq,0,1);points[i]=this.createPoint(ptSeq);}return this.createMultiPoint(points);}}},interfaces_:function interfaces_(){return[Serializable];},getClass:function getClass(){return GeometryFactory;}});GeometryFactory.toMultiPolygonArray=function(multiPolygons){var multiPolygonArray=new Array(multiPolygons.size()).fill(null);return multiPolygons.toArray(multiPolygonArray);};GeometryFactory.toGeometryArray=function(geometries){if(geometries===null)return null;var geometryArray=new Array(geometries.size()).fill(null);return geometries.toArray(geometryArray);};GeometryFactory.getDefaultCoordinateSequenceFactory=function(){return CoordinateArraySequenceFactory.instance();};GeometryFactory.toMultiLineStringArray=function(multiLineStrings){var multiLineStringArray=new Array(multiLineStrings.size()).fill(null);return multiLineStrings.toArray(multiLineStringArray);};GeometryFactory.toLineStringArray=function(lineStrings){var lineStringArray=new Array(lineStrings.size()).fill(null);return lineStrings.toArray(lineStringArray);};GeometryFactory.toMultiPointArray=function(multiPoints){var multiPointArray=new Array(multiPoints.size()).fill(null);return multiPoints.toArray(multiPointArray);};GeometryFactory.toLinearRingArray=function(linearRings){var linearRingArray=new Array(linearRings.size()).fill(null);return linearRings.toArray(linearRingArray);};GeometryFactory.toPointArray=function(points){var pointArray=new Array(points.size()).fill(null);return points.toArray(pointArray);};GeometryFactory.toPolygonArray=function(polygons){var polygonArray=new Array(polygons.size()).fill(null);return polygons.toArray(polygonArray);};GeometryFactory.createPointFromInternalCoord=function(coord,exemplar){exemplar.getPrecisionModel().makePrecise(coord);return exemplar.getFactory().createPoint(coord);};GeometryFactory.serialVersionUID=-6820524753094095635;var regExes={'typeStr':/^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,'emptyTypeStr':/^\\s*(\\w+)\\s*EMPTY\\s*$/,'spaces':/\\s+/,'parenComma':/\\)\\s*,\\s*\\(/,'doubleParenComma':/\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/,// can't use {2} here\n'trimParens':/^\\s*\\(?(.*?)\\)?\\s*$/};/**\n * Class for reading and writing Well-Known Text.\n *\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n *//** Create a new parser for WKT\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of WKTParser.\n * @constructor\n * @private\n */function WKTParser(geometryFactory){this.geometryFactory=geometryFactory||new GeometryFactory();}extend(WKTParser.prototype,{/**\n   * Deserialize a WKT string and return a geometry. Supports WKT for POINT,\n   * MULTIPOINT, LINESTRING, LINEARRING, MULTILINESTRING, POLYGON, MULTIPOLYGON,\n   * and GEOMETRYCOLLECTION.\n   *\n   * @param {String} wkt A WKT string.\n   * @return {Geometry} A geometry instance.\n   * @private\n   */read:function read(wkt){var geometry,type,str;wkt=wkt.replace(/[\\n\\r]/g,' ');var matches=regExes.typeStr.exec(wkt);if(wkt.search('EMPTY')!==-1){matches=regExes.emptyTypeStr.exec(wkt);matches[2]=undefined;}if(matches){type=matches[1].toLowerCase();str=matches[2];if(parse[type]){geometry=parse[type].apply(this,[str]);}}if(geometry===undefined)throw new Error('Could not parse WKT '+wkt);return geometry;},/**\n   * Serialize a geometry into a WKT string.\n   *\n   * @param {Geometry} geometry A feature or array of features.\n   * @return {String} The WKT string representation of the input geometries.\n   * @private\n   */write:function write(geometry){return this.extractGeometry(geometry);},/**\n   * Entry point to construct the WKT for a single Geometry object.\n   *\n   * @param {Geometry} geometry\n   * @return {String} A WKT string of representing the geometry.\n   * @private\n   */extractGeometry:function extractGeometry(geometry){var type=geometry.getGeometryType().toLowerCase();if(!extract[type]){return null;}var wktType=type.toUpperCase();var data;if(geometry.isEmpty()){data=wktType+' EMPTY';}else{data=wktType+'('+extract[type].apply(this,[geometry])+')';}return data;}});/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual data extraction.\n * @private\n */var extract={coordinate:function coordinate(_coordinate){return _coordinate.x+' '+_coordinate.y;},/**\n   * Return a space delimited string of point coordinates.\n   *\n   * @param {Point}\n   *          point\n   * @return {String} A string of coordinates representing the point.\n   */point:function point(_point){return extract.coordinate.call(this,_point.coordinates.coordinates[0]);},/**\n   * Return a comma delimited string of point coordinates from a multipoint.\n   *\n   * @param {MultiPoint}\n   *          multipoint\n   * @return {String} A string of point coordinate strings representing the\n   *         multipoint.\n   */multipoint:function multipoint(_multipoint){var array=[];for(var i=0,len=_multipoint.geometries.length;i<len;++i){array.push('('+extract.point.apply(this,[_multipoint.geometries[i]])+')');}return array.join(',');},/**\n   * Return a comma delimited string of point coordinates from a line.\n   *\n   * @param {LineString} linestring\n   * @return {String} A string of point coordinate strings representing the linestring.\n   */linestring:function linestring(_linestring){var array=[];for(var i=0,len=_linestring.points.coordinates.length;i<len;++i){array.push(extract.coordinate.apply(this,[_linestring.points.coordinates[i]]));}return array.join(',');},linearring:function linearring(_linearring){var array=[];for(var i=0,len=_linearring.points.coordinates.length;i<len;++i){array.push(extract.coordinate.apply(this,[_linearring.points.coordinates[i]]));}return array.join(',');},/**\n   * Return a comma delimited string of linestring strings from a\n   * multilinestring.\n   *\n   * @param {MultiLineString} multilinestring\n   * @return {String} A string of of linestring strings representing the multilinestring.\n   */multilinestring:function multilinestring(_multilinestring){var array=[];for(var i=0,len=_multilinestring.geometries.length;i<len;++i){array.push('('+extract.linestring.apply(this,[_multilinestring.geometries[i]])+')');}return array.join(',');},/**\n   * Return a comma delimited string of linear ring arrays from a polygon.\n   *\n   * @param {Polygon} polygon\n   * @return {String} An array of linear ring arrays representing the polygon.\n   */polygon:function polygon(_polygon){var array=[];array.push('('+extract.linestring.apply(this,[_polygon.shell])+')');for(var i=0,len=_polygon.holes.length;i<len;++i){array.push('('+extract.linestring.apply(this,[_polygon.holes[i]])+')');}return array.join(',');},/**\n   * Return an array of polygon arrays from a multipolygon.\n   *\n   * @param {MultiPolygon} multipolygon\n   * @return {String} An array of polygon arrays representing the multipolygon.\n   */multipolygon:function multipolygon(_multipolygon){var array=[];for(var i=0,len=_multipolygon.geometries.length;i<len;++i){array.push('('+extract.polygon.apply(this,[_multipolygon.geometries[i]])+')');}return array.join(',');},/**\n   * Return the WKT portion between 'GEOMETRYCOLLECTION(' and ')' for an\n   * geometrycollection.\n   *\n   * @param {GeometryCollection} collection\n   * @return {String} internal WKT representation of the collection.\n   */geometrycollection:function geometrycollection(collection){var array=[];for(var i=0,len=collection.geometries.length;i<len;++i){array.push(this.extractGeometry(collection.geometries[i]));}return array.join(',');}};/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual parsing.\n * @private\n */var parse={/**\n   * Return point geometry given a point WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the point.\n   * @return {Point} A point geometry.\n   * @private\n   */point:function point(str){if(str===undefined){return this.geometryFactory.createPoint();}var coords=str.trim().split(regExes.spaces);return this.geometryFactory.createPoint(new Coordinate(Number.parseFloat(coords[0]),Number.parseFloat(coords[1])));},/**\n   * Return a multipoint geometry given a multipoint WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipoint.\n   * @return {Point} A multipoint feature.\n   * @private\n   */multipoint:function multipoint(str){if(str===undefined){return this.geometryFactory.createMultiPoint();}var point;var points=str.trim().split(',');var components=[];for(var i=0,len=points.length;i<len;++i){point=points[i].replace(regExes.trimParens,'$1');components.push(parse.point.apply(this,[point]));}return this.geometryFactory.createMultiPoint(components);},/**\n   * Return a linestring geometry given a linestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linestring.\n   * @return {LineString} A linestring geometry.\n   * @private\n   */linestring:function linestring(str){if(str===undefined){return this.geometryFactory.createLineString();}var points=str.trim().split(',');var components=[];var coords;for(var i=0,len=points.length;i<len;++i){coords=points[i].trim().split(regExes.spaces);components.push(new Coordinate(Number.parseFloat(coords[0]),Number.parseFloat(coords[1])));}return this.geometryFactory.createLineString(components);},/**\n   * Return a linearring geometry given a linearring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linearring.\n   * @return {LinearRing} A linearring geometry.\n   * @private\n   */linearring:function linearring(str){if(str===undefined){return this.geometryFactory.createLinearRing();}var points=str.trim().split(',');var components=[];var coords;for(var i=0,len=points.length;i<len;++i){coords=points[i].trim().split(regExes.spaces);components.push(new Coordinate(Number.parseFloat(coords[0]),Number.parseFloat(coords[1])));}return this.geometryFactory.createLinearRing(components);},/**\n   * Return a multilinestring geometry given a multilinestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multilinestring.\n   * @return {MultiLineString} A multilinestring geometry.\n   * @private\n   */multilinestring:function multilinestring(str){if(str===undefined){return this.geometryFactory.createMultiLineString();}var line;var lines=str.trim().split(regExes.parenComma);var components=[];for(var i=0,len=lines.length;i<len;++i){line=lines[i].replace(regExes.trimParens,'$1');components.push(parse.linestring.apply(this,[line]));}return this.geometryFactory.createMultiLineString(components);},/**\n   * Return a polygon geometry given a polygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the polygon.\n   * @return {Polygon} A polygon geometry.\n   * @private\n   */polygon:function polygon(str){if(str===undefined){return this.geometryFactory.createPolygon();}var ring,linestring,linearring;var rings=str.trim().split(regExes.parenComma);var shell;var holes=[];for(var i=0,len=rings.length;i<len;++i){ring=rings[i].replace(regExes.trimParens,'$1');linestring=parse.linestring.apply(this,[ring]);linearring=this.geometryFactory.createLinearRing(linestring.points);if(i===0){shell=linearring;}else{holes.push(linearring);}}return this.geometryFactory.createPolygon(shell,holes);},/**\n   * Return a multipolygon geometry given a multipolygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipolygon.\n   * @return {MultiPolygon} A multipolygon geometry.\n   * @private\n   */multipolygon:function multipolygon(str){if(str===undefined){return this.geometryFactory.createMultiPolygon();}var polygon;var polygons=str.trim().split(regExes.doubleParenComma);var components=[];for(var i=0,len=polygons.length;i<len;++i){polygon=polygons[i].replace(regExes.trimParens,'$1');components.push(parse.polygon.apply(this,[polygon]));}return this.geometryFactory.createMultiPolygon(components);},/**\n   * Return a geometrycollection given a geometrycollection WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the geometrycollection.\n   * @return {GeometryCollection}\n   * @private\n   */geometrycollection:function geometrycollection(str){if(str===undefined){return this.geometryFactory.createGeometryCollection();}// separate components of the collection with |\nstr=str.replace(/,\\s*([A-Za-z])/g,'|$1');var wktArray=str.trim().split('|');var components=[];for(var i=0,len=wktArray.length;i<len;++i){components.push(this.read(wktArray[i]));}return this.geometryFactory.createGeometryCollection(components);}};/**\n * Writes the Well-Known Text representation of a {@link Geometry}. The\n * Well-Known Text format is defined in the <A\n * HREF=\"http://www.opengis.org/techno/specs.htm\"> OGC Simple Features\n * Specification for SQL</A>.\n * <p>\n * The <code>WKTWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n * <p>\n * The SFS WKT spec does not define a special tag for {@link LinearRing}s.\n * Under the spec, rings are output as <code>LINESTRING</code>s.\n *//**\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */function WKTWriter(geometryFactory){this.parser=new WKTParser(geometryFactory);}extend(WKTWriter.prototype,{/**\n   * Converts a <code>Geometry</code> to its Well-known Text representation.\n   *\n   * @param {Geometry} geometry a <code>Geometry</code> to process.\n   * @return {string} a <Geometry Tagged Text> string (see the OpenGIS Simple\n   *         Features Specification).\n   * @memberof WKTWriter\n   */write:function write(geometry){return this.parser.write(geometry);}});extend(WKTWriter,{/**\n   * Generates the WKT for a <tt>LINESTRING</tt> specified by two\n   * {@link Coordinate}s.\n   *\n   * @param p0 the first coordinate.\n   * @param p1 the second coordinate.\n   *\n   * @return the WKT.\n   * @private\n   */toLineString:function toLineString(p0,p1){if(arguments.length!==2){throw new Error('Not implemented');}return'LINESTRING ( '+p0.x+' '+p0.y+', '+p1.x+' '+p1.y+' )';}});function LineIntersector(){this.result=null;this.inputLines=Array(2).fill().map(function(){return Array(2);});this.intPt=new Array(2).fill(null);this.intLineIndex=null;this._isProper=null;this.pa=null;this.pb=null;this.precisionModel=null;this.intPt[0]=new Coordinate();this.intPt[1]=new Coordinate();this.pa=this.intPt[0];this.pb=this.intPt[1];this.result=0;}extend(LineIntersector.prototype,{getIndexAlongSegment:function getIndexAlongSegment(segmentIndex,intIndex){this.computeIntLineIndex();return this.intLineIndex[segmentIndex][intIndex];},getTopologySummary:function getTopologySummary(){var catBuf=new StringBuffer();if(this.isEndPoint())catBuf.append(\" endpoint\");if(this._isProper)catBuf.append(\" proper\");if(this.isCollinear())catBuf.append(\" collinear\");return catBuf.toString();},computeIntersection:function computeIntersection(p1,p2,p3,p4){this.inputLines[0][0]=p1;this.inputLines[0][1]=p2;this.inputLines[1][0]=p3;this.inputLines[1][1]=p4;this.result=this.computeIntersect(p1,p2,p3,p4);},getIntersectionNum:function getIntersectionNum(){return this.result;},computeIntLineIndex:function computeIntLineIndex(){if(arguments.length===0){if(this.intLineIndex===null){this.intLineIndex=Array(2).fill().map(function(){return Array(2);});this.computeIntLineIndex(0);this.computeIntLineIndex(1);}}else if(arguments.length===1){var segmentIndex=arguments[0];var dist0=this.getEdgeDistance(segmentIndex,0);var dist1=this.getEdgeDistance(segmentIndex,1);if(dist0>dist1){this.intLineIndex[segmentIndex][0]=0;this.intLineIndex[segmentIndex][1]=1;}else{this.intLineIndex[segmentIndex][0]=1;this.intLineIndex[segmentIndex][1]=0;}}},isProper:function isProper(){return this.hasIntersection()&&this._isProper;},setPrecisionModel:function setPrecisionModel(precisionModel){this.precisionModel=precisionModel;},isInteriorIntersection:function isInteriorIntersection(){if(arguments.length===0){if(this.isInteriorIntersection(0))return true;if(this.isInteriorIntersection(1))return true;return false;}else if(arguments.length===1){var inputLineIndex=arguments[0];for(var i=0;i<this.result;i++){if(!(this.intPt[i].equals2D(this.inputLines[inputLineIndex][0])||this.intPt[i].equals2D(this.inputLines[inputLineIndex][1]))){return true;}}return false;}},getIntersection:function getIntersection(intIndex){return this.intPt[intIndex];},isEndPoint:function isEndPoint(){return this.hasIntersection()&&!this._isProper;},hasIntersection:function hasIntersection(){return this.result!==LineIntersector.NO_INTERSECTION;},getEdgeDistance:function getEdgeDistance(segmentIndex,intIndex){var dist=LineIntersector.computeEdgeDistance(this.intPt[intIndex],this.inputLines[segmentIndex][0],this.inputLines[segmentIndex][1]);return dist;},isCollinear:function isCollinear(){return this.result===LineIntersector.COLLINEAR_INTERSECTION;},toString:function toString(){return WKTWriter.toLineString(this.inputLines[0][0],this.inputLines[0][1])+\" - \"+WKTWriter.toLineString(this.inputLines[1][0],this.inputLines[1][1])+this.getTopologySummary();},getEndpoint:function getEndpoint(segmentIndex,ptIndex){return this.inputLines[segmentIndex][ptIndex];},isIntersection:function isIntersection(pt){for(var i=0;i<this.result;i++){if(this.intPt[i].equals2D(pt)){return true;}}return false;},getIntersectionAlongSegment:function getIntersectionAlongSegment(segmentIndex,intIndex){this.computeIntLineIndex();return this.intPt[this.intLineIndex[segmentIndex][intIndex]];},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return LineIntersector;}});LineIntersector.computeEdgeDistance=function(p,p0,p1){var dx=Math.abs(p1.x-p0.x);var dy=Math.abs(p1.y-p0.y);var dist=-1.0;if(p.equals(p0)){dist=0.0;}else if(p.equals(p1)){if(dx>dy)dist=dx;else dist=dy;}else{var pdx=Math.abs(p.x-p0.x);var pdy=Math.abs(p.y-p0.y);if(dx>dy)dist=pdx;else dist=pdy;if(dist===0.0&&!p.equals(p0)){dist=Math.max(pdx,pdy);}}Assert.isTrue(!(dist===0.0&&!p.equals(p0)),\"Bad distance calculation\");return dist;};LineIntersector.nonRobustComputeEdgeDistance=function(p,p1,p2){var dx=p.x-p1.x;var dy=p.y-p1.y;var dist=Math.sqrt(dx*dx+dy*dy);Assert.isTrue(!(dist===0.0&&!p.equals(p1)),\"Invalid distance calculation\");return dist;};LineIntersector.DONT_INTERSECT=0;LineIntersector.DO_INTERSECT=1;LineIntersector.COLLINEAR=2;LineIntersector.NO_INTERSECTION=0;LineIntersector.POINT_INTERSECTION=1;LineIntersector.COLLINEAR_INTERSECTION=2;function RobustLineIntersector(){LineIntersector.apply(this);}inherits(RobustLineIntersector,LineIntersector);extend(RobustLineIntersector.prototype,{isInSegmentEnvelopes:function isInSegmentEnvelopes(intPt){var env0=new Envelope(this.inputLines[0][0],this.inputLines[0][1]);var env1=new Envelope(this.inputLines[1][0],this.inputLines[1][1]);return env0.contains(intPt)&&env1.contains(intPt);},computeIntersection:function computeIntersection(){if(arguments.length===3){var p=arguments[0],p1=arguments[1],p2=arguments[2];this._isProper=false;if(Envelope.intersects(p1,p2,p)){if(CGAlgorithms.orientationIndex(p1,p2,p)===0&&CGAlgorithms.orientationIndex(p2,p1,p)===0){this._isProper=true;if(p.equals(p1)||p.equals(p2)){this._isProper=false;}this.result=LineIntersector.POINT_INTERSECTION;return null;}}this.result=LineIntersector.NO_INTERSECTION;}else return LineIntersector.prototype.computeIntersection.apply(this,arguments);},normalizeToMinimum:function normalizeToMinimum(n1,n2,n3,n4,normPt){normPt.x=this.smallestInAbsValue(n1.x,n2.x,n3.x,n4.x);normPt.y=this.smallestInAbsValue(n1.y,n2.y,n3.y,n4.y);n1.x-=normPt.x;n1.y-=normPt.y;n2.x-=normPt.x;n2.y-=normPt.y;n3.x-=normPt.x;n3.y-=normPt.y;n4.x-=normPt.x;n4.y-=normPt.y;},safeHCoordinateIntersection:function safeHCoordinateIntersection(p1,p2,q1,q2){var intPt=null;try{intPt=HCoordinate.intersection(p1,p2,q1,q2);}catch(e){if(e instanceof NotRepresentableException){intPt=RobustLineIntersector.nearestEndpoint(p1,p2,q1,q2);}else throw e;}finally{}return intPt;},intersection:function intersection(p1,p2,q1,q2){var intPt=this.intersectionWithNormalization(p1,p2,q1,q2);if(!this.isInSegmentEnvelopes(intPt)){intPt=new Coordinate(RobustLineIntersector.nearestEndpoint(p1,p2,q1,q2));}if(this.precisionModel!==null){this.precisionModel.makePrecise(intPt);}return intPt;},smallestInAbsValue:function smallestInAbsValue(x1,x2,x3,x4){var x=x1;var xabs=Math.abs(x);if(Math.abs(x2)<xabs){x=x2;xabs=Math.abs(x2);}if(Math.abs(x3)<xabs){x=x3;xabs=Math.abs(x3);}if(Math.abs(x4)<xabs){x=x4;}return x;},checkDD:function checkDD(p1,p2,q1,q2,intPt){var intPtDD=CGAlgorithmsDD.intersection(p1,p2,q1,q2);var isIn=this.isInSegmentEnvelopes(intPtDD);System.out.println(\"DD in env = \"+isIn+\"  --------------------- \"+intPtDD);if(intPt.distance(intPtDD)>0.0001){System.out.println(\"Distance = \"+intPt.distance(intPtDD));}},intersectionWithNormalization:function intersectionWithNormalization(p1,p2,q1,q2){var n1=new Coordinate(p1);var n2=new Coordinate(p2);var n3=new Coordinate(q1);var n4=new Coordinate(q2);var normPt=new Coordinate();this.normalizeToEnvCentre(n1,n2,n3,n4,normPt);var intPt=this.safeHCoordinateIntersection(n1,n2,n3,n4);intPt.x+=normPt.x;intPt.y+=normPt.y;return intPt;},computeCollinearIntersection:function computeCollinearIntersection(p1,p2,q1,q2){var p1q1p2=Envelope.intersects(p1,p2,q1);var p1q2p2=Envelope.intersects(p1,p2,q2);var q1p1q2=Envelope.intersects(q1,q2,p1);var q1p2q2=Envelope.intersects(q1,q2,p2);if(p1q1p2&&p1q2p2){this.intPt[0]=q1;this.intPt[1]=q2;return LineIntersector.COLLINEAR_INTERSECTION;}if(q1p1q2&&q1p2q2){this.intPt[0]=p1;this.intPt[1]=p2;return LineIntersector.COLLINEAR_INTERSECTION;}if(p1q1p2&&q1p1q2){this.intPt[0]=q1;this.intPt[1]=p1;return q1.equals(p1)&&!p1q2p2&&!q1p2q2?LineIntersector.POINT_INTERSECTION:LineIntersector.COLLINEAR_INTERSECTION;}if(p1q1p2&&q1p2q2){this.intPt[0]=q1;this.intPt[1]=p2;return q1.equals(p2)&&!p1q2p2&&!q1p1q2?LineIntersector.POINT_INTERSECTION:LineIntersector.COLLINEAR_INTERSECTION;}if(p1q2p2&&q1p1q2){this.intPt[0]=q2;this.intPt[1]=p1;return q2.equals(p1)&&!p1q1p2&&!q1p2q2?LineIntersector.POINT_INTERSECTION:LineIntersector.COLLINEAR_INTERSECTION;}if(p1q2p2&&q1p2q2){this.intPt[0]=q2;this.intPt[1]=p2;return q2.equals(p2)&&!p1q1p2&&!q1p1q2?LineIntersector.POINT_INTERSECTION:LineIntersector.COLLINEAR_INTERSECTION;}return LineIntersector.NO_INTERSECTION;},normalizeToEnvCentre:function normalizeToEnvCentre(n00,n01,n10,n11,normPt){var minX0=n00.x<n01.x?n00.x:n01.x;var minY0=n00.y<n01.y?n00.y:n01.y;var maxX0=n00.x>n01.x?n00.x:n01.x;var maxY0=n00.y>n01.y?n00.y:n01.y;var minX1=n10.x<n11.x?n10.x:n11.x;var minY1=n10.y<n11.y?n10.y:n11.y;var maxX1=n10.x>n11.x?n10.x:n11.x;var maxY1=n10.y>n11.y?n10.y:n11.y;var intMinX=minX0>minX1?minX0:minX1;var intMaxX=maxX0<maxX1?maxX0:maxX1;var intMinY=minY0>minY1?minY0:minY1;var intMaxY=maxY0<maxY1?maxY0:maxY1;var intMidX=(intMinX+intMaxX)/2.0;var intMidY=(intMinY+intMaxY)/2.0;normPt.x=intMidX;normPt.y=intMidY;n00.x-=normPt.x;n00.y-=normPt.y;n01.x-=normPt.x;n01.y-=normPt.y;n10.x-=normPt.x;n10.y-=normPt.y;n11.x-=normPt.x;n11.y-=normPt.y;},computeIntersect:function computeIntersect(p1,p2,q1,q2){this._isProper=false;if(!Envelope.intersects(p1,p2,q1,q2))return LineIntersector.NO_INTERSECTION;var Pq1=CGAlgorithms.orientationIndex(p1,p2,q1);var Pq2=CGAlgorithms.orientationIndex(p1,p2,q2);if(Pq1>0&&Pq2>0||Pq1<0&&Pq2<0){return LineIntersector.NO_INTERSECTION;}var Qp1=CGAlgorithms.orientationIndex(q1,q2,p1);var Qp2=CGAlgorithms.orientationIndex(q1,q2,p2);if(Qp1>0&&Qp2>0||Qp1<0&&Qp2<0){return LineIntersector.NO_INTERSECTION;}var collinear=Pq1===0&&Pq2===0&&Qp1===0&&Qp2===0;if(collinear){return this.computeCollinearIntersection(p1,p2,q1,q2);}if(Pq1===0||Pq2===0||Qp1===0||Qp2===0){this._isProper=false;if(p1.equals2D(q1)||p1.equals2D(q2)){this.intPt[0]=p1;}else if(p2.equals2D(q1)||p2.equals2D(q2)){this.intPt[0]=p2;}else if(Pq1===0){this.intPt[0]=new Coordinate(q1);}else if(Pq2===0){this.intPt[0]=new Coordinate(q2);}else if(Qp1===0){this.intPt[0]=new Coordinate(p1);}else if(Qp2===0){this.intPt[0]=new Coordinate(p2);}}else{this._isProper=true;this.intPt[0]=this.intersection(p1,p2,q1,q2);}return LineIntersector.POINT_INTERSECTION;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return RobustLineIntersector;}});RobustLineIntersector.nearestEndpoint=function(p1,p2,q1,q2){var nearestPt=p1;var minDist=CGAlgorithms.distancePointLine(p1,q1,q2);var dist=CGAlgorithms.distancePointLine(p2,q1,q2);if(dist<minDist){minDist=dist;nearestPt=p2;}dist=CGAlgorithms.distancePointLine(q1,p1,p2);if(dist<minDist){minDist=dist;nearestPt=q1;}dist=CGAlgorithms.distancePointLine(q2,p1,p2);if(dist<minDist){minDist=dist;nearestPt=q2;}return nearestPt;};function RobustDeterminant(){}extend(RobustDeterminant.prototype,{interfaces_:function interfaces_(){return[];},getClass:function getClass(){return RobustDeterminant;}});RobustDeterminant.orientationIndex=function(p1,p2,q){var dx1=p2.x-p1.x;var dy1=p2.y-p1.y;var dx2=q.x-p2.x;var dy2=q.y-p2.y;return RobustDeterminant.signOfDet2x2(dx1,dy1,dx2,dy2);};RobustDeterminant.signOfDet2x2=function(x1,y1,x2,y2){var sign=null;var swap=null;var k=null;var count=0;sign=1;if(x1===0.0||y2===0.0){if(y1===0.0||x2===0.0){return 0;}else if(y1>0){if(x2>0){return-sign;}else{return sign;}}else{if(x2>0){return sign;}else{return-sign;}}}if(y1===0.0||x2===0.0){if(y2>0){if(x1>0){return sign;}else{return-sign;}}else{if(x1>0){return-sign;}else{return sign;}}}if(0.0<y1){if(0.0<y2){if(y1<=y2){}else{sign=-sign;swap=x1;x1=x2;x2=swap;swap=y1;y1=y2;y2=swap;}}else{if(y1<=-y2){sign=-sign;x2=-x2;y2=-y2;}else{swap=x1;x1=-x2;x2=swap;swap=y1;y1=-y2;y2=swap;}}}else{if(0.0<y2){if(-y1<=y2){sign=-sign;x1=-x1;y1=-y1;}else{swap=-x1;x1=x2;x2=swap;swap=-y1;y1=y2;y2=swap;}}else{if(y1>=y2){x1=-x1;y1=-y1;x2=-x2;y2=-y2;}else{sign=-sign;swap=-x1;x1=-x2;x2=swap;swap=-y1;y1=-y2;y2=swap;}}}if(0.0<x1){if(0.0<x2){if(x1<=x2){}else{return sign;}}else{return sign;}}else{if(0.0<x2){return-sign;}else{if(x1>=x2){sign=-sign;x1=-x1;x2=-x2;}else{return-sign;}}}while(true){count=count+1;k=Math.floor(x2/x1);x2=x2-k*x1;y2=y2-k*y1;if(y2<0.0){return-sign;}if(y2>y1){return sign;}if(x1>x2+x2){if(y1<y2+y2){return sign;}}else{if(y1>y2+y2){return-sign;}else{x2=x1-x2;y2=y1-y2;sign=-sign;}}if(y2===0.0){if(x2===0.0){return 0;}else{return-sign;}}if(x2===0.0){return sign;}k=Math.floor(x1/x2);x1=x1-k*x2;y1=y1-k*y2;if(y1<0.0){return sign;}if(y1>y2){return-sign;}if(x2>x1+x1){if(y2<y1+y1){return-sign;}}else{if(y2>y1+y1){return sign;}else{x1=x2-x1;y1=y2-y1;sign=-sign;}}if(y1===0.0){if(x1===0.0){return 0;}else{return sign;}}if(x1===0.0){return-sign;}}};function RayCrossingCounter(){this.p=null;this.crossingCount=0;this.isPointOnSegment=false;var p=arguments[0];this.p=p;}extend(RayCrossingCounter.prototype,{countSegment:function countSegment(p1,p2){if(p1.x<this.p.x&&p2.x<this.p.x)return null;if(this.p.x===p2.x&&this.p.y===p2.y){this.isPointOnSegment=true;return null;}if(p1.y===this.p.y&&p2.y===this.p.y){var minx=p1.x;var maxx=p2.x;if(minx>maxx){minx=p2.x;maxx=p1.x;}if(this.p.x>=minx&&this.p.x<=maxx){this.isPointOnSegment=true;}return null;}if(p1.y>this.p.y&&p2.y<=this.p.y||p2.y>this.p.y&&p1.y<=this.p.y){var x1=p1.x-this.p.x;var y1=p1.y-this.p.y;var x2=p2.x-this.p.x;var y2=p2.y-this.p.y;var xIntSign=RobustDeterminant.signOfDet2x2(x1,y1,x2,y2);if(xIntSign===0.0){this.isPointOnSegment=true;return null;}if(y2<y1)xIntSign=-xIntSign;if(xIntSign>0.0){this.crossingCount++;}}},isPointInPolygon:function isPointInPolygon(){return this.getLocation()!==Location.EXTERIOR;},getLocation:function getLocation(){if(this.isPointOnSegment)return Location.BOUNDARY;if(this.crossingCount%2===1){return Location.INTERIOR;}return Location.EXTERIOR;},isOnSegment:function isOnSegment(){return this.isPointOnSegment;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return RayCrossingCounter;}});RayCrossingCounter.locatePointInRing=function(){if(arguments[0]instanceof Coordinate&&hasInterface(arguments[1],CoordinateSequence)){var p=arguments[0],ring=arguments[1];var counter=new RayCrossingCounter(p);var p1=new Coordinate();var p2=new Coordinate();for(var i=1;i<ring.size();i++){ring.getCoordinate(i,p1);ring.getCoordinate(i-1,p2);counter.countSegment(p1,p2);if(counter.isOnSegment())return counter.getLocation();}return counter.getLocation();}else if(arguments[0]instanceof Coordinate&&arguments[1]instanceof Array){var _p=arguments[0],_ring=arguments[1];var counter=new RayCrossingCounter(_p);for(var i=1;i<_ring.length;i++){var p1=_ring[i];var p2=_ring[i-1];counter.countSegment(p1,p2);if(counter.isOnSegment())return counter.getLocation();}return counter.getLocation();}};function CGAlgorithms(){}extend(CGAlgorithms.prototype,{interfaces_:function interfaces_(){return[];},getClass:function getClass(){return CGAlgorithms;}});CGAlgorithms.orientationIndex=function(p1,p2,q){return CGAlgorithmsDD.orientationIndex(p1,p2,q);};CGAlgorithms.signedArea=function(){if(arguments[0]instanceof Array){var ring=arguments[0];if(ring.length<3)return 0.0;var sum=0.0;var x0=ring[0].x;for(var i=1;i<ring.length-1;i++){var x=ring[i].x-x0;var y1=ring[i+1].y;var y2=ring[i-1].y;sum+=x*(y2-y1);}return sum/2.0;}else if(hasInterface(arguments[0],CoordinateSequence)){var _ring=arguments[0];var n=_ring.size();if(n<3)return 0.0;var p0=new Coordinate();var p1=new Coordinate();var p2=new Coordinate();_ring.getCoordinate(0,p1);_ring.getCoordinate(1,p2);var x0=p1.x;p2.x-=x0;var sum=0.0;for(var i=1;i<n-1;i++){p0.y=p1.y;p1.x=p2.x;p1.y=p2.y;_ring.getCoordinate(i+1,p2);p2.x-=x0;sum+=p1.x*(p0.y-p2.y);}return sum/2.0;}};CGAlgorithms.distanceLineLine=function(A,B,C,D){if(A.equals(B))return CGAlgorithms.distancePointLine(A,C,D);if(C.equals(D))return CGAlgorithms.distancePointLine(D,A,B);var noIntersection=false;if(!Envelope.intersects(A,B,C,D)){noIntersection=true;}else{var denom=(B.x-A.x)*(D.y-C.y)-(B.y-A.y)*(D.x-C.x);if(denom===0){noIntersection=true;}else{var r_num=(A.y-C.y)*(D.x-C.x)-(A.x-C.x)*(D.y-C.y);var s_num=(A.y-C.y)*(B.x-A.x)-(A.x-C.x)*(B.y-A.y);var s=s_num/denom;var r=r_num/denom;if(r<0||r>1||s<0||s>1){noIntersection=true;}}}if(noIntersection){return MathUtil.min(CGAlgorithms.distancePointLine(A,C,D),CGAlgorithms.distancePointLine(B,C,D),CGAlgorithms.distancePointLine(C,A,B),CGAlgorithms.distancePointLine(D,A,B));}return 0.0;};CGAlgorithms.isPointInRing=function(p,ring){return CGAlgorithms.locatePointInRing(p,ring)!==Location.EXTERIOR;};CGAlgorithms.computeLength=function(pts){var n=pts.size();if(n<=1)return 0.0;var len=0.0;var p=new Coordinate();pts.getCoordinate(0,p);var x0=p.x;var y0=p.y;for(var i=1;i<n;i++){pts.getCoordinate(i,p);var x1=p.x;var y1=p.y;var dx=x1-x0;var dy=y1-y0;len+=Math.sqrt(dx*dx+dy*dy);x0=x1;y0=y1;}return len;};CGAlgorithms.isCCW=function(ring){var nPts=ring.length-1;if(nPts<3)throw new IllegalArgumentException(\"Ring has fewer than 4 points, so orientation cannot be determined\");var hiPt=ring[0];var hiIndex=0;for(var i=1;i<=nPts;i++){var p=ring[i];if(p.y>hiPt.y){hiPt=p;hiIndex=i;}}var iPrev=hiIndex;do{iPrev=iPrev-1;if(iPrev<0)iPrev=nPts;}while(ring[iPrev].equals2D(hiPt)&&iPrev!==hiIndex);var iNext=hiIndex;do{iNext=(iNext+1)%nPts;}while(ring[iNext].equals2D(hiPt)&&iNext!==hiIndex);var prev=ring[iPrev];var next=ring[iNext];if(prev.equals2D(hiPt)||next.equals2D(hiPt)||prev.equals2D(next))return false;var disc=CGAlgorithms.computeOrientation(prev,hiPt,next);var isCCW=false;if(disc===0){isCCW=prev.x>next.x;}else{isCCW=disc>0;}return isCCW;};CGAlgorithms.locatePointInRing=function(p,ring){return RayCrossingCounter.locatePointInRing(p,ring);};CGAlgorithms.distancePointLinePerpendicular=function(p,A,B){var len2=(B.x-A.x)*(B.x-A.x)+(B.y-A.y)*(B.y-A.y);var s=((A.y-p.y)*(B.x-A.x)-(A.x-p.x)*(B.y-A.y))/len2;return Math.abs(s)*Math.sqrt(len2);};CGAlgorithms.computeOrientation=function(p1,p2,q){return CGAlgorithms.orientationIndex(p1,p2,q);};CGAlgorithms.distancePointLine=function(){if(arguments.length===2){var p=arguments[0],line=arguments[1];if(line.length===0)throw new IllegalArgumentException(\"Line array must contain at least one vertex\");var minDistance=p.distance(line[0]);for(var i=0;i<line.length-1;i++){var dist=CGAlgorithms.distancePointLine(p,line[i],line[i+1]);if(dist<minDistance){minDistance=dist;}}return minDistance;}else if(arguments.length===3){var _p=arguments[0],A=arguments[1],B=arguments[2];if(A.x===B.x&&A.y===B.y)return _p.distance(A);var len2=(B.x-A.x)*(B.x-A.x)+(B.y-A.y)*(B.y-A.y);var r=((_p.x-A.x)*(B.x-A.x)+(_p.y-A.y)*(B.y-A.y))/len2;if(r<=0.0)return _p.distance(A);if(r>=1.0)return _p.distance(B);var s=((A.y-_p.y)*(B.x-A.x)-(A.x-_p.x)*(B.y-A.y))/len2;return Math.abs(s)*Math.sqrt(len2);}};CGAlgorithms.isOnLine=function(p,pt){var lineIntersector=new RobustLineIntersector();for(var i=1;i<pt.length;i++){var p0=pt[i-1];var p1=pt[i];lineIntersector.computeIntersection(p,p0,p1);if(lineIntersector.hasIntersection()){return true;}}return false;};CGAlgorithms.CLOCKWISE=-1;CGAlgorithms.RIGHT=CGAlgorithms.CLOCKWISE;CGAlgorithms.COUNTERCLOCKWISE=1;CGAlgorithms.LEFT=CGAlgorithms.COUNTERCLOCKWISE;CGAlgorithms.COLLINEAR=0;CGAlgorithms.STRAIGHT=CGAlgorithms.COLLINEAR;function LineSegment(){this.p0=null;this.p1=null;if(arguments.length===0){LineSegment.call(this,new Coordinate(),new Coordinate());}else if(arguments.length===1){var ls=arguments[0];LineSegment.call(this,ls.p0,ls.p1);}else if(arguments.length===2){var p0=arguments[0],p1=arguments[1];this.p0=p0;this.p1=p1;}else if(arguments.length===4){var x0=arguments[0],y0=arguments[1],x1=arguments[2],y1=arguments[3];LineSegment.call(this,new Coordinate(x0,y0),new Coordinate(x1,y1));}}extend(LineSegment.prototype,{minX:function minX(){return Math.min(this.p0.x,this.p1.x);},orientationIndex:function orientationIndex(){if(arguments[0]instanceof LineSegment){var seg=arguments[0];var orient0=CGAlgorithms.orientationIndex(this.p0,this.p1,seg.p0);var orient1=CGAlgorithms.orientationIndex(this.p0,this.p1,seg.p1);if(orient0>=0&&orient1>=0)return Math.max(orient0,orient1);if(orient0<=0&&orient1<=0)return Math.max(orient0,orient1);return 0;}else if(arguments[0]instanceof Coordinate){var p=arguments[0];return CGAlgorithms.orientationIndex(this.p0,this.p1,p);}},toGeometry:function toGeometry(geomFactory){return geomFactory.createLineString([this.p0,this.p1]);},isVertical:function isVertical(){return this.p0.x===this.p1.x;},equals:function equals(o){if(!(o instanceof LineSegment)){return false;}var other=o;return this.p0.equals(other.p0)&&this.p1.equals(other.p1);},intersection:function intersection(line){var li=new RobustLineIntersector();li.computeIntersection(this.p0,this.p1,line.p0,line.p1);if(li.hasIntersection())return li.getIntersection(0);return null;},project:function project(){if(arguments[0]instanceof Coordinate){var p=arguments[0];if(p.equals(this.p0)||p.equals(this.p1))return new Coordinate(p);var r=this.projectionFactor(p);var coord=new Coordinate();coord.x=this.p0.x+r*(this.p1.x-this.p0.x);coord.y=this.p0.y+r*(this.p1.y-this.p0.y);return coord;}else if(arguments[0]instanceof LineSegment){var seg=arguments[0];var pf0=this.projectionFactor(seg.p0);var pf1=this.projectionFactor(seg.p1);if(pf0>=1.0&&pf1>=1.0)return null;if(pf0<=0.0&&pf1<=0.0)return null;var newp0=this.project(seg.p0);if(pf0<0.0)newp0=this.p0;if(pf0>1.0)newp0=this.p1;var newp1=this.project(seg.p1);if(pf1<0.0)newp1=this.p0;if(pf1>1.0)newp1=this.p1;return new LineSegment(newp0,newp1);}},normalize:function normalize(){if(this.p1.compareTo(this.p0)<0)this.reverse();},angle:function angle(){return Math.atan2(this.p1.y-this.p0.y,this.p1.x-this.p0.x);},getCoordinate:function getCoordinate(i){if(i===0)return this.p0;return this.p1;},distancePerpendicular:function distancePerpendicular(p){return CGAlgorithms.distancePointLinePerpendicular(p,this.p0,this.p1);},minY:function minY(){return Math.min(this.p0.y,this.p1.y);},midPoint:function midPoint(){return LineSegment.midPoint(this.p0,this.p1);},projectionFactor:function projectionFactor(p){if(p.equals(this.p0))return 0.0;if(p.equals(this.p1))return 1.0;var dx=this.p1.x-this.p0.x;var dy=this.p1.y-this.p0.y;var len=dx*dx+dy*dy;if(len<=0.0)return Double.NaN;var r=((p.x-this.p0.x)*dx+(p.y-this.p0.y)*dy)/len;return r;},closestPoints:function closestPoints(line){var intPt=this.intersection(line);if(intPt!==null){return[intPt,intPt];}var closestPt=new Array(2).fill(null);var minDistance=Double.MAX_VALUE;var dist=null;var close00=this.closestPoint(line.p0);minDistance=close00.distance(line.p0);closestPt[0]=close00;closestPt[1]=line.p0;var close01=this.closestPoint(line.p1);dist=close01.distance(line.p1);if(dist<minDistance){minDistance=dist;closestPt[0]=close01;closestPt[1]=line.p1;}var close10=line.closestPoint(this.p0);dist=close10.distance(this.p0);if(dist<minDistance){minDistance=dist;closestPt[0]=this.p0;closestPt[1]=close10;}var close11=line.closestPoint(this.p1);dist=close11.distance(this.p1);if(dist<minDistance){minDistance=dist;closestPt[0]=this.p1;closestPt[1]=close11;}return closestPt;},closestPoint:function closestPoint(p){var factor=this.projectionFactor(p);if(factor>0&&factor<1){return this.project(p);}var dist0=this.p0.distance(p);var dist1=this.p1.distance(p);if(dist0<dist1)return this.p0;return this.p1;},maxX:function maxX(){return Math.max(this.p0.x,this.p1.x);},getLength:function getLength(){return this.p0.distance(this.p1);},compareTo:function compareTo(o){var other=o;var comp0=this.p0.compareTo(other.p0);if(comp0!==0)return comp0;return this.p1.compareTo(other.p1);},reverse:function reverse(){var temp=this.p0;this.p0=this.p1;this.p1=temp;},equalsTopo:function equalsTopo(other){return this.p0.equals(other.p0)&&this.p1.equals(other.p1)||this.p0.equals(other.p1)&&this.p1.equals(other.p0);},lineIntersection:function lineIntersection(line){try{var intPt=HCoordinate.intersection(this.p0,this.p1,line.p0,line.p1);return intPt;}catch(ex){if(ex instanceof NotRepresentableException){}else throw ex;}finally{}return null;},maxY:function maxY(){return Math.max(this.p0.y,this.p1.y);},pointAlongOffset:function pointAlongOffset(segmentLengthFraction,offsetDistance){var segx=this.p0.x+segmentLengthFraction*(this.p1.x-this.p0.x);var segy=this.p0.y+segmentLengthFraction*(this.p1.y-this.p0.y);var dx=this.p1.x-this.p0.x;var dy=this.p1.y-this.p0.y;var len=Math.sqrt(dx*dx+dy*dy);var ux=0.0;var uy=0.0;if(offsetDistance!==0.0){if(len<=0.0)throw new IllegalStateException(\"Cannot compute offset from zero-length line segment\");ux=offsetDistance*dx/len;uy=offsetDistance*dy/len;}var offsetx=segx-uy;var offsety=segy+ux;var coord=new Coordinate(offsetx,offsety);return coord;},setCoordinates:function setCoordinates(){if(arguments.length===1){var ls=arguments[0];this.setCoordinates(ls.p0,ls.p1);}else if(arguments.length===2){var p0=arguments[0],p1=arguments[1];this.p0.x=p0.x;this.p0.y=p0.y;this.p1.x=p1.x;this.p1.y=p1.y;}},segmentFraction:function segmentFraction(inputPt){var segFrac=this.projectionFactor(inputPt);if(segFrac<0.0)segFrac=0.0;else if(segFrac>1.0||Double.isNaN(segFrac))segFrac=1.0;return segFrac;},toString:function toString(){return\"LINESTRING( \"+this.p0.x+\" \"+this.p0.y+\", \"+this.p1.x+\" \"+this.p1.y+\")\";},isHorizontal:function isHorizontal(){return this.p0.y===this.p1.y;},distance:function distance(){if(arguments[0]instanceof LineSegment){var ls=arguments[0];return CGAlgorithms.distanceLineLine(this.p0,this.p1,ls.p0,ls.p1);}else if(arguments[0]instanceof Coordinate){var p=arguments[0];return CGAlgorithms.distancePointLine(p,this.p0,this.p1);}},pointAlong:function pointAlong(segmentLengthFraction){var coord=new Coordinate();coord.x=this.p0.x+segmentLengthFraction*(this.p1.x-this.p0.x);coord.y=this.p0.y+segmentLengthFraction*(this.p1.y-this.p0.y);return coord;},hashCode:function hashCode(){var bits0=java.lang.Double.doubleToLongBits(this.p0.x);bits0^=java.lang.Double.doubleToLongBits(this.p0.y)*31;var hash0=Math.trunc(bits0)^Math.trunc(bits0>>32);var bits1=java.lang.Double.doubleToLongBits(this.p1.x);bits1^=java.lang.Double.doubleToLongBits(this.p1.y)*31;var hash1=Math.trunc(bits1)^Math.trunc(bits1>>32);return hash0^hash1;},interfaces_:function interfaces_(){return[Comparable,Serializable];},getClass:function getClass(){return LineSegment;}});LineSegment.midPoint=function(p0,p1){return new Coordinate((p0.x+p1.x)/2,(p0.y+p1.y)/2);};LineSegment.serialVersionUID=3252005833466256227;function IntersectionMatrix(){this.matrix=null;if(arguments.length===0){this.matrix=Array(3).fill().map(function(){return Array(3);});this.setAll(Dimension.FALSE);}else if(arguments.length===1){if(typeof arguments[0]===\"string\"){var elements=arguments[0];IntersectionMatrix.call(this);this.set(elements);}else if(arguments[0]instanceof IntersectionMatrix){var other=arguments[0];IntersectionMatrix.call(this);this.matrix[Location.INTERIOR][Location.INTERIOR]=other.matrix[Location.INTERIOR][Location.INTERIOR];this.matrix[Location.INTERIOR][Location.BOUNDARY]=other.matrix[Location.INTERIOR][Location.BOUNDARY];this.matrix[Location.INTERIOR][Location.EXTERIOR]=other.matrix[Location.INTERIOR][Location.EXTERIOR];this.matrix[Location.BOUNDARY][Location.INTERIOR]=other.matrix[Location.BOUNDARY][Location.INTERIOR];this.matrix[Location.BOUNDARY][Location.BOUNDARY]=other.matrix[Location.BOUNDARY][Location.BOUNDARY];this.matrix[Location.BOUNDARY][Location.EXTERIOR]=other.matrix[Location.BOUNDARY][Location.EXTERIOR];this.matrix[Location.EXTERIOR][Location.INTERIOR]=other.matrix[Location.EXTERIOR][Location.INTERIOR];this.matrix[Location.EXTERIOR][Location.BOUNDARY]=other.matrix[Location.EXTERIOR][Location.BOUNDARY];this.matrix[Location.EXTERIOR][Location.EXTERIOR]=other.matrix[Location.EXTERIOR][Location.EXTERIOR];}}}extend(IntersectionMatrix.prototype,{isIntersects:function isIntersects(){return!this.isDisjoint();},isCovers:function isCovers(){var hasPointInCommon=IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR])||IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.BOUNDARY])||IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.INTERIOR])||IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.BOUNDARY]);return hasPointInCommon&&this.matrix[Location.EXTERIOR][Location.INTERIOR]===Dimension.FALSE&&this.matrix[Location.EXTERIOR][Location.BOUNDARY]===Dimension.FALSE;},isCoveredBy:function isCoveredBy(){var hasPointInCommon=IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR])||IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.BOUNDARY])||IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.INTERIOR])||IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.BOUNDARY]);return hasPointInCommon&&this.matrix[Location.INTERIOR][Location.EXTERIOR]===Dimension.FALSE&&this.matrix[Location.BOUNDARY][Location.EXTERIOR]===Dimension.FALSE;},set:function set(){if(arguments.length===1){var dimensionSymbols=arguments[0];for(var i=0;i<dimensionSymbols.length;i++){var row=Math.trunc(i/3);var col=i%3;this.matrix[row][col]=Dimension.toDimensionValue(dimensionSymbols.charAt(i));}}else if(arguments.length===3){var _row=arguments[0],column=arguments[1],dimensionValue=arguments[2];this.matrix[_row][column]=dimensionValue;}},isContains:function isContains(){return IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR])&&this.matrix[Location.EXTERIOR][Location.INTERIOR]===Dimension.FALSE&&this.matrix[Location.EXTERIOR][Location.BOUNDARY]===Dimension.FALSE;},setAtLeast:function setAtLeast(){if(arguments.length===1){var minimumDimensionSymbols=arguments[0];for(var i=0;i<minimumDimensionSymbols.length;i++){var row=Math.trunc(i/3);var col=i%3;this.setAtLeast(row,col,Dimension.toDimensionValue(minimumDimensionSymbols.charAt(i)));}}else if(arguments.length===3){var _row2=arguments[0],column=arguments[1],minimumDimensionValue=arguments[2];if(this.matrix[_row2][column]<minimumDimensionValue){this.matrix[_row2][column]=minimumDimensionValue;}}},setAtLeastIfValid:function setAtLeastIfValid(row,column,minimumDimensionValue){if(row>=0&&column>=0){this.setAtLeast(row,column,minimumDimensionValue);}},isWithin:function isWithin(){return IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR])&&this.matrix[Location.INTERIOR][Location.EXTERIOR]===Dimension.FALSE&&this.matrix[Location.BOUNDARY][Location.EXTERIOR]===Dimension.FALSE;},isTouches:function isTouches(dimensionOfGeometryA,dimensionOfGeometryB){if(dimensionOfGeometryA>dimensionOfGeometryB){return this.isTouches(dimensionOfGeometryB,dimensionOfGeometryA);}if(dimensionOfGeometryA===Dimension.A&&dimensionOfGeometryB===Dimension.A||dimensionOfGeometryA===Dimension.L&&dimensionOfGeometryB===Dimension.L||dimensionOfGeometryA===Dimension.L&&dimensionOfGeometryB===Dimension.A||dimensionOfGeometryA===Dimension.P&&dimensionOfGeometryB===Dimension.A||dimensionOfGeometryA===Dimension.P&&dimensionOfGeometryB===Dimension.L){return this.matrix[Location.INTERIOR][Location.INTERIOR]===Dimension.FALSE&&(IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.BOUNDARY])||IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.INTERIOR])||IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.BOUNDARY]));}return false;},isOverlaps:function isOverlaps(dimensionOfGeometryA,dimensionOfGeometryB){if(dimensionOfGeometryA===Dimension.P&&dimensionOfGeometryB===Dimension.P||dimensionOfGeometryA===Dimension.A&&dimensionOfGeometryB===Dimension.A){return IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR])&&IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.EXTERIOR])&&IntersectionMatrix.isTrue(this.matrix[Location.EXTERIOR][Location.INTERIOR]);}if(dimensionOfGeometryA===Dimension.L&&dimensionOfGeometryB===Dimension.L){return this.matrix[Location.INTERIOR][Location.INTERIOR]===1&&IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.EXTERIOR])&&IntersectionMatrix.isTrue(this.matrix[Location.EXTERIOR][Location.INTERIOR]);}return false;},isEquals:function isEquals(dimensionOfGeometryA,dimensionOfGeometryB){if(dimensionOfGeometryA!==dimensionOfGeometryB){return false;}return IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR])&&this.matrix[Location.INTERIOR][Location.EXTERIOR]===Dimension.FALSE&&this.matrix[Location.BOUNDARY][Location.EXTERIOR]===Dimension.FALSE&&this.matrix[Location.EXTERIOR][Location.INTERIOR]===Dimension.FALSE&&this.matrix[Location.EXTERIOR][Location.BOUNDARY]===Dimension.FALSE;},toString:function toString(){var buf=new StringBuffer(\"123456789\");for(var ai=0;ai<3;ai++){for(var bi=0;bi<3;bi++){buf.setCharAt(3*ai+bi,Dimension.toDimensionSymbol(this.matrix[ai][bi]));}}return buf.toString();},setAll:function setAll(dimensionValue){for(var ai=0;ai<3;ai++){for(var bi=0;bi<3;bi++){this.matrix[ai][bi]=dimensionValue;}}},get:function get(row,column){return this.matrix[row][column];},transpose:function transpose(){var temp=this.matrix[1][0];this.matrix[1][0]=this.matrix[0][1];this.matrix[0][1]=temp;temp=this.matrix[2][0];this.matrix[2][0]=this.matrix[0][2];this.matrix[0][2]=temp;temp=this.matrix[2][1];this.matrix[2][1]=this.matrix[1][2];this.matrix[1][2]=temp;return this;},matches:function matches(requiredDimensionSymbols){if(requiredDimensionSymbols.length!==9){throw new IllegalArgumentException(\"Should be length 9: \"+requiredDimensionSymbols);}for(var ai=0;ai<3;ai++){for(var bi=0;bi<3;bi++){if(!IntersectionMatrix.matches(this.matrix[ai][bi],requiredDimensionSymbols.charAt(3*ai+bi))){return false;}}}return true;},add:function add(im){for(var i=0;i<3;i++){for(var j=0;j<3;j++){this.setAtLeast(i,j,im.get(i,j));}}},isDisjoint:function isDisjoint(){return this.matrix[Location.INTERIOR][Location.INTERIOR]===Dimension.FALSE&&this.matrix[Location.INTERIOR][Location.BOUNDARY]===Dimension.FALSE&&this.matrix[Location.BOUNDARY][Location.INTERIOR]===Dimension.FALSE&&this.matrix[Location.BOUNDARY][Location.BOUNDARY]===Dimension.FALSE;},isCrosses:function isCrosses(dimensionOfGeometryA,dimensionOfGeometryB){if(dimensionOfGeometryA===Dimension.P&&dimensionOfGeometryB===Dimension.L||dimensionOfGeometryA===Dimension.P&&dimensionOfGeometryB===Dimension.A||dimensionOfGeometryA===Dimension.L&&dimensionOfGeometryB===Dimension.A){return IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR])&&IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.EXTERIOR]);}if(dimensionOfGeometryA===Dimension.L&&dimensionOfGeometryB===Dimension.P||dimensionOfGeometryA===Dimension.A&&dimensionOfGeometryB===Dimension.P||dimensionOfGeometryA===Dimension.A&&dimensionOfGeometryB===Dimension.L){return IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR])&&IntersectionMatrix.isTrue(this.matrix[Location.EXTERIOR][Location.INTERIOR]);}if(dimensionOfGeometryA===Dimension.L&&dimensionOfGeometryB===Dimension.L){return this.matrix[Location.INTERIOR][Location.INTERIOR]===0;}return false;},interfaces_:function interfaces_(){return[Clonable];},getClass:function getClass(){return IntersectionMatrix;}});IntersectionMatrix.matches=function(){if(Number.isInteger(arguments[0])&&typeof arguments[1]===\"string\"){var actualDimensionValue=arguments[0],requiredDimensionSymbol=arguments[1];if(requiredDimensionSymbol===Dimension.SYM_DONTCARE){return true;}if(requiredDimensionSymbol===Dimension.SYM_TRUE&&(actualDimensionValue>=0||actualDimensionValue===Dimension.TRUE)){return true;}if(requiredDimensionSymbol===Dimension.SYM_FALSE&&actualDimensionValue===Dimension.FALSE){return true;}if(requiredDimensionSymbol===Dimension.SYM_P&&actualDimensionValue===Dimension.P){return true;}if(requiredDimensionSymbol===Dimension.SYM_L&&actualDimensionValue===Dimension.L){return true;}if(requiredDimensionSymbol===Dimension.SYM_A&&actualDimensionValue===Dimension.A){return true;}return false;}else if(typeof arguments[0]===\"string\"&&typeof arguments[1]===\"string\"){var actualDimensionSymbols=arguments[0],requiredDimensionSymbols=arguments[1];var m=new IntersectionMatrix(actualDimensionSymbols);return m.matches(requiredDimensionSymbols);}};IntersectionMatrix.isTrue=function(actualDimensionValue){if(actualDimensionValue>=0||actualDimensionValue===Dimension.TRUE){return true;}return false;};var geom=Object.freeze({Coordinate:Coordinate,CoordinateList:CoordinateList,Envelope:Envelope,LineSegment:LineSegment,GeometryFactory:GeometryFactory,Geometry:Geometry,Point:Point,LineString:LineString,LinearRing:LinearRing,Polygon:Polygon,GeometryCollection:GeometryCollection,MultiPoint:MultiPoint,MultiLineString:MultiLineString,MultiPolygon:MultiPolygon,Dimension:Dimension,IntersectionMatrix:IntersectionMatrix,PrecisionModel:PrecisionModel});function Centroid(){this.areaBasePt=null;this.triangleCent3=new Coordinate();this.areasum2=0;this.cg3=new Coordinate();this.lineCentSum=new Coordinate();this.totalLength=0.0;this.ptCount=0;this.ptCentSum=new Coordinate();var geom=arguments[0];this.areaBasePt=null;this.add(geom);}extend(Centroid.prototype,{addPoint:function addPoint(pt){this.ptCount+=1;this.ptCentSum.x+=pt.x;this.ptCentSum.y+=pt.y;},setBasePoint:function setBasePoint(basePt){if(this.areaBasePt===null)this.areaBasePt=basePt;},addLineSegments:function addLineSegments(pts){var lineLen=0.0;for(var i=0;i<pts.length-1;i++){var segmentLen=pts[i].distance(pts[i+1]);if(segmentLen===0.0)continue;lineLen+=segmentLen;var midx=(pts[i].x+pts[i+1].x)/2;this.lineCentSum.x+=segmentLen*midx;var midy=(pts[i].y+pts[i+1].y)/2;this.lineCentSum.y+=segmentLen*midy;}this.totalLength+=lineLen;if(lineLen===0.0&&pts.length>0)this.addPoint(pts[0]);},addHole:function addHole(pts){var isPositiveArea=CGAlgorithms.isCCW(pts);for(var i=0;i<pts.length-1;i++){this.addTriangle(this.areaBasePt,pts[i],pts[i+1],isPositiveArea);}this.addLineSegments(pts);},getCentroid:function getCentroid(){var cent=new Coordinate();if(Math.abs(this.areasum2)>0.0){cent.x=this.cg3.x/3/this.areasum2;cent.y=this.cg3.y/3/this.areasum2;}else if(this.totalLength>0.0){cent.x=this.lineCentSum.x/this.totalLength;cent.y=this.lineCentSum.y/this.totalLength;}else if(this.ptCount>0){cent.x=this.ptCentSum.x/this.ptCount;cent.y=this.ptCentSum.y/this.ptCount;}else{return null;}return cent;},addShell:function addShell(pts){if(pts.length>0)this.setBasePoint(pts[0]);var isPositiveArea=!CGAlgorithms.isCCW(pts);for(var i=0;i<pts.length-1;i++){this.addTriangle(this.areaBasePt,pts[i],pts[i+1],isPositiveArea);}this.addLineSegments(pts);},addTriangle:function addTriangle(p0,p1,p2,isPositiveArea){var sign=isPositiveArea?1.0:-1.0;Centroid.centroid3(p0,p1,p2,this.triangleCent3);var area2=Centroid.area2(p0,p1,p2);this.cg3.x+=sign*area2*this.triangleCent3.x;this.cg3.y+=sign*area2*this.triangleCent3.y;this.areasum2+=sign*area2;},add:function add(){if(arguments[0]instanceof Polygon){var _poly=arguments[0];this.addShell(_poly.getExteriorRing().getCoordinates());for(var i=0;i<_poly.getNumInteriorRing();i++){this.addHole(_poly.getInteriorRingN(i).getCoordinates());}}else if(arguments[0]instanceof Geometry){var geom=arguments[0];if(geom.isEmpty())return null;if(geom instanceof Point){this.addPoint(geom.getCoordinate());}else if(geom instanceof LineString){this.addLineSegments(geom.getCoordinates());}else if(geom instanceof Polygon){var poly=geom;this.add(poly);}else if(geom instanceof GeometryCollection){var gc=geom;for(var i=0;i<gc.getNumGeometries();i++){this.add(gc.getGeometryN(i));}}}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Centroid;}});Centroid.area2=function(p1,p2,p3){return(p2.x-p1.x)*(p3.y-p1.y)-(p3.x-p1.x)*(p2.y-p1.y);};Centroid.centroid3=function(p1,p2,p3,c){c.x=p1.x+p2.x+p3.x;c.y=p1.y+p2.y+p3.y;return null;};Centroid.getCentroid=function(geom){var cent=new Centroid(geom);return cent.getCentroid();};/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */function EmptyStackException(message){this.message=message||'';}EmptyStackException.prototype=new Error();/**\n * @type {string}\n */EmptyStackException.prototype.name='EmptyStackException';/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Stack.html\n *\n * @extends {List}\n * @constructor\n * @private\n */function Stack(){/**\n   * @type {Array}\n   * @private\n   */this.array_=[];}Stack.prototype=new List();/**\n * @override\n */Stack.prototype.add=function(e){this.array_.push(e);return true;};/**\n * @override\n */Stack.prototype.get=function(index){if(index<0||index>=this.size()){throw new IndexOutOfBoundsException();}return this.array_[index];};/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */Stack.prototype.push=function(e){this.array_.push(e);return e;};/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */Stack.prototype.pop=function(e){if(this.array_.length===0){throw new EmptyStackException();}return this.array_.pop();};/**\n * Looks at the object at the top of this stack without removing it from the\n * stack.\n * @return {Object}\n */Stack.prototype.peek=function(){if(this.array_.length===0){throw new EmptyStackException();}return this.array_[this.array_.length-1];};/**\n * Tests if this stack is empty.\n * @return {boolean} true if and only if this stack contains no items; false\n *         otherwise.\n */Stack.prototype.empty=function(){if(this.array_.length===0){return true;}else{return false;}};/**\n * @return {boolean}\n */Stack.prototype.isEmpty=function(){return this.empty();};/**\n * Returns the 1-based position where an object is on this stack. If the object\n * o occurs as an item in this stack, this method returns the distance from the\n * top of the stack of the occurrence nearest the top of the stack; the topmost\n * item on the stack is considered to be at distance 1. The equals method is\n * used to compare o to the items in this stack.\n *\n * NOTE: does not currently actually use equals. (=== is used)\n *\n * @param {Object} o\n * @return {number} the 1-based position from the top of the stack where the\n *         object is located; the return value -1 indicates that the object is\n *         not on the stack.\n */Stack.prototype.search=function(o){return this.array_.indexOf(o);};/**\n * @return {number}\n * @export\n */Stack.prototype.size=function(){return this.array_.length;};/**\n * @return {Array}\n */Stack.prototype.toArray=function(){var array=[];for(var i=0,len=this.array_.length;i<len;i++){array.push(this.array_[i]);}return array;};function UniqueCoordinateArrayFilter(){this.treeSet=new TreeSet();this.list=new ArrayList();}extend(UniqueCoordinateArrayFilter.prototype,{filter:function filter(coord){if(!this.treeSet.contains(coord)){this.list.add(coord);this.treeSet.add(coord);}},getCoordinates:function getCoordinates(){var coordinates=new Array(this.list.size()).fill(null);return this.list.toArray(coordinates);},interfaces_:function interfaces_(){return[CoordinateFilter];},getClass:function getClass(){return UniqueCoordinateArrayFilter;}});UniqueCoordinateArrayFilter.filterCoordinates=function(coords){var filter=new UniqueCoordinateArrayFilter();for(var i=0;i<coords.length;i++){filter.filter(coords[i]);}return filter.getCoordinates();};function ConvexHull(){this.geomFactory=null;this.inputPts=null;if(arguments.length===1){var geometry=arguments[0];ConvexHull.call(this,ConvexHull.extractCoordinates(geometry),geometry.getFactory());}else if(arguments.length===2){var pts=arguments[0],geomFactory=arguments[1];this.inputPts=UniqueCoordinateArrayFilter.filterCoordinates(pts);this.geomFactory=geomFactory;}}extend(ConvexHull.prototype,{preSort:function preSort(pts){var t=null;for(var i=1;i<pts.length;i++){if(pts[i].y<pts[0].y||pts[i].y===pts[0].y&&pts[i].x<pts[0].x){t=pts[0];pts[0]=pts[i];pts[i]=t;}}Arrays.sort(pts,1,pts.length,new RadialComparator(pts[0]));return pts;},computeOctRing:function computeOctRing(inputPts){var octPts=this.computeOctPts(inputPts);var coordList=new CoordinateList();coordList.add(octPts,false);if(coordList.size()<3){return null;}coordList.closeRing();return coordList.toCoordinateArray();},lineOrPolygon:function lineOrPolygon(coordinates){coordinates=this.cleanRing(coordinates);if(coordinates.length===3){return this.geomFactory.createLineString([coordinates[0],coordinates[1]]);}var linearRing=this.geomFactory.createLinearRing(coordinates);return this.geomFactory.createPolygon(linearRing,null);},cleanRing:function cleanRing(original){Assert.equals(original[0],original[original.length-1]);var cleanedRing=new ArrayList();var previousDistinctCoordinate=null;for(var i=0;i<=original.length-2;i++){var currentCoordinate=original[i];var nextCoordinate=original[i+1];if(currentCoordinate.equals(nextCoordinate)){continue;}if(previousDistinctCoordinate!==null&&this.isBetween(previousDistinctCoordinate,currentCoordinate,nextCoordinate)){continue;}cleanedRing.add(currentCoordinate);previousDistinctCoordinate=currentCoordinate;}cleanedRing.add(original[original.length-1]);var cleanedRingCoordinates=new Array(cleanedRing.size()).fill(null);return cleanedRing.toArray(cleanedRingCoordinates);},isBetween:function isBetween(c1,c2,c3){if(CGAlgorithms.computeOrientation(c1,c2,c3)!==0){return false;}if(c1.x!==c3.x){if(c1.x<=c2.x&&c2.x<=c3.x){return true;}if(c3.x<=c2.x&&c2.x<=c1.x){return true;}}if(c1.y!==c3.y){if(c1.y<=c2.y&&c2.y<=c3.y){return true;}if(c3.y<=c2.y&&c2.y<=c1.y){return true;}}return false;},reduce:function reduce(inputPts){var polyPts=this.computeOctRing(inputPts);if(polyPts===null)return inputPts;var reducedSet=new TreeSet();for(var i=0;i<polyPts.length;i++){reducedSet.add(polyPts[i]);}for(var i=0;i<inputPts.length;i++){if(!CGAlgorithms.isPointInRing(inputPts[i],polyPts)){reducedSet.add(inputPts[i]);}}var reducedPts=CoordinateArrays.toCoordinateArray(reducedSet);if(reducedPts.length<3)return this.padArray3(reducedPts);return reducedPts;},getConvexHull:function getConvexHull(){if(this.inputPts.length===0){return this.geomFactory.createGeometryCollection(null);}if(this.inputPts.length===1){return this.geomFactory.createPoint(this.inputPts[0]);}if(this.inputPts.length===2){return this.geomFactory.createLineString(this.inputPts);}var reducedPts=this.inputPts;if(this.inputPts.length>50){reducedPts=this.reduce(this.inputPts);}var sortedPts=this.preSort(reducedPts);var cHS=this.grahamScan(sortedPts);var cH=this.toCoordinateArray(cHS);return this.lineOrPolygon(cH);},padArray3:function padArray3(pts){var pad=new Array(3).fill(null);for(var i=0;i<pad.length;i++){if(i<pts.length){pad[i]=pts[i];}else pad[i]=pts[0];}return pad;},computeOctPts:function computeOctPts(inputPts){var pts=new Array(8).fill(null);for(var j=0;j<pts.length;j++){pts[j]=inputPts[0];}for(var i=1;i<inputPts.length;i++){if(inputPts[i].x<pts[0].x){pts[0]=inputPts[i];}if(inputPts[i].x-inputPts[i].y<pts[1].x-pts[1].y){pts[1]=inputPts[i];}if(inputPts[i].y>pts[2].y){pts[2]=inputPts[i];}if(inputPts[i].x+inputPts[i].y>pts[3].x+pts[3].y){pts[3]=inputPts[i];}if(inputPts[i].x>pts[4].x){pts[4]=inputPts[i];}if(inputPts[i].x-inputPts[i].y>pts[5].x-pts[5].y){pts[5]=inputPts[i];}if(inputPts[i].y<pts[6].y){pts[6]=inputPts[i];}if(inputPts[i].x+inputPts[i].y<pts[7].x+pts[7].y){pts[7]=inputPts[i];}}return pts;},toCoordinateArray:function toCoordinateArray(stack){var coordinates=new Array(stack.size()).fill(null);for(var i=0;i<stack.size();i++){var coordinate=stack.get(i);coordinates[i]=coordinate;}return coordinates;},grahamScan:function grahamScan(c){var p=null;var ps=new Stack();p=ps.push(c[0]);p=ps.push(c[1]);p=ps.push(c[2]);for(var i=3;i<c.length;i++){p=ps.pop();while(!ps.empty()&&CGAlgorithms.computeOrientation(ps.peek(),p,c[i])>0){p=ps.pop();}p=ps.push(p);p=ps.push(c[i]);}p=ps.push(c[0]);return ps;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return ConvexHull;}});ConvexHull.extractCoordinates=function(geom){var filter=new UniqueCoordinateArrayFilter();geom.apply(filter);return filter.getCoordinates();};function RadialComparator(){this.origin=null;var origin=arguments[0];this.origin=origin;}extend(RadialComparator.prototype,{compare:function compare(o1,o2){var p1=o1;var p2=o2;return RadialComparator.polarCompare(this.origin,p1,p2);},interfaces_:function interfaces_(){return[Comparator];},getClass:function getClass(){return RadialComparator;}});RadialComparator.polarCompare=function(o,p,q){var dxp=p.x-o.x;var dyp=p.y-o.y;var dxq=q.x-o.x;var dyq=q.y-o.y;var orient=CGAlgorithms.computeOrientation(o,p,q);if(orient===CGAlgorithms.COUNTERCLOCKWISE)return 1;if(orient===CGAlgorithms.CLOCKWISE)return-1;var op=dxp*dxp+dyp*dyp;var oq=dxq*dxq+dyq*dyq;if(op<oq){return-1;}if(op>oq){return 1;}return 0;};ConvexHull.RadialComparator=RadialComparator;function GeometryTransformer(){this.inputGeom=null;this.factory=null;this.pruneEmptyGeometry=true;this.preserveGeometryCollectionType=true;this.preserveCollections=false;this.preserveType=false;}extend(GeometryTransformer.prototype,{transformPoint:function transformPoint(geom,parent){return this.factory.createPoint(this.transformCoordinates(geom.getCoordinateSequence(),geom));},transformPolygon:function transformPolygon(geom,parent){var isAllValidLinearRings=true;var shell=this.transformLinearRing(geom.getExteriorRing(),geom);if(shell===null||!(shell instanceof LinearRing)||shell.isEmpty())isAllValidLinearRings=false;var holes=new ArrayList();for(var i=0;i<geom.getNumInteriorRing();i++){var hole=this.transformLinearRing(geom.getInteriorRingN(i),geom);if(hole===null||hole.isEmpty()){continue;}if(!(hole instanceof LinearRing))isAllValidLinearRings=false;holes.add(hole);}if(isAllValidLinearRings)return this.factory.createPolygon(shell,holes.toArray([]));else{var components=new ArrayList();if(shell!==null)components.add(shell);components.addAll(holes);return this.factory.buildGeometry(components);}},createCoordinateSequence:function createCoordinateSequence(coords){return this.factory.getCoordinateSequenceFactory().create(coords);},getInputGeometry:function getInputGeometry(){return this.inputGeom;},transformMultiLineString:function transformMultiLineString(geom,parent){var transGeomList=new ArrayList();for(var i=0;i<geom.getNumGeometries();i++){var transformGeom=this.transformLineString(geom.getGeometryN(i),geom);if(transformGeom===null)continue;if(transformGeom.isEmpty())continue;transGeomList.add(transformGeom);}return this.factory.buildGeometry(transGeomList);},transformCoordinates:function transformCoordinates(coords,parent){return this.copy(coords);},transformLineString:function transformLineString(geom,parent){return this.factory.createLineString(this.transformCoordinates(geom.getCoordinateSequence(),geom));},transformMultiPoint:function transformMultiPoint(geom,parent){var transGeomList=new ArrayList();for(var i=0;i<geom.getNumGeometries();i++){var transformGeom=this.transformPoint(geom.getGeometryN(i),geom);if(transformGeom===null)continue;if(transformGeom.isEmpty())continue;transGeomList.add(transformGeom);}return this.factory.buildGeometry(transGeomList);},transformMultiPolygon:function transformMultiPolygon(geom,parent){var transGeomList=new ArrayList();for(var i=0;i<geom.getNumGeometries();i++){var transformGeom=this.transformPolygon(geom.getGeometryN(i),geom);if(transformGeom===null)continue;if(transformGeom.isEmpty())continue;transGeomList.add(transformGeom);}return this.factory.buildGeometry(transGeomList);},copy:function copy(seq){return seq.copy();},transformGeometryCollection:function transformGeometryCollection(geom,parent){var transGeomList=new ArrayList();for(var i=0;i<geom.getNumGeometries();i++){var transformGeom=this.transform(geom.getGeometryN(i));if(transformGeom===null)continue;if(this.pruneEmptyGeometry&&transformGeom.isEmpty())continue;transGeomList.add(transformGeom);}if(this.preserveGeometryCollectionType)return this.factory.createGeometryCollection(GeometryFactory.toGeometryArray(transGeomList));return this.factory.buildGeometry(transGeomList);},transform:function transform(inputGeom){this.inputGeom=inputGeom;this.factory=inputGeom.getFactory();if(inputGeom instanceof Point)return this.transformPoint(inputGeom,null);if(inputGeom instanceof MultiPoint)return this.transformMultiPoint(inputGeom,null);if(inputGeom instanceof LinearRing)return this.transformLinearRing(inputGeom,null);if(inputGeom instanceof LineString)return this.transformLineString(inputGeom,null);if(inputGeom instanceof MultiLineString)return this.transformMultiLineString(inputGeom,null);if(inputGeom instanceof Polygon)return this.transformPolygon(inputGeom,null);if(inputGeom instanceof MultiPolygon)return this.transformMultiPolygon(inputGeom,null);if(inputGeom instanceof GeometryCollection)return this.transformGeometryCollection(inputGeom,null);throw new IllegalArgumentException(\"Unknown Geometry subtype: \"+inputGeom.getClass().getName());},transformLinearRing:function transformLinearRing(geom,parent){var seq=this.transformCoordinates(geom.getCoordinateSequence(),geom);if(seq===null)return this.factory.createLinearRing(null);var seqSize=seq.size();if(seqSize>0&&seqSize<4&&!this.preserveType)return this.factory.createLineString(seq);return this.factory.createLinearRing(seq);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return GeometryTransformer;}});function LineStringSnapper(){this.snapTolerance=0.0;this.srcPts=null;this.seg=new LineSegment();this.allowSnappingToSourceVertices=false;this._isClosed=false;if(arguments[0]instanceof LineString&&typeof arguments[1]===\"number\"){var srcLine=arguments[0],snapTolerance=arguments[1];LineStringSnapper.call(this,srcLine.getCoordinates(),snapTolerance);}else if(arguments[0]instanceof Array&&typeof arguments[1]===\"number\"){var srcPts=arguments[0],_snapTolerance=arguments[1];this.srcPts=srcPts;this._isClosed=LineStringSnapper.isClosed(srcPts);this.snapTolerance=_snapTolerance;}}extend(LineStringSnapper.prototype,{snapVertices:function snapVertices(srcCoords,snapPts){var end=this._isClosed?srcCoords.size()-1:srcCoords.size();for(var i=0;i<end;i++){var srcPt=srcCoords.get(i);var snapVert=this.findSnapForVertex(srcPt,snapPts);if(snapVert!==null){srcCoords.set(i,new Coordinate(snapVert));if(i===0&&this._isClosed)srcCoords.set(srcCoords.size()-1,new Coordinate(snapVert));}}},findSnapForVertex:function findSnapForVertex(pt,snapPts){for(var i=0;i<snapPts.length;i++){if(pt.equals2D(snapPts[i]))return null;if(pt.distance(snapPts[i])<this.snapTolerance)return snapPts[i];}return null;},snapTo:function snapTo(snapPts){var coordList=new CoordinateList(this.srcPts);this.snapVertices(coordList,snapPts);this.snapSegments(coordList,snapPts);var newPts=coordList.toCoordinateArray();return newPts;},snapSegments:function snapSegments(srcCoords,snapPts){if(snapPts.length===0)return null;var distinctPtCount=snapPts.length;if(snapPts[0].equals2D(snapPts[snapPts.length-1]))distinctPtCount=snapPts.length-1;for(var i=0;i<distinctPtCount;i++){var snapPt=snapPts[i];var index=this.findSegmentIndexToSnap(snapPt,srcCoords);if(index>=0){srcCoords.add(index+1,new Coordinate(snapPt),false);}}},findSegmentIndexToSnap:function findSegmentIndexToSnap(snapPt,srcCoords){var minDist=Double.MAX_VALUE;var snapIndex=-1;for(var i=0;i<srcCoords.size()-1;i++){this.seg.p0=srcCoords.get(i);this.seg.p1=srcCoords.get(i+1);if(this.seg.p0.equals2D(snapPt)||this.seg.p1.equals2D(snapPt)){if(this.allowSnappingToSourceVertices)continue;else return-1;}var dist=this.seg.distance(snapPt);if(dist<this.snapTolerance&&dist<minDist){minDist=dist;snapIndex=i;}}return snapIndex;},setAllowSnappingToSourceVertices:function setAllowSnappingToSourceVertices(allowSnappingToSourceVertices){this.allowSnappingToSourceVertices=allowSnappingToSourceVertices;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return LineStringSnapper;}});LineStringSnapper.isClosed=function(pts){if(pts.length<=1)return false;return pts[0].equals2D(pts[pts.length-1]);};function GeometrySnapper(){this.srcGeom=null;var srcGeom=arguments[0];this.srcGeom=srcGeom;}extend(GeometrySnapper.prototype,{snapTo:function snapTo(snapGeom,snapTolerance){var snapPts=this.extractTargetCoordinates(snapGeom);var snapTrans=new SnapTransformer(snapTolerance,snapPts);return snapTrans.transform(this.srcGeom);},snapToSelf:function snapToSelf(snapTolerance,cleanResult){var snapPts=this.extractTargetCoordinates(this.srcGeom);var snapTrans=new SnapTransformer(snapTolerance,snapPts,true);var snappedGeom=snapTrans.transform(this.srcGeom);var result=snappedGeom;if(cleanResult&&hasInterface(result,Polygonal)){result=snappedGeom.buffer(0);}return result;},computeSnapTolerance:function computeSnapTolerance(ringPts){var minSegLen=this.computeMinimumSegmentLength(ringPts);var snapTol=minSegLen/10;return snapTol;},extractTargetCoordinates:function extractTargetCoordinates(g){var ptSet=new TreeSet();var pts=g.getCoordinates();for(var i=0;i<pts.length;i++){ptSet.add(pts[i]);}return ptSet.toArray(new Array(0).fill(null));},computeMinimumSegmentLength:function computeMinimumSegmentLength(pts){var minSegLen=Double.MAX_VALUE;for(var i=0;i<pts.length-1;i++){var segLen=pts[i].distance(pts[i+1]);if(segLen<minSegLen)minSegLen=segLen;}return minSegLen;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return GeometrySnapper;}});GeometrySnapper.snap=function(g0,g1,snapTolerance){var snapGeom=new Array(2).fill(null);var snapper0=new GeometrySnapper(g0);snapGeom[0]=snapper0.snapTo(g1,snapTolerance);var snapper1=new GeometrySnapper(g1);snapGeom[1]=snapper1.snapTo(snapGeom[0],snapTolerance);return snapGeom;};GeometrySnapper.computeOverlaySnapTolerance=function(){if(arguments.length===1){var g=arguments[0];var snapTolerance=GeometrySnapper.computeSizeBasedSnapTolerance(g);var pm=g.getPrecisionModel();if(pm.getType()===PrecisionModel.FIXED){var fixedSnapTol=1/pm.getScale()*2/1.415;if(fixedSnapTol>snapTolerance)snapTolerance=fixedSnapTol;}return snapTolerance;}else if(arguments.length===2){var g0=arguments[0],g1=arguments[1];return Math.min(GeometrySnapper.computeOverlaySnapTolerance(g0),GeometrySnapper.computeOverlaySnapTolerance(g1));}};GeometrySnapper.computeSizeBasedSnapTolerance=function(g){var env=g.getEnvelopeInternal();var minDimension=Math.min(env.getHeight(),env.getWidth());var snapTol=minDimension*GeometrySnapper.SNAP_PRECISION_FACTOR;return snapTol;};GeometrySnapper.snapToSelf=function(geom,snapTolerance,cleanResult){var snapper0=new GeometrySnapper(geom);return snapper0.snapToSelf(snapTolerance,cleanResult);};GeometrySnapper.SNAP_PRECISION_FACTOR=1e-9;function SnapTransformer(){GeometryTransformer.apply(this);this.snapTolerance=null;this.snapPts=null;this.isSelfSnap=false;if(arguments.length===2){var snapTolerance=arguments[0],snapPts=arguments[1];this.snapTolerance=snapTolerance;this.snapPts=snapPts;}else if(arguments.length===3){var _snapTolerance=arguments[0],_snapPts=arguments[1],isSelfSnap=arguments[2];this.snapTolerance=_snapTolerance;this.snapPts=_snapPts;this.isSelfSnap=isSelfSnap;}}inherits(SnapTransformer,GeometryTransformer);extend(SnapTransformer.prototype,{snapLine:function snapLine(srcPts,snapPts){var snapper=new LineStringSnapper(srcPts,this.snapTolerance);snapper.setAllowSnappingToSourceVertices(this.isSelfSnap);return snapper.snapTo(snapPts);},transformCoordinates:function transformCoordinates(coords,parent){var srcPts=coords.toCoordinateArray();var newPts=this.snapLine(srcPts,this.snapPts);return this.factory.getCoordinateSequenceFactory().create(newPts);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return SnapTransformer;}});function CommonBits(){this.isFirst=true;this.commonMantissaBitsCount=53;this.commonBits=0;this.commonSignExp=null;}extend(CommonBits.prototype,{getCommon:function getCommon(){return Double.longBitsToDouble(this.commonBits);},add:function add(num){var numBits=Double.doubleToLongBits(num);if(this.isFirst){this.commonBits=numBits;this.commonSignExp=CommonBits.signExpBits(this.commonBits);this.isFirst=false;return null;}var numSignExp=CommonBits.signExpBits(numBits);if(numSignExp!==this.commonSignExp){this.commonBits=0;return null;}this.commonMantissaBitsCount=CommonBits.numCommonMostSigMantissaBits(this.commonBits,numBits);this.commonBits=CommonBits.zeroLowerBits(this.commonBits,64-(12+this.commonMantissaBitsCount));},toString:function toString(){if(arguments.length===1){var bits=arguments[0];var x=Double.longBitsToDouble(bits);var numStr=Long.toBinaryString(bits);var padStr=\"0000000000000000000000000000000000000000000000000000000000000000\"+numStr;var bitStr=padStr.substring(padStr.length-64);var str=bitStr.substring(0,1)+\"  \"+bitStr.substring(1,12)+\"(exp) \"+bitStr.substring(12)+\" [ \"+x+\" ]\";return str;}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return CommonBits;}});CommonBits.getBit=function(bits,i){var mask=1<<i;return(bits&mask)!==0?1:0;};CommonBits.signExpBits=function(num){return num>>52;};CommonBits.zeroLowerBits=function(bits,nBits){var invMask=(1<<nBits)-1;var mask=~invMask;var zeroed=bits&mask;return zeroed;};CommonBits.numCommonMostSigMantissaBits=function(num1,num2){var count=0;for(var i=52;i>=0;i--){if(CommonBits.getBit(num1,i)!==CommonBits.getBit(num2,i))return count;count++;}return 52;};function CommonBitsRemover(){this.commonCoord=null;this.ccFilter=new CommonCoordinateFilter();}extend(CommonBitsRemover.prototype,{addCommonBits:function addCommonBits(geom){var trans=new Translater(this.commonCoord);geom.apply(trans);geom.geometryChanged();},removeCommonBits:function removeCommonBits(geom){if(this.commonCoord.x===0.0&&this.commonCoord.y===0.0)return geom;var invCoord=new Coordinate(this.commonCoord);invCoord.x=-invCoord.x;invCoord.y=-invCoord.y;var trans=new Translater(invCoord);geom.apply(trans);geom.geometryChanged();return geom;},getCommonCoordinate:function getCommonCoordinate(){return this.commonCoord;},add:function add(geom){geom.apply(this.ccFilter);this.commonCoord=this.ccFilter.getCommonCoordinate();},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return CommonBitsRemover;}});function CommonCoordinateFilter(){this.commonBitsX=new CommonBits();this.commonBitsY=new CommonBits();}extend(CommonCoordinateFilter.prototype,{filter:function filter(coord){this.commonBitsX.add(coord.x);this.commonBitsY.add(coord.y);},getCommonCoordinate:function getCommonCoordinate(){return new Coordinate(this.commonBitsX.getCommon(),this.commonBitsY.getCommon());},interfaces_:function interfaces_(){return[CoordinateFilter];},getClass:function getClass(){return CommonCoordinateFilter;}});function Translater(){this.trans=null;var trans=arguments[0];this.trans=trans;}extend(Translater.prototype,{filter:function filter(seq,i){var xp=seq.getOrdinate(i,0)+this.trans.x;var yp=seq.getOrdinate(i,1)+this.trans.y;seq.setOrdinate(i,0,xp);seq.setOrdinate(i,1,yp);},isDone:function isDone(){return false;},isGeometryChanged:function isGeometryChanged(){return true;},interfaces_:function interfaces_(){return[CoordinateSequenceFilter];},getClass:function getClass(){return Translater;}});CommonBitsRemover.CommonCoordinateFilter=CommonCoordinateFilter;CommonBitsRemover.Translater=Translater;function GeometryCollectionIterator(){this.parent=null;this.atStart=null;this.max=null;this.index=null;this.subcollectionIterator=null;var parent=arguments[0];this.parent=parent;this.atStart=true;this.index=0;this.max=parent.getNumGeometries();}extend(GeometryCollectionIterator.prototype,{next:function next(){if(this.atStart){this.atStart=false;if(GeometryCollectionIterator.isAtomic(this.parent))this.index++;return this.parent;}if(this.subcollectionIterator!==null){if(this.subcollectionIterator.hasNext()){return this.subcollectionIterator.next();}else{this.subcollectionIterator=null;}}if(this.index>=this.max){throw new NoSuchElementException();}var obj=this.parent.getGeometryN(this.index++);if(obj instanceof GeometryCollection){this.subcollectionIterator=new GeometryCollectionIterator(obj);return this.subcollectionIterator.next();}return obj;},remove:function remove(){throw new UnsupportedOperationException(this.getClass().getName());},hasNext:function hasNext(){if(this.atStart){return true;}if(this.subcollectionIterator!==null){if(this.subcollectionIterator.hasNext()){return true;}this.subcollectionIterator=null;}if(this.index>=this.max){return false;}return true;},interfaces_:function interfaces_(){return[Iterator];},getClass:function getClass(){return GeometryCollectionIterator;}});GeometryCollectionIterator.isAtomic=function(geom){return!(geom instanceof GeometryCollection);};function PointLocator(){this.boundaryRule=BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;this.isIn=null;this.numBoundaries=null;if(arguments.length===0){}else if(arguments.length===1){var boundaryRule=arguments[0];if(boundaryRule===null)throw new IllegalArgumentException(\"Rule must be non-null\");this.boundaryRule=boundaryRule;}}extend(PointLocator.prototype,{locateInternal:function locateInternal(){if(arguments[0]instanceof Coordinate&&arguments[1]instanceof Polygon){var p=arguments[0],poly=arguments[1];if(poly.isEmpty())return Location.EXTERIOR;var shell=poly.getExteriorRing();var shellLoc=this.locateInPolygonRing(p,shell);if(shellLoc===Location.EXTERIOR)return Location.EXTERIOR;if(shellLoc===Location.BOUNDARY)return Location.BOUNDARY;for(var i=0;i<poly.getNumInteriorRing();i++){var hole=poly.getInteriorRingN(i);var holeLoc=this.locateInPolygonRing(p,hole);if(holeLoc===Location.INTERIOR)return Location.EXTERIOR;if(holeLoc===Location.BOUNDARY)return Location.BOUNDARY;}return Location.INTERIOR;}else if(arguments[0]instanceof Coordinate&&arguments[1]instanceof LineString){var _p=arguments[0],l=arguments[1];if(!l.getEnvelopeInternal().intersects(_p))return Location.EXTERIOR;var pt=l.getCoordinates();if(!l.isClosed()){if(_p.equals(pt[0])||_p.equals(pt[pt.length-1])){return Location.BOUNDARY;}}if(CGAlgorithms.isOnLine(_p,pt))return Location.INTERIOR;return Location.EXTERIOR;}else if(arguments[0]instanceof Coordinate&&arguments[1]instanceof Point){var _p2=arguments[0],_pt=arguments[1];var ptCoord=_pt.getCoordinate();if(ptCoord.equals2D(_p2))return Location.INTERIOR;return Location.EXTERIOR;}},locateInPolygonRing:function locateInPolygonRing(p,ring){if(!ring.getEnvelopeInternal().intersects(p))return Location.EXTERIOR;return CGAlgorithms.locatePointInRing(p,ring.getCoordinates());},intersects:function intersects(p,geom){return this.locate(p,geom)!==Location.EXTERIOR;},updateLocationInfo:function updateLocationInfo(loc){if(loc===Location.INTERIOR)this.isIn=true;if(loc===Location.BOUNDARY)this.numBoundaries++;},computeLocation:function computeLocation(p,geom){if(geom instanceof Point){this.updateLocationInfo(this.locateInternal(p,geom));}if(geom instanceof LineString){this.updateLocationInfo(this.locateInternal(p,geom));}else if(geom instanceof Polygon){this.updateLocationInfo(this.locateInternal(p,geom));}else if(geom instanceof MultiLineString){var ml=geom;for(var i=0;i<ml.getNumGeometries();i++){var l=ml.getGeometryN(i);this.updateLocationInfo(this.locateInternal(p,l));}}else if(geom instanceof MultiPolygon){var mpoly=geom;for(var i=0;i<mpoly.getNumGeometries();i++){var poly=mpoly.getGeometryN(i);this.updateLocationInfo(this.locateInternal(p,poly));}}else if(geom instanceof GeometryCollection){var geomi=new GeometryCollectionIterator(geom);while(geomi.hasNext()){var g2=geomi.next();if(g2!==geom)this.computeLocation(p,g2);}}},locate:function locate(p,geom){if(geom.isEmpty())return Location.EXTERIOR;if(geom instanceof LineString){return this.locateInternal(p,geom);}else if(geom instanceof Polygon){return this.locateInternal(p,geom);}this.isIn=false;this.numBoundaries=0;this.computeLocation(p,geom);if(this.boundaryRule.isInBoundary(this.numBoundaries))return Location.BOUNDARY;if(this.numBoundaries>0||this.isIn)return Location.INTERIOR;return Location.EXTERIOR;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return PointLocator;}});function Octant(){}extend(Octant.prototype,{interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Octant;}});Octant.octant=function(){if(typeof arguments[0]===\"number\"&&typeof arguments[1]===\"number\"){var _dx=arguments[0],_dy=arguments[1];if(_dx===0.0&&_dy===0.0)throw new IllegalArgumentException(\"Cannot compute the octant for point ( \"+_dx+\", \"+_dy+\" )\");var adx=Math.abs(_dx);var ady=Math.abs(_dy);if(_dx>=0){if(_dy>=0){if(adx>=ady)return 0;else return 1;}else{if(adx>=ady)return 7;else return 6;}}else{if(_dy>=0){if(adx>=ady)return 3;else return 2;}else{if(adx>=ady)return 4;else return 5;}}}else if(arguments[0]instanceof Coordinate&&arguments[1]instanceof Coordinate){var p0=arguments[0],p1=arguments[1];var dx=p1.x-p0.x;var dy=p1.y-p0.y;if(dx===0.0&&dy===0.0)throw new IllegalArgumentException(\"Cannot compute the octant for two identical points \"+p0);return Octant.octant(dx,dy);}};function SegmentString(){}extend(SegmentString.prototype,{getCoordinates:function getCoordinates(){},size:function size(){},getCoordinate:function getCoordinate(i){},isClosed:function isClosed(){},setData:function setData(data){},getData:function getData(){},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return SegmentString;}});function BasicSegmentString(){this.pts=null;this.data=null;var pts=arguments[0],data=arguments[1];this.pts=pts;this.data=data;}extend(BasicSegmentString.prototype,{getCoordinates:function getCoordinates(){return this.pts;},size:function size(){return this.pts.length;},getCoordinate:function getCoordinate(i){return this.pts[i];},isClosed:function isClosed(){return this.pts[0].equals(this.pts[this.pts.length-1]);},getSegmentOctant:function getSegmentOctant(index){if(index===this.pts.length-1)return-1;return Octant.octant(this.getCoordinate(index),this.getCoordinate(index+1));},setData:function setData(data){this.data=data;},getData:function getData(){return this.data;},toString:function toString(){return WKTWriter.toLineString(new CoordinateArraySequence(this.pts));},interfaces_:function interfaces_(){return[SegmentString];},getClass:function getClass(){return BasicSegmentString;}});function Boundable(){}extend(Boundable.prototype,{getBounds:function getBounds(){},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Boundable;}});function ItemBoundable(){this.bounds=null;this.item=null;var bounds=arguments[0],item=arguments[1];this.bounds=bounds;this.item=item;}extend(ItemBoundable.prototype,{getItem:function getItem(){return this.item;},getBounds:function getBounds(){return this.bounds;},interfaces_:function interfaces_(){return[Boundable,Serializable];},getClass:function getClass(){return ItemBoundable;}});function PriorityQueue(){this._size=null;this.items=null;this._size=0;this.items=new ArrayList();this.items.add(null);}extend(PriorityQueue.prototype,{poll:function poll(){if(this.isEmpty())return null;var minItem=this.items.get(1);this.items.set(1,this.items.get(this._size));this._size-=1;this.reorder(1);return minItem;},size:function size(){return this._size;},reorder:function reorder(hole){var child=null;var tmp=this.items.get(hole);for(;hole*2<=this._size;hole=child){child=hole*2;if(child!==this._size&&this.items.get(child+1).compareTo(this.items.get(child))<0)child++;if(this.items.get(child).compareTo(tmp)<0)this.items.set(hole,this.items.get(child));else break;}this.items.set(hole,tmp);},clear:function clear(){this._size=0;this.items.clear();},isEmpty:function isEmpty(){return this._size===0;},add:function add(x){this.items.add(null);this._size+=1;var hole=this._size;this.items.set(0,x);for(;x.compareTo(this.items.get(Math.trunc(hole/2)))<0;hole/=2){this.items.set(hole,this.items.get(Math.trunc(hole/2)));}this.items.set(hole,x);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return PriorityQueue;}});function ItemVisitor(){}extend(ItemVisitor.prototype,{visitItem:function visitItem(item){},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return ItemVisitor;}});function SpatialIndex(){}extend(SpatialIndex.prototype,{insert:function insert(itemEnv,item){},remove:function remove(itemEnv,item){},query:function query(){if(arguments.length===1){var searchEnv=arguments[0];}else if(arguments.length===2){var _searchEnv=arguments[0],visitor=arguments[1];}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return SpatialIndex;}});function AbstractNode(){this.childBoundables=new ArrayList();this.bounds=null;this.level=null;if(arguments.length===0){}else if(arguments.length===1){var level=arguments[0];this.level=level;}}extend(AbstractNode.prototype,{getLevel:function getLevel(){return this.level;},size:function size(){return this.childBoundables.size();},getChildBoundables:function getChildBoundables(){return this.childBoundables;},addChildBoundable:function addChildBoundable(childBoundable){Assert.isTrue(this.bounds===null);this.childBoundables.add(childBoundable);},isEmpty:function isEmpty(){return this.childBoundables.isEmpty();},getBounds:function getBounds(){if(this.bounds===null){this.bounds=this.computeBounds();}return this.bounds;},interfaces_:function interfaces_(){return[Boundable,Serializable];},getClass:function getClass(){return AbstractNode;}});AbstractNode.serialVersionUID=6493722185909573708;var Collections={reverseOrder:function reverseOrder(){return{compare:function compare(a,b){return b.compareTo(a);}};},min:function min(l){Collections.sort(l);return l.get(0);},sort:function sort(l,c){var a=l.toArray();if(c){Arrays.sort(a,c);}else{Arrays.sort(a);}var i=l.iterator();for(var pos=0,alen=a.length;pos<alen;pos++){i.next();i.set(a[pos]);}},singletonList:function singletonList(o){var arrayList=new ArrayList();arrayList.add(o);return arrayList;}};function BoundablePair(){this.boundable1=null;this.boundable2=null;this._distance=null;this.itemDistance=null;var boundable1=arguments[0],boundable2=arguments[1],itemDistance=arguments[2];this.boundable1=boundable1;this.boundable2=boundable2;this.itemDistance=itemDistance;this._distance=this.distance();}extend(BoundablePair.prototype,{expandToQueue:function expandToQueue(priQ,minDistance){var isComp1=BoundablePair.isComposite(this.boundable1);var isComp2=BoundablePair.isComposite(this.boundable2);if(isComp1&&isComp2){if(BoundablePair.area(this.boundable1)>BoundablePair.area(this.boundable2)){this.expand(this.boundable1,this.boundable2,priQ,minDistance);return null;}else{this.expand(this.boundable2,this.boundable1,priQ,minDistance);return null;}}else if(isComp1){this.expand(this.boundable1,this.boundable2,priQ,minDistance);return null;}else if(isComp2){this.expand(this.boundable2,this.boundable1,priQ,minDistance);return null;}throw new IllegalArgumentException(\"neither boundable is composite\");},isLeaves:function isLeaves(){return!(BoundablePair.isComposite(this.boundable1)||BoundablePair.isComposite(this.boundable2));},compareTo:function compareTo(o){var nd=o;if(this._distance<nd._distance)return-1;if(this._distance>nd._distance)return 1;return 0;},expand:function expand(bndComposite,bndOther,priQ,minDistance){var children=bndComposite.getChildBoundables();for(var i=children.iterator();i.hasNext();){var child=i.next();var bp=new BoundablePair(child,bndOther,this.itemDistance);if(bp.getDistance()<minDistance){priQ.add(bp);}}},getBoundable:function getBoundable(i){if(i===0)return this.boundable1;return this.boundable2;},getDistance:function getDistance(){return this._distance;},distance:function distance(){if(this.isLeaves()){return this.itemDistance.distance(this.boundable1,this.boundable2);}return this.boundable1.getBounds().distance(this.boundable2.getBounds());},interfaces_:function interfaces_(){return[Comparable];},getClass:function getClass(){return BoundablePair;}});BoundablePair.area=function(b){return b.getBounds().getArea();};BoundablePair.isComposite=function(item){return item instanceof AbstractNode;};function AbstractSTRtree(){this.root=null;this.built=false;this.itemBoundables=new ArrayList();this.nodeCapacity=null;if(arguments.length===0){AbstractSTRtree.call(this,AbstractSTRtree.DEFAULT_NODE_CAPACITY);}else if(arguments.length===1){var nodeCapacity=arguments[0];Assert.isTrue(nodeCapacity>1,\"Node capacity must be greater than 1\");this.nodeCapacity=nodeCapacity;}}extend(AbstractSTRtree.prototype,{getNodeCapacity:function getNodeCapacity(){return this.nodeCapacity;},lastNode:function lastNode(nodes){return nodes.get(nodes.size()-1);},size:function size(){if(arguments.length===0){if(this.isEmpty()){return 0;}this.build();return this.size(this.root);}else if(arguments.length===1){var node=arguments[0];var size=0;for(var i=node.getChildBoundables().iterator();i.hasNext();){var childBoundable=i.next();if(childBoundable instanceof AbstractNode){size+=this.size(childBoundable);}else if(childBoundable instanceof ItemBoundable){size+=1;}}return size;}},removeItem:function removeItem(node,item){var childToRemove=null;for(var i=node.getChildBoundables().iterator();i.hasNext();){var childBoundable=i.next();if(childBoundable instanceof ItemBoundable){if(childBoundable.getItem()===item)childToRemove=childBoundable;}}if(childToRemove!==null){node.getChildBoundables().remove(childToRemove);return true;}return false;},itemsTree:function itemsTree(){if(arguments.length===0){this.build();var valuesTree=this.itemsTree(this.root);if(valuesTree===null)return new ArrayList();return valuesTree;}else if(arguments.length===1){var node=arguments[0];var valuesTreeForNode=new ArrayList();for(var i=node.getChildBoundables().iterator();i.hasNext();){var childBoundable=i.next();if(childBoundable instanceof AbstractNode){var valuesTreeForChild=this.itemsTree(childBoundable);if(valuesTreeForChild!==null)valuesTreeForNode.add(valuesTreeForChild);}else if(childBoundable instanceof ItemBoundable){valuesTreeForNode.add(childBoundable.getItem());}else{Assert.shouldNeverReachHere();}}if(valuesTreeForNode.size()<=0)return null;return valuesTreeForNode;}},insert:function insert(bounds,item){Assert.isTrue(!this.built,\"Cannot insert items into an STR packed R-tree after it has been built.\");this.itemBoundables.add(new ItemBoundable(bounds,item));},boundablesAtLevel:function boundablesAtLevel(){if(arguments.length===1){var level=arguments[0];var boundables=new ArrayList();this.boundablesAtLevel(level,this.root,boundables);return boundables;}else if(arguments.length===3){var _level=arguments[0],top=arguments[1],_boundables=arguments[2];Assert.isTrue(_level>-2);if(top.getLevel()===_level){_boundables.add(top);return null;}for(var i=top.getChildBoundables().iterator();i.hasNext();){var boundable=i.next();if(boundable instanceof AbstractNode){this.boundablesAtLevel(_level,boundable,_boundables);}else{Assert.isTrue(boundable instanceof ItemBoundable);if(_level===-1){_boundables.add(boundable);}}}return null;}},query:function query(){if(arguments.length===1){var searchBounds=arguments[0];this.build();var matches=new ArrayList();if(this.isEmpty()){return matches;}if(this.getIntersectsOp().intersects(this.root.getBounds(),searchBounds)){this.query(searchBounds,this.root,matches);}return matches;}else if(arguments.length===2){var _searchBounds=arguments[0],visitor=arguments[1];this.build();if(this.isEmpty()){return null;}if(this.getIntersectsOp().intersects(this.root.getBounds(),_searchBounds)){this.query(_searchBounds,this.root,visitor);}}else if(arguments.length===3){if(hasInterface(arguments[2],ItemVisitor)&&arguments[0]instanceof Object&&arguments[1]instanceof AbstractNode){var _searchBounds2=arguments[0],node=arguments[1],_visitor=arguments[2];var childBoundables=node.getChildBoundables();for(var i=0;i<childBoundables.size();i++){var childBoundable=childBoundables.get(i);if(!this.getIntersectsOp().intersects(childBoundable.getBounds(),_searchBounds2)){continue;}if(childBoundable instanceof AbstractNode){this.query(_searchBounds2,childBoundable,_visitor);}else if(childBoundable instanceof ItemBoundable){_visitor.visitItem(childBoundable.getItem());}else{Assert.shouldNeverReachHere();}}}else if(hasInterface(arguments[2],List)&&arguments[0]instanceof Object&&arguments[1]instanceof AbstractNode){var _searchBounds3=arguments[0],_node=arguments[1],_matches=arguments[2];var childBoundables=_node.getChildBoundables();for(var i=0;i<childBoundables.size();i++){var childBoundable=childBoundables.get(i);if(!this.getIntersectsOp().intersects(childBoundable.getBounds(),_searchBounds3)){continue;}if(childBoundable instanceof AbstractNode){this.query(_searchBounds3,childBoundable,_matches);}else if(childBoundable instanceof ItemBoundable){_matches.add(childBoundable.getItem());}else{Assert.shouldNeverReachHere();}}}}},build:function build(){if(this.built)return null;this.root=this.itemBoundables.isEmpty()?this.createNode(0):this.createHigherLevels(this.itemBoundables,-1);this.itemBoundables=null;this.built=true;},getRoot:function getRoot(){this.build();return this.root;},remove:function remove(){if(arguments.length===2){var searchBounds=arguments[0],item=arguments[1];this.build();if(this.getIntersectsOp().intersects(this.root.getBounds(),searchBounds)){return this.remove(searchBounds,this.root,item);}return false;}else if(arguments.length===3){var _searchBounds4=arguments[0],node=arguments[1],_item=arguments[2];var found=this.removeItem(node,_item);if(found)return true;var childToPrune=null;for(var i=node.getChildBoundables().iterator();i.hasNext();){var childBoundable=i.next();if(!this.getIntersectsOp().intersects(childBoundable.getBounds(),_searchBounds4)){continue;}if(childBoundable instanceof AbstractNode){found=this.remove(_searchBounds4,childBoundable,_item);if(found){childToPrune=childBoundable;break;}}}if(childToPrune!==null){if(childToPrune.getChildBoundables().isEmpty()){node.getChildBoundables().remove(childToPrune);}}return found;}},createHigherLevels:function createHigherLevels(boundablesOfALevel,level){Assert.isTrue(!boundablesOfALevel.isEmpty());var parentBoundables=this.createParentBoundables(boundablesOfALevel,level+1);if(parentBoundables.size()===1){return parentBoundables.get(0);}return this.createHigherLevels(parentBoundables,level+1);},depth:function depth(){if(arguments.length===0){if(this.isEmpty()){return 0;}this.build();return this.depth(this.root);}else if(arguments.length===1){var node=arguments[0];var maxChildDepth=0;for(var i=node.getChildBoundables().iterator();i.hasNext();){var childBoundable=i.next();if(childBoundable instanceof AbstractNode){var childDepth=this.depth(childBoundable);if(childDepth>maxChildDepth)maxChildDepth=childDepth;}}return maxChildDepth+1;}},createParentBoundables:function createParentBoundables(childBoundables,newLevel){Assert.isTrue(!childBoundables.isEmpty());var parentBoundables=new ArrayList();parentBoundables.add(this.createNode(newLevel));var sortedChildBoundables=new ArrayList(childBoundables);Collections.sort(sortedChildBoundables,this.getComparator());for(var i=sortedChildBoundables.iterator();i.hasNext();){var childBoundable=i.next();if(this.lastNode(parentBoundables).getChildBoundables().size()===this.getNodeCapacity()){parentBoundables.add(this.createNode(newLevel));}this.lastNode(parentBoundables).addChildBoundable(childBoundable);}return parentBoundables;},isEmpty:function isEmpty(){if(!this.built)return this.itemBoundables.isEmpty();return this.root.isEmpty();},interfaces_:function interfaces_(){return[Serializable];},getClass:function getClass(){return AbstractSTRtree;}});AbstractSTRtree.compareDoubles=function(a,b){return a>b?1:a<b?-1:0;};function IntersectsOp$1(){}AbstractSTRtree.IntersectsOp=IntersectsOp$1;AbstractSTRtree.serialVersionUID=-3886435814360241337;AbstractSTRtree.DEFAULT_NODE_CAPACITY=10;function ItemDistance(){}extend(ItemDistance.prototype,{distance:function distance(item1,item2){},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return ItemDistance;}});function STRtree(){if(arguments.length===0){STRtree.call(this,STRtree.DEFAULT_NODE_CAPACITY);}else if(arguments.length===1){var nodeCapacity=arguments[0];AbstractSTRtree.call(this,nodeCapacity);}}inherits(STRtree,AbstractSTRtree);extend(STRtree.prototype,{createParentBoundablesFromVerticalSlices:function createParentBoundablesFromVerticalSlices(verticalSlices,newLevel){Assert.isTrue(verticalSlices.length>0);var parentBoundables=new ArrayList();for(var i=0;i<verticalSlices.length;i++){parentBoundables.addAll(this.createParentBoundablesFromVerticalSlice(verticalSlices[i],newLevel));}return parentBoundables;},createNode:function createNode(level){return new STRtreeNode(level);},size:function size(){if(arguments.length===0){return AbstractSTRtree.prototype.size.call(this);}else return AbstractSTRtree.prototype.size.apply(this,arguments);},insert:function insert(){if(arguments.length===2){var itemEnv=arguments[0],item=arguments[1];if(itemEnv.isNull()){return null;}AbstractSTRtree.prototype.insert.call(this,itemEnv,item);}else return AbstractSTRtree.prototype.insert.apply(this,arguments);},getIntersectsOp:function getIntersectsOp(){return STRtree.intersectsOp;},verticalSlices:function verticalSlices(childBoundables,sliceCount){var sliceCapacity=Math.trunc(Math.ceil(childBoundables.size()/sliceCount));var slices=new Array(sliceCount).fill(null);var i=childBoundables.iterator();for(var j=0;j<sliceCount;j++){slices[j]=new ArrayList();var boundablesAddedToSlice=0;while(i.hasNext()&&boundablesAddedToSlice<sliceCapacity){var childBoundable=i.next();slices[j].add(childBoundable);boundablesAddedToSlice++;}}return slices;},query:function query(){if(arguments.length===1){var searchEnv=arguments[0];return AbstractSTRtree.prototype.query.call(this,searchEnv);}else if(arguments.length===2){var _searchEnv=arguments[0],visitor=arguments[1];AbstractSTRtree.prototype.query.call(this,_searchEnv,visitor);}else if(arguments.length===3){if(hasInterface(arguments[2],ItemVisitor)&&arguments[0]instanceof Object&&arguments[1]instanceof AbstractNode){var searchBounds=arguments[0],node=arguments[1],_visitor=arguments[2];AbstractSTRtree.prototype.query.call(this,searchBounds,node,_visitor);}else if(hasInterface(arguments[2],List)&&arguments[0]instanceof Object&&arguments[1]instanceof AbstractNode){var _searchBounds=arguments[0],_node=arguments[1],matches=arguments[2];AbstractSTRtree.prototype.query.call(this,_searchBounds,_node,matches);}}},getComparator:function getComparator(){return STRtree.yComparator;},createParentBoundablesFromVerticalSlice:function createParentBoundablesFromVerticalSlice(childBoundables,newLevel){return AbstractSTRtree.prototype.createParentBoundables.call(this,childBoundables,newLevel);},remove:function remove(){if(arguments.length===2){var itemEnv=arguments[0],item=arguments[1];return AbstractSTRtree.prototype.remove.call(this,itemEnv,item);}else return AbstractSTRtree.prototype.remove.apply(this,arguments);},depth:function depth(){if(arguments.length===0){return AbstractSTRtree.prototype.depth.call(this);}else return AbstractSTRtree.prototype.depth.apply(this,arguments);},createParentBoundables:function createParentBoundables(childBoundables,newLevel){Assert.isTrue(!childBoundables.isEmpty());var minLeafCount=Math.trunc(Math.ceil(childBoundables.size()/this.getNodeCapacity()));var sortedChildBoundables=new ArrayList(childBoundables);Collections.sort(sortedChildBoundables,STRtree.xComparator);var verticalSlices=this.verticalSlices(sortedChildBoundables,Math.trunc(Math.ceil(Math.sqrt(minLeafCount))));return this.createParentBoundablesFromVerticalSlices(verticalSlices,newLevel);},nearestNeighbour:function nearestNeighbour(){if(arguments.length===1){if(hasInterface(arguments[0],ItemDistance)){var itemDist=arguments[0];var bp=new BoundablePair(this.getRoot(),this.getRoot(),itemDist);return this.nearestNeighbour(bp);}else if(arguments[0]instanceof BoundablePair){var initBndPair=arguments[0];return this.nearestNeighbour(initBndPair,Double.POSITIVE_INFINITY);}}else if(arguments.length===2){if(arguments[0]instanceof STRtree&&hasInterface(arguments[1],ItemDistance)){var tree=arguments[0],_itemDist=arguments[1];var bp=new BoundablePair(this.getRoot(),tree.getRoot(),_itemDist);return this.nearestNeighbour(bp);}else if(arguments[0]instanceof BoundablePair&&typeof arguments[1]===\"number\"){var _initBndPair=arguments[0],maxDistance=arguments[1];var distanceLowerBound=maxDistance;var minPair=null;var priQ=new PriorityQueue();priQ.add(_initBndPair);while(!priQ.isEmpty()&&distanceLowerBound>0.0){var bndPair=priQ.poll();var currentDistance=bndPair.getDistance();if(currentDistance>=distanceLowerBound)break;if(bndPair.isLeaves()){distanceLowerBound=currentDistance;minPair=bndPair;}else{bndPair.expandToQueue(priQ,distanceLowerBound);}}return[minPair.getBoundable(0).getItem(),minPair.getBoundable(1).getItem()];}}else if(arguments.length===3){var env=arguments[0],item=arguments[1],_itemDist2=arguments[2];var bnd=new ItemBoundable(env,item);var bp=new BoundablePair(this.getRoot(),bnd,_itemDist2);return this.nearestNeighbour(bp)[0];}},interfaces_:function interfaces_(){return[SpatialIndex,Serializable];},getClass:function getClass(){return STRtree;}});STRtree.centreX=function(e){return STRtree.avg(e.getMinX(),e.getMaxX());};STRtree.avg=function(a,b){return(a+b)/2;};STRtree.centreY=function(e){return STRtree.avg(e.getMinY(),e.getMaxY());};function STRtreeNode(){var level=arguments[0];AbstractNode.call(this,level);}inherits(STRtreeNode,AbstractNode);extend(STRtreeNode.prototype,{computeBounds:function computeBounds(){var bounds=null;for(var i=this.getChildBoundables().iterator();i.hasNext();){var childBoundable=i.next();if(bounds===null){bounds=new Envelope(childBoundable.getBounds());}else{bounds.expandToInclude(childBoundable.getBounds());}}return bounds;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return STRtreeNode;}});STRtree.STRtreeNode=STRtreeNode;STRtree.serialVersionUID=259274702368956900;STRtree.xComparator={interfaces_:function interfaces_(){return[Comparator];},compare:function compare(o1,o2){return AbstractSTRtree.compareDoubles(STRtree.centreX(o1.getBounds()),STRtree.centreX(o2.getBounds()));}};STRtree.yComparator={interfaces_:function interfaces_(){return[Comparator];},compare:function compare(o1,o2){return AbstractSTRtree.compareDoubles(STRtree.centreY(o1.getBounds()),STRtree.centreY(o2.getBounds()));}};STRtree.intersectsOp={interfaces_:function interfaces_(){return[IntersectsOp];},intersects:function intersects(aBounds,bBounds){return aBounds.intersects(bBounds);}};STRtree.DEFAULT_NODE_CAPACITY=10;function SegmentPointComparator(){}extend(SegmentPointComparator.prototype,{interfaces_:function interfaces_(){return[];},getClass:function getClass(){return SegmentPointComparator;}});SegmentPointComparator.relativeSign=function(x0,x1){if(x0<x1)return-1;if(x0>x1)return 1;return 0;};SegmentPointComparator.compare=function(octant,p0,p1){if(p0.equals2D(p1))return 0;var xSign=SegmentPointComparator.relativeSign(p0.x,p1.x);var ySign=SegmentPointComparator.relativeSign(p0.y,p1.y);switch(octant){case 0:return SegmentPointComparator.compareValue(xSign,ySign);case 1:return SegmentPointComparator.compareValue(ySign,xSign);case 2:return SegmentPointComparator.compareValue(ySign,-xSign);case 3:return SegmentPointComparator.compareValue(-xSign,ySign);case 4:return SegmentPointComparator.compareValue(-xSign,-ySign);case 5:return SegmentPointComparator.compareValue(-ySign,-xSign);case 6:return SegmentPointComparator.compareValue(-ySign,xSign);case 7:return SegmentPointComparator.compareValue(xSign,-ySign);}Assert.shouldNeverReachHere(\"invalid octant value\");return 0;};SegmentPointComparator.compareValue=function(compareSign0,compareSign1){if(compareSign0<0)return-1;if(compareSign0>0)return 1;if(compareSign1<0)return-1;if(compareSign1>0)return 1;return 0;};function SegmentNode(){this.segString=null;this.coord=null;this.segmentIndex=null;this.segmentOctant=null;this._isInterior=null;var segString=arguments[0],coord=arguments[1],segmentIndex=arguments[2],segmentOctant=arguments[3];this.segString=segString;this.coord=new Coordinate(coord);this.segmentIndex=segmentIndex;this.segmentOctant=segmentOctant;this._isInterior=!coord.equals2D(segString.getCoordinate(segmentIndex));}extend(SegmentNode.prototype,{getCoordinate:function getCoordinate(){return this.coord;},print:function print(out){out.print(this.coord);out.print(\" seg # = \"+this.segmentIndex);},compareTo:function compareTo(obj){var other=obj;if(this.segmentIndex<other.segmentIndex)return-1;if(this.segmentIndex>other.segmentIndex)return 1;if(this.coord.equals2D(other.coord))return 0;return SegmentPointComparator.compare(this.segmentOctant,this.coord,other.coord);},isEndPoint:function isEndPoint(maxSegmentIndex){if(this.segmentIndex===0&&!this._isInterior)return true;if(this.segmentIndex===maxSegmentIndex)return true;return false;},isInterior:function isInterior(){return this._isInterior;},interfaces_:function interfaces_(){return[Comparable];},getClass:function getClass(){return SegmentNode;}});function SegmentNodeList(){this.nodeMap=new TreeMap();this.edge=null;var edge=arguments[0];this.edge=edge;}extend(SegmentNodeList.prototype,{getSplitCoordinates:function getSplitCoordinates(){var coordList=new CoordinateList();this.addEndpoints();var it=this.iterator();var eiPrev=it.next();while(it.hasNext()){var ei=it.next();this.addEdgeCoordinates(eiPrev,ei,coordList);eiPrev=ei;}return coordList.toCoordinateArray();},addCollapsedNodes:function addCollapsedNodes(){var collapsedVertexIndexes=new ArrayList();this.findCollapsesFromInsertedNodes(collapsedVertexIndexes);this.findCollapsesFromExistingVertices(collapsedVertexIndexes);for(var it=collapsedVertexIndexes.iterator();it.hasNext();){var vertexIndex=it.next().intValue();this.add(this.edge.getCoordinate(vertexIndex),vertexIndex);}},print:function print(out){out.println(\"Intersections:\");for(var it=this.iterator();it.hasNext();){var ei=it.next();ei.print(out);}},findCollapsesFromExistingVertices:function findCollapsesFromExistingVertices(collapsedVertexIndexes){for(var i=0;i<this.edge.size()-2;i++){var p0=this.edge.getCoordinate(i);var p1=this.edge.getCoordinate(i+1);var p2=this.edge.getCoordinate(i+2);if(p0.equals2D(p2)){collapsedVertexIndexes.add(new Integer(i+1));}}},addEdgeCoordinates:function addEdgeCoordinates(ei0,ei1,coordList){var npts=ei1.segmentIndex-ei0.segmentIndex+2;var lastSegStartPt=this.edge.getCoordinate(ei1.segmentIndex);var useIntPt1=ei1.isInterior()||!ei1.coord.equals2D(lastSegStartPt);if(!useIntPt1){npts--;}var ipt=0;coordList.add(new Coordinate(ei0.coord),false);for(var i=ei0.segmentIndex+1;i<=ei1.segmentIndex;i++){coordList.add(this.edge.getCoordinate(i));}if(useIntPt1){coordList.add(new Coordinate(ei1.coord));}},iterator:function iterator(){return this.nodeMap.values().iterator();},addSplitEdges:function addSplitEdges(edgeList){this.addEndpoints();this.addCollapsedNodes();var it=this.iterator();var eiPrev=it.next();while(it.hasNext()){var ei=it.next();var newEdge=this.createSplitEdge(eiPrev,ei);edgeList.add(newEdge);eiPrev=ei;}},findCollapseIndex:function findCollapseIndex(ei0,ei1,collapsedVertexIndex){if(!ei0.coord.equals2D(ei1.coord))return false;var numVerticesBetween=ei1.segmentIndex-ei0.segmentIndex;if(!ei1.isInterior()){numVerticesBetween--;}if(numVerticesBetween===1){collapsedVertexIndex[0]=ei0.segmentIndex+1;return true;}return false;},findCollapsesFromInsertedNodes:function findCollapsesFromInsertedNodes(collapsedVertexIndexes){var collapsedVertexIndex=new Array(1).fill(null);var it=this.iterator();var eiPrev=it.next();while(it.hasNext()){var ei=it.next();var isCollapsed=this.findCollapseIndex(eiPrev,ei,collapsedVertexIndex);if(isCollapsed)collapsedVertexIndexes.add(new Integer(collapsedVertexIndex[0]));eiPrev=ei;}},getEdge:function getEdge(){return this.edge;},addEndpoints:function addEndpoints(){var maxSegIndex=this.edge.size()-1;this.add(this.edge.getCoordinate(0),0);this.add(this.edge.getCoordinate(maxSegIndex),maxSegIndex);},createSplitEdge:function createSplitEdge(ei0,ei1){var npts=ei1.segmentIndex-ei0.segmentIndex+2;var lastSegStartPt=this.edge.getCoordinate(ei1.segmentIndex);var useIntPt1=ei1.isInterior()||!ei1.coord.equals2D(lastSegStartPt);if(!useIntPt1){npts--;}var pts=new Array(npts).fill(null);var ipt=0;pts[ipt++]=new Coordinate(ei0.coord);for(var i=ei0.segmentIndex+1;i<=ei1.segmentIndex;i++){pts[ipt++]=this.edge.getCoordinate(i);}if(useIntPt1)pts[ipt]=new Coordinate(ei1.coord);return new NodedSegmentString(pts,this.edge.getData());},add:function add(intPt,segmentIndex){var eiNew=new SegmentNode(this.edge,intPt,segmentIndex,this.edge.getSegmentOctant(segmentIndex));var ei=this.nodeMap.get(eiNew);if(ei!==null){Assert.isTrue(ei.coord.equals2D(intPt),\"Found equal nodes with different coordinates\");return ei;}this.nodeMap.put(eiNew,eiNew);return eiNew;},checkSplitEdgesCorrectness:function checkSplitEdgesCorrectness(splitEdges){var edgePts=this.edge.getCoordinates();var split0=splitEdges.get(0);var pt0=split0.getCoordinate(0);if(!pt0.equals2D(edgePts[0]))throw new RuntimeException(\"bad split edge start point at \"+pt0);var splitn=splitEdges.get(splitEdges.size()-1);var splitnPts=splitn.getCoordinates();var ptn=splitnPts[splitnPts.length-1];if(!ptn.equals2D(edgePts[edgePts.length-1]))throw new RuntimeException(\"bad split edge end point at \"+ptn);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return SegmentNodeList;}});function NodeVertexIterator(){this.nodeList=null;this.edge=null;this.nodeIt=null;this.currNode=null;this.nextNode=null;this.currSegIndex=0;var nodeList=arguments[0];this.nodeList=nodeList;this.edge=nodeList.getEdge();this.nodeIt=nodeList.iterator();this.readNextNode();}extend(NodeVertexIterator.prototype,{next:function next(){if(this.currNode===null){this.currNode=this.nextNode;this.currSegIndex=this.currNode.segmentIndex;this.readNextNode();return this.currNode;}if(this.nextNode===null)return null;if(this.nextNode.segmentIndex===this.currNode.segmentIndex){this.currNode=this.nextNode;this.currSegIndex=this.currNode.segmentIndex;this.readNextNode();return this.currNode;}if(this.nextNode.segmentIndex>this.currNode.segmentIndex){}return null;},remove:function remove(){throw new UnsupportedOperationException(this.getClass().getName());},hasNext:function hasNext(){if(this.nextNode===null)return false;return true;},readNextNode:function readNextNode(){if(this.nodeIt.hasNext())this.nextNode=this.nodeIt.next();else this.nextNode=null;},interfaces_:function interfaces_(){return[Iterator];},getClass:function getClass(){return NodeVertexIterator;}});function NodableSegmentString(){}extend(NodableSegmentString.prototype,{addIntersection:function addIntersection(intPt,segmentIndex){},interfaces_:function interfaces_(){return[SegmentString];},getClass:function getClass(){return NodableSegmentString;}});function NodedSegmentString(){this.nodeList=new SegmentNodeList(this);this.pts=null;this.data=null;var pts=arguments[0],data=arguments[1];this.pts=pts;this.data=data;}extend(NodedSegmentString.prototype,{getCoordinates:function getCoordinates(){return this.pts;},size:function size(){return this.pts.length;},getCoordinate:function getCoordinate(i){return this.pts[i];},isClosed:function isClosed(){return this.pts[0].equals(this.pts[this.pts.length-1]);},getSegmentOctant:function getSegmentOctant(index){if(index===this.pts.length-1)return-1;return this.safeOctant(this.getCoordinate(index),this.getCoordinate(index+1));},setData:function setData(data){this.data=data;},safeOctant:function safeOctant(p0,p1){if(p0.equals2D(p1))return 0;return Octant.octant(p0,p1);},getData:function getData(){return this.data;},addIntersection:function addIntersection(){if(arguments.length===2){var _intPt=arguments[0],segmentIndex=arguments[1];this.addIntersectionNode(_intPt,segmentIndex);}else if(arguments.length===4){var li=arguments[0],_segmentIndex=arguments[1],geomIndex=arguments[2],intIndex=arguments[3];var intPt=new Coordinate(li.getIntersection(intIndex));this.addIntersection(intPt,_segmentIndex);}},toString:function toString(){return WKTWriter.toLineString(new CoordinateArraySequence(this.pts));},getNodeList:function getNodeList(){return this.nodeList;},addIntersectionNode:function addIntersectionNode(intPt,segmentIndex){var normalizedSegmentIndex=segmentIndex;var nextSegIndex=normalizedSegmentIndex+1;if(nextSegIndex<this.pts.length){var nextPt=this.pts[nextSegIndex];if(intPt.equals2D(nextPt)){normalizedSegmentIndex=nextSegIndex;}}var ei=this.nodeList.add(intPt,normalizedSegmentIndex);return ei;},addIntersections:function addIntersections(li,segmentIndex,geomIndex){for(var i=0;i<li.getIntersectionNum();i++){this.addIntersection(li,segmentIndex,geomIndex,i);}},interfaces_:function interfaces_(){return[NodableSegmentString];},getClass:function getClass(){return NodedSegmentString;}});NodedSegmentString.getNodedSubstrings=function(){if(arguments.length===1){var segStrings=arguments[0];var resultEdgelist=new ArrayList();NodedSegmentString.getNodedSubstrings(segStrings,resultEdgelist);return resultEdgelist;}else if(arguments.length===2){var _segStrings=arguments[0],_resultEdgelist=arguments[1];for(var i=_segStrings.iterator();i.hasNext();){var ss=i.next();ss.getNodeList().addSplitEdges(_resultEdgelist);}}};function MonotoneChainOverlapAction(){this.tempEnv1=new Envelope();this.tempEnv2=new Envelope();this.overlapSeg1=new LineSegment();this.overlapSeg2=new LineSegment();}extend(MonotoneChainOverlapAction.prototype,{overlap:function overlap(){if(arguments.length===2){var seg1=arguments[0],seg2=arguments[1];}else if(arguments.length===4){var mc1=arguments[0],start1=arguments[1],mc2=arguments[2],start2=arguments[3];mc1.getLineSegment(start1,this.overlapSeg1);mc2.getLineSegment(start2,this.overlapSeg2);this.overlap(this.overlapSeg1,this.overlapSeg2);}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return MonotoneChainOverlapAction;}});function MonotoneChain(){this.pts=null;this.start=null;this.end=null;this.env=null;this.context=null;this.id=null;var pts=arguments[0],start=arguments[1],end=arguments[2],context=arguments[3];this.pts=pts;this.start=start;this.end=end;this.context=context;}extend(MonotoneChain.prototype,{getLineSegment:function getLineSegment(index,ls){ls.p0=this.pts[index];ls.p1=this.pts[index+1];},computeSelect:function computeSelect(searchEnv,start0,end0,mcs){var p0=this.pts[start0];var p1=this.pts[end0];mcs.tempEnv1.init(p0,p1);if(end0-start0===1){mcs.select(this,start0);return null;}if(!searchEnv.intersects(mcs.tempEnv1))return null;var mid=Math.trunc((start0+end0)/2);if(start0<mid){this.computeSelect(searchEnv,start0,mid,mcs);}if(mid<end0){this.computeSelect(searchEnv,mid,end0,mcs);}},getCoordinates:function getCoordinates(){var coord=new Array(this.end-this.start+1).fill(null);var index=0;for(var i=this.start;i<=this.end;i++){coord[index++]=this.pts[i];}return coord;},computeOverlaps:function computeOverlaps(mc,mco){this.computeOverlapsInternal(this.start,this.end,mc,mc.start,mc.end,mco);},setId:function setId(id){this.id=id;},select:function select(searchEnv,mcs){this.computeSelect(searchEnv,this.start,this.end,mcs);},getEnvelope:function getEnvelope(){if(this.env===null){var p0=this.pts[this.start];var p1=this.pts[this.end];this.env=new Envelope(p0,p1);}return this.env;},getEndIndex:function getEndIndex(){return this.end;},getStartIndex:function getStartIndex(){return this.start;},getContext:function getContext(){return this.context;},getId:function getId(){return this.id;},computeOverlapsInternal:function computeOverlapsInternal(start0,end0,mc,start1,end1,mco){var p00=this.pts[start0];var p01=this.pts[end0];var p10=mc.pts[start1];var p11=mc.pts[end1];if(end0-start0===1&&end1-start1===1){mco.overlap(this,start0,mc,start1);return null;}mco.tempEnv1.init(p00,p01);mco.tempEnv2.init(p10,p11);if(!mco.tempEnv1.intersects(mco.tempEnv2))return null;var mid0=Math.trunc((start0+end0)/2);var mid1=Math.trunc((start1+end1)/2);if(start0<mid0){if(start1<mid1)this.computeOverlapsInternal(start0,mid0,mc,start1,mid1,mco);if(mid1<end1)this.computeOverlapsInternal(start0,mid0,mc,mid1,end1,mco);}if(mid0<end0){if(start1<mid1)this.computeOverlapsInternal(mid0,end0,mc,start1,mid1,mco);if(mid1<end1)this.computeOverlapsInternal(mid0,end0,mc,mid1,end1,mco);}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return MonotoneChain;}});function Quadrant(){}extend(Quadrant.prototype,{interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Quadrant;}});Quadrant.isNorthern=function(quad){return quad===Quadrant.NE||quad===Quadrant.NW;};Quadrant.isOpposite=function(quad1,quad2){if(quad1===quad2)return false;var diff=(quad1-quad2+4)%4;if(diff===2)return true;return false;};Quadrant.commonHalfPlane=function(quad1,quad2){if(quad1===quad2)return quad1;var diff=(quad1-quad2+4)%4;if(diff===2)return-1;var min=quad1<quad2?quad1:quad2;var max=quad1>quad2?quad1:quad2;if(min===0&&max===3)return 3;return min;};Quadrant.isInHalfPlane=function(quad,halfPlane){if(halfPlane===Quadrant.SE){return quad===Quadrant.SE||quad===Quadrant.SW;}return quad===halfPlane||quad===halfPlane+1;};Quadrant.quadrant=function(){if(typeof arguments[0]===\"number\"&&typeof arguments[1]===\"number\"){var dx=arguments[0],dy=arguments[1];if(dx===0.0&&dy===0.0)throw new IllegalArgumentException(\"Cannot compute the quadrant for point ( \"+dx+\", \"+dy+\" )\");if(dx>=0.0){if(dy>=0.0)return Quadrant.NE;else return Quadrant.SE;}else{if(dy>=0.0)return Quadrant.NW;else return Quadrant.SW;}}else if(arguments[0]instanceof Coordinate&&arguments[1]instanceof Coordinate){var p0=arguments[0],p1=arguments[1];if(p1.x===p0.x&&p1.y===p0.y)throw new IllegalArgumentException(\"Cannot compute the quadrant for two identical points \"+p0);if(p1.x>=p0.x){if(p1.y>=p0.y)return Quadrant.NE;else return Quadrant.SE;}else{if(p1.y>=p0.y)return Quadrant.NW;else return Quadrant.SW;}}};Quadrant.NE=0;Quadrant.NW=1;Quadrant.SW=2;Quadrant.SE=3;function MonotoneChainBuilder(){}extend(MonotoneChainBuilder.prototype,{interfaces_:function interfaces_(){return[];},getClass:function getClass(){return MonotoneChainBuilder;}});MonotoneChainBuilder.getChainStartIndices=function(pts){var start=0;var startIndexList=new ArrayList();startIndexList.add(new Integer(start));do{var last=MonotoneChainBuilder.findChainEnd(pts,start);startIndexList.add(new Integer(last));start=last;}while(start<pts.length-1);var startIndex=MonotoneChainBuilder.toIntArray(startIndexList);return startIndex;};MonotoneChainBuilder.findChainEnd=function(pts,start){var safeStart=start;while(safeStart<pts.length-1&&pts[safeStart].equals2D(pts[safeStart+1])){safeStart++;}if(safeStart>=pts.length-1){return pts.length-1;}var chainQuad=Quadrant.quadrant(pts[safeStart],pts[safeStart+1]);var last=start+1;while(last<pts.length){if(!pts[last-1].equals2D(pts[last])){var quad=Quadrant.quadrant(pts[last-1],pts[last]);if(quad!==chainQuad)break;}last++;}return last-1;};MonotoneChainBuilder.getChains=function(){if(arguments.length===1){var pts=arguments[0];return MonotoneChainBuilder.getChains(pts,null);}else if(arguments.length===2){var _pts=arguments[0],context=arguments[1];var mcList=new ArrayList();var startIndex=MonotoneChainBuilder.getChainStartIndices(_pts);for(var i=0;i<startIndex.length-1;i++){var mc=new MonotoneChain(_pts,startIndex[i],startIndex[i+1],context);mcList.add(mc);}return mcList;}};MonotoneChainBuilder.toIntArray=function(list){var array=new Array(list.size()).fill(null);for(var i=0;i<array.length;i++){array[i]=list.get(i).intValue();}return array;};function Noder(){}extend(Noder.prototype,{computeNodes:function computeNodes(segStrings){},getNodedSubstrings:function getNodedSubstrings(){},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Noder;}});function SinglePassNoder(){this.segInt=null;if(arguments.length===0){}else if(arguments.length===1){var segInt=arguments[0];this.setSegmentIntersector(segInt);}}extend(SinglePassNoder.prototype,{setSegmentIntersector:function setSegmentIntersector(segInt){this.segInt=segInt;},interfaces_:function interfaces_(){return[Noder];},getClass:function getClass(){return SinglePassNoder;}});function MCIndexNoder(){this.monoChains=new ArrayList();this.index=new STRtree();this.idCounter=0;this.nodedSegStrings=null;this.nOverlaps=0;if(arguments.length===0){}else if(arguments.length===1){var si=arguments[0];SinglePassNoder.call(this,si);}}inherits(MCIndexNoder,SinglePassNoder);extend(MCIndexNoder.prototype,{getMonotoneChains:function getMonotoneChains(){return this.monoChains;},getNodedSubstrings:function getNodedSubstrings(){return NodedSegmentString.getNodedSubstrings(this.nodedSegStrings);},getIndex:function getIndex(){return this.index;},add:function add(segStr){var segChains=MonotoneChainBuilder.getChains(segStr.getCoordinates(),segStr);for(var i=segChains.iterator();i.hasNext();){var mc=i.next();mc.setId(this.idCounter++);this.index.insert(mc.getEnvelope(),mc);this.monoChains.add(mc);}},computeNodes:function computeNodes(inputSegStrings){this.nodedSegStrings=inputSegStrings;for(var i=inputSegStrings.iterator();i.hasNext();){this.add(i.next());}this.intersectChains();},intersectChains:function intersectChains(){var overlapAction=new SegmentOverlapAction(this.segInt);for(var i=this.monoChains.iterator();i.hasNext();){var queryChain=i.next();var overlapChains=this.index.query(queryChain.getEnvelope());for(var j=overlapChains.iterator();j.hasNext();){var testChain=j.next();if(testChain.getId()>queryChain.getId()){queryChain.computeOverlaps(testChain,overlapAction);this.nOverlaps++;}if(this.segInt.isDone())return null;}}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return MCIndexNoder;}});function SegmentOverlapAction(){MonotoneChainOverlapAction.apply(this);this.si=null;var si=arguments[0];this.si=si;}inherits(SegmentOverlapAction,MonotoneChainOverlapAction);extend(SegmentOverlapAction.prototype,{overlap:function overlap(){if(arguments.length===4){var mc1=arguments[0],start1=arguments[1],mc2=arguments[2],start2=arguments[3];var ss1=mc1.getContext();var ss2=mc2.getContext();this.si.processIntersections(ss1,start1,ss2,start2);}else return MonotoneChainOverlapAction.prototype.overlap.apply(this,arguments);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return SegmentOverlapAction;}});MCIndexNoder.SegmentOverlapAction=SegmentOverlapAction;function TopologyException(){this.pt=null;if(arguments.length===1){var msg=arguments[0];RuntimeException.call(this,msg);}else if(arguments.length===2){var _msg=arguments[0],pt=arguments[1];RuntimeException.call(this,TopologyException.msgWithCoord(_msg,pt));this.name='TopologyException';this.pt=new Coordinate(pt);}}inherits(TopologyException,RuntimeException);extend(TopologyException.prototype,{getCoordinate:function getCoordinate(){return this.pt;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return TopologyException;}});TopologyException.msgWithCoord=function(msg,pt){if(pt!==null)return msg+\" [ \"+pt+\" ]\";return msg;};function SegmentIntersector(){}extend(SegmentIntersector.prototype,{processIntersections:function processIntersections(e0,segIndex0,e1,segIndex1){},isDone:function isDone(){},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return SegmentIntersector;}});function InteriorIntersectionFinder(){this.findAllIntersections=false;this.isCheckEndSegmentsOnly=false;this.li=null;this.interiorIntersection=null;this.intSegments=null;this.intersections=new ArrayList();this.intersectionCount=0;this.keepIntersections=true;var li=arguments[0];this.li=li;this.interiorIntersection=null;}extend(InteriorIntersectionFinder.prototype,{getInteriorIntersection:function getInteriorIntersection(){return this.interiorIntersection;},setCheckEndSegmentsOnly:function setCheckEndSegmentsOnly(isCheckEndSegmentsOnly){this.isCheckEndSegmentsOnly=isCheckEndSegmentsOnly;},getIntersectionSegments:function getIntersectionSegments(){return this.intSegments;},count:function count(){return this.intersectionCount;},getIntersections:function getIntersections(){return this.intersections;},setFindAllIntersections:function setFindAllIntersections(findAllIntersections){this.findAllIntersections=findAllIntersections;},setKeepIntersections:function setKeepIntersections(keepIntersections){this.keepIntersections=keepIntersections;},processIntersections:function processIntersections(e0,segIndex0,e1,segIndex1){if(!this.findAllIntersections&&this.hasIntersection())return null;if(e0===e1&&segIndex0===segIndex1)return null;if(this.isCheckEndSegmentsOnly){var isEndSegPresent=this.isEndSegment(e0,segIndex0)||this.isEndSegment(e1,segIndex1);if(!isEndSegPresent)return null;}var p00=e0.getCoordinates()[segIndex0];var p01=e0.getCoordinates()[segIndex0+1];var p10=e1.getCoordinates()[segIndex1];var p11=e1.getCoordinates()[segIndex1+1];this.li.computeIntersection(p00,p01,p10,p11);if(this.li.hasIntersection()){if(this.li.isInteriorIntersection()){this.intSegments=new Array(4).fill(null);this.intSegments[0]=p00;this.intSegments[1]=p01;this.intSegments[2]=p10;this.intSegments[3]=p11;this.interiorIntersection=this.li.getIntersection(0);if(this.keepIntersections)this.intersections.add(this.interiorIntersection);this.intersectionCount++;}}},isEndSegment:function isEndSegment(segStr,index){if(index===0)return true;if(index>=segStr.size()-2)return true;return false;},hasIntersection:function hasIntersection(){return this.interiorIntersection!==null;},isDone:function isDone(){if(this.findAllIntersections)return false;return this.interiorIntersection!==null;},interfaces_:function interfaces_(){return[SegmentIntersector];},getClass:function getClass(){return InteriorIntersectionFinder;}});InteriorIntersectionFinder.createAllIntersectionsFinder=function(li){var finder=new InteriorIntersectionFinder(li);finder.setFindAllIntersections(true);return finder;};InteriorIntersectionFinder.createAnyIntersectionFinder=function(li){return new InteriorIntersectionFinder(li);};InteriorIntersectionFinder.createIntersectionCounter=function(li){var finder=new InteriorIntersectionFinder(li);finder.setFindAllIntersections(true);finder.setKeepIntersections(false);return finder;};function FastNodingValidator(){this.li=new RobustLineIntersector();this.segStrings=null;this.findAllIntersections=false;this.segInt=null;this._isValid=true;var segStrings=arguments[0];this.segStrings=segStrings;}extend(FastNodingValidator.prototype,{execute:function execute(){if(this.segInt!==null)return null;this.checkInteriorIntersections();},getIntersections:function getIntersections(){return this.segInt.getIntersections();},isValid:function isValid(){this.execute();return this._isValid;},setFindAllIntersections:function setFindAllIntersections(findAllIntersections){this.findAllIntersections=findAllIntersections;},checkInteriorIntersections:function checkInteriorIntersections(){this._isValid=true;this.segInt=new InteriorIntersectionFinder(this.li);this.segInt.setFindAllIntersections(this.findAllIntersections);var noder=new MCIndexNoder();noder.setSegmentIntersector(this.segInt);noder.computeNodes(this.segStrings);if(this.segInt.hasIntersection()){this._isValid=false;return null;}},checkValid:function checkValid(){this.execute();if(!this._isValid)throw new TopologyException(this.getErrorMessage(),this.segInt.getInteriorIntersection());},getErrorMessage:function getErrorMessage(){if(this._isValid)return\"no intersections found\";var intSegs=this.segInt.getIntersectionSegments();return\"found non-noded intersection between \"+WKTWriter.toLineString(intSegs[0],intSegs[1])+\" and \"+WKTWriter.toLineString(intSegs[2],intSegs[3]);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return FastNodingValidator;}});FastNodingValidator.computeIntersections=function(segStrings){var nv=new FastNodingValidator(segStrings);nv.setFindAllIntersections(true);nv.isValid();return nv.getIntersections();};function EdgeNodingValidator(){this.nv=null;var edges=arguments[0];this.nv=new FastNodingValidator(EdgeNodingValidator.toSegmentStrings(edges));}extend(EdgeNodingValidator.prototype,{checkValid:function checkValid(){this.nv.checkValid();},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return EdgeNodingValidator;}});EdgeNodingValidator.toSegmentStrings=function(edges){var segStrings=new ArrayList();for(var i=edges.iterator();i.hasNext();){var e=i.next();segStrings.add(new BasicSegmentString(e.getCoordinates(),e));}return segStrings;};EdgeNodingValidator.checkValid=function(edges){var validator=new EdgeNodingValidator(edges);validator.checkValid();};function GeometryCollectionMapper(){this.mapOp=null;var mapOp=arguments[0];this.mapOp=mapOp;}extend(GeometryCollectionMapper.prototype,{map:function map(gc){var mapped=new ArrayList();for(var i=0;i<gc.getNumGeometries();i++){var g=this.mapOp.map(gc.getGeometryN(i));if(!g.isEmpty())mapped.add(g);}return gc.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(mapped));},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return GeometryCollectionMapper;}});GeometryCollectionMapper.map=function(gc,op){var mapper=new GeometryCollectionMapper(op);return mapper.map(gc);};function Position(){}extend(Position.prototype,{interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Position;}});Position.opposite=function(position){if(position===Position.LEFT)return Position.RIGHT;if(position===Position.RIGHT)return Position.LEFT;return position;};Position.ON=0;Position.LEFT=1;Position.RIGHT=2;function TopologyLocation(){this.location=null;if(arguments.length===1){if(arguments[0]instanceof Array){var location=arguments[0];this.init(location.length);}else if(Number.isInteger(arguments[0])){var on=arguments[0];this.init(1);this.location[Position.ON]=on;}else if(arguments[0]instanceof TopologyLocation){var gl=arguments[0];this.init(gl.location.length);if(gl!==null){for(var i=0;i<this.location.length;i++){this.location[i]=gl.location[i];}}}}else if(arguments.length===3){var _on=arguments[0],left=arguments[1],right=arguments[2];this.init(3);this.location[Position.ON]=_on;this.location[Position.LEFT]=left;this.location[Position.RIGHT]=right;}}extend(TopologyLocation.prototype,{setAllLocations:function setAllLocations(locValue){for(var i=0;i<this.location.length;i++){this.location[i]=locValue;}},isNull:function isNull(){for(var i=0;i<this.location.length;i++){if(this.location[i]!==Location.NONE)return false;}return true;},setAllLocationsIfNull:function setAllLocationsIfNull(locValue){for(var i=0;i<this.location.length;i++){if(this.location[i]===Location.NONE)this.location[i]=locValue;}},isLine:function isLine(){return this.location.length===1;},merge:function merge(gl){if(gl.location.length>this.location.length){var newLoc=new Array(3).fill(null);newLoc[Position.ON]=this.location[Position.ON];newLoc[Position.LEFT]=Location.NONE;newLoc[Position.RIGHT]=Location.NONE;this.location=newLoc;}for(var i=0;i<this.location.length;i++){if(this.location[i]===Location.NONE&&i<gl.location.length)this.location[i]=gl.location[i];}},getLocations:function getLocations(){return this.location;},flip:function flip(){if(this.location.length<=1)return null;var temp=this.location[Position.LEFT];this.location[Position.LEFT]=this.location[Position.RIGHT];this.location[Position.RIGHT]=temp;},toString:function toString(){var buf=new StringBuffer();if(this.location.length>1)buf.append(Location.toLocationSymbol(this.location[Position.LEFT]));buf.append(Location.toLocationSymbol(this.location[Position.ON]));if(this.location.length>1)buf.append(Location.toLocationSymbol(this.location[Position.RIGHT]));return buf.toString();},setLocations:function setLocations(on,left,right){this.location[Position.ON]=on;this.location[Position.LEFT]=left;this.location[Position.RIGHT]=right;},get:function get(posIndex){if(posIndex<this.location.length)return this.location[posIndex];return Location.NONE;},isArea:function isArea(){return this.location.length>1;},isAnyNull:function isAnyNull(){for(var i=0;i<this.location.length;i++){if(this.location[i]===Location.NONE)return true;}return false;},setLocation:function setLocation(){if(arguments.length===1){var locValue=arguments[0];this.setLocation(Position.ON,locValue);}else if(arguments.length===2){var locIndex=arguments[0],_locValue=arguments[1];this.location[locIndex]=_locValue;}},init:function init(size){this.location=new Array(size).fill(null);this.setAllLocations(Location.NONE);},isEqualOnSide:function isEqualOnSide(le,locIndex){return this.location[locIndex]===le.location[locIndex];},allPositionsEqual:function allPositionsEqual(loc){for(var i=0;i<this.location.length;i++){if(this.location[i]!==loc)return false;}return true;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return TopologyLocation;}});function Label(){this.elt=new Array(2).fill(null);if(arguments.length===1){if(Number.isInteger(arguments[0])){var onLoc=arguments[0];this.elt[0]=new TopologyLocation(onLoc);this.elt[1]=new TopologyLocation(onLoc);}else if(arguments[0]instanceof Label){var lbl=arguments[0];this.elt[0]=new TopologyLocation(lbl.elt[0]);this.elt[1]=new TopologyLocation(lbl.elt[1]);}}else if(arguments.length===2){var geomIndex=arguments[0],_onLoc=arguments[1];this.elt[0]=new TopologyLocation(Location.NONE);this.elt[1]=new TopologyLocation(Location.NONE);this.elt[geomIndex].setLocation(_onLoc);}else if(arguments.length===3){var _onLoc2=arguments[0],leftLoc=arguments[1],rightLoc=arguments[2];this.elt[0]=new TopologyLocation(_onLoc2,leftLoc,rightLoc);this.elt[1]=new TopologyLocation(_onLoc2,leftLoc,rightLoc);}else if(arguments.length===4){var _geomIndex=arguments[0],_onLoc3=arguments[1],_leftLoc=arguments[2],_rightLoc=arguments[3];this.elt[0]=new TopologyLocation(Location.NONE,Location.NONE,Location.NONE);this.elt[1]=new TopologyLocation(Location.NONE,Location.NONE,Location.NONE);this.elt[_geomIndex].setLocations(_onLoc3,_leftLoc,_rightLoc);}}extend(Label.prototype,{getGeometryCount:function getGeometryCount(){var count=0;if(!this.elt[0].isNull())count++;if(!this.elt[1].isNull())count++;return count;},setAllLocations:function setAllLocations(geomIndex,location){this.elt[geomIndex].setAllLocations(location);},isNull:function isNull(geomIndex){return this.elt[geomIndex].isNull();},setAllLocationsIfNull:function setAllLocationsIfNull(){if(arguments.length===1){var location=arguments[0];this.setAllLocationsIfNull(0,location);this.setAllLocationsIfNull(1,location);}else if(arguments.length===2){var geomIndex=arguments[0],_location=arguments[1];this.elt[geomIndex].setAllLocationsIfNull(_location);}},isLine:function isLine(geomIndex){return this.elt[geomIndex].isLine();},merge:function merge(lbl){for(var i=0;i<2;i++){if(this.elt[i]===null&&lbl.elt[i]!==null){this.elt[i]=new TopologyLocation(lbl.elt[i]);}else{this.elt[i].merge(lbl.elt[i]);}}},flip:function flip(){this.elt[0].flip();this.elt[1].flip();},getLocation:function getLocation(){if(arguments.length===1){var geomIndex=arguments[0];return this.elt[geomIndex].get(Position.ON);}else if(arguments.length===2){var _geomIndex2=arguments[0],posIndex=arguments[1];return this.elt[_geomIndex2].get(posIndex);}},toString:function toString(){var buf=new StringBuffer();if(this.elt[0]!==null){buf.append(\"A:\");buf.append(this.elt[0].toString());}if(this.elt[1]!==null){buf.append(\" B:\");buf.append(this.elt[1].toString());}return buf.toString();},isArea:function isArea(){if(arguments.length===0){return this.elt[0].isArea()||this.elt[1].isArea();}else if(arguments.length===1){var geomIndex=arguments[0];return this.elt[geomIndex].isArea();}},isAnyNull:function isAnyNull(geomIndex){return this.elt[geomIndex].isAnyNull();},setLocation:function setLocation(){if(arguments.length===2){var geomIndex=arguments[0],location=arguments[1];this.elt[geomIndex].setLocation(Position.ON,location);}else if(arguments.length===3){var _geomIndex3=arguments[0],posIndex=arguments[1],_location2=arguments[2];this.elt[_geomIndex3].setLocation(posIndex,_location2);}},isEqualOnSide:function isEqualOnSide(lbl,side){return this.elt[0].isEqualOnSide(lbl.elt[0],side)&&this.elt[1].isEqualOnSide(lbl.elt[1],side);},allPositionsEqual:function allPositionsEqual(geomIndex,loc){return this.elt[geomIndex].allPositionsEqual(loc);},toLine:function toLine(geomIndex){if(this.elt[geomIndex].isArea())this.elt[geomIndex]=new TopologyLocation(this.elt[geomIndex].location[0]);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Label;}});Label.toLineLabel=function(label){var lineLabel=new Label(Location.NONE);for(var i=0;i<2;i++){lineLabel.setLocation(i,label.getLocation(i));}return lineLabel;};function EdgeRing(){this.startDe=null;this.maxNodeDegree=-1;this.edges=new ArrayList();this.pts=new ArrayList();this.label=new Label(Location.NONE);this.ring=null;this._isHole=null;this.shell=null;this.holes=new ArrayList();this.geometryFactory=null;var start=arguments[0],geometryFactory=arguments[1];this.geometryFactory=geometryFactory;this.computePoints(start);this.computeRing();}extend(EdgeRing.prototype,{computeRing:function computeRing(){if(this.ring!==null)return null;var coord=new Array(this.pts.size()).fill(null);for(var i=0;i<this.pts.size();i++){coord[i]=this.pts.get(i);}this.ring=this.geometryFactory.createLinearRing(coord);this._isHole=CGAlgorithms.isCCW(this.ring.getCoordinates());},isIsolated:function isIsolated(){return this.label.getGeometryCount()===1;},computePoints:function computePoints(start){this.startDe=start;var de=start;var isFirstEdge=true;do{if(de===null)throw new TopologyException(\"Found null DirectedEdge\");if(de.getEdgeRing()===this)throw new TopologyException(\"Directed Edge visited twice during ring-building at \"+de.getCoordinate());this.edges.add(de);var label=de.getLabel();Assert.isTrue(label.isArea());this.mergeLabel(label);this.addPoints(de.getEdge(),de.isForward(),isFirstEdge);isFirstEdge=false;this.setEdgeRing(de,this);de=this.getNext(de);}while(de!==this.startDe);},getLinearRing:function getLinearRing(){return this.ring;},getCoordinate:function getCoordinate(i){return this.pts.get(i);},computeMaxNodeDegree:function computeMaxNodeDegree(){this.maxNodeDegree=0;var de=this.startDe;do{var node=de.getNode();var degree=node.getEdges().getOutgoingDegree(this);if(degree>this.maxNodeDegree)this.maxNodeDegree=degree;de=this.getNext(de);}while(de!==this.startDe);this.maxNodeDegree*=2;},addPoints:function addPoints(edge,isForward,isFirstEdge){var edgePts=edge.getCoordinates();if(isForward){var startIndex=1;if(isFirstEdge)startIndex=0;for(var i=startIndex;i<edgePts.length;i++){this.pts.add(edgePts[i]);}}else{var startIndex=edgePts.length-2;if(isFirstEdge)startIndex=edgePts.length-1;for(var i=startIndex;i>=0;i--){this.pts.add(edgePts[i]);}}},isHole:function isHole(){return this._isHole;},setInResult:function setInResult(){var de=this.startDe;do{de.getEdge().setInResult(true);de=de.getNext();}while(de!==this.startDe);},containsPoint:function containsPoint(p){var shell=this.getLinearRing();var env=shell.getEnvelopeInternal();if(!env.contains(p))return false;if(!CGAlgorithms.isPointInRing(p,shell.getCoordinates()))return false;for(var i=this.holes.iterator();i.hasNext();){var hole=i.next();if(hole.containsPoint(p))return false;}return true;},addHole:function addHole(ring){this.holes.add(ring);},isShell:function isShell(){return this.shell===null;},getLabel:function getLabel(){return this.label;},getEdges:function getEdges(){return this.edges;},getMaxNodeDegree:function getMaxNodeDegree(){if(this.maxNodeDegree<0)this.computeMaxNodeDegree();return this.maxNodeDegree;},getShell:function getShell(){return this.shell;},mergeLabel:function mergeLabel(){if(arguments.length===1){var deLabel=arguments[0];this.mergeLabel(deLabel,0);this.mergeLabel(deLabel,1);}else if(arguments.length===2){var _deLabel=arguments[0],geomIndex=arguments[1];var loc=_deLabel.getLocation(geomIndex,Position.RIGHT);if(loc===Location.NONE)return null;if(this.label.getLocation(geomIndex)===Location.NONE){this.label.setLocation(geomIndex,loc);return null;}}},setShell:function setShell(shell){this.shell=shell;if(shell!==null)shell.addHole(this);},toPolygon:function toPolygon(geometryFactory){var holeLR=new Array(this.holes.size()).fill(null);for(var i=0;i<this.holes.size();i++){holeLR[i]=this.holes.get(i).getLinearRing();}var poly=geometryFactory.createPolygon(this.getLinearRing(),holeLR);return poly;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return EdgeRing;}});function MinimalEdgeRing(){var start=arguments[0],geometryFactory=arguments[1];EdgeRing.call(this,start,geometryFactory);}inherits(MinimalEdgeRing,EdgeRing);extend(MinimalEdgeRing.prototype,{setEdgeRing:function setEdgeRing(de,er){de.setMinEdgeRing(er);},getNext:function getNext(de){return de.getNextMin();},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return MinimalEdgeRing;}});function MaximalEdgeRing(){var start=arguments[0],geometryFactory=arguments[1];EdgeRing.call(this,start,geometryFactory);}inherits(MaximalEdgeRing,EdgeRing);extend(MaximalEdgeRing.prototype,{buildMinimalRings:function buildMinimalRings(){var minEdgeRings=new ArrayList();var de=this.startDe;do{if(de.getMinEdgeRing()===null){var minEr=new MinimalEdgeRing(de,this.geometryFactory);minEdgeRings.add(minEr);}de=de.getNext();}while(de!==this.startDe);return minEdgeRings;},setEdgeRing:function setEdgeRing(de,er){de.setEdgeRing(er);},linkDirectedEdgesForMinimalEdgeRings:function linkDirectedEdgesForMinimalEdgeRings(){var de=this.startDe;do{var node=de.getNode();node.getEdges().linkMinimalDirectedEdges(this);de=de.getNext();}while(de!==this.startDe);},getNext:function getNext(de){return de.getNext();},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return MaximalEdgeRing;}});function GraphComponent(){this.label=null;this._isInResult=false;this._isCovered=false;this._isCoveredSet=false;this._isVisited=false;if(arguments.length===0){}else if(arguments.length===1){var label=arguments[0];this.label=label;}}extend(GraphComponent.prototype,{setVisited:function setVisited(isVisited){this._isVisited=isVisited;},setInResult:function setInResult(isInResult){this._isInResult=isInResult;},isCovered:function isCovered(){return this._isCovered;},isCoveredSet:function isCoveredSet(){return this._isCoveredSet;},setLabel:function setLabel(label){this.label=label;},getLabel:function getLabel(){return this.label;},setCovered:function setCovered(isCovered){this._isCovered=isCovered;this._isCoveredSet=true;},updateIM:function updateIM(im){Assert.isTrue(this.label.getGeometryCount()>=2,\"found partial label\");this.computeIM(im);},isInResult:function isInResult(){return this._isInResult;},isVisited:function isVisited(){return this._isVisited;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return GraphComponent;}});function Node(){GraphComponent.apply(this);this.coord=null;this.edges=null;var coord=arguments[0],edges=arguments[1];this.coord=coord;this.edges=edges;this.label=new Label(0,Location.NONE);}inherits(Node,GraphComponent);extend(Node.prototype,{isIncidentEdgeInResult:function isIncidentEdgeInResult(){for(var it=this.getEdges().getEdges().iterator();it.hasNext();){var de=it.next();if(de.getEdge().isInResult())return true;}return false;},isIsolated:function isIsolated(){return this.label.getGeometryCount()===1;},getCoordinate:function getCoordinate(){return this.coord;},print:function print(out){out.println(\"node \"+this.coord+\" lbl: \"+this.label);},computeIM:function computeIM(im){},computeMergedLocation:function computeMergedLocation(label2,eltIndex){var loc=Location.NONE;loc=this.label.getLocation(eltIndex);if(!label2.isNull(eltIndex)){var nLoc=label2.getLocation(eltIndex);if(loc!==Location.BOUNDARY)loc=nLoc;}return loc;},setLabel:function setLabel(){if(arguments.length===2){var argIndex=arguments[0],onLocation=arguments[1];if(this.label===null){this.label=new Label(argIndex,onLocation);}else this.label.setLocation(argIndex,onLocation);}else return GraphComponent.prototype.setLabel.apply(this,arguments);},getEdges:function getEdges(){return this.edges;},mergeLabel:function mergeLabel(){if(arguments[0]instanceof Node){var n=arguments[0];this.mergeLabel(n.label);}else if(arguments[0]instanceof Label){var label2=arguments[0];for(var i=0;i<2;i++){var loc=this.computeMergedLocation(label2,i);var thisLoc=this.label.getLocation(i);if(thisLoc===Location.NONE)this.label.setLocation(i,loc);}}},add:function add(e){this.edges.insert(e);e.setNode(this);},setLabelBoundary:function setLabelBoundary(argIndex){if(this.label===null)return null;var loc=Location.NONE;if(this.label!==null)loc=this.label.getLocation(argIndex);var newLoc=null;switch(loc){case Location.BOUNDARY:newLoc=Location.INTERIOR;break;case Location.INTERIOR:newLoc=Location.BOUNDARY;break;default:newLoc=Location.BOUNDARY;break;}this.label.setLocation(argIndex,newLoc);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Node;}});function NodeMap(){this.nodeMap=new TreeMap();this.nodeFact=null;var nodeFact=arguments[0];this.nodeFact=nodeFact;}extend(NodeMap.prototype,{find:function find(coord){return this.nodeMap.get(coord);},addNode:function addNode(){if(arguments[0]instanceof Coordinate){var coord=arguments[0];var node=this.nodeMap.get(coord);if(node===null){node=this.nodeFact.createNode(coord);this.nodeMap.put(coord,node);}return node;}else if(arguments[0]instanceof Node){var n=arguments[0];var node=this.nodeMap.get(n.getCoordinate());if(node===null){this.nodeMap.put(n.getCoordinate(),n);return n;}node.mergeLabel(n);return node;}},print:function print(out){for(var it=this.iterator();it.hasNext();){var n=it.next();n.print(out);}},iterator:function iterator(){return this.nodeMap.values().iterator();},values:function values(){return this.nodeMap.values();},getBoundaryNodes:function getBoundaryNodes(geomIndex){var bdyNodes=new ArrayList();for(var i=this.iterator();i.hasNext();){var node=i.next();if(node.getLabel().getLocation(geomIndex)===Location.BOUNDARY)bdyNodes.add(node);}return bdyNodes;},add:function add(e){var p=e.getCoordinate();var n=this.addNode(p);n.add(e);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return NodeMap;}});function EdgeEnd(){this.edge=null;this.label=null;this.node=null;this.p0=null;this.p1=null;this.dx=null;this.dy=null;this.quadrant=null;if(arguments.length===1){var edge=arguments[0];this.edge=edge;}else if(arguments.length===3){var _edge=arguments[0],p0=arguments[1],p1=arguments[2];EdgeEnd.call(this,_edge,p0,p1,null);}else if(arguments.length===4){var _edge2=arguments[0],_p=arguments[1],_p2=arguments[2],label=arguments[3];EdgeEnd.call(this,_edge2);this.init(_p,_p2);this.label=label;}}extend(EdgeEnd.prototype,{compareDirection:function compareDirection(e){if(this.dx===e.dx&&this.dy===e.dy)return 0;if(this.quadrant>e.quadrant)return 1;if(this.quadrant<e.quadrant)return-1;return CGAlgorithms.computeOrientation(e.p0,e.p1,this.p1);},getDy:function getDy(){return this.dy;},getCoordinate:function getCoordinate(){return this.p0;},setNode:function setNode(node){this.node=node;},print:function print(out){var angle=Math.atan2(this.dy,this.dx);var className=this.getClass().getName();var lastDotPos=className.lastIndexOf('.');var name=className.substring(lastDotPos+1);out.print(\"  \"+name+\": \"+this.p0+\" - \"+this.p1+\" \"+this.quadrant+\":\"+angle+\"   \"+this.label);},compareTo:function compareTo(obj){var e=obj;return this.compareDirection(e);},getDirectedCoordinate:function getDirectedCoordinate(){return this.p1;},getDx:function getDx(){return this.dx;},getLabel:function getLabel(){return this.label;},getEdge:function getEdge(){return this.edge;},getQuadrant:function getQuadrant(){return this.quadrant;},getNode:function getNode(){return this.node;},toString:function toString(){var angle=Math.atan2(this.dy,this.dx);var className=this.getClass().getName();var lastDotPos=className.lastIndexOf('.');var name=className.substring(lastDotPos+1);return\"  \"+name+\": \"+this.p0+\" - \"+this.p1+\" \"+this.quadrant+\":\"+angle+\"   \"+this.label;},computeLabel:function computeLabel(boundaryNodeRule){},init:function init(p0,p1){this.p0=p0;this.p1=p1;this.dx=p1.x-p0.x;this.dy=p1.y-p0.y;this.quadrant=Quadrant.quadrant(this.dx,this.dy);Assert.isTrue(!(this.dx===0&&this.dy===0),\"EdgeEnd with identical endpoints found\");},interfaces_:function interfaces_(){return[Comparable];},getClass:function getClass(){return EdgeEnd;}});function DirectedEdge(){this._isForward=null;this._isInResult=false;this._isVisited=false;this.sym=null;this.next=null;this.nextMin=null;this.edgeRing=null;this.minEdgeRing=null;this.depth=[0,-999,-999];var edge=arguments[0],isForward=arguments[1];EdgeEnd.call(this,edge);this._isForward=isForward;if(isForward){this.init(edge.getCoordinate(0),edge.getCoordinate(1));}else{var n=edge.getNumPoints()-1;this.init(edge.getCoordinate(n),edge.getCoordinate(n-1));}this.computeDirectedLabel();}inherits(DirectedEdge,EdgeEnd);extend(DirectedEdge.prototype,{getNextMin:function getNextMin(){return this.nextMin;},getDepth:function getDepth(position){return this.depth[position];},setVisited:function setVisited(isVisited){this._isVisited=isVisited;},computeDirectedLabel:function computeDirectedLabel(){this.label=new Label(this.edge.getLabel());if(!this._isForward)this.label.flip();},getNext:function getNext(){return this.next;},setDepth:function setDepth(position,depthVal){if(this.depth[position]!==-999){if(this.depth[position]!==depthVal)throw new TopologyException(\"assigned depths do not match\",this.getCoordinate());}this.depth[position]=depthVal;},isInteriorAreaEdge:function isInteriorAreaEdge(){var isInteriorAreaEdge=true;for(var i=0;i<2;i++){if(!(this.label.isArea(i)&&this.label.getLocation(i,Position.LEFT)===Location.INTERIOR&&this.label.getLocation(i,Position.RIGHT)===Location.INTERIOR)){isInteriorAreaEdge=false;}}return isInteriorAreaEdge;},setNextMin:function setNextMin(nextMin){this.nextMin=nextMin;},print:function print(out){EdgeEnd.prototype.print.call(this,out);out.print(\" \"+this.depth[Position.LEFT]+\"/\"+this.depth[Position.RIGHT]);out.print(\" (\"+this.getDepthDelta()+\")\");if(this._isInResult)out.print(\" inResult\");},setMinEdgeRing:function setMinEdgeRing(minEdgeRing){this.minEdgeRing=minEdgeRing;},isLineEdge:function isLineEdge(){var isLine=this.label.isLine(0)||this.label.isLine(1);var isExteriorIfArea0=!this.label.isArea(0)||this.label.allPositionsEqual(0,Location.EXTERIOR);var isExteriorIfArea1=!this.label.isArea(1)||this.label.allPositionsEqual(1,Location.EXTERIOR);return isLine&&isExteriorIfArea0&&isExteriorIfArea1;},setEdgeRing:function setEdgeRing(edgeRing){this.edgeRing=edgeRing;},getMinEdgeRing:function getMinEdgeRing(){return this.minEdgeRing;},getDepthDelta:function getDepthDelta(){var depthDelta=this.edge.getDepthDelta();if(!this._isForward)depthDelta=-depthDelta;return depthDelta;},setInResult:function setInResult(isInResult){this._isInResult=isInResult;},getSym:function getSym(){return this.sym;},isForward:function isForward(){return this._isForward;},getEdge:function getEdge(){return this.edge;},printEdge:function printEdge(out){this.print(out);out.print(\" \");if(this._isForward)this.edge.print(out);else this.edge.printReverse(out);},setSym:function setSym(de){this.sym=de;},setVisitedEdge:function setVisitedEdge(isVisited){this.setVisited(isVisited);this.sym.setVisited(isVisited);},setEdgeDepths:function setEdgeDepths(position,depth){var depthDelta=this.getEdge().getDepthDelta();if(!this._isForward)depthDelta=-depthDelta;var directionFactor=1;if(position===Position.LEFT)directionFactor=-1;var oppositePos=Position.opposite(position);var delta=depthDelta*directionFactor;var oppositeDepth=depth+delta;this.setDepth(position,depth);this.setDepth(oppositePos,oppositeDepth);},getEdgeRing:function getEdgeRing(){return this.edgeRing;},isInResult:function isInResult(){return this._isInResult;},setNext:function setNext(next){this.next=next;},isVisited:function isVisited(){return this._isVisited;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return DirectedEdge;}});DirectedEdge.depthFactor=function(currLocation,nextLocation){if(currLocation===Location.EXTERIOR&&nextLocation===Location.INTERIOR)return 1;else if(currLocation===Location.INTERIOR&&nextLocation===Location.EXTERIOR)return-1;return 0;};function NodeFactory(){}extend(NodeFactory.prototype,{createNode:function createNode(coord){return new Node(coord,null);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return NodeFactory;}});function PlanarGraph(){this.edges=new ArrayList();this.nodes=null;this.edgeEndList=new ArrayList();if(arguments.length===0){this.nodes=new NodeMap(new NodeFactory());}else if(arguments.length===1){var nodeFact=arguments[0];this.nodes=new NodeMap(nodeFact);}}extend(PlanarGraph.prototype,{printEdges:function printEdges(out){out.println(\"Edges:\");for(var i=0;i<this.edges.size();i++){out.println(\"edge \"+i+\":\");var e=this.edges.get(i);e.print(out);e.eiList.print(out);}},find:function find(coord){return this.nodes.find(coord);},addNode:function addNode(){if(arguments[0]instanceof Node){var node=arguments[0];return this.nodes.addNode(node);}else if(arguments[0]instanceof Coordinate){var coord=arguments[0];return this.nodes.addNode(coord);}},getNodeIterator:function getNodeIterator(){return this.nodes.iterator();},linkResultDirectedEdges:function linkResultDirectedEdges(){for(var nodeit=this.nodes.iterator();nodeit.hasNext();){var node=nodeit.next();node.getEdges().linkResultDirectedEdges();}},debugPrintln:function debugPrintln(o){System.out.println(o);},isBoundaryNode:function isBoundaryNode(geomIndex,coord){var node=this.nodes.find(coord);if(node===null)return false;var label=node.getLabel();if(label!==null&&label.getLocation(geomIndex)===Location.BOUNDARY)return true;return false;},linkAllDirectedEdges:function linkAllDirectedEdges(){for(var nodeit=this.nodes.iterator();nodeit.hasNext();){var node=nodeit.next();node.getEdges().linkAllDirectedEdges();}},matchInSameDirection:function matchInSameDirection(p0,p1,ep0,ep1){if(!p0.equals(ep0))return false;if(CGAlgorithms.computeOrientation(p0,p1,ep1)===CGAlgorithms.COLLINEAR&&Quadrant.quadrant(p0,p1)===Quadrant.quadrant(ep0,ep1))return true;return false;},getEdgeEnds:function getEdgeEnds(){return this.edgeEndList;},debugPrint:function debugPrint(o){System.out.print(o);},getEdgeIterator:function getEdgeIterator(){return this.edges.iterator();},findEdgeInSameDirection:function findEdgeInSameDirection(p0,p1){for(var i=0;i<this.edges.size();i++){var e=this.edges.get(i);var eCoord=e.getCoordinates();if(this.matchInSameDirection(p0,p1,eCoord[0],eCoord[1]))return e;if(this.matchInSameDirection(p0,p1,eCoord[eCoord.length-1],eCoord[eCoord.length-2]))return e;}return null;},insertEdge:function insertEdge(e){this.edges.add(e);},findEdgeEnd:function findEdgeEnd(e){for(var i=this.getEdgeEnds().iterator();i.hasNext();){var ee=i.next();if(ee.getEdge()===e)return ee;}return null;},addEdges:function addEdges(edgesToAdd){for(var it=edgesToAdd.iterator();it.hasNext();){var e=it.next();this.edges.add(e);var de1=new DirectedEdge(e,true);var de2=new DirectedEdge(e,false);de1.setSym(de2);de2.setSym(de1);this.add(de1);this.add(de2);}},add:function add(e){this.nodes.add(e);this.edgeEndList.add(e);},getNodes:function getNodes(){return this.nodes.values();},findEdge:function findEdge(p0,p1){for(var i=0;i<this.edges.size();i++){var e=this.edges.get(i);var eCoord=e.getCoordinates();if(p0.equals(eCoord[0])&&p1.equals(eCoord[1]))return e;}return null;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return PlanarGraph;}});PlanarGraph.linkResultDirectedEdges=function(nodes){for(var nodeit=nodes.iterator();nodeit.hasNext();){var node=nodeit.next();node.getEdges().linkResultDirectedEdges();}};function PolygonBuilder(){this.geometryFactory=null;this.shellList=new ArrayList();var geometryFactory=arguments[0];this.geometryFactory=geometryFactory;}extend(PolygonBuilder.prototype,{sortShellsAndHoles:function sortShellsAndHoles(edgeRings,shellList,freeHoleList){for(var it=edgeRings.iterator();it.hasNext();){var er=it.next();if(er.isHole()){freeHoleList.add(er);}else{shellList.add(er);}}},computePolygons:function computePolygons(shellList){var resultPolyList=new ArrayList();for(var it=shellList.iterator();it.hasNext();){var er=it.next();var poly=er.toPolygon(this.geometryFactory);resultPolyList.add(poly);}return resultPolyList;},placeFreeHoles:function placeFreeHoles(shellList,freeHoleList){for(var it=freeHoleList.iterator();it.hasNext();){var hole=it.next();if(hole.getShell()===null){var shell=this.findEdgeRingContaining(hole,shellList);if(shell===null)throw new TopologyException(\"unable to assign hole to a shell\",hole.getCoordinate(0));hole.setShell(shell);}}},buildMinimalEdgeRings:function buildMinimalEdgeRings(maxEdgeRings,shellList,freeHoleList){var edgeRings=new ArrayList();for(var it=maxEdgeRings.iterator();it.hasNext();){var er=it.next();if(er.getMaxNodeDegree()>2){er.linkDirectedEdgesForMinimalEdgeRings();var minEdgeRings=er.buildMinimalRings();var shell=this.findShell(minEdgeRings);if(shell!==null){this.placePolygonHoles(shell,minEdgeRings);shellList.add(shell);}else{freeHoleList.addAll(minEdgeRings);}}else{edgeRings.add(er);}}return edgeRings;},containsPoint:function containsPoint(p){for(var it=this.shellList.iterator();it.hasNext();){var er=it.next();if(er.containsPoint(p))return true;}return false;},buildMaximalEdgeRings:function buildMaximalEdgeRings(dirEdges){var maxEdgeRings=new ArrayList();for(var it=dirEdges.iterator();it.hasNext();){var de=it.next();if(de.isInResult()&&de.getLabel().isArea()){if(de.getEdgeRing()===null){var er=new MaximalEdgeRing(de,this.geometryFactory);maxEdgeRings.add(er);er.setInResult();}}}return maxEdgeRings;},placePolygonHoles:function placePolygonHoles(shell,minEdgeRings){for(var it=minEdgeRings.iterator();it.hasNext();){var er=it.next();if(er.isHole()){er.setShell(shell);}}},getPolygons:function getPolygons(){var resultPolyList=this.computePolygons(this.shellList);return resultPolyList;},findEdgeRingContaining:function findEdgeRingContaining(testEr,shellList){var testRing=testEr.getLinearRing();var testEnv=testRing.getEnvelopeInternal();var testPt=testRing.getCoordinateN(0);var minShell=null;var minEnv=null;for(var it=shellList.iterator();it.hasNext();){var tryShell=it.next();var tryRing=tryShell.getLinearRing();var tryEnv=tryRing.getEnvelopeInternal();if(minShell!==null)minEnv=minShell.getLinearRing().getEnvelopeInternal();var isContained=false;if(tryEnv.contains(testEnv)&&CGAlgorithms.isPointInRing(testPt,tryRing.getCoordinates()))isContained=true;if(isContained){if(minShell===null||minEnv.contains(tryEnv)){minShell=tryShell;}}}return minShell;},findShell:function findShell(minEdgeRings){var shellCount=0;var shell=null;for(var it=minEdgeRings.iterator();it.hasNext();){var er=it.next();if(!er.isHole()){shell=er;shellCount++;}}Assert.isTrue(shellCount<=1,\"found two shells in MinimalEdgeRing list\");return shell;},add:function add(){if(arguments.length===1){var graph=arguments[0];this.add(graph.getEdgeEnds(),graph.getNodes());}else if(arguments.length===2){var dirEdges=arguments[0],nodes=arguments[1];PlanarGraph.linkResultDirectedEdges(nodes);var maxEdgeRings=this.buildMaximalEdgeRings(dirEdges);var freeHoleList=new ArrayList();var edgeRings=this.buildMinimalEdgeRings(maxEdgeRings,this.shellList,freeHoleList);this.sortShellsAndHoles(edgeRings,this.shellList,freeHoleList);this.placeFreeHoles(this.shellList,freeHoleList);}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return PolygonBuilder;}});function LineBuilder(){this.op=null;this.geometryFactory=null;this.ptLocator=null;this.lineEdgesList=new ArrayList();this.resultLineList=new ArrayList();var op=arguments[0],geometryFactory=arguments[1],ptLocator=arguments[2];this.op=op;this.geometryFactory=geometryFactory;this.ptLocator=ptLocator;}extend(LineBuilder.prototype,{collectLines:function collectLines(opCode){for(var it=this.op.getGraph().getEdgeEnds().iterator();it.hasNext();){var de=it.next();this.collectLineEdge(de,opCode,this.lineEdgesList);this.collectBoundaryTouchEdge(de,opCode,this.lineEdgesList);}},labelIsolatedLine:function labelIsolatedLine(e,targetIndex){var loc=this.ptLocator.locate(e.getCoordinate(),this.op.getArgGeometry(targetIndex));e.getLabel().setLocation(targetIndex,loc);},build:function build(opCode){this.findCoveredLineEdges();this.collectLines(opCode);this.buildLines(opCode);return this.resultLineList;},collectLineEdge:function collectLineEdge(de,opCode,edges){var label=de.getLabel();var e=de.getEdge();if(de.isLineEdge()){if(!de.isVisited()&&OverlayOp.isResultOfOp(label,opCode)&&!e.isCovered()){edges.add(e);de.setVisitedEdge(true);}}},findCoveredLineEdges:function findCoveredLineEdges(){for(var nodeit=this.op.getGraph().getNodes().iterator();nodeit.hasNext();){var node=nodeit.next();node.getEdges().findCoveredLineEdges();}for(var it=this.op.getGraph().getEdgeEnds().iterator();it.hasNext();){var de=it.next();var e=de.getEdge();if(de.isLineEdge()&&!e.isCoveredSet()){var isCovered=this.op.isCoveredByA(de.getCoordinate());e.setCovered(isCovered);}}},labelIsolatedLines:function labelIsolatedLines(edgesList){for(var it=edgesList.iterator();it.hasNext();){var e=it.next();var label=e.getLabel();if(e.isIsolated()){if(label.isNull(0))this.labelIsolatedLine(e,0);else this.labelIsolatedLine(e,1);}}},buildLines:function buildLines(opCode){for(var it=this.lineEdgesList.iterator();it.hasNext();){var e=it.next();var label=e.getLabel();var line=this.geometryFactory.createLineString(e.getCoordinates());this.resultLineList.add(line);e.setInResult(true);}},collectBoundaryTouchEdge:function collectBoundaryTouchEdge(de,opCode,edges){var label=de.getLabel();if(de.isLineEdge())return null;if(de.isVisited())return null;if(de.isInteriorAreaEdge())return null;if(de.getEdge().isInResult())return null;Assert.isTrue(!(de.isInResult()||de.getSym().isInResult())||!de.getEdge().isInResult());if(OverlayOp.isResultOfOp(label,opCode)&&opCode===OverlayOp.INTERSECTION){edges.add(de.getEdge());de.setVisitedEdge(true);}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return LineBuilder;}});function PointBuilder(){this.op=null;this.geometryFactory=null;this.resultPointList=new ArrayList();var op=arguments[0],geometryFactory=arguments[1],ptLocator=arguments[2];this.op=op;this.geometryFactory=geometryFactory;}extend(PointBuilder.prototype,{filterCoveredNodeToPoint:function filterCoveredNodeToPoint(n){var coord=n.getCoordinate();if(!this.op.isCoveredByLA(coord)){var pt=this.geometryFactory.createPoint(coord);this.resultPointList.add(pt);}},extractNonCoveredResultNodes:function extractNonCoveredResultNodes(opCode){for(var nodeit=this.op.getGraph().getNodes().iterator();nodeit.hasNext();){var n=nodeit.next();if(n.isInResult())continue;if(n.isIncidentEdgeInResult())continue;if(n.getEdges().getDegree()===0||opCode===OverlayOp.INTERSECTION){var label=n.getLabel();if(OverlayOp.isResultOfOp(label,opCode)){this.filterCoveredNodeToPoint(n);}}}},build:function build(opCode){this.extractNonCoveredResultNodes(opCode);return this.resultPointList;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return PointBuilder;}});function PointOnGeometryLocator(){}extend(PointOnGeometryLocator.prototype,{locate:function locate(p){},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return PointOnGeometryLocator;}});function SimplePointInAreaLocator(){this.geom=null;var geom=arguments[0];this.geom=geom;}extend(SimplePointInAreaLocator.prototype,{locate:function locate(p){return SimplePointInAreaLocator.locate(p,this.geom);},interfaces_:function interfaces_(){return[PointOnGeometryLocator];},getClass:function getClass(){return SimplePointInAreaLocator;}});SimplePointInAreaLocator.isPointInRing=function(p,ring){if(!ring.getEnvelopeInternal().intersects(p))return false;return CGAlgorithms.isPointInRing(p,ring.getCoordinates());};SimplePointInAreaLocator.containsPointInPolygon=function(p,poly){if(poly.isEmpty())return false;var shell=poly.getExteriorRing();if(!SimplePointInAreaLocator.isPointInRing(p,shell))return false;for(var i=0;i<poly.getNumInteriorRing();i++){var hole=poly.getInteriorRingN(i);if(SimplePointInAreaLocator.isPointInRing(p,hole))return false;}return true;};SimplePointInAreaLocator.containsPoint=function(p,geom){if(geom instanceof Polygon){return SimplePointInAreaLocator.containsPointInPolygon(p,geom);}else if(geom instanceof GeometryCollection){var geomi=new GeometryCollectionIterator(geom);while(geomi.hasNext()){var g2=geomi.next();if(g2!==geom)if(SimplePointInAreaLocator.containsPoint(p,g2))return true;}}return false;};SimplePointInAreaLocator.locate=function(p,geom){if(geom.isEmpty())return Location.EXTERIOR;if(SimplePointInAreaLocator.containsPoint(p,geom))return Location.INTERIOR;return Location.EXTERIOR;};function EdgeEndStar(){this.edgeMap=new TreeMap();this.edgeList=null;this.ptInAreaLocation=[Location.NONE,Location.NONE];}extend(EdgeEndStar.prototype,{getNextCW:function getNextCW(ee){this.getEdges();var i=this.edgeList.indexOf(ee);var iNextCW=i-1;if(i===0)iNextCW=this.edgeList.size()-1;return this.edgeList.get(iNextCW);},propagateSideLabels:function propagateSideLabels(geomIndex){var startLoc=Location.NONE;for(var it=this.iterator();it.hasNext();){var e=it.next();var label=e.getLabel();if(label.isArea(geomIndex)&&label.getLocation(geomIndex,Position.LEFT)!==Location.NONE)startLoc=label.getLocation(geomIndex,Position.LEFT);}if(startLoc===Location.NONE)return null;var currLoc=startLoc;for(var it=this.iterator();it.hasNext();){var e=it.next();var label=e.getLabel();if(label.getLocation(geomIndex,Position.ON)===Location.NONE)label.setLocation(geomIndex,Position.ON,currLoc);if(label.isArea(geomIndex)){var leftLoc=label.getLocation(geomIndex,Position.LEFT);var rightLoc=label.getLocation(geomIndex,Position.RIGHT);if(rightLoc!==Location.NONE){if(rightLoc!==currLoc)throw new TopologyException(\"side location conflict\",e.getCoordinate());if(leftLoc===Location.NONE){Assert.shouldNeverReachHere(\"found single null side (at \"+e.getCoordinate()+\")\");}currLoc=leftLoc;}else{Assert.isTrue(label.getLocation(geomIndex,Position.LEFT)===Location.NONE,\"found single null side\");label.setLocation(geomIndex,Position.RIGHT,currLoc);label.setLocation(geomIndex,Position.LEFT,currLoc);}}}},getCoordinate:function getCoordinate(){var it=this.iterator();if(!it.hasNext())return null;var e=it.next();return e.getCoordinate();},print:function print(out){System.out.println(\"EdgeEndStar:   \"+this.getCoordinate());for(var it=this.iterator();it.hasNext();){var e=it.next();e.print(out);}},isAreaLabelsConsistent:function isAreaLabelsConsistent(geomGraph){this.computeEdgeEndLabels(geomGraph.getBoundaryNodeRule());return this.checkAreaLabelsConsistent(0);},checkAreaLabelsConsistent:function checkAreaLabelsConsistent(geomIndex){var edges=this.getEdges();if(edges.size()<=0)return true;var lastEdgeIndex=edges.size()-1;var startLabel=edges.get(lastEdgeIndex).getLabel();var startLoc=startLabel.getLocation(geomIndex,Position.LEFT);Assert.isTrue(startLoc!==Location.NONE,\"Found unlabelled area edge\");var currLoc=startLoc;for(var it=this.iterator();it.hasNext();){var e=it.next();var label=e.getLabel();Assert.isTrue(label.isArea(geomIndex),\"Found non-area edge\");var leftLoc=label.getLocation(geomIndex,Position.LEFT);var rightLoc=label.getLocation(geomIndex,Position.RIGHT);if(leftLoc===rightLoc){return false;}if(rightLoc!==currLoc){return false;}currLoc=leftLoc;}return true;},findIndex:function findIndex(eSearch){this.iterator();for(var i=0;i<this.edgeList.size();i++){var e=this.edgeList.get(i);if(e===eSearch)return i;}return-1;},iterator:function iterator(){return this.getEdges().iterator();},getEdges:function getEdges(){if(this.edgeList===null){this.edgeList=new ArrayList(this.edgeMap.values());}return this.edgeList;},getLocation:function getLocation(geomIndex,p,geom){if(this.ptInAreaLocation[geomIndex]===Location.NONE){this.ptInAreaLocation[geomIndex]=SimplePointInAreaLocator.locate(p,geom[geomIndex].getGeometry());}return this.ptInAreaLocation[geomIndex];},toString:function toString(){var buf=new StringBuffer();buf.append(\"EdgeEndStar:   \"+this.getCoordinate());buf.append(\"\\n\");for(var it=this.iterator();it.hasNext();){var e=it.next();buf.append(e);buf.append(\"\\n\");}return buf.toString();},computeEdgeEndLabels:function computeEdgeEndLabels(boundaryNodeRule){for(var it=this.iterator();it.hasNext();){var ee=it.next();ee.computeLabel(boundaryNodeRule);}},computeLabelling:function computeLabelling(geomGraph){this.computeEdgeEndLabels(geomGraph[0].getBoundaryNodeRule());this.propagateSideLabels(0);this.propagateSideLabels(1);var hasDimensionalCollapseEdge=[false,false];for(var it=this.iterator();it.hasNext();){var e=it.next();var label=e.getLabel();for(var geomi=0;geomi<2;geomi++){if(label.isLine(geomi)&&label.getLocation(geomi)===Location.BOUNDARY)hasDimensionalCollapseEdge[geomi]=true;}}for(var it=this.iterator();it.hasNext();){var e=it.next();var label=e.getLabel();for(var geomi=0;geomi<2;geomi++){if(label.isAnyNull(geomi)){var loc=Location.NONE;if(hasDimensionalCollapseEdge[geomi]){loc=Location.EXTERIOR;}else{var p=e.getCoordinate();loc=this.getLocation(geomi,p,geomGraph);}label.setAllLocationsIfNull(geomi,loc);}}}},getDegree:function getDegree(){return this.edgeMap.size();},insertEdgeEnd:function insertEdgeEnd(e,obj){this.edgeMap.put(e,obj);this.edgeList=null;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return EdgeEndStar;}});function DirectedEdgeStar(){EdgeEndStar.apply(this);this.resultAreaEdgeList=null;this.label=null;this.SCANNING_FOR_INCOMING=1;this.LINKING_TO_OUTGOING=2;}inherits(DirectedEdgeStar,EdgeEndStar);extend(DirectedEdgeStar.prototype,{linkResultDirectedEdges:function linkResultDirectedEdges(){this.getResultAreaEdges();var firstOut=null;var incoming=null;var state=this.SCANNING_FOR_INCOMING;for(var i=0;i<this.resultAreaEdgeList.size();i++){var nextOut=this.resultAreaEdgeList.get(i);var nextIn=nextOut.getSym();if(!nextOut.getLabel().isArea())continue;if(firstOut===null&&nextOut.isInResult())firstOut=nextOut;switch(state){case this.SCANNING_FOR_INCOMING:if(!nextIn.isInResult())continue;incoming=nextIn;state=this.LINKING_TO_OUTGOING;break;case this.LINKING_TO_OUTGOING:if(!nextOut.isInResult())continue;incoming.setNext(nextOut);state=this.SCANNING_FOR_INCOMING;break;}}if(state===this.LINKING_TO_OUTGOING){if(firstOut===null)throw new TopologyException(\"no outgoing dirEdge found\",this.getCoordinate());Assert.isTrue(firstOut.isInResult(),\"unable to link last incoming dirEdge\");incoming.setNext(firstOut);}},insert:function insert(ee){var de=ee;this.insertEdgeEnd(de,de);},getRightmostEdge:function getRightmostEdge(){var edges=this.getEdges();var size=edges.size();if(size<1)return null;var de0=edges.get(0);if(size===1)return de0;var deLast=edges.get(size-1);var quad0=de0.getQuadrant();var quad1=deLast.getQuadrant();if(Quadrant.isNorthern(quad0)&&Quadrant.isNorthern(quad1))return de0;else if(!Quadrant.isNorthern(quad0)&&!Quadrant.isNorthern(quad1))return deLast;else{var nonHorizontalEdge=null;if(de0.getDy()!==0)return de0;else if(deLast.getDy()!==0)return deLast;}Assert.shouldNeverReachHere(\"found two horizontal edges incident on node\");return null;},print:function print(out){System.out.println(\"DirectedEdgeStar: \"+this.getCoordinate());for(var it=this.iterator();it.hasNext();){var de=it.next();out.print(\"out \");de.print(out);out.println();out.print(\"in \");de.getSym().print(out);out.println();}},getResultAreaEdges:function getResultAreaEdges(){if(this.resultAreaEdgeList!==null)return this.resultAreaEdgeList;this.resultAreaEdgeList=new ArrayList();for(var it=this.iterator();it.hasNext();){var de=it.next();if(de.isInResult()||de.getSym().isInResult())this.resultAreaEdgeList.add(de);}return this.resultAreaEdgeList;},updateLabelling:function updateLabelling(nodeLabel){for(var it=this.iterator();it.hasNext();){var de=it.next();var label=de.getLabel();label.setAllLocationsIfNull(0,nodeLabel.getLocation(0));label.setAllLocationsIfNull(1,nodeLabel.getLocation(1));}},linkAllDirectedEdges:function linkAllDirectedEdges(){this.getEdges();var prevOut=null;var firstIn=null;for(var i=this.edgeList.size()-1;i>=0;i--){var nextOut=this.edgeList.get(i);var nextIn=nextOut.getSym();if(firstIn===null)firstIn=nextIn;if(prevOut!==null)nextIn.setNext(prevOut);prevOut=nextOut;}firstIn.setNext(prevOut);},computeDepths:function computeDepths(){if(arguments.length===1){var de=arguments[0];var edgeIndex=this.findIndex(de);var label=de.getLabel();var startDepth=de.getDepth(Position.LEFT);var targetLastDepth=de.getDepth(Position.RIGHT);var nextDepth=this.computeDepths(edgeIndex+1,this.edgeList.size(),startDepth);var lastDepth=this.computeDepths(0,edgeIndex,nextDepth);if(lastDepth!==targetLastDepth)throw new TopologyException(\"depth mismatch at \"+de.getCoordinate());}else if(arguments.length===3){var startIndex=arguments[0],endIndex=arguments[1],_startDepth=arguments[2];var currDepth=_startDepth;for(var i=startIndex;i<endIndex;i++){var nextDe=this.edgeList.get(i);var label=nextDe.getLabel();nextDe.setEdgeDepths(Position.RIGHT,currDepth);currDepth=nextDe.getDepth(Position.LEFT);}return currDepth;}},mergeSymLabels:function mergeSymLabels(){for(var it=this.iterator();it.hasNext();){var de=it.next();var label=de.getLabel();label.merge(de.getSym().getLabel());}},linkMinimalDirectedEdges:function linkMinimalDirectedEdges(er){var firstOut=null;var incoming=null;var state=this.SCANNING_FOR_INCOMING;for(var i=this.resultAreaEdgeList.size()-1;i>=0;i--){var nextOut=this.resultAreaEdgeList.get(i);var nextIn=nextOut.getSym();if(firstOut===null&&nextOut.getEdgeRing()===er)firstOut=nextOut;switch(state){case this.SCANNING_FOR_INCOMING:if(nextIn.getEdgeRing()!==er)continue;incoming=nextIn;state=this.LINKING_TO_OUTGOING;break;case this.LINKING_TO_OUTGOING:if(nextOut.getEdgeRing()!==er)continue;incoming.setNextMin(nextOut);state=this.SCANNING_FOR_INCOMING;break;}}if(state===this.LINKING_TO_OUTGOING){Assert.isTrue(firstOut!==null,\"found null for first outgoing dirEdge\");Assert.isTrue(firstOut.getEdgeRing()===er,\"unable to link last incoming dirEdge\");incoming.setNextMin(firstOut);}},getOutgoingDegree:function getOutgoingDegree(){if(arguments.length===0){var degree=0;for(var it=this.iterator();it.hasNext();){var de=it.next();if(de.isInResult())degree++;}return degree;}else if(arguments.length===1){var er=arguments[0];var degree=0;for(var it=this.iterator();it.hasNext();){var de=it.next();if(de.getEdgeRing()===er)degree++;}return degree;}},getLabel:function getLabel(){return this.label;},findCoveredLineEdges:function findCoveredLineEdges(){var startLoc=Location.NONE;for(var it=this.iterator();it.hasNext();){var nextOut=it.next();var nextIn=nextOut.getSym();if(!nextOut.isLineEdge()){if(nextOut.isInResult()){startLoc=Location.INTERIOR;break;}if(nextIn.isInResult()){startLoc=Location.EXTERIOR;break;}}}if(startLoc===Location.NONE)return null;var currLoc=startLoc;for(var it=this.iterator();it.hasNext();){var nextOut=it.next();var nextIn=nextOut.getSym();if(nextOut.isLineEdge()){nextOut.getEdge().setCovered(currLoc===Location.INTERIOR);}else{if(nextOut.isInResult())currLoc=Location.EXTERIOR;if(nextIn.isInResult())currLoc=Location.INTERIOR;}}},computeLabelling:function computeLabelling(geom){EdgeEndStar.prototype.computeLabelling.call(this,geom);this.label=new Label(Location.NONE);for(var it=this.iterator();it.hasNext();){var ee=it.next();var e=ee.getEdge();var eLabel=e.getLabel();for(var i=0;i<2;i++){var eLoc=eLabel.getLocation(i);if(eLoc===Location.INTERIOR||eLoc===Location.BOUNDARY)this.label.setLocation(i,Location.INTERIOR);}}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return DirectedEdgeStar;}});function OverlayNodeFactory(){NodeFactory.apply(this);}inherits(OverlayNodeFactory,NodeFactory);extend(OverlayNodeFactory.prototype,{createNode:function createNode(coord){return new Node(coord,new DirectedEdgeStar());},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return OverlayNodeFactory;}});function MonotoneChain$1(){this.mce=null;this.chainIndex=null;var mce=arguments[0],chainIndex=arguments[1];this.mce=mce;this.chainIndex=chainIndex;}extend(MonotoneChain$1.prototype,{computeIntersections:function computeIntersections(mc,si){this.mce.computeIntersectsForChain(this.chainIndex,mc.mce,mc.chainIndex,si);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return MonotoneChain$1;}});function SweepLineEvent(){this.label=null;this.xValue=null;this.eventType=null;this.insertEvent=null;this.deleteEventIndex=null;this.obj=null;if(arguments.length===2){var x=arguments[0],insertEvent=arguments[1];this.eventType=SweepLineEvent.DELETE;this.xValue=x;this.insertEvent=insertEvent;}else if(arguments.length===3){var label=arguments[0],_x=arguments[1],obj=arguments[2];this.eventType=SweepLineEvent.INSERT;this.label=label;this.xValue=_x;this.obj=obj;}}extend(SweepLineEvent.prototype,{isDelete:function isDelete(){return this.eventType===SweepLineEvent.DELETE;},setDeleteEventIndex:function setDeleteEventIndex(deleteEventIndex){this.deleteEventIndex=deleteEventIndex;},getObject:function getObject(){return this.obj;},compareTo:function compareTo(o){var pe=o;if(this.xValue<pe.xValue)return-1;if(this.xValue>pe.xValue)return 1;if(this.eventType<pe.eventType)return-1;if(this.eventType>pe.eventType)return 1;return 0;},getInsertEvent:function getInsertEvent(){return this.insertEvent;},isInsert:function isInsert(){return this.eventType===SweepLineEvent.INSERT;},isSameLabel:function isSameLabel(ev){if(this.label===null)return false;return this.label===ev.label;},getDeleteEventIndex:function getDeleteEventIndex(){return this.deleteEventIndex;},interfaces_:function interfaces_(){return[Comparable];},getClass:function getClass(){return SweepLineEvent;}});SweepLineEvent.INSERT=1;SweepLineEvent.DELETE=2;function EdgeSetIntersector(){}extend(EdgeSetIntersector.prototype,{interfaces_:function interfaces_(){return[];},getClass:function getClass(){return EdgeSetIntersector;}});function SegmentIntersector$1(){this._hasIntersection=false;this.hasProper=false;this.hasProperInterior=false;this.properIntersectionPoint=null;this.li=null;this.includeProper=null;this.recordIsolated=null;this.isSelfIntersection=null;this.numIntersections=0;this.numTests=0;this.bdyNodes=null;this._isDone=false;this.isDoneWhenProperInt=false;var li=arguments[0],includeProper=arguments[1],recordIsolated=arguments[2];this.li=li;this.includeProper=includeProper;this.recordIsolated=recordIsolated;}extend(SegmentIntersector$1.prototype,{isTrivialIntersection:function isTrivialIntersection(e0,segIndex0,e1,segIndex1){if(e0===e1){if(this.li.getIntersectionNum()===1){if(SegmentIntersector$1.isAdjacentSegments(segIndex0,segIndex1))return true;if(e0.isClosed()){var maxSegIndex=e0.getNumPoints()-1;if(segIndex0===0&&segIndex1===maxSegIndex||segIndex1===0&&segIndex0===maxSegIndex){return true;}}}}return false;},getProperIntersectionPoint:function getProperIntersectionPoint(){return this.properIntersectionPoint;},setIsDoneIfProperInt:function setIsDoneIfProperInt(isDoneWhenProperInt){this.isDoneWhenProperInt=isDoneWhenProperInt;},hasProperInteriorIntersection:function hasProperInteriorIntersection(){return this.hasProperInterior;},isBoundaryPointInternal:function isBoundaryPointInternal(li,bdyNodes){for(var i=bdyNodes.iterator();i.hasNext();){var node=i.next();var pt=node.getCoordinate();if(li.isIntersection(pt))return true;}return false;},hasProperIntersection:function hasProperIntersection(){return this.hasProper;},hasIntersection:function hasIntersection(){return this._hasIntersection;},isDone:function isDone(){return this._isDone;},isBoundaryPoint:function isBoundaryPoint(li,bdyNodes){if(bdyNodes===null)return false;if(this.isBoundaryPointInternal(li,bdyNodes[0]))return true;if(this.isBoundaryPointInternal(li,bdyNodes[1]))return true;return false;},setBoundaryNodes:function setBoundaryNodes(bdyNodes0,bdyNodes1){this.bdyNodes=new Array(2).fill(null);this.bdyNodes[0]=bdyNodes0;this.bdyNodes[1]=bdyNodes1;},addIntersections:function addIntersections(e0,segIndex0,e1,segIndex1){if(e0===e1&&segIndex0===segIndex1)return null;this.numTests++;var p00=e0.getCoordinates()[segIndex0];var p01=e0.getCoordinates()[segIndex0+1];var p10=e1.getCoordinates()[segIndex1];var p11=e1.getCoordinates()[segIndex1+1];this.li.computeIntersection(p00,p01,p10,p11);if(this.li.hasIntersection()){if(this.recordIsolated){e0.setIsolated(false);e1.setIsolated(false);}this.numIntersections++;if(!this.isTrivialIntersection(e0,segIndex0,e1,segIndex1)){this._hasIntersection=true;if(this.includeProper||!this.li.isProper()){e0.addIntersections(this.li,segIndex0,0);e1.addIntersections(this.li,segIndex1,1);}if(this.li.isProper()){this.properIntersectionPoint=this.li.getIntersection(0).copy();this.hasProper=true;if(this.isDoneWhenProperInt){this._isDone=true;}if(!this.isBoundaryPoint(this.li,this.bdyNodes))this.hasProperInterior=true;}}}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return SegmentIntersector$1;}});SegmentIntersector$1.isAdjacentSegments=function(i1,i2){return Math.abs(i1-i2)===1;};function SimpleMCSweepLineIntersector(){EdgeSetIntersector.apply(this);this.events=new ArrayList();this.nOverlaps=null;}inherits(SimpleMCSweepLineIntersector,EdgeSetIntersector);extend(SimpleMCSweepLineIntersector.prototype,{prepareEvents:function prepareEvents(){Collections.sort(this.events);for(var i=0;i<this.events.size();i++){var ev=this.events.get(i);if(ev.isDelete()){ev.getInsertEvent().setDeleteEventIndex(i);}}},computeIntersections:function computeIntersections(){if(arguments.length===1){var si=arguments[0];this.nOverlaps=0;this.prepareEvents();for(var i=0;i<this.events.size();i++){var ev=this.events.get(i);if(ev.isInsert()){this.processOverlaps(i,ev.getDeleteEventIndex(),ev,si);}if(si.isDone()){break;}}}else if(arguments.length===3){if(arguments[2]instanceof SegmentIntersector$1&&hasInterface(arguments[0],List)&&hasInterface(arguments[1],List)){var edges0=arguments[0],edges1=arguments[1],_si=arguments[2];this.addEdges(edges0,edges0);this.addEdges(edges1,edges1);this.computeIntersections(_si);}else if(typeof arguments[2]===\"boolean\"&&hasInterface(arguments[0],List)&&arguments[1]instanceof SegmentIntersector$1){var edges=arguments[0],_si2=arguments[1],testAllSegments=arguments[2];if(testAllSegments)this.addEdges(edges,null);else this.addEdges(edges);this.computeIntersections(_si2);}}},addEdge:function addEdge(edge,edgeSet){var mce=edge.getMonotoneChainEdge();var startIndex=mce.getStartIndexes();for(var i=0;i<startIndex.length-1;i++){var mc=new MonotoneChain$1(mce,i);var insertEvent=new SweepLineEvent(edgeSet,mce.getMinX(i),mc);this.events.add(insertEvent);this.events.add(new SweepLineEvent(mce.getMaxX(i),insertEvent));}},processOverlaps:function processOverlaps(start,end,ev0,si){var mc0=ev0.getObject();for(var i=start;i<end;i++){var ev1=this.events.get(i);if(ev1.isInsert()){var mc1=ev1.getObject();if(!ev0.isSameLabel(ev1)){mc0.computeIntersections(mc1,si);this.nOverlaps++;}}}},addEdges:function addEdges(){if(arguments.length===1){var edges=arguments[0];for(var i=edges.iterator();i.hasNext();){var edge=i.next();this.addEdge(edge,edge);}}else if(arguments.length===2){var _edges=arguments[0],edgeSet=arguments[1];for(var i=_edges.iterator();i.hasNext();){var edge=i.next();this.addEdge(edge,edgeSet);}}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return SimpleMCSweepLineIntersector;}});function IntervalRTreeNode$1(){this.min=Double.POSITIVE_INFINITY;this.max=Double.NEGATIVE_INFINITY;}extend(IntervalRTreeNode$1.prototype,{getMin:function getMin(){return this.min;},intersects:function intersects(queryMin,queryMax){if(this.min>queryMax||this.max<queryMin)return false;return true;},getMax:function getMax(){return this.max;},toString:function toString(){return WKTWriter.toLineString(new Coordinate(this.min,0),new Coordinate(this.max,0));},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return IntervalRTreeNode$1;}});function NodeComparator(){}extend(NodeComparator.prototype,{compare:function compare(o1,o2){var n1=o1;var n2=o2;var mid1=(n1.min+n1.max)/2;var mid2=(n2.min+n2.max)/2;if(mid1<mid2)return-1;if(mid1>mid2)return 1;return 0;},interfaces_:function interfaces_(){return[Comparator];},getClass:function getClass(){return NodeComparator;}});IntervalRTreeNode$1.NodeComparator=NodeComparator;function IntervalRTreeLeafNode(){IntervalRTreeNode$1.apply(this);this.item=null;var min=arguments[0],max=arguments[1],item=arguments[2];this.min=min;this.max=max;this.item=item;}inherits(IntervalRTreeLeafNode,IntervalRTreeNode$1);extend(IntervalRTreeLeafNode.prototype,{query:function query(queryMin,queryMax,visitor){if(!this.intersects(queryMin,queryMax))return null;visitor.visitItem(this.item);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return IntervalRTreeLeafNode;}});function IntervalRTreeBranchNode(){IntervalRTreeNode$1.apply(this);this.node1=null;this.node2=null;var n1=arguments[0],n2=arguments[1];this.node1=n1;this.node2=n2;this.buildExtent(this.node1,this.node2);}inherits(IntervalRTreeBranchNode,IntervalRTreeNode$1);extend(IntervalRTreeBranchNode.prototype,{buildExtent:function buildExtent(n1,n2){this.min=Math.min(n1.min,n2.min);this.max=Math.max(n1.max,n2.max);},query:function query(queryMin,queryMax,visitor){if(!this.intersects(queryMin,queryMax)){return null;}if(this.node1!==null)this.node1.query(queryMin,queryMax,visitor);if(this.node2!==null)this.node2.query(queryMin,queryMax,visitor);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return IntervalRTreeBranchNode;}});function SortedPackedIntervalRTree(){this.leaves=new ArrayList();this.root=null;this.level=0;}extend(SortedPackedIntervalRTree.prototype,{buildTree:function buildTree(){Collections.sort(this.leaves,new IntervalRTreeNode.NodeComparator());var src=this.leaves;var temp=null;var dest=new ArrayList();while(true){this.buildLevel(src,dest);if(dest.size()===1)return dest.get(0);temp=src;src=dest;dest=temp;}},insert:function insert(min,max,item){if(this.root!==null)throw new IllegalStateException(\"Index cannot be added to once it has been queried\");this.leaves.add(new IntervalRTreeLeafNode(min,max,item));},query:function query(min,max,visitor){this.init();this.root.query(min,max,visitor);},buildRoot:function buildRoot(){if(this.root!==null)return null;this.root=this.buildTree();},printNode:function printNode(node){System.out.println(WKTWriter.toLineString(new Coordinate(node.min,this.level),new Coordinate(node.max,this.level)));},init:function init(){if(this.root!==null)return null;this.buildRoot();},buildLevel:function buildLevel(src,dest){this.level++;dest.clear();for(var i=0;i<src.size();i+=2){var n1=src.get(i);var n2=i+1<src.size()?src.get(i):null;if(n2===null){dest.add(n1);}else{var node=new IntervalRTreeBranchNode(src.get(i),src.get(i+1));dest.add(node);}}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return SortedPackedIntervalRTree;}});function LinearComponentExtracter(){this.lines=null;this.isForcedToLineString=false;if(arguments.length===1){var lines=arguments[0];this.lines=lines;}else if(arguments.length===2){var _lines=arguments[0],isForcedToLineString=arguments[1];this.lines=_lines;this.isForcedToLineString=isForcedToLineString;}}extend(LinearComponentExtracter.prototype,{filter:function filter(geom){if(this.isForcedToLineString&&geom instanceof LinearRing){var line=geom.getFactory().createLineString(geom.getCoordinateSequence());this.lines.add(line);return null;}if(geom instanceof LineString)this.lines.add(geom);},setForceToLineString:function setForceToLineString(isForcedToLineString){this.isForcedToLineString=isForcedToLineString;},interfaces_:function interfaces_(){return[GeometryComponentFilter];},getClass:function getClass(){return LinearComponentExtracter;}});LinearComponentExtracter.getGeometry=function(){if(arguments.length===1){var geom=arguments[0];return geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom));}else if(arguments.length===2){var _geom=arguments[0],forceToLineString=arguments[1];return _geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(_geom,forceToLineString));}};LinearComponentExtracter.getLines=function(){if(arguments.length===1){var geom=arguments[0];return LinearComponentExtracter.getLines(geom,false);}else if(arguments.length===2){if(hasInterface(arguments[0],Collection)&&hasInterface(arguments[1],Collection)){var geoms=arguments[0],_lines2=arguments[1];for(var i=geoms.iterator();i.hasNext();){var g=i.next();LinearComponentExtracter.getLines(g,_lines2);}return _lines2;}else if(arguments[0]instanceof Geometry&&typeof arguments[1]===\"boolean\"){var _geom2=arguments[0],forceToLineString=arguments[1];var lines=new ArrayList();_geom2.apply(new LinearComponentExtracter(lines,forceToLineString));return lines;}else if(arguments[0]instanceof Geometry&&hasInterface(arguments[1],Collection)){var _geom3=arguments[0],_lines3=arguments[1];if(_geom3 instanceof LineString){_lines3.add(_geom3);}else{_geom3.apply(new LinearComponentExtracter(_lines3));}return _lines3;}}else if(arguments.length===3){if(typeof arguments[2]===\"boolean\"&&hasInterface(arguments[0],Collection)&&hasInterface(arguments[1],Collection)){var _geoms=arguments[0],_lines4=arguments[1],_forceToLineString=arguments[2];for(var i=_geoms.iterator();i.hasNext();){var g=i.next();LinearComponentExtracter.getLines(g,_lines4,_forceToLineString);}return _lines4;}else if(typeof arguments[2]===\"boolean\"&&arguments[0]instanceof Geometry&&hasInterface(arguments[1],Collection)){var _geom4=arguments[0],_lines5=arguments[1],_forceToLineString2=arguments[2];_geom4.apply(new LinearComponentExtracter(_lines5,_forceToLineString2));return _lines5;}}};function ArrayListVisitor(){this.items=new ArrayList();}extend(ArrayListVisitor.prototype,{visitItem:function visitItem(item){this.items.add(item);},getItems:function getItems(){return this.items;},interfaces_:function interfaces_(){return[ItemVisitor];},getClass:function getClass(){return ArrayListVisitor;}});function IndexedPointInAreaLocator(){this.index=null;var g=arguments[0];if(!hasInterface(g,Polygonal))throw new IllegalArgumentException(\"Argument must be Polygonal\");this.index=new IntervalIndexedGeometry(g);}extend(IndexedPointInAreaLocator.prototype,{locate:function locate(p){var rcc=new RayCrossingCounter(p);var visitor=new SegmentVisitor(rcc);this.index.query(p.y,p.y,visitor);return rcc.getLocation();},interfaces_:function interfaces_(){return[PointOnGeometryLocator];},getClass:function getClass(){return IndexedPointInAreaLocator;}});function SegmentVisitor(){this.counter=null;var counter=arguments[0];this.counter=counter;}extend(SegmentVisitor.prototype,{visitItem:function visitItem(item){var seg=item;this.counter.countSegment(seg.getCoordinate(0),seg.getCoordinate(1));},interfaces_:function interfaces_(){return[ItemVisitor];},getClass:function getClass(){return SegmentVisitor;}});function IntervalIndexedGeometry(){this.index=new SortedPackedIntervalRTree();var geom=arguments[0];this.init(geom);}extend(IntervalIndexedGeometry.prototype,{init:function init(geom){var lines=LinearComponentExtracter.getLines(geom);for(var i=lines.iterator();i.hasNext();){var line=i.next();var pts=line.getCoordinates();this.addLine(pts);}},addLine:function addLine(pts){for(var i=1;i<pts.length;i++){var seg=new LineSegment(pts[i-1],pts[i]);var min=Math.min(seg.p0.y,seg.p1.y);var max=Math.max(seg.p0.y,seg.p1.y);this.index.insert(min,max,seg);}},query:function query(){if(arguments.length===2){var min=arguments[0],max=arguments[1];var visitor=new ArrayListVisitor();this.index.query(min,max,visitor);return visitor.getItems();}else if(arguments.length===3){var _min=arguments[0],_max=arguments[1],_visitor=arguments[2];this.index.query(_min,_max,_visitor);}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return IntervalIndexedGeometry;}});IndexedPointInAreaLocator.SegmentVisitor=SegmentVisitor;IndexedPointInAreaLocator.IntervalIndexedGeometry=IntervalIndexedGeometry;function EdgeIntersection(){this.coord=null;this.segmentIndex=null;this.dist=null;var coord=arguments[0],segmentIndex=arguments[1],dist=arguments[2];this.coord=new Coordinate(coord);this.segmentIndex=segmentIndex;this.dist=dist;}extend(EdgeIntersection.prototype,{getSegmentIndex:function getSegmentIndex(){return this.segmentIndex;},getCoordinate:function getCoordinate(){return this.coord;},print:function print(out){out.print(this.coord);out.print(\" seg # = \"+this.segmentIndex);out.println(\" dist = \"+this.dist);},compareTo:function compareTo(obj){var other=obj;return this.compare(other.segmentIndex,other.dist);},isEndPoint:function isEndPoint(maxSegmentIndex){if(this.segmentIndex===0&&this.dist===0.0)return true;if(this.segmentIndex===maxSegmentIndex)return true;return false;},toString:function toString(){return this.coord+\" seg # = \"+this.segmentIndex+\" dist = \"+this.dist;},getDistance:function getDistance(){return this.dist;},compare:function compare(segmentIndex,dist){if(this.segmentIndex<segmentIndex)return-1;if(this.segmentIndex>segmentIndex)return 1;if(this.dist<dist)return-1;if(this.dist>dist)return 1;return 0;},interfaces_:function interfaces_(){return[Comparable];},getClass:function getClass(){return EdgeIntersection;}});function EdgeIntersectionList(){this.nodeMap=new TreeMap();this.edge=null;var edge=arguments[0];this.edge=edge;}extend(EdgeIntersectionList.prototype,{print:function print(out){out.println(\"Intersections:\");for(var it=this.iterator();it.hasNext();){var ei=it.next();ei.print(out);}},iterator:function iterator(){return this.nodeMap.values().iterator();},addSplitEdges:function addSplitEdges(edgeList){this.addEndpoints();var it=this.iterator();var eiPrev=it.next();while(it.hasNext()){var ei=it.next();var newEdge=this.createSplitEdge(eiPrev,ei);edgeList.add(newEdge);eiPrev=ei;}},addEndpoints:function addEndpoints(){var maxSegIndex=this.edge.pts.length-1;this.add(this.edge.pts[0],0,0.0);this.add(this.edge.pts[maxSegIndex],maxSegIndex,0.0);},createSplitEdge:function createSplitEdge(ei0,ei1){var npts=ei1.segmentIndex-ei0.segmentIndex+2;var lastSegStartPt=this.edge.pts[ei1.segmentIndex];var useIntPt1=ei1.dist>0.0||!ei1.coord.equals2D(lastSegStartPt);if(!useIntPt1){npts--;}var pts=new Array(npts).fill(null);var ipt=0;pts[ipt++]=new Coordinate(ei0.coord);for(var i=ei0.segmentIndex+1;i<=ei1.segmentIndex;i++){pts[ipt++]=this.edge.pts[i];}if(useIntPt1)pts[ipt]=ei1.coord;return new Edge(pts,new Label(this.edge.label));},add:function add(intPt,segmentIndex,dist){var eiNew=new EdgeIntersection(intPt,segmentIndex,dist);var ei=this.nodeMap.get(eiNew);if(ei!==null){return ei;}this.nodeMap.put(eiNew,eiNew);return eiNew;},isIntersection:function isIntersection(pt){for(var it=this.iterator();it.hasNext();){var ei=it.next();if(ei.coord.equals(pt))return true;}return false;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return EdgeIntersectionList;}});function MonotoneChainIndexer(){}extend(MonotoneChainIndexer.prototype,{getChainStartIndices:function getChainStartIndices(pts){var start=0;var startIndexList=new ArrayList();startIndexList.add(new Integer(start));do{var last=this.findChainEnd(pts,start);startIndexList.add(new Integer(last));start=last;}while(start<pts.length-1);var startIndex=MonotoneChainIndexer.toIntArray(startIndexList);return startIndex;},findChainEnd:function findChainEnd(pts,start){var chainQuad=Quadrant.quadrant(pts[start],pts[start+1]);var last=start+1;while(last<pts.length){var quad=Quadrant.quadrant(pts[last-1],pts[last]);if(quad!==chainQuad)break;last++;}return last-1;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return MonotoneChainIndexer;}});MonotoneChainIndexer.toIntArray=function(list){var array=new Array(list.size()).fill(null);for(var i=0;i<array.length;i++){array[i]=list.get(i).intValue();}return array;};function MonotoneChainEdge(){this.e=null;this.pts=null;this.startIndex=null;this.env1=new Envelope();this.env2=new Envelope();var e=arguments[0];this.e=e;this.pts=e.getCoordinates();var mcb=new MonotoneChainIndexer();this.startIndex=mcb.getChainStartIndices(this.pts);}extend(MonotoneChainEdge.prototype,{getCoordinates:function getCoordinates(){return this.pts;},getMaxX:function getMaxX(chainIndex){var x1=this.pts[this.startIndex[chainIndex]].x;var x2=this.pts[this.startIndex[chainIndex+1]].x;return x1>x2?x1:x2;},getMinX:function getMinX(chainIndex){var x1=this.pts[this.startIndex[chainIndex]].x;var x2=this.pts[this.startIndex[chainIndex+1]].x;return x1<x2?x1:x2;},computeIntersectsForChain:function computeIntersectsForChain(){if(arguments.length===4){var chainIndex0=arguments[0],mce=arguments[1],chainIndex1=arguments[2],si=arguments[3];this.computeIntersectsForChain(this.startIndex[chainIndex0],this.startIndex[chainIndex0+1],mce,mce.startIndex[chainIndex1],mce.startIndex[chainIndex1+1],si);}else if(arguments.length===6){var start0=arguments[0],end0=arguments[1],_mce=arguments[2],start1=arguments[3],end1=arguments[4],ei=arguments[5];var p00=this.pts[start0];var p01=this.pts[end0];var p10=_mce.pts[start1];var p11=_mce.pts[end1];if(end0-start0===1&&end1-start1===1){ei.addIntersections(this.e,start0,_mce.e,start1);return null;}this.env1.init(p00,p01);this.env2.init(p10,p11);if(!this.env1.intersects(this.env2))return null;var mid0=Math.trunc((start0+end0)/2);var mid1=Math.trunc((start1+end1)/2);if(start0<mid0){if(start1<mid1)this.computeIntersectsForChain(start0,mid0,_mce,start1,mid1,ei);if(mid1<end1)this.computeIntersectsForChain(start0,mid0,_mce,mid1,end1,ei);}if(mid0<end0){if(start1<mid1)this.computeIntersectsForChain(mid0,end0,_mce,start1,mid1,ei);if(mid1<end1)this.computeIntersectsForChain(mid0,end0,_mce,mid1,end1,ei);}}},getStartIndexes:function getStartIndexes(){return this.startIndex;},computeIntersects:function computeIntersects(mce,si){for(var i=0;i<this.startIndex.length-1;i++){for(var j=0;j<mce.startIndex.length-1;j++){this.computeIntersectsForChain(i,mce,j,si);}}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return MonotoneChainEdge;}});function Depth(){this.depth=Array(2).fill().map(function(){return Array(3);});for(var i=0;i<2;i++){for(var j=0;j<3;j++){this.depth[i][j]=Depth.NULL_VALUE;}}}extend(Depth.prototype,{getDepth:function getDepth(geomIndex,posIndex){return this.depth[geomIndex][posIndex];},setDepth:function setDepth(geomIndex,posIndex,depthValue){this.depth[geomIndex][posIndex]=depthValue;},isNull:function isNull(){if(arguments.length===0){for(var i=0;i<2;i++){for(var j=0;j<3;j++){if(this.depth[i][j]!==Depth.NULL_VALUE)return false;}}return true;}else if(arguments.length===1){var geomIndex=arguments[0];return this.depth[geomIndex][1]===Depth.NULL_VALUE;}else if(arguments.length===2){var _geomIndex=arguments[0],posIndex=arguments[1];return this.depth[_geomIndex][posIndex]===Depth.NULL_VALUE;}},normalize:function normalize(){for(var i=0;i<2;i++){if(!this.isNull(i)){var minDepth=this.depth[i][1];if(this.depth[i][2]<minDepth)minDepth=this.depth[i][2];if(minDepth<0)minDepth=0;for(var j=1;j<3;j++){var newValue=0;if(this.depth[i][j]>minDepth)newValue=1;this.depth[i][j]=newValue;}}}},getDelta:function getDelta(geomIndex){return this.depth[geomIndex][Position.RIGHT]-this.depth[geomIndex][Position.LEFT];},getLocation:function getLocation(geomIndex,posIndex){if(this.depth[geomIndex][posIndex]<=0)return Location.EXTERIOR;return Location.INTERIOR;},toString:function toString(){return\"A: \"+this.depth[0][1]+\",\"+this.depth[0][2]+\" B: \"+this.depth[1][1]+\",\"+this.depth[1][2];},add:function add(){if(arguments.length===1){var lbl=arguments[0];for(var i=0;i<2;i++){for(var j=1;j<3;j++){var loc=lbl.getLocation(i,j);if(loc===Location.EXTERIOR||loc===Location.INTERIOR){if(this.isNull(i,j)){this.depth[i][j]=Depth.depthAtLocation(loc);}else this.depth[i][j]+=Depth.depthAtLocation(loc);}}}}else if(arguments.length===3){var geomIndex=arguments[0],posIndex=arguments[1],location=arguments[2];if(location===Location.INTERIOR)this.depth[geomIndex][posIndex]++;}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Depth;}});Depth.depthAtLocation=function(location){if(location===Location.EXTERIOR)return 0;if(location===Location.INTERIOR)return 1;return Depth.NULL_VALUE;};Depth.NULL_VALUE=-1;function Edge(){GraphComponent.apply(this);this.pts=null;this.env=null;this.eiList=new EdgeIntersectionList(this);this.name=null;this.mce=null;this._isIsolated=true;this.depth=new Depth();this.depthDelta=0;if(arguments.length===1){var pts=arguments[0];Edge.call(this,pts,null);}else if(arguments.length===2){var _pts=arguments[0],label=arguments[1];this.pts=_pts;this.label=label;}}inherits(Edge,GraphComponent);extend(Edge.prototype,{getDepth:function getDepth(){return this.depth;},getCollapsedEdge:function getCollapsedEdge(){var newPts=new Array(2).fill(null);newPts[0]=this.pts[0];newPts[1]=this.pts[1];var newe=new Edge(newPts,Label.toLineLabel(this.label));return newe;},isIsolated:function isIsolated(){return this._isIsolated;},getCoordinates:function getCoordinates(){return this.pts;},setIsolated:function setIsolated(isIsolated){this._isIsolated=isIsolated;},setName:function setName(name){this.name=name;},equals:function equals(o){if(!(o instanceof Edge))return false;var e=o;if(this.pts.length!==e.pts.length)return false;var isEqualForward=true;var isEqualReverse=true;var iRev=this.pts.length;for(var i=0;i<this.pts.length;i++){if(!this.pts[i].equals2D(e.pts[i])){isEqualForward=false;}if(!this.pts[i].equals2D(e.pts[--iRev])){isEqualReverse=false;}if(!isEqualForward&&!isEqualReverse)return false;}return true;},getCoordinate:function getCoordinate(){if(arguments.length===0){if(this.pts.length>0)return this.pts[0];return null;}else if(arguments.length===1){var i=arguments[0];return this.pts[i];}},print:function print(out){out.print(\"edge \"+this.name+\": \");out.print(\"LINESTRING (\");for(var i=0;i<this.pts.length;i++){if(i>0)out.print(\",\");out.print(this.pts[i].x+\" \"+this.pts[i].y);}out.print(\")  \"+this.label+\" \"+this.depthDelta);},computeIM:function computeIM(im){Edge.updateIM(this.label,im);},isCollapsed:function isCollapsed(){if(!this.label.isArea())return false;if(this.pts.length!==3)return false;if(this.pts[0].equals(this.pts[2]))return true;return false;},isClosed:function isClosed(){return this.pts[0].equals(this.pts[this.pts.length-1]);},getMaximumSegmentIndex:function getMaximumSegmentIndex(){return this.pts.length-1;},getDepthDelta:function getDepthDelta(){return this.depthDelta;},getNumPoints:function getNumPoints(){return this.pts.length;},printReverse:function printReverse(out){out.print(\"edge \"+this.name+\": \");for(var i=this.pts.length-1;i>=0;i--){out.print(this.pts[i]+\" \");}out.println(\"\");},getMonotoneChainEdge:function getMonotoneChainEdge(){if(this.mce===null)this.mce=new MonotoneChainEdge(this);return this.mce;},getEnvelope:function getEnvelope(){if(this.env===null){this.env=new Envelope();for(var i=0;i<this.pts.length;i++){this.env.expandToInclude(this.pts[i]);}}return this.env;},addIntersection:function addIntersection(li,segmentIndex,geomIndex,intIndex){var intPt=new Coordinate(li.getIntersection(intIndex));var normalizedSegmentIndex=segmentIndex;var dist=li.getEdgeDistance(geomIndex,intIndex);var nextSegIndex=normalizedSegmentIndex+1;if(nextSegIndex<this.pts.length){var nextPt=this.pts[nextSegIndex];if(intPt.equals2D(nextPt)){normalizedSegmentIndex=nextSegIndex;dist=0.0;}}var ei=this.eiList.add(intPt,normalizedSegmentIndex,dist);},toString:function toString(){var buf=new StringBuffer();buf.append(\"edge \"+this.name+\": \");buf.append(\"LINESTRING (\");for(var i=0;i<this.pts.length;i++){if(i>0)buf.append(\",\");buf.append(this.pts[i].x+\" \"+this.pts[i].y);}buf.append(\")  \"+this.label+\" \"+this.depthDelta);return buf.toString();},isPointwiseEqual:function isPointwiseEqual(e){if(this.pts.length!==e.pts.length)return false;for(var i=0;i<this.pts.length;i++){if(!this.pts[i].equals2D(e.pts[i])){return false;}}return true;},setDepthDelta:function setDepthDelta(depthDelta){this.depthDelta=depthDelta;},getEdgeIntersectionList:function getEdgeIntersectionList(){return this.eiList;},addIntersections:function addIntersections(li,segmentIndex,geomIndex){for(var i=0;i<li.getIntersectionNum();i++){this.addIntersection(li,segmentIndex,geomIndex,i);}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Edge;}});Edge.updateIM=function(){if(arguments.length===2){var label=arguments[0],im=arguments[1];im.setAtLeastIfValid(label.getLocation(0,Position.ON),label.getLocation(1,Position.ON),1);if(label.isArea()){im.setAtLeastIfValid(label.getLocation(0,Position.LEFT),label.getLocation(1,Position.LEFT),2);im.setAtLeastIfValid(label.getLocation(0,Position.RIGHT),label.getLocation(1,Position.RIGHT),2);}}else return GraphComponent.prototype.updateIM.apply(this,arguments);};function GeometryGraph(){PlanarGraph.apply(this);this.parentGeom=null;this.lineEdgeMap=new HashMap();this.boundaryNodeRule=null;this.useBoundaryDeterminationRule=true;this.argIndex=null;this.boundaryNodes=null;this._hasTooFewPoints=false;this.invalidPoint=null;this.areaPtLocator=null;this.ptLocator=new PointLocator();if(arguments.length===2){var argIndex=arguments[0],parentGeom=arguments[1];GeometryGraph.call(this,argIndex,parentGeom,BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE);}else if(arguments.length===3){var _argIndex=arguments[0],_parentGeom=arguments[1],boundaryNodeRule=arguments[2];this.argIndex=_argIndex;this.parentGeom=_parentGeom;this.boundaryNodeRule=boundaryNodeRule;if(_parentGeom!==null){this.add(_parentGeom);}}}inherits(GeometryGraph,PlanarGraph);extend(GeometryGraph.prototype,{insertBoundaryPoint:function insertBoundaryPoint(argIndex,coord){var n=this.nodes.addNode(coord);var lbl=n.getLabel();var boundaryCount=1;var loc=Location.NONE;loc=lbl.getLocation(argIndex,Position.ON);if(loc===Location.BOUNDARY)boundaryCount++;var newLoc=GeometryGraph.determineBoundary(this.boundaryNodeRule,boundaryCount);lbl.setLocation(argIndex,newLoc);},computeSelfNodes:function computeSelfNodes(){if(arguments.length===2){var li=arguments[0],computeRingSelfNodes=arguments[1];return this.computeSelfNodes(li,computeRingSelfNodes,false);}else if(arguments.length===3){var _li=arguments[0],_computeRingSelfNodes=arguments[1],isDoneIfProperInt=arguments[2];var si=new SegmentIntersector$1(_li,true,false);si.setIsDoneIfProperInt(isDoneIfProperInt);var esi=this.createEdgeSetIntersector();var isRings=this.parentGeom instanceof LinearRing||this.parentGeom instanceof Polygon||this.parentGeom instanceof MultiPolygon;var computeAllSegments=_computeRingSelfNodes||!isRings;esi.computeIntersections(this.edges,si,computeAllSegments);this.addSelfIntersectionNodes(this.argIndex);return si;}},computeSplitEdges:function computeSplitEdges(edgelist){for(var i=this.edges.iterator();i.hasNext();){var e=i.next();e.eiList.addSplitEdges(edgelist);}},computeEdgeIntersections:function computeEdgeIntersections(g,li,includeProper){var si=new SegmentIntersector$1(li,includeProper,true);si.setBoundaryNodes(this.getBoundaryNodes(),g.getBoundaryNodes());var esi=this.createEdgeSetIntersector();esi.computeIntersections(this.edges,g.edges,si);return si;},getGeometry:function getGeometry(){return this.parentGeom;},getBoundaryNodeRule:function getBoundaryNodeRule(){return this.boundaryNodeRule;},hasTooFewPoints:function hasTooFewPoints(){return this._hasTooFewPoints;},addPoint:function addPoint(){if(arguments[0]instanceof Point){var p=arguments[0];var coord=p.getCoordinate();this.insertPoint(this.argIndex,coord,Location.INTERIOR);}else if(arguments[0]instanceof Coordinate){var pt=arguments[0];this.insertPoint(this.argIndex,pt,Location.INTERIOR);}},addPolygon:function addPolygon(p){this.addPolygonRing(p.getExteriorRing(),Location.EXTERIOR,Location.INTERIOR);for(var i=0;i<p.getNumInteriorRing();i++){var hole=p.getInteriorRingN(i);this.addPolygonRing(hole,Location.INTERIOR,Location.EXTERIOR);}},addEdge:function addEdge(e){this.insertEdge(e);var coord=e.getCoordinates();this.insertPoint(this.argIndex,coord[0],Location.BOUNDARY);this.insertPoint(this.argIndex,coord[coord.length-1],Location.BOUNDARY);},addLineString:function addLineString(line){var coord=CoordinateArrays.removeRepeatedPoints(line.getCoordinates());if(coord.length<2){this._hasTooFewPoints=true;this.invalidPoint=coord[0];return null;}var e=new Edge(coord,new Label(this.argIndex,Location.INTERIOR));this.lineEdgeMap.put(line,e);this.insertEdge(e);Assert.isTrue(coord.length>=2,\"found LineString with single point\");this.insertBoundaryPoint(this.argIndex,coord[0]);this.insertBoundaryPoint(this.argIndex,coord[coord.length-1]);},getInvalidPoint:function getInvalidPoint(){return this.invalidPoint;},getBoundaryPoints:function getBoundaryPoints(){var coll=this.getBoundaryNodes();var pts=new Array(coll.size()).fill(null);var i=0;for(var it=coll.iterator();it.hasNext();){var node=it.next();pts[i++]=node.getCoordinate().copy();}return pts;},getBoundaryNodes:function getBoundaryNodes(){if(this.boundaryNodes===null)this.boundaryNodes=this.nodes.getBoundaryNodes(this.argIndex);return this.boundaryNodes;},addSelfIntersectionNode:function addSelfIntersectionNode(argIndex,coord,loc){if(this.isBoundaryNode(argIndex,coord))return null;if(loc===Location.BOUNDARY&&this.useBoundaryDeterminationRule)this.insertBoundaryPoint(argIndex,coord);else this.insertPoint(argIndex,coord,loc);},addPolygonRing:function addPolygonRing(lr,cwLeft,cwRight){if(lr.isEmpty())return null;var coord=CoordinateArrays.removeRepeatedPoints(lr.getCoordinates());if(coord.length<4){this._hasTooFewPoints=true;this.invalidPoint=coord[0];return null;}var left=cwLeft;var right=cwRight;if(CGAlgorithms.isCCW(coord)){left=cwRight;right=cwLeft;}var e=new Edge(coord,new Label(this.argIndex,Location.BOUNDARY,left,right));this.lineEdgeMap.put(lr,e);this.insertEdge(e);this.insertPoint(this.argIndex,coord[0],Location.BOUNDARY);},insertPoint:function insertPoint(argIndex,coord,onLocation){var n=this.nodes.addNode(coord);var lbl=n.getLabel();if(lbl===null){n.label=new Label(argIndex,onLocation);}else lbl.setLocation(argIndex,onLocation);},createEdgeSetIntersector:function createEdgeSetIntersector(){return new SimpleMCSweepLineIntersector();},addSelfIntersectionNodes:function addSelfIntersectionNodes(argIndex){for(var i=this.edges.iterator();i.hasNext();){var e=i.next();var eLoc=e.getLabel().getLocation(argIndex);for(var eiIt=e.eiList.iterator();eiIt.hasNext();){var ei=eiIt.next();this.addSelfIntersectionNode(argIndex,ei.coord,eLoc);}}},add:function add(){if(arguments.length===1){var g=arguments[0];if(g.isEmpty())return null;if(g instanceof MultiPolygon)this.useBoundaryDeterminationRule=false;if(g instanceof Polygon)this.addPolygon(g);else if(g instanceof LineString)this.addLineString(g);else if(g instanceof Point)this.addPoint(g);else if(g instanceof MultiPoint)this.addCollection(g);else if(g instanceof MultiLineString)this.addCollection(g);else if(g instanceof MultiPolygon)this.addCollection(g);else if(g instanceof GeometryCollection)this.addCollection(g);else throw new UnsupportedOperationException(g.getClass().getName());}else return PlanarGraph.prototype.add.apply(this,arguments);},addCollection:function addCollection(gc){for(var i=0;i<gc.getNumGeometries();i++){var g=gc.getGeometryN(i);this.add(g);}},locate:function locate(pt){if(hasInterface(this.parentGeom,Polygonal)&&this.parentGeom.getNumGeometries()>50){if(this.areaPtLocator===null){this.areaPtLocator=new IndexedPointInAreaLocator(this.parentGeom);}return this.areaPtLocator.locate(pt);}return this.ptLocator.locate(pt,this.parentGeom);},findEdge:function findEdge(){if(arguments.length===1){var line=arguments[0];return this.lineEdgeMap.get(line);}else return PlanarGraph.prototype.findEdge.apply(this,arguments);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return GeometryGraph;}});GeometryGraph.determineBoundary=function(boundaryNodeRule,boundaryCount){return boundaryNodeRule.isInBoundary(boundaryCount)?Location.BOUNDARY:Location.INTERIOR;};function GeometryGraphOperation(){this.li=new RobustLineIntersector();this.resultPrecisionModel=null;this.arg=null;if(arguments.length===1){var g0=arguments[0];this.setComputationPrecision(g0.getPrecisionModel());this.arg=new Array(1).fill(null);this.arg[0]=new GeometryGraph(0,g0);}else if(arguments.length===2){var _g=arguments[0],g1=arguments[1];GeometryGraphOperation.call(this,_g,g1,BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE);}else if(arguments.length===3){var _g2=arguments[0],_g3=arguments[1],boundaryNodeRule=arguments[2];if(_g2.getPrecisionModel().compareTo(_g3.getPrecisionModel())>=0)this.setComputationPrecision(_g2.getPrecisionModel());else this.setComputationPrecision(_g3.getPrecisionModel());this.arg=new Array(2).fill(null);this.arg[0]=new GeometryGraph(0,_g2,boundaryNodeRule);this.arg[1]=new GeometryGraph(1,_g3,boundaryNodeRule);}}extend(GeometryGraphOperation.prototype,{getArgGeometry:function getArgGeometry(i){return this.arg[i].getGeometry();},setComputationPrecision:function setComputationPrecision(pm){this.resultPrecisionModel=pm;this.li.setPrecisionModel(this.resultPrecisionModel);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return GeometryGraphOperation;}});function OrientedCoordinateArray(){this.pts=null;this._orientation=null;var pts=arguments[0];this.pts=pts;this._orientation=OrientedCoordinateArray.orientation(pts);}extend(OrientedCoordinateArray.prototype,{compareTo:function compareTo(o1){var oca=o1;var comp=OrientedCoordinateArray.compareOriented(this.pts,this._orientation,oca.pts,oca._orientation);return comp;},interfaces_:function interfaces_(){return[Comparable];},getClass:function getClass(){return OrientedCoordinateArray;}});OrientedCoordinateArray.orientation=function(pts){return CoordinateArrays.increasingDirection(pts)===1;};OrientedCoordinateArray.compareOriented=function(pts1,orientation1,pts2,orientation2){var dir1=orientation1?1:-1;var dir2=orientation2?1:-1;var limit1=orientation1?pts1.length:-1;var limit2=orientation2?pts2.length:-1;var i1=orientation1?0:pts1.length-1;var i2=orientation2?0:pts2.length-1;var comp=0;while(true){var compPt=pts1[i1].compareTo(pts2[i2]);if(compPt!==0)return compPt;i1+=dir1;i2+=dir2;var done1=i1===limit1;var done2=i2===limit2;if(done1&&!done2)return-1;if(!done1&&done2)return 1;if(done1&&done2)return 0;}};function EdgeList(){this.edges=new ArrayList();this.ocaMap=new TreeMap();}extend(EdgeList.prototype,{print:function print(out){out.print(\"MULTILINESTRING ( \");for(var j=0;j<this.edges.size();j++){var e=this.edges.get(j);if(j>0)out.print(\",\");out.print(\"(\");var pts=e.getCoordinates();for(var i=0;i<pts.length;i++){if(i>0)out.print(\",\");out.print(pts[i].x+\" \"+pts[i].y);}out.println(\")\");}out.print(\")  \");},addAll:function addAll(edgeColl){for(var i=edgeColl.iterator();i.hasNext();){this.add(i.next());}},findEdgeIndex:function findEdgeIndex(e){for(var i=0;i<this.edges.size();i++){if(this.edges.get(i).equals(e))return i;}return-1;},iterator:function iterator(){return this.edges.iterator();},getEdges:function getEdges(){return this.edges;},get:function get(i){return this.edges.get(i);},findEqualEdge:function findEqualEdge(e){var oca=new OrientedCoordinateArray(e.getCoordinates());var matchEdge=this.ocaMap.get(oca);return matchEdge;},add:function add(e){this.edges.add(e);var oca=new OrientedCoordinateArray(e.getCoordinates());this.ocaMap.put(oca,e);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return EdgeList;}});function OverlayOp(){this.ptLocator=new PointLocator();this.geomFact=null;this.resultGeom=null;this.graph=null;this.edgeList=new EdgeList();this.resultPolyList=new ArrayList();this.resultLineList=new ArrayList();this.resultPointList=new ArrayList();var g0=arguments[0],g1=arguments[1];GeometryGraphOperation.call(this,g0,g1);this.graph=new PlanarGraph(new OverlayNodeFactory());this.geomFact=g0.getFactory();}inherits(OverlayOp,GeometryGraphOperation);extend(OverlayOp.prototype,{insertUniqueEdge:function insertUniqueEdge(e){var existingEdge=this.edgeList.findEqualEdge(e);if(existingEdge!==null){var existingLabel=existingEdge.getLabel();var labelToMerge=e.getLabel();if(!existingEdge.isPointwiseEqual(e)){labelToMerge=new Label(e.getLabel());labelToMerge.flip();}var depth=existingEdge.getDepth();if(depth.isNull()){depth.add(existingLabel);}depth.add(labelToMerge);existingLabel.merge(labelToMerge);}else{this.edgeList.add(e);}},getGraph:function getGraph(){return this.graph;},cancelDuplicateResultEdges:function cancelDuplicateResultEdges(){for(var it=this.graph.getEdgeEnds().iterator();it.hasNext();){var de=it.next();var sym=de.getSym();if(de.isInResult()&&sym.isInResult()){de.setInResult(false);sym.setInResult(false);}}},isCoveredByLA:function isCoveredByLA(coord){if(this.isCovered(coord,this.resultLineList))return true;if(this.isCovered(coord,this.resultPolyList))return true;return false;},computeGeometry:function computeGeometry(resultPointList,resultLineList,resultPolyList,opcode){var geomList=new ArrayList();geomList.addAll(resultPointList);geomList.addAll(resultLineList);geomList.addAll(resultPolyList);if(geomList.isEmpty())return OverlayOp.createEmptyResult(opcode,this.arg[0].getGeometry(),this.arg[1].getGeometry(),this.geomFact);return this.geomFact.buildGeometry(geomList);},mergeSymLabels:function mergeSymLabels(){for(var nodeit=this.graph.getNodes().iterator();nodeit.hasNext();){var node=nodeit.next();node.getEdges().mergeSymLabels();}},isCovered:function isCovered(coord,geomList){for(var it=geomList.iterator();it.hasNext();){var geom=it.next();var loc=this.ptLocator.locate(coord,geom);if(loc!==Location.EXTERIOR)return true;}return false;},replaceCollapsedEdges:function replaceCollapsedEdges(){var newEdges=new ArrayList();for(var it=this.edgeList.iterator();it.hasNext();){var e=it.next();if(e.isCollapsed()){it.remove();newEdges.add(e.getCollapsedEdge());}}this.edgeList.addAll(newEdges);},updateNodeLabelling:function updateNodeLabelling(){for(var nodeit=this.graph.getNodes().iterator();nodeit.hasNext();){var node=nodeit.next();var lbl=node.getEdges().getLabel();node.getLabel().merge(lbl);}},getResultGeometry:function getResultGeometry(overlayOpCode){this.computeOverlay(overlayOpCode);return this.resultGeom;},insertUniqueEdges:function insertUniqueEdges(edges){for(var i=edges.iterator();i.hasNext();){var e=i.next();this.insertUniqueEdge(e);}},computeOverlay:function computeOverlay(opCode){this.copyPoints(0);this.copyPoints(1);this.arg[0].computeSelfNodes(this.li,false);this.arg[1].computeSelfNodes(this.li,false);this.arg[0].computeEdgeIntersections(this.arg[1],this.li,true);var baseSplitEdges=new ArrayList();this.arg[0].computeSplitEdges(baseSplitEdges);this.arg[1].computeSplitEdges(baseSplitEdges);var splitEdges=baseSplitEdges;this.insertUniqueEdges(baseSplitEdges);this.computeLabelsFromDepths();this.replaceCollapsedEdges();EdgeNodingValidator.checkValid(this.edgeList.getEdges());this.graph.addEdges(this.edgeList.getEdges());this.computeLabelling();this.labelIncompleteNodes();this.findResultAreaEdges(opCode);this.cancelDuplicateResultEdges();var polyBuilder=new PolygonBuilder(this.geomFact);polyBuilder.add(this.graph);this.resultPolyList=polyBuilder.getPolygons();var lineBuilder=new LineBuilder(this,this.geomFact,this.ptLocator);this.resultLineList=lineBuilder.build(opCode);var pointBuilder=new PointBuilder(this,this.geomFact,this.ptLocator);this.resultPointList=pointBuilder.build(opCode);this.resultGeom=this.computeGeometry(this.resultPointList,this.resultLineList,this.resultPolyList,opCode);},labelIncompleteNode:function labelIncompleteNode(n,targetIndex){var loc=this.ptLocator.locate(n.getCoordinate(),this.arg[targetIndex].getGeometry());n.getLabel().setLocation(targetIndex,loc);},copyPoints:function copyPoints(argIndex){for(var i=this.arg[argIndex].getNodeIterator();i.hasNext();){var graphNode=i.next();var newNode=this.graph.addNode(graphNode.getCoordinate());newNode.setLabel(argIndex,graphNode.getLabel().getLocation(argIndex));}},findResultAreaEdges:function findResultAreaEdges(opCode){for(var it=this.graph.getEdgeEnds().iterator();it.hasNext();){var de=it.next();var label=de.getLabel();if(label.isArea()&&!de.isInteriorAreaEdge()&&OverlayOp.isResultOfOp(label.getLocation(0,Position.RIGHT),label.getLocation(1,Position.RIGHT),opCode)){de.setInResult(true);}}},computeLabelsFromDepths:function computeLabelsFromDepths(){for(var it=this.edgeList.iterator();it.hasNext();){var e=it.next();var lbl=e.getLabel();var depth=e.getDepth();if(!depth.isNull()){depth.normalize();for(var i=0;i<2;i++){if(!lbl.isNull(i)&&lbl.isArea()&&!depth.isNull(i)){if(depth.getDelta(i)===0){lbl.toLine(i);}else{Assert.isTrue(!depth.isNull(i,Position.LEFT),\"depth of LEFT side has not been initialized\");lbl.setLocation(i,Position.LEFT,depth.getLocation(i,Position.LEFT));Assert.isTrue(!depth.isNull(i,Position.RIGHT),\"depth of RIGHT side has not been initialized\");lbl.setLocation(i,Position.RIGHT,depth.getLocation(i,Position.RIGHT));}}}}}},computeLabelling:function computeLabelling(){for(var nodeit=this.graph.getNodes().iterator();nodeit.hasNext();){var node=nodeit.next();node.getEdges().computeLabelling(this.arg);}this.mergeSymLabels();this.updateNodeLabelling();},labelIncompleteNodes:function labelIncompleteNodes(){var nodeCount=0;for(var ni=this.graph.getNodes().iterator();ni.hasNext();){var n=ni.next();var label=n.getLabel();if(n.isIsolated()){nodeCount++;if(label.isNull(0))this.labelIncompleteNode(n,0);else this.labelIncompleteNode(n,1);}n.getEdges().updateLabelling(label);}},isCoveredByA:function isCoveredByA(coord){if(this.isCovered(coord,this.resultPolyList))return true;return false;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return OverlayOp;}});OverlayOp.overlayOp=function(geom0,geom1,opCode){var gov=new OverlayOp(geom0,geom1);var geomOv=gov.getResultGeometry(opCode);return geomOv;};OverlayOp.intersection=function(g,other){if(g.isEmpty()||other.isEmpty())return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION,g,other,g.getFactory());if(g.isGeometryCollection()){var g2=other;return GeometryCollectionMapper.map(g,{interfaces_:function interfaces_(){return[MapOp];},map:function map(g){return g.intersection(g2);}});}g.checkNotGeometryCollection(g);g.checkNotGeometryCollection(other);return SnapIfNeededOverlayOp.overlayOp(g,other,OverlayOp.INTERSECTION);};OverlayOp.symDifference=function(g,other){if(g.isEmpty()||other.isEmpty()){if(g.isEmpty()&&other.isEmpty())return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE,g,other,g.getFactory());if(g.isEmpty())return other.copy();if(other.isEmpty())return g.copy();}g.checkNotGeometryCollection(g);g.checkNotGeometryCollection(other);return SnapIfNeededOverlayOp.overlayOp(g,other,OverlayOp.SYMDIFFERENCE);};OverlayOp.resultDimension=function(opCode,g0,g1){var dim0=g0.getDimension();var dim1=g1.getDimension();var resultDimension=-1;switch(opCode){case OverlayOp.INTERSECTION:resultDimension=Math.min(dim0,dim1);break;case OverlayOp.UNION:resultDimension=Math.max(dim0,dim1);break;case OverlayOp.DIFFERENCE:resultDimension=dim0;break;case OverlayOp.SYMDIFFERENCE:resultDimension=Math.max(dim0,dim1);break;}return resultDimension;};OverlayOp.createEmptyResult=function(overlayOpCode,a,b,geomFact){var result=null;switch(OverlayOp.resultDimension(overlayOpCode,a,b)){case-1:result=geomFact.createGeometryCollection(new Array(0).fill(null));break;case 0:result=geomFact.createPoint();break;case 1:result=geomFact.createLineString();break;case 2:result=geomFact.createPolygon();break;}return result;};OverlayOp.difference=function(g,other){if(g.isEmpty())return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE,g,other,g.getFactory());if(other.isEmpty())return g.copy();g.checkNotGeometryCollection(g);g.checkNotGeometryCollection(other);return SnapIfNeededOverlayOp.overlayOp(g,other,OverlayOp.DIFFERENCE);};OverlayOp.isResultOfOp=function(){if(arguments.length===2){var label=arguments[0],opCode=arguments[1];var loc0=label.getLocation(0);var loc1=label.getLocation(1);return OverlayOp.isResultOfOp(loc0,loc1,opCode);}else if(arguments.length===3){var _loc=arguments[0],_loc2=arguments[1],overlayOpCode=arguments[2];if(_loc===Location.BOUNDARY)_loc=Location.INTERIOR;if(_loc2===Location.BOUNDARY)_loc2=Location.INTERIOR;switch(overlayOpCode){case OverlayOp.INTERSECTION:return _loc===Location.INTERIOR&&_loc2===Location.INTERIOR;case OverlayOp.UNION:return _loc===Location.INTERIOR||_loc2===Location.INTERIOR;case OverlayOp.DIFFERENCE:return _loc===Location.INTERIOR&&_loc2!==Location.INTERIOR;case OverlayOp.SYMDIFFERENCE:return _loc===Location.INTERIOR&&_loc2!==Location.INTERIOR||_loc!==Location.INTERIOR&&_loc2===Location.INTERIOR;}return false;}};OverlayOp.INTERSECTION=1;OverlayOp.UNION=2;OverlayOp.DIFFERENCE=3;OverlayOp.SYMDIFFERENCE=4;function SnapOverlayOp(){this.geom=new Array(2).fill(null);this.snapTolerance=null;this.cbr=null;var g1=arguments[0],g2=arguments[1];this.geom[0]=g1;this.geom[1]=g2;this.computeSnapTolerance();}extend(SnapOverlayOp.prototype,{selfSnap:function selfSnap(geom){var snapper0=new GeometrySnapper(geom);var snapGeom=snapper0.snapTo(geom,this.snapTolerance);return snapGeom;},removeCommonBits:function removeCommonBits(geom){this.cbr=new CommonBitsRemover();this.cbr.add(geom[0]);this.cbr.add(geom[1]);var remGeom=new Array(2).fill(null);remGeom[0]=this.cbr.removeCommonBits(geom[0].copy());remGeom[1]=this.cbr.removeCommonBits(geom[1].copy());return remGeom;},prepareResult:function prepareResult(geom){this.cbr.addCommonBits(geom);return geom;},getResultGeometry:function getResultGeometry(opCode){var prepGeom=this.snap(this.geom);var result=OverlayOp.overlayOp(prepGeom[0],prepGeom[1],opCode);return this.prepareResult(result);},checkValid:function checkValid(g){if(!g.isValid()){System.out.println(\"Snapped geometry is invalid\");}},computeSnapTolerance:function computeSnapTolerance(){this.snapTolerance=GeometrySnapper.computeOverlaySnapTolerance(this.geom[0],this.geom[1]);},snap:function snap(geom){var remGeom=this.removeCommonBits(geom);var snapGeom=GeometrySnapper.snap(remGeom[0],remGeom[1],this.snapTolerance);return snapGeom;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return SnapOverlayOp;}});SnapOverlayOp.overlayOp=function(g0,g1,opCode){var op=new SnapOverlayOp(g0,g1);return op.getResultGeometry(opCode);};SnapOverlayOp.union=function(g0,g1){return SnapOverlayOp.overlayOp(g0,g1,OverlayOp.UNION);};SnapOverlayOp.intersection=function(g0,g1){return SnapOverlayOp.overlayOp(g0,g1,OverlayOp.INTERSECTION);};SnapOverlayOp.symDifference=function(g0,g1){return SnapOverlayOp.overlayOp(g0,g1,OverlayOp.SYMDIFFERENCE);};SnapOverlayOp.difference=function(g0,g1){return SnapOverlayOp.overlayOp(g0,g1,OverlayOp.DIFFERENCE);};function SnapIfNeededOverlayOp(){this.geom=new Array(2).fill(null);var g1=arguments[0],g2=arguments[1];this.geom[0]=g1;this.geom[1]=g2;}extend(SnapIfNeededOverlayOp.prototype,{getResultGeometry:function getResultGeometry(opCode){var result=null;var isSuccess=false;var savedException=null;try{result=OverlayOp.overlayOp(this.geom[0],this.geom[1],opCode);var isValid=true;if(isValid)isSuccess=true;}catch(ex){if(ex instanceof RuntimeException){savedException=ex;}else throw ex;}finally{}if(!isSuccess){try{result=SnapOverlayOp.overlayOp(this.geom[0],this.geom[1],opCode);}catch(ex){if(ex instanceof RuntimeException){throw savedException;}else throw ex;}finally{}}return result;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return SnapIfNeededOverlayOp;}});SnapIfNeededOverlayOp.overlayOp=function(g0,g1,opCode){var op=new SnapIfNeededOverlayOp(g0,g1);return op.getResultGeometry(opCode);};SnapIfNeededOverlayOp.union=function(g0,g1){return SnapIfNeededOverlayOp.overlayOp(g0,g1,OverlayOp.UNION);};SnapIfNeededOverlayOp.intersection=function(g0,g1){return SnapIfNeededOverlayOp.overlayOp(g0,g1,OverlayOp.INTERSECTION);};SnapIfNeededOverlayOp.symDifference=function(g0,g1){return SnapIfNeededOverlayOp.overlayOp(g0,g1,OverlayOp.SYMDIFFERENCE);};SnapIfNeededOverlayOp.difference=function(g0,g1){return SnapIfNeededOverlayOp.overlayOp(g0,g1,OverlayOp.DIFFERENCE);};function InteriorPointArea(){this.factory=null;this.interiorPoint=null;this.maxWidth=0.0;var g=arguments[0];this.factory=g.getFactory();this.add(g);}extend(InteriorPointArea.prototype,{addPolygon:function addPolygon(geometry){if(geometry.isEmpty())return null;var intPt=null;var width=0;var bisector=this.horizontalBisector(geometry);if(bisector.getLength()===0.0){width=0;intPt=bisector.getCoordinate();}else{var intersections=SnapIfNeededOverlayOp.overlayOp(bisector,geometry,OverlayOp.INTERSECTION);var widestIntersection=this.widestGeometry(intersections);width=widestIntersection.getEnvelopeInternal().getWidth();intPt=InteriorPointArea.centre(widestIntersection.getEnvelopeInternal());}if(this.interiorPoint===null||width>this.maxWidth){this.interiorPoint=intPt;this.maxWidth=width;}},getInteriorPoint:function getInteriorPoint(){return this.interiorPoint;},widestGeometry:function widestGeometry(){if(arguments[0]instanceof GeometryCollection){var gc=arguments[0];if(gc.isEmpty()){return gc;}var widestGeometry=gc.getGeometryN(0);for(var i=1;i<gc.getNumGeometries();i++){if(gc.getGeometryN(i).getEnvelopeInternal().getWidth()>widestGeometry.getEnvelopeInternal().getWidth()){widestGeometry=gc.getGeometryN(i);}}return widestGeometry;}else if(arguments[0]instanceof Geometry){var geometry=arguments[0];if(!(geometry instanceof GeometryCollection)){return geometry;}return this.widestGeometry(geometry);}},horizontalBisector:function horizontalBisector(geometry){var envelope=geometry.getEnvelopeInternal();var bisectY=SafeBisectorFinder.getBisectorY(geometry);return this.factory.createLineString([new Coordinate(envelope.getMinX(),bisectY),new Coordinate(envelope.getMaxX(),bisectY)]);},add:function add(geom){if(geom instanceof Polygon){this.addPolygon(geom);}else if(geom instanceof GeometryCollection){var gc=geom;for(var i=0;i<gc.getNumGeometries();i++){this.add(gc.getGeometryN(i));}}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return InteriorPointArea;}});InteriorPointArea.centre=function(envelope){return new Coordinate(InteriorPointArea.avg(envelope.getMinX(),envelope.getMaxX()),InteriorPointArea.avg(envelope.getMinY(),envelope.getMaxY()));};InteriorPointArea.avg=function(a,b){return(a+b)/2.0;};function SafeBisectorFinder(){this.poly=null;this.centreY=null;this.hiY=Double.MAX_VALUE;this.loY=-Double.MAX_VALUE;var poly=arguments[0];this.poly=poly;this.hiY=poly.getEnvelopeInternal().getMaxY();this.loY=poly.getEnvelopeInternal().getMinY();this.centreY=InteriorPointArea.avg(this.loY,this.hiY);}extend(SafeBisectorFinder.prototype,{updateInterval:function updateInterval(y){if(y<=this.centreY){if(y>this.loY)this.loY=y;}else if(y>this.centreY){if(y<this.hiY){this.hiY=y;}}},getBisectorY:function getBisectorY(){this.process(this.poly.getExteriorRing());for(var i=0;i<this.poly.getNumInteriorRing();i++){this.process(this.poly.getInteriorRingN(i));}var bisectY=InteriorPointArea.avg(this.hiY,this.loY);return bisectY;},process:function process(line){var seq=line.getCoordinateSequence();for(var i=0;i<seq.size();i++){var y=seq.getY(i);this.updateInterval(y);}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return SafeBisectorFinder;}});SafeBisectorFinder.getBisectorY=function(poly){var finder=new SafeBisectorFinder(poly);return finder.getBisectorY();};InteriorPointArea.SafeBisectorFinder=SafeBisectorFinder;function InteriorPointLine(){this.centroid=null;this.minDistance=Double.MAX_VALUE;this.interiorPoint=null;var g=arguments[0];this.centroid=g.getCentroid().getCoordinate();this.addInterior(g);if(this.interiorPoint===null)this.addEndpoints(g);}extend(InteriorPointLine.prototype,{addEndpoints:function addEndpoints(){if(arguments[0]instanceof Geometry){var geom=arguments[0];if(geom instanceof LineString){this.addEndpoints(geom.getCoordinates());}else if(geom instanceof GeometryCollection){var gc=geom;for(var i=0;i<gc.getNumGeometries();i++){this.addEndpoints(gc.getGeometryN(i));}}}else if(arguments[0]instanceof Array){var pts=arguments[0];this.add(pts[0]);this.add(pts[pts.length-1]);}},getInteriorPoint:function getInteriorPoint(){return this.interiorPoint;},addInterior:function addInterior(){if(arguments[0]instanceof Geometry){var geom=arguments[0];if(geom instanceof LineString){this.addInterior(geom.getCoordinates());}else if(geom instanceof GeometryCollection){var gc=geom;for(var i=0;i<gc.getNumGeometries();i++){this.addInterior(gc.getGeometryN(i));}}}else if(arguments[0]instanceof Array){var pts=arguments[0];for(var i=1;i<pts.length-1;i++){this.add(pts[i]);}}},add:function add(point){var dist=point.distance(this.centroid);if(dist<this.minDistance){this.interiorPoint=new Coordinate(point);this.minDistance=dist;}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return InteriorPointLine;}});function InteriorPointPoint(){this.centroid=null;this.minDistance=Double.MAX_VALUE;this.interiorPoint=null;var g=arguments[0];this.centroid=g.getCentroid().getCoordinate();this.add(g);}extend(InteriorPointPoint.prototype,{getInteriorPoint:function getInteriorPoint(){return this.interiorPoint;},add:function add(){if(arguments[0]instanceof Geometry){var geom=arguments[0];if(geom instanceof Point){this.add(geom.getCoordinate());}else if(geom instanceof GeometryCollection){var gc=geom;for(var i=0;i<gc.getNumGeometries();i++){this.add(gc.getGeometryN(i));}}}else if(arguments[0]instanceof Coordinate){var point=arguments[0];var dist=point.distance(this.centroid);if(dist<this.minDistance){this.interiorPoint=new Coordinate(point);this.minDistance=dist;}}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return InteriorPointPoint;}});function MonotoneChainSelectAction(){this.tempEnv1=new Envelope();this.selectedSegment=new LineSegment();}extend(MonotoneChainSelectAction.prototype,{select:function select(){if(arguments.length===1){var seg=arguments[0];}else if(arguments.length===2){var mc=arguments[0],startIndex=arguments[1];mc.getLineSegment(startIndex,this.selectedSegment);this.select(this.selectedSegment);}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return MonotoneChainSelectAction;}});function NodeBase(){this.items=new ArrayList();this.subnode=[null,null];}extend(NodeBase.prototype,{hasChildren:function hasChildren(){for(var i=0;i<2;i++){if(this.subnode[i]!==null)return true;}return false;},isPrunable:function isPrunable(){return!(this.hasChildren()||this.hasItems());},addAllItems:function addAllItems(items){items.addAll(this.items);for(var i=0;i<2;i++){if(this.subnode[i]!==null){this.subnode[i].addAllItems(items);}}return items;},size:function size(){var subSize=0;for(var i=0;i<2;i++){if(this.subnode[i]!==null){subSize+=this.subnode[i].size();}}return subSize+this.items.size();},addAllItemsFromOverlapping:function addAllItemsFromOverlapping(interval,resultItems){if(interval!==null&&!this.isSearchMatch(interval))return null;resultItems.addAll(this.items);if(this.subnode[0]!==null)this.subnode[0].addAllItemsFromOverlapping(interval,resultItems);if(this.subnode[1]!==null)this.subnode[1].addAllItemsFromOverlapping(interval,resultItems);},hasItems:function hasItems(){return!this.items.isEmpty();},remove:function remove(itemInterval,item){if(!this.isSearchMatch(itemInterval))return false;var found=false;for(var i=0;i<2;i++){if(this.subnode[i]!==null){found=this.subnode[i].remove(itemInterval,item);if(found){if(this.subnode[i].isPrunable())this.subnode[i]=null;break;}}}if(found)return found;found=this.items.remove(item);return found;},getItems:function getItems(){return this.items;},depth:function depth(){var maxSubDepth=0;for(var i=0;i<2;i++){if(this.subnode[i]!==null){var sqd=this.subnode[i].depth();if(sqd>maxSubDepth)maxSubDepth=sqd;}}return maxSubDepth+1;},nodeSize:function nodeSize(){var subSize=0;for(var i=0;i<2;i++){if(this.subnode[i]!==null){subSize+=this.subnode[i].nodeSize();}}return subSize+1;},add:function add(item){this.items.add(item);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return NodeBase;}});NodeBase.getSubnodeIndex=function(interval,centre){var subnodeIndex=-1;if(interval.min>=centre)subnodeIndex=1;if(interval.max<=centre)subnodeIndex=0;return subnodeIndex;};function Interval(){this.min=null;this.max=null;if(arguments.length===0){this.min=0.0;this.max=0.0;}else if(arguments.length===1){var interval=arguments[0];this.init(interval.min,interval.max);}else if(arguments.length===2){var min=arguments[0],max=arguments[1];this.init(min,max);}}extend(Interval.prototype,{expandToInclude:function expandToInclude(interval){if(interval.max>this.max)this.max=interval.max;if(interval.min<this.min)this.min=interval.min;},getWidth:function getWidth(){return this.max-this.min;},overlaps:function overlaps(){if(arguments.length===1){var interval=arguments[0];return this.overlaps(interval.min,interval.max);}else if(arguments.length===2){var min=arguments[0],max=arguments[1];if(this.min>max||this.max<min)return false;return true;}},getMin:function getMin(){return this.min;},toString:function toString(){return\"[\"+this.min+\", \"+this.max+\"]\";},contains:function contains(){if(arguments.length===1){if(arguments[0]instanceof Interval){var interval=arguments[0];return this.contains(interval.min,interval.max);}else if(typeof arguments[0]===\"number\"){var p=arguments[0];return p>=this.min&&p<=this.max;}}else if(arguments.length===2){var min=arguments[0],max=arguments[1];return min>=this.min&&max<=this.max;}},init:function init(min,max){this.min=min;this.max=max;if(min>max){this.min=max;this.max=min;}},getMax:function getMax(){return this.max;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Interval;}});function DoubleBits(){}DoubleBits.exponent=function(d){return CVTFWD(64,d)-1023;};DoubleBits.powerOf2=function(exp){return Math.pow(2,exp);};/**\n * Calculates the exponent of the bit-pattern for a number. Uses code from:\n * http://www.merlyn.demon.co.uk/js-exact.htm\n *\n * @param {Number}\n *          NumW 32 or 64 to denote the number of bits.\n * @param {Number}\n *          Qty the number to calculate the bit pattern for.\n * @return {Number} The integer value of the exponent.\n */function CVTFWD(NumW,Qty){var Sign;var Expo;var Mant;var Bin;var Inf={32:{d:0x7F,c:0x80,b:0,a:0},64:{d:0x7FF0,c:0,b:0,a:0}};var ExW={32:8,64:11}[NumW];if(!Bin){Sign=Qty<0||1/Qty<0;// OK for +-0\nif(!isFinite(Qty)){Bin=Inf[NumW];if(Sign){Bin.d+=1<<NumW/4-1;}Expo=Math.pow(2,ExW)-1;Mant=0;}}if(!Bin){Expo={32:127,64:1023}[NumW];Mant=Math.abs(Qty);while(Mant>=2){Expo++;Mant/=2;}while(Mant<1&&Expo>0){Expo--;Mant*=2;}if(Expo<=0){Mant/=2;}if(NumW===32&&Expo>254){Bin={d:Sign?0xFF:0x7F,c:0x80,b:0,a:0};Expo=Math.pow(2,ExW)-1;Mant=0;}}return Expo;}function Key(){this.pt=0.0;this.level=0;this.interval=null;var interval=arguments[0];this.computeKey(interval);}extend(Key.prototype,{getInterval:function getInterval(){return this.interval;},getLevel:function getLevel(){return this.level;},computeKey:function computeKey(itemInterval){this.level=Key.computeLevel(itemInterval);this.interval=new Interval();this.computeInterval(this.level,itemInterval);while(!this.interval.contains(itemInterval)){this.level+=1;this.computeInterval(this.level,itemInterval);}},computeInterval:function computeInterval(level,itemInterval){var size=DoubleBits.powerOf2(level);this.pt=Math.floor(itemInterval.getMin()/size)*size;this.interval.init(this.pt,this.pt+size);},getPoint:function getPoint(){return this.pt;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Key;}});Key.computeLevel=function(interval){var dx=interval.getWidth();var level=DoubleBits.exponent(dx)+1;return level;};function Node$1(){NodeBase.apply(this);this.interval=null;this.centre=null;this.level=null;var interval=arguments[0],level=arguments[1];this.interval=interval;this.level=level;this.centre=(interval.getMin()+interval.getMax())/2;}inherits(Node$1,NodeBase);extend(Node$1.prototype,{getInterval:function getInterval(){return this.interval;},find:function find(searchInterval){var subnodeIndex=NodeBase.getSubnodeIndex(searchInterval,this.centre);if(subnodeIndex===-1)return this;if(this.subnode[subnodeIndex]!==null){var node=this.subnode[subnodeIndex];return node.find(searchInterval);}return this;},insert:function insert(node){Assert.isTrue(this.interval===null||this.interval.contains(node.interval));var index=NodeBase.getSubnodeIndex(node.interval,this.centre);if(node.level===this.level-1){this.subnode[index]=node;}else{var childNode=this.createSubnode(index);childNode.insert(node);this.subnode[index]=childNode;}},isSearchMatch:function isSearchMatch(itemInterval){return itemInterval.overlaps(this.interval);},getSubnode:function getSubnode(index){if(this.subnode[index]===null){this.subnode[index]=this.createSubnode(index);}return this.subnode[index];},getNode:function getNode(searchInterval){var subnodeIndex=NodeBase.getSubnodeIndex(searchInterval,this.centre);if(subnodeIndex!==-1){var node=this.getSubnode(subnodeIndex);return node.getNode(searchInterval);}else{return this;}},createSubnode:function createSubnode(index){var min=0.0;var max=0.0;switch(index){case 0:min=this.interval.getMin();max=this.centre;break;case 1:min=this.centre;max=this.interval.getMax();break;}var subInt=new Interval(min,max);var node=new Node$1(subInt,this.level-1);return node;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Node$1;}});Node$1.createNode=function(itemInterval){var key=new Key(itemInterval);var node=new Node$1(key.getInterval(),key.getLevel());return node;};Node$1.createExpanded=function(node,addInterval){var expandInt=new Interval(addInterval);if(node!==null)expandInt.expandToInclude(node.interval);var largerNode=Node$1.createNode(expandInt);if(node!==null)largerNode.insert(node);return largerNode;};function IntervalSize(){}extend(IntervalSize.prototype,{interfaces_:function interfaces_(){return[];},getClass:function getClass(){return IntervalSize;}});IntervalSize.isZeroWidth=function(min,max){var width=max-min;if(width===0.0)return true;var maxAbs=Math.max(Math.abs(min),Math.abs(max));var scaledInterval=width/maxAbs;var level=DoubleBits.exponent(scaledInterval);return level<=IntervalSize.MIN_BINARY_EXPONENT;};IntervalSize.MIN_BINARY_EXPONENT=-50;function Root(){NodeBase.apply(this);}inherits(Root,NodeBase);extend(Root.prototype,{insert:function insert(itemInterval,item){var index=NodeBase.getSubnodeIndex(itemInterval,Root.origin);if(index===-1){this.add(item);return null;}var node=this.subnode[index];if(node===null||!node.getInterval().contains(itemInterval)){var largerNode=Node$1.createExpanded(node,itemInterval);this.subnode[index]=largerNode;}this.insertContained(this.subnode[index],itemInterval,item);},isSearchMatch:function isSearchMatch(interval){return true;},insertContained:function insertContained(tree,itemInterval,item){Assert.isTrue(tree.getInterval().contains(itemInterval));var isZeroArea=IntervalSize.isZeroWidth(itemInterval.getMin(),itemInterval.getMax());var node=null;if(isZeroArea)node=tree.find(itemInterval);else node=tree.getNode(itemInterval);node.add(item);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Root;}});Root.origin=0.0;function Bintree(){this.root=null;this.minExtent=1.0;this.root=new Root();}extend(Bintree.prototype,{size:function size(){if(this.root!==null)return this.root.size();return 0;},insert:function insert(itemInterval,item){this.collectStats(itemInterval);var insertInterval=Bintree.ensureExtent(itemInterval,this.minExtent);this.root.insert(insertInterval,item);},query:function query(){if(arguments.length===1){if(typeof arguments[0]===\"number\"){var x=arguments[0];return this.query(new Interval(x,x));}else if(arguments[0]instanceof Interval){var interval=arguments[0];var foundItems=new ArrayList();this.query(interval,foundItems);return foundItems;}}else if(arguments.length===2){var _interval=arguments[0],_foundItems=arguments[1];this.root.addAllItemsFromOverlapping(_interval,_foundItems);}},iterator:function iterator(){var foundItems=new ArrayList();this.root.addAllItems(foundItems);return foundItems.iterator();},remove:function remove(itemInterval,item){var insertInterval=Bintree.ensureExtent(itemInterval,this.minExtent);return this.root.remove(insertInterval,item);},collectStats:function collectStats(interval){var del=interval.getWidth();if(del<this.minExtent&&del>0.0)this.minExtent=del;},depth:function depth(){if(this.root!==null)return this.root.depth();return 0;},nodeSize:function nodeSize(){if(this.root!==null)return this.root.nodeSize();return 0;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Bintree;}});Bintree.ensureExtent=function(itemInterval,minExtent){var min=itemInterval.getMin();var max=itemInterval.getMax();if(min!==max)return itemInterval;if(min===max){min=min-minExtent/2.0;max=min+minExtent/2.0;}return new Interval(min,max);};function PointInRing(){}extend(PointInRing.prototype,{isInside:function isInside(pt){},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return PointInRing;}});function MCPointInRing(){this.ring=null;this.tree=null;this.crossings=0;this.interval=new Interval();var ring=arguments[0];this.ring=ring;this.buildIndex();}extend(MCPointInRing.prototype,{testLineSegment:function testLineSegment(p,seg){var xInt=null;var x1=null;var y1=null;var x2=null;var y2=null;var p1=seg.p0;var p2=seg.p1;x1=p1.x-p.x;y1=p1.y-p.y;x2=p2.x-p.x;y2=p2.y-p.y;if(y1>0&&y2<=0||y2>0&&y1<=0){xInt=RobustDeterminant.signOfDet2x2(x1,y1,x2,y2)/(y2-y1);if(0.0<xInt){this.crossings++;}}},buildIndex:function buildIndex(){this.tree=new Bintree();var pts=CoordinateArrays.removeRepeatedPoints(this.ring.getCoordinates());var mcList=MonotoneChainBuilder.getChains(pts);for(var i=0;i<mcList.size();i++){var mc=mcList.get(i);var mcEnv=mc.getEnvelope();this.interval.min=mcEnv.getMinY();this.interval.max=mcEnv.getMaxY();this.tree.insert(this.interval,mc);}},testMonotoneChain:function testMonotoneChain(rayEnv,mcSelecter,mc){mc.select(rayEnv,mcSelecter);},isInside:function isInside(pt){this.crossings=0;var rayEnv=new Envelope(Double.NEGATIVE_INFINITY,Double.POSITIVE_INFINITY,pt.y,pt.y);this.interval.min=pt.y;this.interval.max=pt.y;var segs=this.tree.query(this.interval);var mcSelecter=new MCSelecter(this,pt);for(var i=segs.iterator();i.hasNext();){var mc=i.next();this.testMonotoneChain(rayEnv,mcSelecter,mc);}if(this.crossings%2===1){return true;}return false;},interfaces_:function interfaces_(){return[PointInRing];},getClass:function getClass(){return MCPointInRing;}});function MCSelecter(){MonotoneChainSelectAction.apply(this);this.mcp=null;this.p=null;var mcp=arguments[0],p=arguments[1];this.mcp=mcp;this.p=p;}inherits(MCSelecter,MonotoneChainSelectAction);extend(MCSelecter.prototype,{select:function select(){if(arguments.length===1){var ls=arguments[0];this.mcp.testLineSegment(this.p,ls);}else return MonotoneChainSelectAction.prototype.select.apply(this,arguments);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return MCSelecter;}});MCPointInRing.MCSelecter=MCSelecter;function Angle(){}extend(Angle.prototype,{interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Angle;}});Angle.toDegrees=function(radians){return radians*180/Math.PI;};Angle.normalize=function(angle){while(angle>Math.PI){angle-=Angle.PI_TIMES_2;}while(angle<=-Math.PI){angle+=Angle.PI_TIMES_2;}return angle;};Angle.angle=function(){if(arguments.length===1){var p=arguments[0];return Math.atan2(p.y,p.x);}else if(arguments.length===2){var p0=arguments[0],p1=arguments[1];var dx=p1.x-p0.x;var dy=p1.y-p0.y;return Math.atan2(dy,dx);}};Angle.isAcute=function(p0,p1,p2){var dx0=p0.x-p1.x;var dy0=p0.y-p1.y;var dx1=p2.x-p1.x;var dy1=p2.y-p1.y;var dotprod=dx0*dx1+dy0*dy1;return dotprod>0;};Angle.isObtuse=function(p0,p1,p2){var dx0=p0.x-p1.x;var dy0=p0.y-p1.y;var dx1=p2.x-p1.x;var dy1=p2.y-p1.y;var dotprod=dx0*dx1+dy0*dy1;return dotprod<0;};Angle.interiorAngle=function(p0,p1,p2){var anglePrev=Angle.angle(p1,p0);var angleNext=Angle.angle(p1,p2);return Math.abs(angleNext-anglePrev);};Angle.normalizePositive=function(angle){if(angle<0.0){while(angle<0.0){angle+=Angle.PI_TIMES_2;}if(angle>=Angle.PI_TIMES_2)angle=0.0;}else{while(angle>=Angle.PI_TIMES_2){angle-=Angle.PI_TIMES_2;}if(angle<0.0)angle=0.0;}return angle;};Angle.angleBetween=function(tip1,tail,tip2){var a1=Angle.angle(tail,tip1);var a2=Angle.angle(tail,tip2);return Angle.diff(a1,a2);};Angle.diff=function(ang1,ang2){var delAngle=null;if(ang1<ang2){delAngle=ang2-ang1;}else{delAngle=ang1-ang2;}if(delAngle>Math.PI){delAngle=2*Math.PI-delAngle;}return delAngle;};Angle.toRadians=function(angleDegrees){return angleDegrees*Math.PI/180.0;};Angle.getTurn=function(ang1,ang2){var crossproduct=Math.sin(ang2-ang1);if(crossproduct>0){return Angle.COUNTERCLOCKWISE;}if(crossproduct<0){return Angle.CLOCKWISE;}return Angle.NONE;};Angle.angleBetweenOriented=function(tip1,tail,tip2){var a1=Angle.angle(tail,tip1);var a2=Angle.angle(tail,tip2);var angDel=a2-a1;if(angDel<=-Math.PI)return angDel+Angle.PI_TIMES_2;if(angDel>Math.PI)return angDel-Angle.PI_TIMES_2;return angDel;};Angle.PI_TIMES_2=2.0*Math.PI;Angle.PI_OVER_2=Math.PI/2.0;Angle.PI_OVER_4=Math.PI/4.0;Angle.COUNTERCLOCKWISE=CGAlgorithms.COUNTERCLOCKWISE;Angle.CLOCKWISE=CGAlgorithms.CLOCKWISE;Angle.NONE=CGAlgorithms.COLLINEAR;function Triangle(){this.p0=null;this.p1=null;this.p2=null;var p0=arguments[0],p1=arguments[1],p2=arguments[2];this.p0=p0;this.p1=p1;this.p2=p2;}extend(Triangle.prototype,{area:function area(){return Triangle.area(this.p0,this.p1,this.p2);},signedArea:function signedArea(){return Triangle.signedArea(this.p0,this.p1,this.p2);},interpolateZ:function interpolateZ(p){if(p===null)throw new IllegalArgumentException(\"Supplied point is null.\");return Triangle.interpolateZ(p,this.p0,this.p1,this.p2);},longestSideLength:function longestSideLength(){return Triangle.longestSideLength(this.p0,this.p1,this.p2);},isAcute:function isAcute(){return Triangle.isAcute(this.p0,this.p1,this.p2);},circumcentre:function circumcentre(){return Triangle.circumcentre(this.p0,this.p1,this.p2);},area3D:function area3D(){return Triangle.area3D(this.p0,this.p1,this.p2);},centroid:function centroid(){return Triangle.centroid(this.p0,this.p1,this.p2);},inCentre:function inCentre(){return Triangle.inCentre(this.p0,this.p1,this.p2);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Triangle;}});Triangle.area=function(a,b,c){return Math.abs(((c.x-a.x)*(b.y-a.y)-(b.x-a.x)*(c.y-a.y))/2);};Triangle.signedArea=function(a,b,c){return((c.x-a.x)*(b.y-a.y)-(b.x-a.x)*(c.y-a.y))/2;};Triangle.det=function(m00,m01,m10,m11){return m00*m11-m01*m10;};Triangle.interpolateZ=function(p,v0,v1,v2){var x0=v0.x;var y0=v0.y;var a=v1.x-x0;var b=v2.x-x0;var c=v1.y-y0;var d=v2.y-y0;var det=a*d-b*c;var dx=p.x-x0;var dy=p.y-y0;var t=(d*dx-b*dy)/det;var u=(-c*dx+a*dy)/det;var z=v0.z+t*(v1.z-v0.z)+u*(v2.z-v0.z);return z;};Triangle.longestSideLength=function(a,b,c){var lenAB=a.distance(b);var lenBC=b.distance(c);var lenCA=c.distance(a);var maxLen=lenAB;if(lenBC>maxLen)maxLen=lenBC;if(lenCA>maxLen)maxLen=lenCA;return maxLen;};Triangle.isAcute=function(a,b,c){if(!Angle.isAcute(a,b,c))return false;if(!Angle.isAcute(b,c,a))return false;if(!Angle.isAcute(c,a,b))return false;return true;};Triangle.circumcentre=function(a,b,c){var cx=c.x;var cy=c.y;var ax=a.x-cx;var ay=a.y-cy;var bx=b.x-cx;var by=b.y-cy;var denom=2*Triangle.det(ax,ay,bx,by);var numx=Triangle.det(ay,ax*ax+ay*ay,by,bx*bx+by*by);var numy=Triangle.det(ax,ax*ax+ay*ay,bx,bx*bx+by*by);var ccx=cx-numx/denom;var ccy=cy+numy/denom;return new Coordinate(ccx,ccy);};Triangle.perpendicularBisector=function(a,b){var dx=b.x-a.x;var dy=b.y-a.y;var l1=new HCoordinate(a.x+dx/2.0,a.y+dy/2.0,1.0);var l2=new HCoordinate(a.x-dy+dx/2.0,a.y+dx+dy/2.0,1.0);return new HCoordinate(l1,l2);};Triangle.angleBisector=function(a,b,c){var len0=b.distance(a);var len2=b.distance(c);var frac=len0/(len0+len2);var dx=c.x-a.x;var dy=c.y-a.y;var splitPt=new Coordinate(a.x+frac*dx,a.y+frac*dy);return splitPt;};Triangle.area3D=function(a,b,c){var ux=b.x-a.x;var uy=b.y-a.y;var uz=b.z-a.z;var vx=c.x-a.x;var vy=c.y-a.y;var vz=c.z-a.z;var crossx=uy*vz-uz*vy;var crossy=uz*vx-ux*vz;var crossz=ux*vy-uy*vx;var absSq=crossx*crossx+crossy*crossy+crossz*crossz;var area3D=Math.sqrt(absSq)/2;return area3D;};Triangle.centroid=function(a,b,c){var x=(a.x+b.x+c.x)/3;var y=(a.y+b.y+c.y)/3;return new Coordinate(x,y);};Triangle.inCentre=function(a,b,c){var len0=b.distance(c);var len1=a.distance(c);var len2=a.distance(b);var circum=len0+len1+len2;var inCentreX=(len0*a.x+len1*b.x+len2*c.x)/circum;var inCentreY=(len0*a.y+len1*b.y+len2*c.y)/circum;return new Coordinate(inCentreX,inCentreY);};function MinimumBoundingCircle(){this.input=null;this.extremalPts=null;this.centre=null;this.radius=0.0;var geom=arguments[0];this.input=geom;}extend(MinimumBoundingCircle.prototype,{getRadius:function getRadius(){this.compute();return this.radius;},getDiameter:function getDiameter(){this.compute();switch(this.extremalPts.length){case 0:return this.input.getFactory().createLineString();case 1:return this.input.getFactory().createPoint(this.centre);}var p0=this.extremalPts[0];var p1=this.extremalPts[1];return this.input.getFactory().createLineString([p0,p1]);},getExtremalPoints:function getExtremalPoints(){this.compute();return this.extremalPts;},computeCirclePoints:function computeCirclePoints(){if(this.input.isEmpty()){this.extremalPts=new Array(0).fill(null);return null;}if(this.input.getNumPoints()===1){var pts=this.input.getCoordinates();this.extremalPts=[new Coordinate(pts[0])];return null;}var convexHull=this.input.convexHull();var hullPts=convexHull.getCoordinates();var pts=hullPts;if(hullPts[0].equals2D(hullPts[hullPts.length-1])){pts=new Array(hullPts.length-1).fill(null);CoordinateArrays.copyDeep(hullPts,0,pts,0,hullPts.length-1);}if(pts.length<=2){this.extremalPts=CoordinateArrays.copyDeep(pts);return null;}var P=MinimumBoundingCircle.lowestPoint(pts);var Q=MinimumBoundingCircle.pointWitMinAngleWithX(pts,P);for(var i=0;i<pts.length;i++){var R=MinimumBoundingCircle.pointWithMinAngleWithSegment(pts,P,Q);if(Angle.isObtuse(P,R,Q)){this.extremalPts=[new Coordinate(P),new Coordinate(Q)];return null;}if(Angle.isObtuse(R,P,Q)){P=R;continue;}if(Angle.isObtuse(R,Q,P)){Q=R;continue;}this.extremalPts=[new Coordinate(P),new Coordinate(Q),new Coordinate(R)];return null;}Assert.shouldNeverReachHere(\"Logic failure in Minimum Bounding Circle algorithm!\");},compute:function compute(){if(this.extremalPts!==null)return null;this.computeCirclePoints();this.computeCentre();if(this.centre!==null)this.radius=this.centre.distance(this.extremalPts[0]);},getFarthestPoints:function getFarthestPoints(){this.compute();switch(this.extremalPts.length){case 0:return this.input.getFactory().createLineString();case 1:return this.input.getFactory().createPoint(this.centre);}var p0=this.extremalPts[0];var p1=this.extremalPts[this.extremalPts.length-1];return this.input.getFactory().createLineString([p0,p1]);},getCircle:function getCircle(){this.compute();if(this.centre===null)return this.input.getFactory().createPolygon();var centrePoint=this.input.getFactory().createPoint(this.centre);if(this.radius===0.0)return centrePoint;return centrePoint.buffer(this.radius);},getCentre:function getCentre(){this.compute();return this.centre;},computeCentre:function computeCentre(){switch(this.extremalPts.length){case 0:this.centre=null;break;case 1:this.centre=this.extremalPts[0];break;case 2:this.centre=new Coordinate((this.extremalPts[0].x+this.extremalPts[1].x)/2.0,(this.extremalPts[0].y+this.extremalPts[1].y)/2.0);break;case 3:this.centre=Triangle.circumcentre(this.extremalPts[0],this.extremalPts[1],this.extremalPts[2]);break;}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return MinimumBoundingCircle;}});MinimumBoundingCircle.pointWitMinAngleWithX=function(pts,P){var minSin=Double.MAX_VALUE;var minAngPt=null;for(var i=0;i<pts.length;i++){var p=pts[i];if(p===P)continue;var dx=p.x-P.x;var dy=p.y-P.y;if(dy<0)dy=-dy;var len=Math.sqrt(dx*dx+dy*dy);var sin=dy/len;if(sin<minSin){minSin=sin;minAngPt=p;}}return minAngPt;};MinimumBoundingCircle.lowestPoint=function(pts){var min=pts[0];for(var i=1;i<pts.length;i++){if(pts[i].y<min.y)min=pts[i];}return min;};MinimumBoundingCircle.pointWithMinAngleWithSegment=function(pts,P,Q){var minAng=Double.MAX_VALUE;var minAngPt=null;for(var i=0;i<pts.length;i++){var p=pts[i];if(p===P)continue;if(p===Q)continue;var ang=Angle.angleBetween(P,p,Q);if(ang<minAng){minAng=ang;minAngPt=p;}}return minAngPt;};function MinimumDiameter(){this.inputGeom=null;this.isConvex=null;this.convexHullPts=null;this.minBaseSeg=new LineSegment();this.minWidthPt=null;this.minPtIndex=null;this.minWidth=0.0;if(arguments.length===1){var inputGeom=arguments[0];MinimumDiameter.call(this,inputGeom,false);}else if(arguments.length===2){var _inputGeom=arguments[0],isConvex=arguments[1];this.inputGeom=_inputGeom;this.isConvex=isConvex;}}extend(MinimumDiameter.prototype,{getWidthCoordinate:function getWidthCoordinate(){this.computeMinimumDiameter();return this.minWidthPt;},getSupportingSegment:function getSupportingSegment(){this.computeMinimumDiameter();return this.inputGeom.getFactory().createLineString([this.minBaseSeg.p0,this.minBaseSeg.p1]);},getDiameter:function getDiameter(){this.computeMinimumDiameter();if(this.minWidthPt===null)return this.inputGeom.getFactory().createLineString(null);var basePt=this.minBaseSeg.project(this.minWidthPt);return this.inputGeom.getFactory().createLineString([basePt,this.minWidthPt]);},computeWidthConvex:function computeWidthConvex(convexGeom){if(convexGeom instanceof Polygon)this.convexHullPts=convexGeom.getExteriorRing().getCoordinates();else this.convexHullPts=convexGeom.getCoordinates();if(this.convexHullPts.length===0){this.minWidth=0.0;this.minWidthPt=null;this.minBaseSeg=null;}else if(this.convexHullPts.length===1){this.minWidth=0.0;this.minWidthPt=this.convexHullPts[0];this.minBaseSeg.p0=this.convexHullPts[0];this.minBaseSeg.p1=this.convexHullPts[0];}else if(this.convexHullPts.length===2||this.convexHullPts.length===3){this.minWidth=0.0;this.minWidthPt=this.convexHullPts[0];this.minBaseSeg.p0=this.convexHullPts[0];this.minBaseSeg.p1=this.convexHullPts[1];}else this.computeConvexRingMinDiameter(this.convexHullPts);},computeConvexRingMinDiameter:function computeConvexRingMinDiameter(pts){this.minWidth=Double.MAX_VALUE;var currMaxIndex=1;var seg=new LineSegment();for(var i=0;i<pts.length-1;i++){seg.p0=pts[i];seg.p1=pts[i+1];currMaxIndex=this.findMaxPerpDistance(pts,seg,currMaxIndex);}},computeMinimumDiameter:function computeMinimumDiameter(){if(this.minWidthPt!==null)return null;if(this.isConvex)this.computeWidthConvex(this.inputGeom);else{var convexGeom=new ConvexHull(this.inputGeom).getConvexHull();this.computeWidthConvex(convexGeom);}},getLength:function getLength(){this.computeMinimumDiameter();return this.minWidth;},findMaxPerpDistance:function findMaxPerpDistance(pts,seg,startIndex){var maxPerpDistance=seg.distancePerpendicular(pts[startIndex]);var nextPerpDistance=maxPerpDistance;var maxIndex=startIndex;var nextIndex=maxIndex;while(nextPerpDistance>=maxPerpDistance){maxPerpDistance=nextPerpDistance;maxIndex=nextIndex;nextIndex=MinimumDiameter.nextIndex(pts,maxIndex);nextPerpDistance=seg.distancePerpendicular(pts[nextIndex]);}if(maxPerpDistance<this.minWidth){this.minPtIndex=maxIndex;this.minWidth=maxPerpDistance;this.minWidthPt=pts[this.minPtIndex];this.minBaseSeg=new LineSegment(seg);}return maxIndex;},getMinimumRectangle:function getMinimumRectangle(){this.computeMinimumDiameter();if(this.minWidth===0.0){if(this.minBaseSeg.p0.equals2D(this.minBaseSeg.p1)){return this.inputGeom.getFactory().createPoint(this.minBaseSeg.p0);}return this.minBaseSeg.toGeometry(this.inputGeom.getFactory());}var dx=this.minBaseSeg.p1.x-this.minBaseSeg.p0.x;var dy=this.minBaseSeg.p1.y-this.minBaseSeg.p0.y;var minPara=Double.MAX_VALUE;var maxPara=-Double.MAX_VALUE;var minPerp=Double.MAX_VALUE;var maxPerp=-Double.MAX_VALUE;for(var i=0;i<this.convexHullPts.length;i++){var paraC=MinimumDiameter.computeC(dx,dy,this.convexHullPts[i]);if(paraC>maxPara)maxPara=paraC;if(paraC<minPara)minPara=paraC;var perpC=MinimumDiameter.computeC(-dy,dx,this.convexHullPts[i]);if(perpC>maxPerp)maxPerp=perpC;if(perpC<minPerp)minPerp=perpC;}var maxPerpLine=MinimumDiameter.computeSegmentForLine(-dx,-dy,maxPerp);var minPerpLine=MinimumDiameter.computeSegmentForLine(-dx,-dy,minPerp);var maxParaLine=MinimumDiameter.computeSegmentForLine(-dy,dx,maxPara);var minParaLine=MinimumDiameter.computeSegmentForLine(-dy,dx,minPara);var p0=maxParaLine.lineIntersection(maxPerpLine);var p1=minParaLine.lineIntersection(maxPerpLine);var p2=minParaLine.lineIntersection(minPerpLine);var p3=maxParaLine.lineIntersection(minPerpLine);var shell=this.inputGeom.getFactory().createLinearRing([p0,p1,p2,p3,p0]);return this.inputGeom.getFactory().createPolygon(shell,null);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return MinimumDiameter;}});MinimumDiameter.nextIndex=function(pts,index){index++;if(index>=pts.length)index=0;return index;};MinimumDiameter.computeC=function(a,b,p){return a*p.y-b*p.x;};MinimumDiameter.getMinimumDiameter=function(geom){return new MinimumDiameter(geom).getDiameter();};MinimumDiameter.getMinimumRectangle=function(geom){return new MinimumDiameter(geom).getMinimumRectangle();};MinimumDiameter.computeSegmentForLine=function(a,b,c){var p0=null;var p1=null;if(Math.abs(b)>Math.abs(a)){p0=new Coordinate(0.0,c/b);p1=new Coordinate(1.0,c/b-a/b);}else{p0=new Coordinate(c/a,0.0);p1=new Coordinate(c/a-b/a,1.0);}return new LineSegment(p0,p1);};var algorithm=Object.freeze({Centroid:Centroid,CGAlgorithms:CGAlgorithms,ConvexHull:ConvexHull,InteriorPointArea:InteriorPointArea,InteriorPointLine:InteriorPointLine,InteriorPointPoint:InteriorPointPoint,RobustLineIntersector:RobustLineIntersector,MCPointInRing:MCPointInRing,MinimumBoundingCircle:MinimumBoundingCircle,MinimumDiameter:MinimumDiameter});function Densifier(){this.inputGeom=null;this.distanceTolerance=null;var inputGeom=arguments[0];this.inputGeom=inputGeom;}extend(Densifier.prototype,{getResultGeometry:function getResultGeometry(){return new DensifyTransformer(this.distanceTolerance).transform(this.inputGeom);},setDistanceTolerance:function setDistanceTolerance(distanceTolerance){if(distanceTolerance<=0.0)throw new IllegalArgumentException(\"Tolerance must be positive\");this.distanceTolerance=distanceTolerance;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Densifier;}});Densifier.densifyPoints=function(pts,distanceTolerance,precModel){var seg=new LineSegment();var coordList=new CoordinateList();for(var i=0;i<pts.length-1;i++){seg.p0=pts[i];seg.p1=pts[i+1];coordList.add(seg.p0,false);var len=seg.getLength();var densifiedSegCount=Math.trunc(len/distanceTolerance)+1;if(densifiedSegCount>1){var densifiedSegLen=len/densifiedSegCount;for(var j=1;j<densifiedSegCount;j++){var segFract=j*densifiedSegLen/len;var p=seg.pointAlong(segFract);precModel.makePrecise(p);coordList.add(p,false);}}}coordList.add(pts[pts.length-1],false);return coordList.toCoordinateArray();};Densifier.densify=function(geom,distanceTolerance){var densifier=new Densifier(geom);densifier.setDistanceTolerance(distanceTolerance);return densifier.getResultGeometry();};function DensifyTransformer(){GeometryTransformer.apply(this);this.distanceTolerance=null;var distanceTolerance=arguments[0];this.distanceTolerance=distanceTolerance;}inherits(DensifyTransformer,GeometryTransformer);extend(DensifyTransformer.prototype,{transformMultiPolygon:function transformMultiPolygon(geom,parent){var roughGeom=GeometryTransformer.prototype.transformMultiPolygon.call(this,geom,parent);return this.createValidArea(roughGeom);},transformPolygon:function transformPolygon(geom,parent){var roughGeom=GeometryTransformer.prototype.transformPolygon.call(this,geom,parent);if(parent instanceof MultiPolygon){return roughGeom;}return this.createValidArea(roughGeom);},transformCoordinates:function transformCoordinates(coords,parent){var inputPts=coords.toCoordinateArray();var newPts=Densifier.densifyPoints(inputPts,this.distanceTolerance,parent.getPrecisionModel());if(parent instanceof LineString&&newPts.length===1){newPts=new Array(0).fill(null);}return this.factory.getCoordinateSequenceFactory().create(newPts);},createValidArea:function createValidArea(roughAreaGeom){return roughAreaGeom.buffer(0.0);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return DensifyTransformer;}});Densifier.DensifyTransformer=DensifyTransformer;var densify=Object.freeze({Densifier:Densifier});function HalfEdge(){this._orig=null;this._sym=null;this._next=null;var orig=arguments[0];this._orig=orig;}extend(HalfEdge.prototype,{find:function find(dest){var oNext=this;do{if(oNext===null)return null;if(oNext.dest().equals2D(dest))return oNext;oNext=oNext.oNext();}while(oNext!==this);return null;},dest:function dest(){return this._sym._orig;},oNext:function oNext(){return this._sym._next;},insert:function insert(e){if(this.oNext()===this){this.insertAfter(e);return null;}var ecmp=this.compareTo(e);var ePrev=this;do{var oNext=ePrev.oNext();var cmp=oNext.compareTo(e);if(cmp!==ecmp||oNext===this){ePrev.insertAfter(e);return null;}ePrev=oNext;}while(ePrev!==this);Assert.shouldNeverReachHere();},insertAfter:function insertAfter(e){Assert.equals(this._orig,e.orig());var save=this.oNext();this._sym.setNext(e);e.sym().setNext(save);},degree:function degree(){var degree=0;var e=this;do{degree++;e=e.oNext();}while(e!==this);return degree;},equals:function equals(){if(arguments.length===2){var p0=arguments[0],p1=arguments[1];return this._orig.equals2D(p0)&&this._sym._orig.equals(p1);}},deltaY:function deltaY(){return this._sym._orig.y-this._orig.y;},sym:function sym(){return this._sym;},prev:function prev(){return this._sym.next()._sym;},compareAngularDirection:function compareAngularDirection(e){var dx=this.deltaX();var dy=this.deltaY();var dx2=e.deltaX();var dy2=e.deltaY();if(dx===dx2&&dy===dy2)return 0;var quadrant=Quadrant.quadrant(dx,dy);var quadrant2=Quadrant.quadrant(dx2,dy2);if(quadrant>quadrant2)return 1;if(quadrant<quadrant2)return-1;return CGAlgorithms.computeOrientation(e._orig,e.dest(),this.dest());},prevNode:function prevNode(){var e=this;while(e.degree()===2){e=e.prev();if(e===this)return null;}return e;},compareTo:function compareTo(obj){var e=obj;var comp=this.compareAngularDirection(e);return comp;},next:function next(){return this._next;},setSym:function setSym(e){this._sym=e;},orig:function orig(){return this._orig;},toString:function toString(){return\"HE(\"+this._orig.x+\" \"+this._orig.y+\", \"+this._sym._orig.x+\" \"+this._sym._orig.y+\")\";},setNext:function setNext(e){this._next=e;},init:function init(e){this.setSym(e);e.setSym(this);this.setNext(e);e.setNext(this);},deltaX:function deltaX(){return this._sym._orig.x-this._orig.x;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return HalfEdge;}});HalfEdge.init=function(e0,e1){if(e0._sym!==null||e1._sym!==null||e0._next!==null||e1._next!==null)throw new IllegalStateException(\"Edges are already initialized\");e0.init(e1);return e0;};HalfEdge.create=function(p0,p1){var e0=new HalfEdge(p0);var e1=new HalfEdge(p1);e0.init(e1);return e0;};function MarkHalfEdge(){this._isMarked=false;var orig=arguments[0];HalfEdge.call(this,orig);}inherits(MarkHalfEdge,HalfEdge);extend(MarkHalfEdge.prototype,{mark:function mark(){this._isMarked=true;},setMark:function setMark(isMarked){this._isMarked=isMarked;},isMarked:function isMarked(){return this._isMarked;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return MarkHalfEdge;}});MarkHalfEdge.setMarkBoth=function(e,isMarked){e.setMark(isMarked);e.sym().setMark(isMarked);};MarkHalfEdge.isMarked=function(e){return e.isMarked();};MarkHalfEdge.setMark=function(e,isMarked){e.setMark(isMarked);};MarkHalfEdge.markBoth=function(e){e.mark();e.sym().mark();};MarkHalfEdge.mark=function(e){e.mark();};function EdgeGraph(){this.vertexMap=new HashMap();}extend(EdgeGraph.prototype,{insert:function insert(orig,dest,eAdj){var e=this.create(orig,dest);if(eAdj!==null){eAdj.insert(e);}else{this.vertexMap.put(orig,e);}var eAdjDest=this.vertexMap.get(dest);if(eAdjDest!==null){eAdjDest.insert(e.sym());}else{this.vertexMap.put(dest,e.sym());}return e;},create:function create(p0,p1){var e0=this.createEdge(p0);var e1=this.createEdge(p1);HalfEdge.init(e0,e1);return e0;},createEdge:function createEdge(orig){return new HalfEdge(orig);},addEdge:function addEdge(orig,dest){if(!EdgeGraph.isValidEdge(orig,dest))return null;var eAdj=this.vertexMap.get(orig);var eSame=null;if(eAdj!==null){eSame=eAdj.find(dest);}if(eSame!==null){return eSame;}var e=this.insert(orig,dest,eAdj);return e;},getVertexEdges:function getVertexEdges(){return this.vertexMap.values();},findEdge:function findEdge(orig,dest){var e=this.vertexMap.get(orig);if(e===null)return null;return e.find(dest);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return EdgeGraph;}});EdgeGraph.isValidEdge=function(orig,dest){var cmp=dest.compareTo(orig);return cmp!==0;};function DissolveHalfEdge(){this._isStart=false;var orig=arguments[0];MarkHalfEdge.call(this,orig);}inherits(DissolveHalfEdge,MarkHalfEdge);extend(DissolveHalfEdge.prototype,{setStart:function setStart(){this._isStart=true;},isStart:function isStart(){return this._isStart;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return DissolveHalfEdge;}});function DissolveEdgeGraph(){EdgeGraph.apply(this);}inherits(DissolveEdgeGraph,EdgeGraph);extend(DissolveEdgeGraph.prototype,{createEdge:function createEdge(p0){return new DissolveHalfEdge(p0);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return DissolveEdgeGraph;}});function LineDissolver(){this.result=null;this.factory=null;this.graph=null;this.lines=new ArrayList();this.nodeEdgeStack=new Stack();this.ringStartEdge=null;this.graph=new DissolveEdgeGraph();}extend(LineDissolver.prototype,{addLine:function addLine(line){this.lines.add(this.factory.createLineString(line.toCoordinateArray()));},updateRingStartEdge:function updateRingStartEdge(e){if(!e.isStart()){e=e.sym();if(!e.isStart())return null;}if(this.ringStartEdge===null){this.ringStartEdge=e;return null;}if(e.orig().compareTo(this.ringStartEdge.orig())<0){this.ringStartEdge=e;}},getResult:function getResult(){if(this.result===null)this.computeResult();return this.result;},process:function process(e){var eNode=e.prevNode();if(eNode===null)eNode=e;this.stackEdges(eNode);this.buildLines();},buildRing:function buildRing(eStartRing){var line=new CoordinateList();var e=eStartRing;line.add(e.orig().copy(),false);while(e.sym().degree()===2){var eNext=e.next();if(eNext===eStartRing)break;line.add(eNext.orig().copy(),false);e=eNext;}line.add(e.dest().copy(),false);this.addLine(line);},buildLine:function buildLine(eStart){var line=new CoordinateList();var e=eStart;this.ringStartEdge=null;MarkHalfEdge.markBoth(e);line.add(e.orig().copy(),false);while(e.sym().degree()===2){this.updateRingStartEdge(e);var eNext=e.next();if(eNext===eStart){this.buildRing(this.ringStartEdge);return null;}line.add(eNext.orig().copy(),false);e=eNext;MarkHalfEdge.markBoth(e);}line.add(e.dest().copy(),false);this.stackEdges(e.sym());this.addLine(line);},stackEdges:function stackEdges(node){var e=node;do{if(!MarkHalfEdge.isMarked(e))this.nodeEdgeStack.add(e);e=e.oNext();}while(e!==node);},computeResult:function computeResult(){var edges=this.graph.getVertexEdges();for(var i=edges.iterator();i.hasNext();){var e=i.next();if(MarkHalfEdge.isMarked(e))continue;this.process(e);}this.result=this.factory.buildGeometry(this.lines);},buildLines:function buildLines(){while(!this.nodeEdgeStack.empty()){var e=this.nodeEdgeStack.pop();if(MarkHalfEdge.isMarked(e))continue;this.buildLine(e);}},add:function add(){if(arguments[0]instanceof Geometry){var _geometry=arguments[0];_geometry.apply({interfaces_:function interfaces_(){return[GeometryComponentFilter];},filter:function filter(component){if(component instanceof LineString){this.add(component);}}});}else if(hasInterface(arguments[0],Collection)){var geometries=arguments[0];for(var i=geometries.iterator();i.hasNext();){var geometry=i.next();this.add(geometry);}}else if(arguments[0]instanceof LineString){var lineString=arguments[0];if(this.factory===null){this.factory=lineString.getFactory();}var seq=lineString.getCoordinateSequence();var doneStart=false;for(var i=1;i<seq.size();i++){var e=this.graph.addEdge(seq.getCoordinate(i-1),seq.getCoordinate(i));if(e===null)continue;if(!doneStart){e.setStart();doneStart=true;}}}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return LineDissolver;}});LineDissolver.dissolve=function(g){var d=new LineDissolver();d.add(g);return d.getResult();};var dissolve=Object.freeze({LineDissolver:LineDissolver});var geomgraph=Object.freeze({GeometryGraph:GeometryGraph});function NodeBase$1(){this.items=new ArrayList();this.subnode=new Array(4).fill(null);}extend(NodeBase$1.prototype,{hasChildren:function hasChildren(){for(var i=0;i<4;i++){if(this.subnode[i]!==null)return true;}return false;},isPrunable:function isPrunable(){return!(this.hasChildren()||this.hasItems());},addAllItems:function addAllItems(resultItems){resultItems.addAll(this.items);for(var i=0;i<4;i++){if(this.subnode[i]!==null){this.subnode[i].addAllItems(resultItems);}}return resultItems;},getNodeCount:function getNodeCount(){var subSize=0;for(var i=0;i<4;i++){if(this.subnode[i]!==null){subSize+=this.subnode[i].size();}}return subSize+1;},size:function size(){var subSize=0;for(var i=0;i<4;i++){if(this.subnode[i]!==null){subSize+=this.subnode[i].size();}}return subSize+this.items.size();},addAllItemsFromOverlapping:function addAllItemsFromOverlapping(searchEnv,resultItems){if(!this.isSearchMatch(searchEnv))return null;resultItems.addAll(this.items);for(var i=0;i<4;i++){if(this.subnode[i]!==null){this.subnode[i].addAllItemsFromOverlapping(searchEnv,resultItems);}}},visitItems:function visitItems(searchEnv,visitor){for(var i=this.items.iterator();i.hasNext();){visitor.visitItem(i.next());}},hasItems:function hasItems(){return!this.items.isEmpty();},remove:function remove(itemEnv,item){if(!this.isSearchMatch(itemEnv))return false;var found=false;for(var i=0;i<4;i++){if(this.subnode[i]!==null){found=this.subnode[i].remove(itemEnv,item);if(found){if(this.subnode[i].isPrunable())this.subnode[i]=null;break;}}}if(found)return found;found=this.items.remove(item);return found;},visit:function visit(searchEnv,visitor){if(!this.isSearchMatch(searchEnv))return null;this.visitItems(searchEnv,visitor);for(var i=0;i<4;i++){if(this.subnode[i]!==null){this.subnode[i].visit(searchEnv,visitor);}}},getItems:function getItems(){return this.items;},depth:function depth(){var maxSubDepth=0;for(var i=0;i<4;i++){if(this.subnode[i]!==null){var sqd=this.subnode[i].depth();if(sqd>maxSubDepth)maxSubDepth=sqd;}}return maxSubDepth+1;},isEmpty:function isEmpty(){var isEmpty=true;if(!this.items.isEmpty())isEmpty=false;for(var i=0;i<4;i++){if(this.subnode[i]!==null){if(!this.subnode[i].isEmpty())isEmpty=false;}}return isEmpty;},add:function add(item){this.items.add(item);},interfaces_:function interfaces_(){return[Serializable];},getClass:function getClass(){return NodeBase$1;}});NodeBase$1.getSubnodeIndex=function(env,centrex,centrey){var subnodeIndex=-1;if(env.getMinX()>=centrex){if(env.getMinY()>=centrey)subnodeIndex=3;if(env.getMaxY()<=centrey)subnodeIndex=1;}if(env.getMaxX()<=centrex){if(env.getMinY()>=centrey)subnodeIndex=2;if(env.getMaxY()<=centrey)subnodeIndex=0;}return subnodeIndex;};function Key$1(){this.pt=new Coordinate();this.level=0;this.env=null;var itemEnv=arguments[0];this.computeKey(itemEnv);}extend(Key$1.prototype,{getLevel:function getLevel(){return this.level;},computeKey:function computeKey(){if(arguments.length===1){var itemEnv=arguments[0];this.level=Key$1.computeQuadLevel(itemEnv);this.env=new Envelope();this.computeKey(this.level,itemEnv);while(!this.env.contains(itemEnv)){this.level+=1;this.computeKey(this.level,itemEnv);}}else if(arguments.length===2){var level=arguments[0],_itemEnv=arguments[1];var quadSize=DoubleBits.powerOf2(level);this.pt.x=Math.floor(_itemEnv.getMinX()/quadSize)*quadSize;this.pt.y=Math.floor(_itemEnv.getMinY()/quadSize)*quadSize;this.env.init(this.pt.x,this.pt.x+quadSize,this.pt.y,this.pt.y+quadSize);}},getEnvelope:function getEnvelope(){return this.env;},getCentre:function getCentre(){return new Coordinate((this.env.getMinX()+this.env.getMaxX())/2,(this.env.getMinY()+this.env.getMaxY())/2);},getPoint:function getPoint(){return this.pt;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Key$1;}});Key$1.computeQuadLevel=function(env){var dx=env.getWidth();var dy=env.getHeight();var dMax=dx>dy?dx:dy;var level=DoubleBits.exponent(dMax)+1;return level;};function Node$2(){NodeBase$1.apply(this);this.env=null;this.centrex=null;this.centrey=null;this.level=null;var env=arguments[0],level=arguments[1];this.env=env;this.level=level;this.centrex=(env.getMinX()+env.getMaxX())/2;this.centrey=(env.getMinY()+env.getMaxY())/2;}inherits(Node$2,NodeBase$1);extend(Node$2.prototype,{find:function find(searchEnv){var subnodeIndex=NodeBase$1.getSubnodeIndex(searchEnv,this.centrex,this.centrey);if(subnodeIndex===-1)return this;if(this.subnode[subnodeIndex]!==null){var node=this.subnode[subnodeIndex];return node.find(searchEnv);}return this;},isSearchMatch:function isSearchMatch(searchEnv){return this.env.intersects(searchEnv);},getSubnode:function getSubnode(index){if(this.subnode[index]===null){this.subnode[index]=this.createSubnode(index);}return this.subnode[index];},getEnvelope:function getEnvelope(){return this.env;},getNode:function getNode(searchEnv){var subnodeIndex=NodeBase$1.getSubnodeIndex(searchEnv,this.centrex,this.centrey);if(subnodeIndex!==-1){var node=this.getSubnode(subnodeIndex);return node.getNode(searchEnv);}else{return this;}},createSubnode:function createSubnode(index){var minx=0.0;var maxx=0.0;var miny=0.0;var maxy=0.0;switch(index){case 0:minx=this.env.getMinX();maxx=this.centrex;miny=this.env.getMinY();maxy=this.centrey;break;case 1:minx=this.centrex;maxx=this.env.getMaxX();miny=this.env.getMinY();maxy=this.centrey;break;case 2:minx=this.env.getMinX();maxx=this.centrex;miny=this.centrey;maxy=this.env.getMaxY();break;case 3:minx=this.centrex;maxx=this.env.getMaxX();miny=this.centrey;maxy=this.env.getMaxY();break;}var sqEnv=new Envelope(minx,maxx,miny,maxy);var node=new Node$2(sqEnv,this.level-1);return node;},insertNode:function insertNode(node){Assert.isTrue(this.env===null||this.env.contains(node.env));var index=NodeBase$1.getSubnodeIndex(node.env,this.centrex,this.centrey);if(node.level===this.level-1){this.subnode[index]=node;}else{var childNode=this.createSubnode(index);childNode.insertNode(node);this.subnode[index]=childNode;}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Node$2;}});Node$2.createNode=function(env){var key=new Key$1(env);var node=new Node$2(key.getEnvelope(),key.getLevel());return node;};Node$2.createExpanded=function(node,addEnv){var expandEnv=new Envelope(addEnv);if(node!==null)expandEnv.expandToInclude(node.env);var largerNode=Node$2.createNode(expandEnv);if(node!==null)largerNode.insertNode(node);return largerNode;};function Root$1(){NodeBase$1.apply(this);}inherits(Root$1,NodeBase$1);extend(Root$1.prototype,{insert:function insert(itemEnv,item){var index=NodeBase$1.getSubnodeIndex(itemEnv,Root$1.origin.x,Root$1.origin.y);if(index===-1){this.add(item);return null;}var node=this.subnode[index];if(node===null||!node.getEnvelope().contains(itemEnv)){var largerNode=Node$2.createExpanded(node,itemEnv);this.subnode[index]=largerNode;}this.insertContained(this.subnode[index],itemEnv,item);},isSearchMatch:function isSearchMatch(searchEnv){return true;},insertContained:function insertContained(tree,itemEnv,item){Assert.isTrue(tree.getEnvelope().contains(itemEnv));var isZeroX=IntervalSize.isZeroWidth(itemEnv.getMinX(),itemEnv.getMaxX());var isZeroY=IntervalSize.isZeroWidth(itemEnv.getMinY(),itemEnv.getMaxY());var node=null;if(isZeroX||isZeroY)node=tree.find(itemEnv);else node=tree.getNode(itemEnv);node.add(item);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Root$1;}});Root$1.origin=new Coordinate(0.0,0.0);function Quadtree(){this.root=null;this.minExtent=1.0;this.root=new Root$1();}extend(Quadtree.prototype,{size:function size(){if(this.root!==null)return this.root.size();return 0;},insert:function insert(itemEnv,item){this.collectStats(itemEnv);var insertEnv=Quadtree.ensureExtent(itemEnv,this.minExtent);this.root.insert(insertEnv,item);},query:function query(){if(arguments.length===1){var searchEnv=arguments[0];var visitor=new ArrayListVisitor();this.query(searchEnv,visitor);return visitor.getItems();}else if(arguments.length===2){var _searchEnv=arguments[0],_visitor=arguments[1];this.root.visit(_searchEnv,_visitor);}},queryAll:function queryAll(){var foundItems=new ArrayList();this.root.addAllItems(foundItems);return foundItems;},remove:function remove(itemEnv,item){var posEnv=Quadtree.ensureExtent(itemEnv,this.minExtent);return this.root.remove(posEnv,item);},collectStats:function collectStats(itemEnv){var delX=itemEnv.getWidth();if(delX<this.minExtent&&delX>0.0)this.minExtent=delX;var delY=itemEnv.getHeight();if(delY<this.minExtent&&delY>0.0)this.minExtent=delY;},depth:function depth(){if(this.root!==null)return this.root.depth();return 0;},isEmpty:function isEmpty(){if(this.root===null)return true;return false;},interfaces_:function interfaces_(){return[SpatialIndex,Serializable];},getClass:function getClass(){return Quadtree;}});Quadtree.ensureExtent=function(itemEnv,minExtent){var minx=itemEnv.getMinX();var maxx=itemEnv.getMaxX();var miny=itemEnv.getMinY();var maxy=itemEnv.getMaxY();if(minx!==maxx&&miny!==maxy)return itemEnv;if(minx===maxx){minx=minx-minExtent/2.0;maxx=minx+minExtent/2.0;}if(miny===maxy){miny=miny-minExtent/2.0;maxy=miny+minExtent/2.0;}return new Envelope(minx,maxx,miny,maxy);};Quadtree.serialVersionUID=-7461163625812743604;var quadtree=Object.freeze({Quadtree:Quadtree});var strtree=Object.freeze({STRtree:STRtree});var index=Object.freeze({quadtree:quadtree,strtree:strtree});var geometryTypes=['Point','MultiPoint','LineString','MultiLineString','Polygon','MultiPolygon'];/**\n * Class for reading and writing Well-Known Text.Create a new parser for GeoJSON\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n *//**\n * Create a new parser for GeoJSON\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of GeoJsonParser.\n * @constructor\n * @private\n */function GeoJSONParser(geometryFactory){this.geometryFactory=geometryFactory||new GeometryFactory();}extend(GeoJSONParser.prototype,{/**\n   * Deserialize a GeoJSON object and return the Geometry or Feature(Collection) with JSTS Geometries\n   *\n   * @param {}\n   *          A GeoJSON object.\n   * @return {} A Geometry instance or object representing a Feature(Collection) with Geometry instances.\n   * @private\n   */read:function read(json){var obj=void 0;if(typeof json==='string'){obj=JSON.parse(json);}else{obj=json;}var type=obj.type;if(!parse$1[type]){throw new Error('Unknown GeoJSON type: '+obj.type);}if(geometryTypes.indexOf(type)!==-1){return parse$1[type].apply(this,[obj.coordinates]);}else if(type==='GeometryCollection'){return parse$1[type].apply(this,[obj.geometries]);}// feature or feature collection\nreturn parse$1[type].apply(this,[obj]);},/**\n   * Serialize a Geometry object into GeoJSON\n   *\n   * @param {Geometry}\n   *          geometry A Geometry or array of Geometries.\n   * @return {Object} A GeoJSON object represting the input Geometry/Geometries.\n   * @private\n   */write:function write(geometry){var type=geometry.getGeometryType();if(!extract$1[type]){throw new Error('Geometry is not supported');}return extract$1[type].apply(this,[geometry]);}});var parse$1={/**\n   * Parse a GeoJSON Feature object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} Feature with geometry/bbox converted to JSTS Geometries.\n   */Feature:function Feature(obj){var feature={};// copy features\nfor(var key in obj){feature[key]=obj[key];}// parse geometry\nif(obj.geometry){var type=obj.geometry.type;if(!parse$1[type]){throw new Error('Unknown GeoJSON type: '+obj.type);}feature.geometry=this.read(obj.geometry);}// bbox\nif(obj.bbox){feature.bbox=parse$1.bbox.apply(this,[obj.bbox]);}return feature;},/**\n   * Parse a GeoJSON FeatureCollection object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} FeatureCollection with geometry/bbox converted to JSTS Geometries.\n   */FeatureCollection:function FeatureCollection(obj){var featureCollection={};if(obj.features){featureCollection.features=[];for(var i=0;i<obj.features.length;++i){featureCollection.features.push(this.read(obj.features[i]));}}if(obj.bbox){featureCollection.bbox=this.parse.bbox.apply(this,[obj.bbox]);}return featureCollection;},/**\n   * Convert the ordinates in an array to an array of Coordinates\n   *\n   * @param {Array}\n   *          array Array with {Number}s.\n   *\n   * @return {Array} Array with Coordinates.\n   */coordinates:function coordinates(array){var coordinates=[];for(var i=0;i<array.length;++i){var sub=array[i];coordinates.push(new Coordinate(sub[0],sub[1]));}return coordinates;},/**\n   * Convert the bbox to a LinearRing\n   *\n   * @param {Array}\n   *          array Array with [xMin, yMin, xMax, yMax].\n   *\n   * @return {Array} Array with Coordinates.\n   */bbox:function bbox(array){return this.geometryFactory.createLinearRing([new Coordinate(array[0],array[1]),new Coordinate(array[2],array[1]),new Coordinate(array[2],array[3]),new Coordinate(array[0],array[3]),new Coordinate(array[0],array[1])]);},/**\n   * Convert an Array with ordinates to a Point\n   *\n   * @param {Array}\n   *          array Array with ordinates.\n   *\n   * @return {Point} Point.\n   */Point:function Point(array){var coordinate=new Coordinate(array[0],array[1]);return this.geometryFactory.createPoint(coordinate);},/**\n   * Convert an Array with coordinates to a MultiPoint\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiPoint} MultiPoint.\n   */MultiPoint:function MultiPoint(array){var points=[];for(var i=0;i<array.length;++i){points.push(parse$1.Point.apply(this,[array[i]]));}return this.geometryFactory.createMultiPoint(points);},/**\n   * Convert an Array with coordinates to a LineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {LineString} LineString.\n   */LineString:function LineString(array){var coordinates=parse$1.coordinates.apply(this,[array]);return this.geometryFactory.createLineString(coordinates);},/**\n   * Convert an Array with coordinates to a MultiLineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiLineString} MultiLineString.\n   */MultiLineString:function MultiLineString(array){var lineStrings=[];for(var i=0;i<array.length;++i){lineStrings.push(parse$1.LineString.apply(this,[array[i]]));}return this.geometryFactory.createMultiLineString(lineStrings);},/**\n   * Convert an Array to a Polygon\n   *\n   * @param {Array}\n   *          array Array with shell and holes.\n   *\n   * @return {Polygon} Polygon.\n   */Polygon:function Polygon(array){var shellCoordinates=parse$1.coordinates.apply(this,[array[0]]);var shell=this.geometryFactory.createLinearRing(shellCoordinates);var holes=[];for(var i=1;i<array.length;++i){var hole=array[i];var coordinates=parse$1.coordinates.apply(this,[hole]);var linearRing=this.geometryFactory.createLinearRing(coordinates);holes.push(linearRing);}return this.geometryFactory.createPolygon(shell,holes);},/**\n   * Convert an Array to a MultiPolygon\n   *\n   * @param {Array}\n   *          array Array of arrays with shell and rings.\n   *\n   * @return {MultiPolygon} MultiPolygon.\n   */MultiPolygon:function MultiPolygon(array){var polygons=[];for(var i=0;i<array.length;++i){var polygon=array[i];polygons.push(parse$1.Polygon.apply(this,[polygon]));}return this.geometryFactory.createMultiPolygon(polygons);},/**\n   * Convert an Array to a GeometryCollection\n   *\n   * @param {Array}\n   *          array Array of GeoJSON geometries.\n   *\n   * @return {GeometryCollection} GeometryCollection.\n   */GeometryCollection:function GeometryCollection(array){var geometries=[];for(var i=0;i<array.length;++i){var geometry=array[i];geometries.push(this.read(geometry));}return this.geometryFactory.createGeometryCollection(geometries);}};var extract$1={/**\n   * Convert a Coordinate to an Array\n   *\n   * @param {Coordinate}\n   *          coordinate Coordinate to convert.\n   *\n   * @return {Array} Array of ordinates.\n   */coordinate:function coordinate(_coordinate){return[_coordinate.x,_coordinate.y];},/**\n   * Convert a Point to a GeoJSON object\n   *\n   * @param {Point}\n   *          point Point to convert.\n   *\n   * @return {Array} Array of 2 ordinates (paired to a coordinate).\n   */Point:function Point(point){var array=extract$1.coordinate.apply(this,[point.getCoordinate()]);return{type:'Point',coordinates:array};},/**\n   * Convert a MultiPoint to a GeoJSON object\n   *\n   * @param {MultiPoint}\n   *          multipoint MultiPoint to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */MultiPoint:function MultiPoint(multipoint){var array=[];for(var i=0;i<multipoint.geometries.length;++i){var point=multipoint.geometries[i];var geoJson=extract$1.Point.apply(this,[point]);array.push(geoJson.coordinates);}return{type:'MultiPoint',coordinates:array};},/**\n   * Convert a LineString to a GeoJSON object\n   *\n   * @param {LineString}\n   *          linestring LineString to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */LineString:function LineString(linestring){var array=[];var coordinates=linestring.getCoordinates();for(var i=0;i<coordinates.length;++i){var coordinate=coordinates[i];array.push(extract$1.coordinate.apply(this,[coordinate]));}return{type:'LineString',coordinates:array};},/**\n   * Convert a MultiLineString to a GeoJSON object\n   *\n   * @param {MultiLineString}\n   *          multilinestring MultiLineString to convert.\n   *\n   * @return {Array} Array of Array of coordinates.\n   */MultiLineString:function MultiLineString(multilinestring){var array=[];for(var i=0;i<multilinestring.geometries.length;++i){var linestring=multilinestring.geometries[i];var geoJson=extract$1.LineString.apply(this,[linestring]);array.push(geoJson.coordinates);}return{type:'MultiLineString',coordinates:array};},/**\n   * Convert a Polygon to a GeoJSON object\n   *\n   * @param {Polygon}\n   *          polygon Polygon to convert.\n   *\n   * @return {Array} Array with shell, holes.\n   */Polygon:function Polygon(polygon){var array=[];var shellGeoJson=extract$1.LineString.apply(this,[polygon.shell]);array.push(shellGeoJson.coordinates);for(var i=0;i<polygon.holes.length;++i){var hole=polygon.holes[i];var holeGeoJson=extract$1.LineString.apply(this,[hole]);array.push(holeGeoJson.coordinates);}return{type:'Polygon',coordinates:array};},/**\n   * Convert a MultiPolygon to a GeoJSON object\n   *\n   * @param {MultiPolygon}\n   *          multipolygon MultiPolygon to convert.\n   *\n   * @return {Array} Array of polygons.\n   */MultiPolygon:function MultiPolygon(multipolygon){var array=[];for(var i=0;i<multipolygon.geometries.length;++i){var polygon=multipolygon.geometries[i];var geoJson=extract$1.Polygon.apply(this,[polygon]);array.push(geoJson.coordinates);}return{type:'MultiPolygon',coordinates:array};},/**\n   * Convert a GeometryCollection to a GeoJSON object\n   *\n   * @param {GeometryCollection}\n   *          collection GeometryCollection to convert.\n   *\n   * @return {Array} Array of geometries.\n   */GeometryCollection:function GeometryCollection(collection){var array=[];for(var i=0;i<collection.geometries.length;++i){var geometry=collection.geometries[i];var type=geometry.getGeometryType();array.push(extract$1[type].apply(this,[geometry]));}return{type:'GeometryCollection',geometries:array};}};/**\n * Converts a geometry in GeoJSON to a {@link Geometry}.\n *//**\n * A <code>GeoJSONReader</code> is parameterized by a <code>GeometryFactory</code>,\n * to allow it to create <code>Geometry</code> objects of the appropriate\n * implementation. In particular, the <code>GeometryFactory</code> determines\n * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */function GeoJSONReader(geometryFactory){this.geometryFactory=geometryFactory||new GeometryFactory();this.precisionModel=this.geometryFactory.getPrecisionModel();this.parser=new GeoJSONParser(this.geometryFactory);}extend(GeoJSONReader.prototype,{/**\n   * Reads a GeoJSON representation of a {@link Geometry}\n   *\n   * Will also parse GeoJSON Features/FeatureCollections as custom objects.\n   *\n   * @param {Object|String} geoJson a GeoJSON Object or String.\n   * @return {Geometry|Object} a <code>Geometry or Feature/FeatureCollection representation.</code>\n   * @memberof GeoJSONReader\n   */read:function read(geoJson){var geometry=this.parser.read(geoJson);if(this.precisionModel.getType()===PrecisionModel.FIXED){this.reducePrecision(geometry);}return geometry;},// NOTE: this is a hack\nreducePrecision:function reducePrecision(geometry){var i,len;if(geometry.coordinate){this.precisionModel.makePrecise(geometry.coordinate);}else if(geometry.points){for(i=0,len=geometry.points.length;i<len;i++){this.precisionModel.makePrecise(geometry.points[i]);}}else if(geometry.geometries){for(i=0,len=geometry.geometries.length;i<len;i++){this.reducePrecision(geometry.geometries[i]);}}}});/**\n * @module GeoJSONWriter\n *//**\n * Writes the GeoJSON representation of a {@link Geometry}. The\n * The GeoJSON format is defined <A\n * HREF=\"http://geojson.org/geojson-spec.html\">here</A>.\n *//**\n * The <code>GeoJSONWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */function GeoJSONWriter(){this.parser=new GeoJSONParser(this.geometryFactory);}extend(GeoJSONWriter.prototype,{/**\n   * Converts a <code>Geometry</code> to its GeoJSON representation.\n   *\n   * @param {Geometry}\n   *          geometry a <code>Geometry</code> to process.\n   * @return {Object} The GeoJSON representation of the Geometry.\n   * @memberof GeoJSONWriter\n   */write:function write(geometry){return this.parser.write(geometry);}});/**\n * Converts a geometry in Well-Known Text format to a {@link Geometry}.\n * <p>\n * <code>WKTReader</code> supports extracting <code>Geometry</code> objects\n * from either {@link Reader}s or {@link String}s. This allows it to function\n * as a parser to read <code>Geometry</code> objects from text blocks embedded\n * in other data formats (e.g. XML).\n *//**\n * A <code>WKTReader</code> is parameterized by a <code>GeometryFactory</code>,\n * to allow it to create <code>Geometry</code> objects of the appropriate\n * implementation. In particular, the <code>GeometryFactory</code> determines\n * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */function WKTReader(geometryFactory){this.geometryFactory=geometryFactory||new GeometryFactory();this.precisionModel=this.geometryFactory.getPrecisionModel();this.parser=new WKTParser(this.geometryFactory);}extend(WKTReader.prototype,{/**\n   * Reads a Well-Known Text representation of a {@link Geometry}\n   *\n   * @param {string}\n   *          wkt a <Geometry Tagged Text> string (see the OpenGIS Simple Features\n   *          Specification).\n   * @return {Geometry} a <code>Geometry</code> read from\n   *         <code>string.</code>\n   * @memberof WKTReader\n   */read:function read(wkt){var geometry=this.parser.read(wkt);// TODO: port and use GeometryPrecisionReducer, this is a hack\nif(this.precisionModel.getType()===PrecisionModel.FIXED){this.reducePrecision(geometry);}return geometry;},reducePrecision:function reducePrecision(geometry){if(geometry.coordinate){this.precisionModel.makePrecise(geometry.coordinate);}else if(geometry.points){for(var i=0,len=geometry.points.coordinates.length;i<len;i++){this.precisionModel.makePrecise(geometry.points.coordinates[i]);}}else if(geometry.geometries){for(var _i=0,_len=geometry.geometries.length;_i<_len;_i++){this.reducePrecision(geometry.geometries[_i]);}}}});/*eslint-disable no-undef */function p2c(p){return[p.x,p.y];}/**\n * OpenLayers 3 Geometry parser and writer\n * @param {GeometryFactory} geometryFactory\n * @param {ol} olReference\n * @constructor\n */function OL3Parser(geometryFactory,olReference){this.geometryFactory=geometryFactory||new GeometryFactory();this.ol=olReference||typeof ol!=='undefined'&&ol;}extend(OL3Parser.prototype,{/**\n   * @param geometry {ol.geom.Geometry}\n   * @return {Geometry}\n   * @memberof OL3Parser\n   */read:function read(geometry){var ol=this.ol;if(geometry instanceof ol.geom.Point){return this.convertFromPoint(geometry);}else if(geometry instanceof ol.geom.LineString){return this.convertFromLineString(geometry);}else if(geometry instanceof ol.geom.LinearRing){return this.convertFromLinearRing(geometry);}else if(geometry instanceof ol.geom.Polygon){return this.convertFromPolygon(geometry);}else if(geometry instanceof ol.geom.MultiPoint){return this.convertFromMultiPoint(geometry);}else if(geometry instanceof ol.geom.MultiLineString){return this.convertFromMultiLineString(geometry);}else if(geometry instanceof ol.geom.MultiPolygon){return this.convertFromMultiPolygon(geometry);}else if(geometry instanceof ol.geom.GeometryCollection){return this.convertFromCollection(geometry);}},convertFromPoint:function convertFromPoint(point){var coordinates=point.getCoordinates();return this.geometryFactory.createPoint(new Coordinate(coordinates[0],coordinates[1]));},convertFromLineString:function convertFromLineString(lineString){return this.geometryFactory.createLineString(lineString.getCoordinates().map(function(coordinates){return new Coordinate(coordinates[0],coordinates[1]);}));},convertFromLinearRing:function convertFromLinearRing(linearRing){return this.geometryFactory.createLinearRing(linearRing.getCoordinates().map(function(coordinates){return new Coordinate(coordinates[0],coordinates[1]);}));},convertFromPolygon:function convertFromPolygon(polygon){var linearRings=polygon.getLinearRings();var shell=null;var holes=[];for(var i=0;i<linearRings.length;i++){var linearRing=this.convertFromLinearRing(linearRings[i]);if(i===0){shell=linearRing;}else{holes.push(linearRing);}}return this.geometryFactory.createPolygon(shell,holes);},convertFromMultiPoint:function convertFromMultiPoint(multiPoint){var points=multiPoint.getPoints().map(function(point){return this.convertFromPoint(point);},this);return this.geometryFactory.createMultiPoint(points);},convertFromMultiLineString:function convertFromMultiLineString(multiLineString){var lineStrings=multiLineString.getLineStrings().map(function(lineString){return this.convertFromLineString(lineString);},this);return this.geometryFactory.createMultiLineString(lineStrings);},convertFromMultiPolygon:function convertFromMultiPolygon(multiPolygon){var polygons=multiPolygon.getPolygons().map(function(polygon){return this.convertFromPolygon(polygon);},this);return this.geometryFactory.createMultiPolygon(polygons);},convertFromCollection:function convertFromCollection(collection){var geometries=collection.getGeometries().map(function(geometry){return this.read(geometry);},this);return this.geometryFactory.createGeometryCollection(geometries);},/**\n   * @param geometry\n   *          {Geometry}\n   * @return {ol.geom.Geometry}\n   * @memberof! OL3Parser\n   */write:function write(geometry){if(geometry.getGeometryType()==='Point'){return this.convertToPoint(geometry.getCoordinate());}else if(geometry.getGeometryType()==='LineString'){return this.convertToLineString(geometry);}else if(geometry.getGeometryType()==='LinearRing'){return this.convertToLinearRing(geometry);}else if(geometry.getGeometryType()==='Polygon'){return this.convertToPolygon(geometry);}else if(geometry.getGeometryType()==='MultiPoint'){return this.convertToMultiPoint(geometry);}else if(geometry.getGeometryType()==='MultiLineString'){return this.convertToMultiLineString(geometry);}else if(geometry.getGeometryType()==='MultiPolygon'){return this.convertToMultiPolygon(geometry);}else if(geometry.getGeometryType()==='GeometryCollection'){return this.convertToCollection(geometry);}},convertToPoint:function convertToPoint(coordinate){return new this.ol.geom.Point([coordinate.x,coordinate.y]);},convertToLineString:function convertToLineString(lineString){var points=lineString.points.coordinates.map(p2c);return new this.ol.geom.LineString(points);},convertToLinearRing:function convertToLinearRing(linearRing){var points=linearRing.points.coordinates.map(p2c);return new this.ol.geom.LinearRing(points);},convertToPolygon:function convertToPolygon(polygon){var rings=[polygon.shell.points.coordinates.map(p2c)];for(var i=0;i<polygon.holes.length;i++){rings.push(polygon.holes[i].points.coordinates.map(p2c));}return new this.ol.geom.Polygon(rings);},convertToMultiPoint:function convertToMultiPoint(multiPoint){return new this.ol.geom.MultiPoint(multiPoint.getCoordinates().map(p2c));},convertToMultiLineString:function convertToMultiLineString(multiLineString){var lineStrings=[];for(var i=0;i<multiLineString.geometries.length;i++){lineStrings.push(this.convertToLineString(multiLineString.geometries[i]).getCoordinates());}return new this.ol.geom.MultiLineString(lineStrings);},convertToMultiPolygon:function convertToMultiPolygon(multiPolygon){var polygons=[];for(var i=0;i<multiPolygon.geometries.length;i++){polygons.push(this.convertToPolygon(multiPolygon.geometries[i]).getCoordinates());}return new this.ol.geom.MultiPolygon(polygons);},convertToCollection:function convertToCollection(geometryCollection){var geometries=[];for(var i=0;i<geometryCollection.geometries.length;i++){var geometry=geometryCollection.geometries[i];geometries.push(this.write(geometry));}return new this.ol.geom.GeometryCollection(geometries);}});var io=Object.freeze({GeoJSONReader:GeoJSONReader,GeoJSONWriter:GeoJSONWriter,OL3Parser:OL3Parser,WKTReader:WKTReader,WKTWriter:WKTWriter});function ScaledNoder(){this.noder=null;this.scaleFactor=null;this.offsetX=null;this.offsetY=null;this.isScaled=false;if(arguments.length===2){var noder=arguments[0],scaleFactor=arguments[1];ScaledNoder.call(this,noder,scaleFactor,0,0);}else if(arguments.length===4){var _noder=arguments[0],_scaleFactor=arguments[1],offsetX=arguments[2],offsetY=arguments[3];this.noder=_noder;this.scaleFactor=_scaleFactor;this.isScaled=!this.isIntegerPrecision();}}extend(ScaledNoder.prototype,{rescale:function rescale(){if(hasInterface(arguments[0],Collection)){var segStrings=arguments[0];for(var i=segStrings.iterator();i.hasNext();){var ss=i.next();this.rescale(ss.getCoordinates());}}else if(arguments[0]instanceof Array){var pts=arguments[0];var p0=null;var p1=null;if(pts.length===2){p0=new Coordinate(pts[0]);p1=new Coordinate(pts[1]);}for(var i=0;i<pts.length;i++){pts[i].x=pts[i].x/this.scaleFactor+this.offsetX;pts[i].y=pts[i].y/this.scaleFactor+this.offsetY;}if(pts.length===2&&pts[0].equals2D(pts[1])){System.out.println(pts);}}},scale:function scale(){if(hasInterface(arguments[0],Collection)){var segStrings=arguments[0];var nodedSegmentStrings=new ArrayList();for(var i=segStrings.iterator();i.hasNext();){var ss=i.next();nodedSegmentStrings.add(new NodedSegmentString(this.scale(ss.getCoordinates()),ss.getData()));}return nodedSegmentStrings;}else if(arguments[0]instanceof Array){var pts=arguments[0];var roundPts=new Array(pts.length).fill(null);for(var i=0;i<pts.length;i++){roundPts[i]=new Coordinate(Math.round((pts[i].x-this.offsetX)*this.scaleFactor),Math.round((pts[i].y-this.offsetY)*this.scaleFactor),pts[i].z);}var roundPtsNoDup=CoordinateArrays.removeRepeatedPoints(roundPts);return roundPtsNoDup;}},isIntegerPrecision:function isIntegerPrecision(){return this.scaleFactor===1.0;},getNodedSubstrings:function getNodedSubstrings(){var splitSS=this.noder.getNodedSubstrings();if(this.isScaled)this.rescale(splitSS);return splitSS;},computeNodes:function computeNodes(inputSegStrings){var intSegStrings=inputSegStrings;if(this.isScaled)intSegStrings=this.scale(inputSegStrings);this.noder.computeNodes(intSegStrings);},interfaces_:function interfaces_(){return[Noder];},getClass:function getClass(){return ScaledNoder;}});var noding=Object.freeze({MCIndexNoder:MCIndexNoder,ScaledNoder:ScaledNoder,SegmentString:SegmentString});function IsSimpleOp(){this.inputGeom=null;this.isClosedEndpointsInInterior=true;this.nonSimpleLocation=null;if(arguments.length===1){var geom=arguments[0];this.inputGeom=geom;}else if(arguments.length===2){var _geom=arguments[0],boundaryNodeRule=arguments[1];this.inputGeom=_geom;this.isClosedEndpointsInInterior=!boundaryNodeRule.isInBoundary(2);}}extend(IsSimpleOp.prototype,{isSimpleMultiPoint:function isSimpleMultiPoint(mp){if(mp.isEmpty())return true;var points=new TreeSet();for(var i=0;i<mp.getNumGeometries();i++){var pt=mp.getGeometryN(i);var p=pt.getCoordinate();if(points.contains(p)){this.nonSimpleLocation=p;return false;}points.add(p);}return true;},isSimplePolygonal:function isSimplePolygonal(geom){var rings=LinearComponentExtracter.getLines(geom);for(var i=rings.iterator();i.hasNext();){var ring=i.next();if(!this.isSimpleLinearGeometry(ring))return false;}return true;},hasClosedEndpointIntersection:function hasClosedEndpointIntersection(graph){var endPoints=new TreeMap();for(var i=graph.getEdgeIterator();i.hasNext();){var e=i.next();var maxSegmentIndex=e.getMaximumSegmentIndex();var isClosed=e.isClosed();var p0=e.getCoordinate(0);this.addEndpoint(endPoints,p0,isClosed);var p1=e.getCoordinate(e.getNumPoints()-1);this.addEndpoint(endPoints,p1,isClosed);}for(var i=endPoints.values().iterator();i.hasNext();){var eiInfo=i.next();if(eiInfo.isClosed&&eiInfo.degree!==2){this.nonSimpleLocation=eiInfo.getCoordinate();return true;}}return false;},getNonSimpleLocation:function getNonSimpleLocation(){return this.nonSimpleLocation;},isSimpleLinearGeometry:function isSimpleLinearGeometry(geom){if(geom.isEmpty())return true;var graph=new GeometryGraph(0,geom);var li=new RobustLineIntersector();var si=graph.computeSelfNodes(li,true);if(!si.hasIntersection())return true;if(si.hasProperIntersection()){this.nonSimpleLocation=si.getProperIntersectionPoint();return false;}if(this.hasNonEndpointIntersection(graph))return false;if(this.isClosedEndpointsInInterior){if(this.hasClosedEndpointIntersection(graph))return false;}return true;},hasNonEndpointIntersection:function hasNonEndpointIntersection(graph){for(var i=graph.getEdgeIterator();i.hasNext();){var e=i.next();var maxSegmentIndex=e.getMaximumSegmentIndex();for(var eiIt=e.getEdgeIntersectionList().iterator();eiIt.hasNext();){var ei=eiIt.next();if(!ei.isEndPoint(maxSegmentIndex)){this.nonSimpleLocation=ei.getCoordinate();return true;}}}return false;},addEndpoint:function addEndpoint(endPoints,p,isClosed){var eiInfo=endPoints.get(p);if(eiInfo===null){eiInfo=new EndpointInfo(p);endPoints.put(p,eiInfo);}eiInfo.addEndpoint(isClosed);},computeSimple:function computeSimple(geom){this.nonSimpleLocation=null;if(geom.isEmpty())return true;if(geom instanceof LineString)return this.isSimpleLinearGeometry(geom);if(geom instanceof MultiLineString)return this.isSimpleLinearGeometry(geom);if(geom instanceof MultiPoint)return this.isSimpleMultiPoint(geom);if(hasInterface(geom,Polygonal))return this.isSimplePolygonal(geom);if(geom instanceof GeometryCollection)return this.isSimpleGeometryCollection(geom);return true;},isSimple:function isSimple(){this.nonSimpleLocation=null;return this.computeSimple(this.inputGeom);},isSimpleGeometryCollection:function isSimpleGeometryCollection(geom){for(var i=0;i<geom.getNumGeometries();i++){var comp=geom.getGeometryN(i);if(!this.computeSimple(comp))return false;}return true;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return IsSimpleOp;}});function EndpointInfo(){this.pt=null;this.isClosed=null;this.degree=null;var pt=arguments[0];this.pt=pt;this.isClosed=false;this.degree=0;}extend(EndpointInfo.prototype,{addEndpoint:function addEndpoint(isClosed){this.degree++;this.isClosed|=isClosed;},getCoordinate:function getCoordinate(){return this.pt;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return EndpointInfo;}});IsSimpleOp.EndpointInfo=EndpointInfo;function BufferParameters(){this.quadrantSegments=BufferParameters.DEFAULT_QUADRANT_SEGMENTS;this.endCapStyle=BufferParameters.CAP_ROUND;this.joinStyle=BufferParameters.JOIN_ROUND;this.mitreLimit=BufferParameters.DEFAULT_MITRE_LIMIT;this._isSingleSided=false;this.simplifyFactor=BufferParameters.DEFAULT_SIMPLIFY_FACTOR;if(arguments.length===0){}else if(arguments.length===1){var quadrantSegments=arguments[0];this.setQuadrantSegments(quadrantSegments);}else if(arguments.length===2){var _quadrantSegments=arguments[0],endCapStyle=arguments[1];this.setQuadrantSegments(_quadrantSegments);this.setEndCapStyle(endCapStyle);}else if(arguments.length===4){var _quadrantSegments2=arguments[0],_endCapStyle=arguments[1],joinStyle=arguments[2],mitreLimit=arguments[3];this.setQuadrantSegments(_quadrantSegments2);this.setEndCapStyle(_endCapStyle);this.setJoinStyle(joinStyle);this.setMitreLimit(mitreLimit);}}extend(BufferParameters.prototype,{getEndCapStyle:function getEndCapStyle(){return this.endCapStyle;},isSingleSided:function isSingleSided(){return this._isSingleSided;},setQuadrantSegments:function setQuadrantSegments(quadSegs){this.quadrantSegments=quadSegs;if(this.quadrantSegments===0)this.joinStyle=BufferParameters.JOIN_BEVEL;if(this.quadrantSegments<0){this.joinStyle=BufferParameters.JOIN_MITRE;this.mitreLimit=Math.abs(this.quadrantSegments);}if(quadSegs<=0){this.quadrantSegments=1;}if(this.joinStyle!==BufferParameters.JOIN_ROUND){this.quadrantSegments=BufferParameters.DEFAULT_QUADRANT_SEGMENTS;}},getJoinStyle:function getJoinStyle(){return this.joinStyle;},setJoinStyle:function setJoinStyle(joinStyle){this.joinStyle=joinStyle;},setSimplifyFactor:function setSimplifyFactor(simplifyFactor){this.simplifyFactor=simplifyFactor<0?0:simplifyFactor;},getSimplifyFactor:function getSimplifyFactor(){return this.simplifyFactor;},getQuadrantSegments:function getQuadrantSegments(){return this.quadrantSegments;},setEndCapStyle:function setEndCapStyle(endCapStyle){this.endCapStyle=endCapStyle;},getMitreLimit:function getMitreLimit(){return this.mitreLimit;},setMitreLimit:function setMitreLimit(mitreLimit){this.mitreLimit=mitreLimit;},setSingleSided:function setSingleSided(isSingleSided){this._isSingleSided=isSingleSided;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return BufferParameters;}});BufferParameters.bufferDistanceError=function(quadSegs){var alpha=Math.PI/2.0/quadSegs;return 1-Math.cos(alpha/2.0);};BufferParameters.CAP_ROUND=1;BufferParameters.CAP_FLAT=2;BufferParameters.CAP_SQUARE=3;BufferParameters.JOIN_ROUND=1;BufferParameters.JOIN_MITRE=2;BufferParameters.JOIN_BEVEL=3;BufferParameters.DEFAULT_QUADRANT_SEGMENTS=8;BufferParameters.DEFAULT_MITRE_LIMIT=5.0;BufferParameters.DEFAULT_SIMPLIFY_FACTOR=0.01;function RightmostEdgeFinder(){this.minIndex=-1;this.minCoord=null;this.minDe=null;this.orientedDe=null;}extend(RightmostEdgeFinder.prototype,{getCoordinate:function getCoordinate(){return this.minCoord;},getRightmostSide:function getRightmostSide(de,index){var side=this.getRightmostSideOfSegment(de,index);if(side<0)side=this.getRightmostSideOfSegment(de,index-1);if(side<0){this.minCoord=null;this.checkForRightmostCoordinate(de);}return side;},findRightmostEdgeAtVertex:function findRightmostEdgeAtVertex(){var pts=this.minDe.getEdge().getCoordinates();Assert.isTrue(this.minIndex>0&&this.minIndex<pts.length,\"rightmost point expected to be interior vertex of edge\");var pPrev=pts[this.minIndex-1];var pNext=pts[this.minIndex+1];var orientation=CGAlgorithms.computeOrientation(this.minCoord,pNext,pPrev);var usePrev=false;if(pPrev.y<this.minCoord.y&&pNext.y<this.minCoord.y&&orientation===CGAlgorithms.COUNTERCLOCKWISE){usePrev=true;}else if(pPrev.y>this.minCoord.y&&pNext.y>this.minCoord.y&&orientation===CGAlgorithms.CLOCKWISE){usePrev=true;}if(usePrev){this.minIndex=this.minIndex-1;}},getRightmostSideOfSegment:function getRightmostSideOfSegment(de,i){var e=de.getEdge();var coord=e.getCoordinates();if(i<0||i+1>=coord.length)return-1;if(coord[i].y===coord[i+1].y)return-1;var pos=Position.LEFT;if(coord[i].y<coord[i+1].y)pos=Position.RIGHT;return pos;},getEdge:function getEdge(){return this.orientedDe;},checkForRightmostCoordinate:function checkForRightmostCoordinate(de){var coord=de.getEdge().getCoordinates();for(var i=0;i<coord.length-1;i++){if(this.minCoord===null||coord[i].x>this.minCoord.x){this.minDe=de;this.minIndex=i;this.minCoord=coord[i];}}},findRightmostEdgeAtNode:function findRightmostEdgeAtNode(){var node=this.minDe.getNode();var star=node.getEdges();this.minDe=star.getRightmostEdge();if(!this.minDe.isForward()){this.minDe=this.minDe.getSym();this.minIndex=this.minDe.getEdge().getCoordinates().length-1;}},findEdge:function findEdge(dirEdgeList){for(var i=dirEdgeList.iterator();i.hasNext();){var de=i.next();if(!de.isForward())continue;this.checkForRightmostCoordinate(de);}Assert.isTrue(this.minIndex!==0||this.minCoord.equals(this.minDe.getCoordinate()),\"inconsistency in rightmost processing\");if(this.minIndex===0){this.findRightmostEdgeAtNode();}else{this.findRightmostEdgeAtVertex();}this.orientedDe=this.minDe;var rightmostSide=this.getRightmostSide(this.minDe,this.minIndex);if(rightmostSide===Position.LEFT){this.orientedDe=this.minDe.getSym();}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return RightmostEdgeFinder;}});function LinkedList(){this.array_=[];}LinkedList.prototype.addLast=function(e){this.array_.push(e);};LinkedList.prototype.removeFirst=function(){return this.array_.shift();};LinkedList.prototype.isEmpty=function(){return this.array_.length===0;};function BufferSubgraph(){this.finder=null;this.dirEdgeList=new ArrayList();this.nodes=new ArrayList();this.rightMostCoord=null;this.env=null;this.finder=new RightmostEdgeFinder();}extend(BufferSubgraph.prototype,{clearVisitedEdges:function clearVisitedEdges(){for(var it=this.dirEdgeList.iterator();it.hasNext();){var de=it.next();de.setVisited(false);}},getRightmostCoordinate:function getRightmostCoordinate(){return this.rightMostCoord;},computeNodeDepth:function computeNodeDepth(n){var startEdge=null;for(var i=n.getEdges().iterator();i.hasNext();){var de=i.next();if(de.isVisited()||de.getSym().isVisited()){startEdge=de;break;}}if(startEdge===null)throw new TopologyException(\"unable to find edge to compute depths at \"+n.getCoordinate());n.getEdges().computeDepths(startEdge);for(var i=n.getEdges().iterator();i.hasNext();){var de=i.next();de.setVisited(true);this.copySymDepths(de);}},computeDepth:function computeDepth(outsideDepth){this.clearVisitedEdges();var de=this.finder.getEdge();var n=de.getNode();var label=de.getLabel();de.setEdgeDepths(Position.RIGHT,outsideDepth);this.copySymDepths(de);this.computeDepths(de);},create:function create(node){this.addReachable(node);this.finder.findEdge(this.dirEdgeList);this.rightMostCoord=this.finder.getCoordinate();},findResultEdges:function findResultEdges(){for(var it=this.dirEdgeList.iterator();it.hasNext();){var de=it.next();if(de.getDepth(Position.RIGHT)>=1&&de.getDepth(Position.LEFT)<=0&&!de.isInteriorAreaEdge()){de.setInResult(true);}}},computeDepths:function computeDepths(startEdge){var nodesVisited=new HashSet();var nodeQueue=new LinkedList();var startNode=startEdge.getNode();nodeQueue.addLast(startNode);nodesVisited.add(startNode);startEdge.setVisited(true);while(!nodeQueue.isEmpty()){var n=nodeQueue.removeFirst();nodesVisited.add(n);this.computeNodeDepth(n);for(var i=n.getEdges().iterator();i.hasNext();){var de=i.next();var sym=de.getSym();if(sym.isVisited())continue;var adjNode=sym.getNode();if(!nodesVisited.contains(adjNode)){nodeQueue.addLast(adjNode);nodesVisited.add(adjNode);}}}},compareTo:function compareTo(o){var graph=o;if(this.rightMostCoord.x<graph.rightMostCoord.x){return-1;}if(this.rightMostCoord.x>graph.rightMostCoord.x){return 1;}return 0;},getEnvelope:function getEnvelope(){if(this.env===null){var edgeEnv=new Envelope();for(var it=this.dirEdgeList.iterator();it.hasNext();){var dirEdge=it.next();var pts=dirEdge.getEdge().getCoordinates();for(var i=0;i<pts.length-1;i++){edgeEnv.expandToInclude(pts[i]);}}this.env=edgeEnv;}return this.env;},addReachable:function addReachable(startNode){var nodeStack=new Stack();nodeStack.add(startNode);while(!nodeStack.empty()){var node=nodeStack.pop();this.add(node,nodeStack);}},copySymDepths:function copySymDepths(de){var sym=de.getSym();sym.setDepth(Position.LEFT,de.getDepth(Position.RIGHT));sym.setDepth(Position.RIGHT,de.getDepth(Position.LEFT));},add:function add(node,nodeStack){node.setVisited(true);this.nodes.add(node);for(var i=node.getEdges().iterator();i.hasNext();){var de=i.next();this.dirEdgeList.add(de);var sym=de.getSym();var symNode=sym.getNode();if(!symNode.isVisited())nodeStack.push(symNode);}},getNodes:function getNodes(){return this.nodes;},getDirectedEdges:function getDirectedEdges(){return this.dirEdgeList;},interfaces_:function interfaces_(){return[Comparable];},getClass:function getClass(){return BufferSubgraph;}});function BufferInputLineSimplifier(){this.inputLine=null;this.distanceTol=null;this.isDeleted=null;this.angleOrientation=CGAlgorithms.COUNTERCLOCKWISE;var inputLine=arguments[0];this.inputLine=inputLine;}extend(BufferInputLineSimplifier.prototype,{isDeletable:function isDeletable(i0,i1,i2,distanceTol){var p0=this.inputLine[i0];var p1=this.inputLine[i1];var p2=this.inputLine[i2];if(!this.isConcave(p0,p1,p2))return false;if(!this.isShallow(p0,p1,p2,distanceTol))return false;return this.isShallowSampled(p0,p1,i0,i2,distanceTol);},deleteShallowConcavities:function deleteShallowConcavities(){var index=1;var maxIndex=this.inputLine.length-1;var midIndex=this.findNextNonDeletedIndex(index);var lastIndex=this.findNextNonDeletedIndex(midIndex);var isChanged=false;while(lastIndex<this.inputLine.length){var isMiddleVertexDeleted=false;if(this.isDeletable(index,midIndex,lastIndex,this.distanceTol)){this.isDeleted[midIndex]=BufferInputLineSimplifier.DELETE;isMiddleVertexDeleted=true;isChanged=true;}if(isMiddleVertexDeleted)index=lastIndex;else index=midIndex;midIndex=this.findNextNonDeletedIndex(index);lastIndex=this.findNextNonDeletedIndex(midIndex);}return isChanged;},isShallowConcavity:function isShallowConcavity(p0,p1,p2,distanceTol){var orientation=CGAlgorithms.computeOrientation(p0,p1,p2);var isAngleToSimplify=orientation===this.angleOrientation;if(!isAngleToSimplify)return false;var dist=CGAlgorithms.distancePointLine(p1,p0,p2);return dist<distanceTol;},isShallowSampled:function isShallowSampled(p0,p2,i0,i2,distanceTol){var inc=Math.trunc((i2-i0)/BufferInputLineSimplifier.NUM_PTS_TO_CHECK);if(inc<=0)inc=1;for(var i=i0;i<i2;i+=inc){if(!this.isShallow(p0,p2,this.inputLine[i],distanceTol))return false;}return true;},isConcave:function isConcave(p0,p1,p2){var orientation=CGAlgorithms.computeOrientation(p0,p1,p2);var isConcave=orientation===this.angleOrientation;return isConcave;},simplify:function simplify(distanceTol){this.distanceTol=Math.abs(distanceTol);if(distanceTol<0)this.angleOrientation=CGAlgorithms.CLOCKWISE;this.isDeleted=new Array(this.inputLine.length).fill(null);var isChanged=false;do{isChanged=this.deleteShallowConcavities();}while(isChanged);return this.collapseLine();},findNextNonDeletedIndex:function findNextNonDeletedIndex(index){var next=index+1;while(next<this.inputLine.length&&this.isDeleted[next]===BufferInputLineSimplifier.DELETE){next++;}return next;},isShallow:function isShallow(p0,p1,p2,distanceTol){var dist=CGAlgorithms.distancePointLine(p1,p0,p2);return dist<distanceTol;},collapseLine:function collapseLine(){var coordList=new CoordinateList();for(var i=0;i<this.inputLine.length;i++){if(this.isDeleted[i]!==BufferInputLineSimplifier.DELETE)coordList.add(this.inputLine[i]);}return coordList.toCoordinateArray();},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return BufferInputLineSimplifier;}});BufferInputLineSimplifier.simplify=function(inputLine,distanceTol){var simp=new BufferInputLineSimplifier(inputLine);return simp.simplify(distanceTol);};BufferInputLineSimplifier.INIT=0;BufferInputLineSimplifier.DELETE=1;BufferInputLineSimplifier.KEEP=1;BufferInputLineSimplifier.NUM_PTS_TO_CHECK=10;function OffsetSegmentString(){this.ptList=null;this.precisionModel=null;this.minimimVertexDistance=0.0;this.ptList=new ArrayList();}extend(OffsetSegmentString.prototype,{getCoordinates:function getCoordinates(){var coord=this.ptList.toArray(OffsetSegmentString.COORDINATE_ARRAY_TYPE);return coord;},setPrecisionModel:function setPrecisionModel(precisionModel){this.precisionModel=precisionModel;},addPt:function addPt(pt){var bufPt=new Coordinate(pt);this.precisionModel.makePrecise(bufPt);if(this.isRedundant(bufPt))return null;this.ptList.add(bufPt);},reverse:function reverse(){},addPts:function addPts(pt,isForward){if(isForward){for(var i=0;i<pt.length;i++){this.addPt(pt[i]);}}else{for(var i=pt.length-1;i>=0;i--){this.addPt(pt[i]);}}},isRedundant:function isRedundant(pt){if(this.ptList.size()<1)return false;var lastPt=this.ptList.get(this.ptList.size()-1);var ptDist=pt.distance(lastPt);if(ptDist<this.minimimVertexDistance)return true;return false;},toString:function toString(){var fact=new GeometryFactory();var line=fact.createLineString(this.getCoordinates());return line.toString();},closeRing:function closeRing(){if(this.ptList.size()<1)return null;var startPt=new Coordinate(this.ptList.get(0));var lastPt=this.ptList.get(this.ptList.size()-1);var last2Pt=null;if(this.ptList.size()>=2)last2Pt=this.ptList.get(this.ptList.size()-2);if(startPt.equals(lastPt))return null;this.ptList.add(startPt);},setMinimumVertexDistance:function setMinimumVertexDistance(minimimVertexDistance){this.minimimVertexDistance=minimimVertexDistance;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return OffsetSegmentString;}});OffsetSegmentString.COORDINATE_ARRAY_TYPE=new Array(0).fill(null);function OffsetSegmentGenerator(){this.maxCurveSegmentError=0.0;this.filletAngleQuantum=null;this.closingSegLengthFactor=1;this.segList=null;this.distance=0.0;this.precisionModel=null;this.bufParams=null;this.li=null;this.s0=null;this.s1=null;this.s2=null;this.seg0=new LineSegment();this.seg1=new LineSegment();this.offset0=new LineSegment();this.offset1=new LineSegment();this.side=0;this._hasNarrowConcaveAngle=false;var precisionModel=arguments[0],bufParams=arguments[1],distance=arguments[2];this.precisionModel=precisionModel;this.bufParams=bufParams;this.li=new RobustLineIntersector();this.filletAngleQuantum=Math.PI/2.0/bufParams.getQuadrantSegments();if(bufParams.getQuadrantSegments()>=8&&bufParams.getJoinStyle()===BufferParameters.JOIN_ROUND)this.closingSegLengthFactor=OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR;this.init(distance);}extend(OffsetSegmentGenerator.prototype,{addNextSegment:function addNextSegment(p,addStartPoint){this.s0=this.s1;this.s1=this.s2;this.s2=p;this.seg0.setCoordinates(this.s0,this.s1);this.computeOffsetSegment(this.seg0,this.side,this.distance,this.offset0);this.seg1.setCoordinates(this.s1,this.s2);this.computeOffsetSegment(this.seg1,this.side,this.distance,this.offset1);if(this.s1.equals(this.s2))return null;var orientation=CGAlgorithms.computeOrientation(this.s0,this.s1,this.s2);var outsideTurn=orientation===CGAlgorithms.CLOCKWISE&&this.side===Position.LEFT||orientation===CGAlgorithms.COUNTERCLOCKWISE&&this.side===Position.RIGHT;if(orientation===0){this.addCollinear(addStartPoint);}else if(outsideTurn){this.addOutsideTurn(orientation,addStartPoint);}else{this.addInsideTurn(orientation,addStartPoint);}},addLineEndCap:function addLineEndCap(p0,p1){var seg=new LineSegment(p0,p1);var offsetL=new LineSegment();this.computeOffsetSegment(seg,Position.LEFT,this.distance,offsetL);var offsetR=new LineSegment();this.computeOffsetSegment(seg,Position.RIGHT,this.distance,offsetR);var dx=p1.x-p0.x;var dy=p1.y-p0.y;var angle=Math.atan2(dy,dx);switch(this.bufParams.getEndCapStyle()){case BufferParameters.CAP_ROUND:this.segList.addPt(offsetL.p1);this.addFilletArc(p1,angle+Math.PI/2,angle-Math.PI/2,CGAlgorithms.CLOCKWISE,this.distance);this.segList.addPt(offsetR.p1);break;case BufferParameters.CAP_FLAT:this.segList.addPt(offsetL.p1);this.segList.addPt(offsetR.p1);break;case BufferParameters.CAP_SQUARE:var squareCapSideOffset=new Coordinate();squareCapSideOffset.x=Math.abs(this.distance)*Math.cos(angle);squareCapSideOffset.y=Math.abs(this.distance)*Math.sin(angle);var squareCapLOffset=new Coordinate(offsetL.p1.x+squareCapSideOffset.x,offsetL.p1.y+squareCapSideOffset.y);var squareCapROffset=new Coordinate(offsetR.p1.x+squareCapSideOffset.x,offsetR.p1.y+squareCapSideOffset.y);this.segList.addPt(squareCapLOffset);this.segList.addPt(squareCapROffset);break;}},getCoordinates:function getCoordinates(){var pts=this.segList.getCoordinates();return pts;},addMitreJoin:function addMitreJoin(p,offset0,offset1,distance){var isMitreWithinLimit=true;var intPt=null;try{intPt=HCoordinate.intersection(offset0.p0,offset0.p1,offset1.p0,offset1.p1);var mitreRatio=distance<=0.0?1.0:intPt.distance(p)/Math.abs(distance);if(mitreRatio>this.bufParams.getMitreLimit())isMitreWithinLimit=false;}catch(ex){if(ex instanceof NotRepresentableException){intPt=new Coordinate(0,0);isMitreWithinLimit=false;}else throw ex;}finally{}if(isMitreWithinLimit){this.segList.addPt(intPt);}else{this.addLimitedMitreJoin(offset0,offset1,distance,this.bufParams.getMitreLimit());}},addFilletCorner:function addFilletCorner(p,p0,p1,direction,radius){var dx0=p0.x-p.x;var dy0=p0.y-p.y;var startAngle=Math.atan2(dy0,dx0);var dx1=p1.x-p.x;var dy1=p1.y-p.y;var endAngle=Math.atan2(dy1,dx1);if(direction===CGAlgorithms.CLOCKWISE){if(startAngle<=endAngle)startAngle+=2.0*Math.PI;}else{if(startAngle>=endAngle)startAngle-=2.0*Math.PI;}this.segList.addPt(p0);this.addFilletArc(p,startAngle,endAngle,direction,radius);this.segList.addPt(p1);},addOutsideTurn:function addOutsideTurn(orientation,addStartPoint){if(this.offset0.p1.distance(this.offset1.p0)<this.distance*OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR){this.segList.addPt(this.offset0.p1);return null;}if(this.bufParams.getJoinStyle()===BufferParameters.JOIN_MITRE){this.addMitreJoin(this.s1,this.offset0,this.offset1,this.distance);}else if(this.bufParams.getJoinStyle()===BufferParameters.JOIN_BEVEL){this.addBevelJoin(this.offset0,this.offset1);}else{if(addStartPoint)this.segList.addPt(this.offset0.p1);this.addFilletCorner(this.s1,this.offset0.p1,this.offset1.p0,orientation,this.distance);this.segList.addPt(this.offset1.p0);}},createSquare:function createSquare(p){this.segList.addPt(new Coordinate(p.x+this.distance,p.y+this.distance));this.segList.addPt(new Coordinate(p.x+this.distance,p.y-this.distance));this.segList.addPt(new Coordinate(p.x-this.distance,p.y-this.distance));this.segList.addPt(new Coordinate(p.x-this.distance,p.y+this.distance));this.segList.closeRing();},addSegments:function addSegments(pt,isForward){this.segList.addPts(pt,isForward);},addFirstSegment:function addFirstSegment(){this.segList.addPt(this.offset1.p0);},addLastSegment:function addLastSegment(){this.segList.addPt(this.offset1.p1);},initSideSegments:function initSideSegments(s1,s2,side){this.s1=s1;this.s2=s2;this.side=side;this.seg1.setCoordinates(s1,s2);this.computeOffsetSegment(this.seg1,side,this.distance,this.offset1);},addLimitedMitreJoin:function addLimitedMitreJoin(offset0,offset1,distance,mitreLimit){var basePt=this.seg0.p1;var ang0=Angle.angle(basePt,this.seg0.p0);var ang1=Angle.angle(basePt,this.seg1.p1);var angDiff=Angle.angleBetweenOriented(this.seg0.p0,basePt,this.seg1.p1);var angDiffHalf=angDiff/2;var midAng=Angle.normalize(ang0+angDiffHalf);var mitreMidAng=Angle.normalize(midAng+Math.PI);var mitreDist=mitreLimit*distance;var bevelDelta=mitreDist*Math.abs(Math.sin(angDiffHalf));var bevelHalfLen=distance-bevelDelta;var bevelMidX=basePt.x+mitreDist*Math.cos(mitreMidAng);var bevelMidY=basePt.y+mitreDist*Math.sin(mitreMidAng);var bevelMidPt=new Coordinate(bevelMidX,bevelMidY);var mitreMidLine=new LineSegment(basePt,bevelMidPt);var bevelEndLeft=mitreMidLine.pointAlongOffset(1.0,bevelHalfLen);var bevelEndRight=mitreMidLine.pointAlongOffset(1.0,-bevelHalfLen);if(this.side===Position.LEFT){this.segList.addPt(bevelEndLeft);this.segList.addPt(bevelEndRight);}else{this.segList.addPt(bevelEndRight);this.segList.addPt(bevelEndLeft);}},computeOffsetSegment:function computeOffsetSegment(seg,side,distance,offset){var sideSign=side===Position.LEFT?1:-1;var dx=seg.p1.x-seg.p0.x;var dy=seg.p1.y-seg.p0.y;var len=Math.sqrt(dx*dx+dy*dy);var ux=sideSign*distance*dx/len;var uy=sideSign*distance*dy/len;offset.p0.x=seg.p0.x-uy;offset.p0.y=seg.p0.y+ux;offset.p1.x=seg.p1.x-uy;offset.p1.y=seg.p1.y+ux;},addFilletArc:function addFilletArc(p,startAngle,endAngle,direction,radius){var directionFactor=direction===CGAlgorithms.CLOCKWISE?-1:1;var totalAngle=Math.abs(startAngle-endAngle);var nSegs=Math.trunc(totalAngle/this.filletAngleQuantum+0.5);if(nSegs<1)return null;var initAngle=null,currAngleInc=null;initAngle=0.0;currAngleInc=totalAngle/nSegs;var currAngle=initAngle;var pt=new Coordinate();while(currAngle<totalAngle){var angle=startAngle+directionFactor*currAngle;pt.x=p.x+radius*Math.cos(angle);pt.y=p.y+radius*Math.sin(angle);this.segList.addPt(pt);currAngle+=currAngleInc;}},addInsideTurn:function addInsideTurn(orientation,addStartPoint){this.li.computeIntersection(this.offset0.p0,this.offset0.p1,this.offset1.p0,this.offset1.p1);if(this.li.hasIntersection()){this.segList.addPt(this.li.getIntersection(0));}else{this._hasNarrowConcaveAngle=true;if(this.offset0.p1.distance(this.offset1.p0)<this.distance*OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR){this.segList.addPt(this.offset0.p1);}else{this.segList.addPt(this.offset0.p1);if(this.closingSegLengthFactor>0){var mid0=new Coordinate((this.closingSegLengthFactor*this.offset0.p1.x+this.s1.x)/(this.closingSegLengthFactor+1),(this.closingSegLengthFactor*this.offset0.p1.y+this.s1.y)/(this.closingSegLengthFactor+1));this.segList.addPt(mid0);var mid1=new Coordinate((this.closingSegLengthFactor*this.offset1.p0.x+this.s1.x)/(this.closingSegLengthFactor+1),(this.closingSegLengthFactor*this.offset1.p0.y+this.s1.y)/(this.closingSegLengthFactor+1));this.segList.addPt(mid1);}else{this.segList.addPt(this.s1);}this.segList.addPt(this.offset1.p0);}}},createCircle:function createCircle(p){var pt=new Coordinate(p.x+this.distance,p.y);this.segList.addPt(pt);this.addFilletArc(p,0.0,2.0*Math.PI,-1,this.distance);this.segList.closeRing();},addBevelJoin:function addBevelJoin(offset0,offset1){this.segList.addPt(offset0.p1);this.segList.addPt(offset1.p0);},init:function init(distance){this.distance=distance;this.maxCurveSegmentError=distance*(1-Math.cos(this.filletAngleQuantum/2.0));this.segList=new OffsetSegmentString();this.segList.setPrecisionModel(this.precisionModel);this.segList.setMinimumVertexDistance(distance*OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR);},addCollinear:function addCollinear(addStartPoint){this.li.computeIntersection(this.s0,this.s1,this.s1,this.s2);var numInt=this.li.getIntersectionNum();if(numInt>=2){if(this.bufParams.getJoinStyle()===BufferParameters.JOIN_BEVEL||this.bufParams.getJoinStyle()===BufferParameters.JOIN_MITRE){if(addStartPoint)this.segList.addPt(this.offset0.p1);this.segList.addPt(this.offset1.p0);}else{this.addFilletCorner(this.s1,this.offset0.p1,this.offset1.p0,CGAlgorithms.CLOCKWISE,this.distance);}}},closeRing:function closeRing(){this.segList.closeRing();},hasNarrowConcaveAngle:function hasNarrowConcaveAngle(){return this._hasNarrowConcaveAngle;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return OffsetSegmentGenerator;}});OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR=1.0E-3;OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR=1.0E-3;OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR=1.0E-6;OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR=80;function OffsetCurveBuilder(){this.distance=0.0;this.precisionModel=null;this.bufParams=null;var precisionModel=arguments[0],bufParams=arguments[1];this.precisionModel=precisionModel;this.bufParams=bufParams;}extend(OffsetCurveBuilder.prototype,{getOffsetCurve:function getOffsetCurve(inputPts,distance){this.distance=distance;if(distance===0.0)return null;var isRightSide=distance<0.0;var posDistance=Math.abs(distance);var segGen=this.getSegGen(posDistance);if(inputPts.length<=1){this.computePointCurve(inputPts[0],segGen);}else{this.computeOffsetCurve(inputPts,isRightSide,segGen);}var curvePts=segGen.getCoordinates();if(isRightSide)CoordinateArrays.reverse(curvePts);return curvePts;},computeSingleSidedBufferCurve:function computeSingleSidedBufferCurve(inputPts,isRightSide,segGen){var distTol=this.simplifyTolerance(this.distance);if(isRightSide){segGen.addSegments(inputPts,true);var simp2=BufferInputLineSimplifier.simplify(inputPts,-distTol);var n2=simp2.length-1;segGen.initSideSegments(simp2[n2],simp2[n2-1],Position.LEFT);segGen.addFirstSegment();for(var i=n2-2;i>=0;i--){segGen.addNextSegment(simp2[i],true);}}else{segGen.addSegments(inputPts,false);var simp1=BufferInputLineSimplifier.simplify(inputPts,distTol);var n1=simp1.length-1;segGen.initSideSegments(simp1[0],simp1[1],Position.LEFT);segGen.addFirstSegment();for(var i=2;i<=n1;i++){segGen.addNextSegment(simp1[i],true);}}segGen.addLastSegment();segGen.closeRing();},computeRingBufferCurve:function computeRingBufferCurve(inputPts,side,segGen){var distTol=this.simplifyTolerance(this.distance);if(side===Position.RIGHT)distTol=-distTol;var simp=BufferInputLineSimplifier.simplify(inputPts,distTol);var n=simp.length-1;segGen.initSideSegments(simp[n-1],simp[0],side);for(var i=1;i<=n;i++){var addStartPoint=i!==1;segGen.addNextSegment(simp[i],addStartPoint);}segGen.closeRing();},computeLineBufferCurve:function computeLineBufferCurve(inputPts,segGen){var distTol=this.simplifyTolerance(this.distance);var simp1=BufferInputLineSimplifier.simplify(inputPts,distTol);var n1=simp1.length-1;segGen.initSideSegments(simp1[0],simp1[1],Position.LEFT);for(var i=2;i<=n1;i++){segGen.addNextSegment(simp1[i],true);}segGen.addLastSegment();segGen.addLineEndCap(simp1[n1-1],simp1[n1]);var simp2=BufferInputLineSimplifier.simplify(inputPts,-distTol);var n2=simp2.length-1;segGen.initSideSegments(simp2[n2],simp2[n2-1],Position.LEFT);for(var i=n2-2;i>=0;i--){segGen.addNextSegment(simp2[i],true);}segGen.addLastSegment();segGen.addLineEndCap(simp2[1],simp2[0]);segGen.closeRing();},computePointCurve:function computePointCurve(pt,segGen){switch(this.bufParams.getEndCapStyle()){case BufferParameters.CAP_ROUND:segGen.createCircle(pt);break;case BufferParameters.CAP_SQUARE:segGen.createSquare(pt);break;}},getLineCurve:function getLineCurve(inputPts,distance){this.distance=distance;if(distance<0.0&&!this.bufParams.isSingleSided())return null;if(distance===0.0)return null;var posDistance=Math.abs(distance);var segGen=this.getSegGen(posDistance);if(inputPts.length<=1){this.computePointCurve(inputPts[0],segGen);}else{if(this.bufParams.isSingleSided()){var isRightSide=distance<0.0;this.computeSingleSidedBufferCurve(inputPts,isRightSide,segGen);}else this.computeLineBufferCurve(inputPts,segGen);}var lineCoord=segGen.getCoordinates();return lineCoord;},getBufferParameters:function getBufferParameters(){return this.bufParams;},simplifyTolerance:function simplifyTolerance(bufDistance){return bufDistance*this.bufParams.getSimplifyFactor();},getRingCurve:function getRingCurve(inputPts,side,distance){this.distance=distance;if(inputPts.length<=2)return this.getLineCurve(inputPts,distance);if(distance===0.0){return OffsetCurveBuilder.copyCoordinates(inputPts);}var segGen=this.getSegGen(distance);this.computeRingBufferCurve(inputPts,side,segGen);return segGen.getCoordinates();},computeOffsetCurve:function computeOffsetCurve(inputPts,isRightSide,segGen){var distTol=this.simplifyTolerance(this.distance);if(isRightSide){var simp2=BufferInputLineSimplifier.simplify(inputPts,-distTol);var n2=simp2.length-1;segGen.initSideSegments(simp2[n2],simp2[n2-1],Position.LEFT);segGen.addFirstSegment();for(var i=n2-2;i>=0;i--){segGen.addNextSegment(simp2[i],true);}}else{var simp1=BufferInputLineSimplifier.simplify(inputPts,distTol);var n1=simp1.length-1;segGen.initSideSegments(simp1[0],simp1[1],Position.LEFT);segGen.addFirstSegment();for(var i=2;i<=n1;i++){segGen.addNextSegment(simp1[i],true);}}segGen.addLastSegment();},getSegGen:function getSegGen(distance){return new OffsetSegmentGenerator(this.precisionModel,this.bufParams,distance);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return OffsetCurveBuilder;}});OffsetCurveBuilder.copyCoordinates=function(pts){var copy=new Array(pts.length).fill(null);for(var i=0;i<copy.length;i++){copy[i]=new Coordinate(pts[i]);}return copy;};function SubgraphDepthLocater(){this.subgraphs=null;this.seg=new LineSegment();this.cga=new CGAlgorithms();var subgraphs=arguments[0];this.subgraphs=subgraphs;}extend(SubgraphDepthLocater.prototype,{findStabbedSegments:function findStabbedSegments(){if(arguments.length===1){var stabbingRayLeftPt=arguments[0];var stabbedSegments=new ArrayList();for(var i=this.subgraphs.iterator();i.hasNext();){var bsg=i.next();var env=bsg.getEnvelope();if(stabbingRayLeftPt.y<env.getMinY()||stabbingRayLeftPt.y>env.getMaxY())continue;this.findStabbedSegments(stabbingRayLeftPt,bsg.getDirectedEdges(),stabbedSegments);}return stabbedSegments;}else if(arguments.length===3){if(hasInterface(arguments[2],List)&&arguments[0]instanceof Coordinate&&arguments[1]instanceof DirectedEdge){var _stabbingRayLeftPt=arguments[0],dirEdge=arguments[1],_stabbedSegments=arguments[2];var pts=dirEdge.getEdge().getCoordinates();for(var i=0;i<pts.length-1;i++){this.seg.p0=pts[i];this.seg.p1=pts[i+1];if(this.seg.p0.y>this.seg.p1.y)this.seg.reverse();var maxx=Math.max(this.seg.p0.x,this.seg.p1.x);if(maxx<_stabbingRayLeftPt.x)continue;if(this.seg.isHorizontal())continue;if(_stabbingRayLeftPt.y<this.seg.p0.y||_stabbingRayLeftPt.y>this.seg.p1.y)continue;if(CGAlgorithms.computeOrientation(this.seg.p0,this.seg.p1,_stabbingRayLeftPt)===CGAlgorithms.RIGHT)continue;var depth=dirEdge.getDepth(Position.LEFT);if(!this.seg.p0.equals(pts[i]))depth=dirEdge.getDepth(Position.RIGHT);var ds=new DepthSegment(this.seg,depth);_stabbedSegments.add(ds);}}else if(hasInterface(arguments[2],List)&&arguments[0]instanceof Coordinate&&hasInterface(arguments[1],List)){var _stabbingRayLeftPt2=arguments[0],dirEdges=arguments[1],_stabbedSegments2=arguments[2];for(var i=dirEdges.iterator();i.hasNext();){var de=i.next();if(!de.isForward())continue;this.findStabbedSegments(_stabbingRayLeftPt2,de,_stabbedSegments2);}}}},getDepth:function getDepth(p){var stabbedSegments=this.findStabbedSegments(p);if(stabbedSegments.size()===0)return 0;var ds=Collections.min(stabbedSegments);return ds.leftDepth;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return SubgraphDepthLocater;}});function DepthSegment(){this.upwardSeg=null;this.leftDepth=null;var seg=arguments[0],depth=arguments[1];this.upwardSeg=new LineSegment(seg);this.leftDepth=depth;}extend(DepthSegment.prototype,{compareTo:function compareTo(obj){var other=obj;if(this.upwardSeg.minX()>=other.upwardSeg.maxX())return 1;if(this.upwardSeg.maxX()<=other.upwardSeg.minX())return-1;var orientIndex=this.upwardSeg.orientationIndex(other.upwardSeg);if(orientIndex!==0)return orientIndex;orientIndex=-1*other.upwardSeg.orientationIndex(this.upwardSeg);if(orientIndex!==0)return orientIndex;return this.upwardSeg.compareTo(other.upwardSeg);},compareX:function compareX(seg0,seg1){var compare0=seg0.p0.compareTo(seg1.p0);if(compare0!==0)return compare0;return seg0.p1.compareTo(seg1.p1);},toString:function toString(){return this.upwardSeg.toString();},interfaces_:function interfaces_(){return[Comparable];},getClass:function getClass(){return DepthSegment;}});SubgraphDepthLocater.DepthSegment=DepthSegment;function OffsetCurveSetBuilder(){this.inputGeom=null;this.distance=null;this.curveBuilder=null;this.curveList=new ArrayList();var inputGeom=arguments[0],distance=arguments[1],curveBuilder=arguments[2];this.inputGeom=inputGeom;this.distance=distance;this.curveBuilder=curveBuilder;}extend(OffsetCurveSetBuilder.prototype,{addPoint:function addPoint(p){if(this.distance<=0.0)return null;var coord=p.getCoordinates();var curve=this.curveBuilder.getLineCurve(coord,this.distance);this.addCurve(curve,Location.EXTERIOR,Location.INTERIOR);},addPolygon:function addPolygon(p){var offsetDistance=this.distance;var offsetSide=Position.LEFT;if(this.distance<0.0){offsetDistance=-this.distance;offsetSide=Position.RIGHT;}var shell=p.getExteriorRing();var shellCoord=CoordinateArrays.removeRepeatedPoints(shell.getCoordinates());if(this.distance<0.0&&this.isErodedCompletely(shell,this.distance))return null;if(this.distance<=0.0&&shellCoord.length<3)return null;this.addPolygonRing(shellCoord,offsetDistance,offsetSide,Location.EXTERIOR,Location.INTERIOR);for(var i=0;i<p.getNumInteriorRing();i++){var hole=p.getInteriorRingN(i);var holeCoord=CoordinateArrays.removeRepeatedPoints(hole.getCoordinates());if(this.distance>0.0&&this.isErodedCompletely(hole,-this.distance))continue;this.addPolygonRing(holeCoord,offsetDistance,Position.opposite(offsetSide),Location.INTERIOR,Location.EXTERIOR);}},isTriangleErodedCompletely:function isTriangleErodedCompletely(triangleCoord,bufferDistance){var tri=new Triangle(triangleCoord[0],triangleCoord[1],triangleCoord[2]);var inCentre=tri.inCentre();var distToCentre=CGAlgorithms.distancePointLine(inCentre,tri.p0,tri.p1);return distToCentre<Math.abs(bufferDistance);},addLineString:function addLineString(line){if(this.distance<=0.0&&!this.curveBuilder.getBufferParameters().isSingleSided())return null;var coord=CoordinateArrays.removeRepeatedPoints(line.getCoordinates());var curve=this.curveBuilder.getLineCurve(coord,this.distance);this.addCurve(curve,Location.EXTERIOR,Location.INTERIOR);},addCurve:function addCurve(coord,leftLoc,rightLoc){if(coord===null||coord.length<2)return null;var e=new NodedSegmentString(coord,new Label(0,Location.BOUNDARY,leftLoc,rightLoc));this.curveList.add(e);},getCurves:function getCurves(){this.add(this.inputGeom);return this.curveList;},addPolygonRing:function addPolygonRing(coord,offsetDistance,side,cwLeftLoc,cwRightLoc){if(offsetDistance===0.0&&coord.length<LinearRing.MINIMUM_VALID_SIZE)return null;var leftLoc=cwLeftLoc;var rightLoc=cwRightLoc;if(coord.length>=LinearRing.MINIMUM_VALID_SIZE&&CGAlgorithms.isCCW(coord)){leftLoc=cwRightLoc;rightLoc=cwLeftLoc;side=Position.opposite(side);}var curve=this.curveBuilder.getRingCurve(coord,side,offsetDistance);this.addCurve(curve,leftLoc,rightLoc);},add:function add(g){if(g.isEmpty())return null;if(g instanceof Polygon)this.addPolygon(g);else if(g instanceof LineString)this.addLineString(g);else if(g instanceof Point)this.addPoint(g);else if(g instanceof MultiPoint)this.addCollection(g);else if(g instanceof MultiLineString)this.addCollection(g);else if(g instanceof MultiPolygon)this.addCollection(g);else if(g instanceof GeometryCollection)this.addCollection(g);else throw new UnsupportedOperationException(g.getClass().getName());},isErodedCompletely:function isErodedCompletely(ring,bufferDistance){var ringCoord=ring.getCoordinates();var minDiam=0.0;if(ringCoord.length<4)return bufferDistance<0;if(ringCoord.length===4)return this.isTriangleErodedCompletely(ringCoord,bufferDistance);var env=ring.getEnvelopeInternal();var envMinDimension=Math.min(env.getHeight(),env.getWidth());if(bufferDistance<0.0&&2*Math.abs(bufferDistance)>envMinDimension)return true;return false;},addCollection:function addCollection(gc){for(var i=0;i<gc.getNumGeometries();i++){var g=gc.getGeometryN(i);this.add(g);}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return OffsetCurveSetBuilder;}});function IntersectionAdder(){this._hasIntersection=false;this.hasProper=false;this.hasProperInterior=false;this.hasInterior=false;this.properIntersectionPoint=null;this.li=null;this.isSelfIntersection=null;this.numIntersections=0;this.numInteriorIntersections=0;this.numProperIntersections=0;this.numTests=0;var li=arguments[0];this.li=li;}extend(IntersectionAdder.prototype,{isTrivialIntersection:function isTrivialIntersection(e0,segIndex0,e1,segIndex1){if(e0===e1){if(this.li.getIntersectionNum()===1){if(IntersectionAdder.isAdjacentSegments(segIndex0,segIndex1))return true;if(e0.isClosed()){var maxSegIndex=e0.size()-1;if(segIndex0===0&&segIndex1===maxSegIndex||segIndex1===0&&segIndex0===maxSegIndex){return true;}}}}return false;},getProperIntersectionPoint:function getProperIntersectionPoint(){return this.properIntersectionPoint;},hasProperInteriorIntersection:function hasProperInteriorIntersection(){return this.hasProperInterior;},getLineIntersector:function getLineIntersector(){return this.li;},hasProperIntersection:function hasProperIntersection(){return this.hasProper;},processIntersections:function processIntersections(e0,segIndex0,e1,segIndex1){if(e0===e1&&segIndex0===segIndex1)return null;this.numTests++;var p00=e0.getCoordinates()[segIndex0];var p01=e0.getCoordinates()[segIndex0+1];var p10=e1.getCoordinates()[segIndex1];var p11=e1.getCoordinates()[segIndex1+1];this.li.computeIntersection(p00,p01,p10,p11);if(this.li.hasIntersection()){this.numIntersections++;if(this.li.isInteriorIntersection()){this.numInteriorIntersections++;this.hasInterior=true;}if(!this.isTrivialIntersection(e0,segIndex0,e1,segIndex1)){this._hasIntersection=true;e0.addIntersections(this.li,segIndex0,0);e1.addIntersections(this.li,segIndex1,1);if(this.li.isProper()){this.numProperIntersections++;this.hasProper=true;this.hasProperInterior=true;}}}},hasIntersection:function hasIntersection(){return this._hasIntersection;},isDone:function isDone(){return false;},hasInteriorIntersection:function hasInteriorIntersection(){return this.hasInterior;},interfaces_:function interfaces_(){return[SegmentIntersector];},getClass:function getClass(){return IntersectionAdder;}});IntersectionAdder.isAdjacentSegments=function(i1,i2){return Math.abs(i1-i2)===1;};function BufferBuilder(){this.bufParams=null;this.workingPrecisionModel=null;this.workingNoder=null;this.geomFact=null;this.graph=null;this.edgeList=new EdgeList();var bufParams=arguments[0];this.bufParams=bufParams;}extend(BufferBuilder.prototype,{setWorkingPrecisionModel:function setWorkingPrecisionModel(pm){this.workingPrecisionModel=pm;},insertUniqueEdge:function insertUniqueEdge(e){var existingEdge=this.edgeList.findEqualEdge(e);if(existingEdge!==null){var existingLabel=existingEdge.getLabel();var labelToMerge=e.getLabel();if(!existingEdge.isPointwiseEqual(e)){labelToMerge=new Label(e.getLabel());labelToMerge.flip();}existingLabel.merge(labelToMerge);var mergeDelta=BufferBuilder.depthDelta(labelToMerge);var existingDelta=existingEdge.getDepthDelta();var newDelta=existingDelta+mergeDelta;existingEdge.setDepthDelta(newDelta);}else{this.edgeList.add(e);e.setDepthDelta(BufferBuilder.depthDelta(e.getLabel()));}},buildSubgraphs:function buildSubgraphs(subgraphList,polyBuilder){var processedGraphs=new ArrayList();for(var i=subgraphList.iterator();i.hasNext();){var subgraph=i.next();var p=subgraph.getRightmostCoordinate();var locater=new SubgraphDepthLocater(processedGraphs);var outsideDepth=locater.getDepth(p);subgraph.computeDepth(outsideDepth);subgraph.findResultEdges();processedGraphs.add(subgraph);polyBuilder.add(subgraph.getDirectedEdges(),subgraph.getNodes());}},createSubgraphs:function createSubgraphs(graph){var subgraphList=new ArrayList();for(var i=graph.getNodes().iterator();i.hasNext();){var node=i.next();if(!node.isVisited()){var subgraph=new BufferSubgraph();subgraph.create(node);subgraphList.add(subgraph);}}Collections.sort(subgraphList,Collections.reverseOrder());return subgraphList;},createEmptyResultGeometry:function createEmptyResultGeometry(){var emptyGeom=this.geomFact.createPolygon();return emptyGeom;},getNoder:function getNoder(precisionModel){if(this.workingNoder!==null)return this.workingNoder;var noder=new MCIndexNoder();var li=new RobustLineIntersector();li.setPrecisionModel(precisionModel);noder.setSegmentIntersector(new IntersectionAdder(li));return noder;},buffer:function buffer(g,distance){var precisionModel=this.workingPrecisionModel;if(precisionModel===null)precisionModel=g.getPrecisionModel();this.geomFact=g.getFactory();var curveBuilder=new OffsetCurveBuilder(precisionModel,this.bufParams);var curveSetBuilder=new OffsetCurveSetBuilder(g,distance,curveBuilder);var bufferSegStrList=curveSetBuilder.getCurves();if(bufferSegStrList.size()<=0){return this.createEmptyResultGeometry();}this.computeNodedEdges(bufferSegStrList,precisionModel);this.graph=new PlanarGraph(new OverlayNodeFactory());this.graph.addEdges(this.edgeList.getEdges());var subgraphList=this.createSubgraphs(this.graph);var polyBuilder=new PolygonBuilder(this.geomFact);this.buildSubgraphs(subgraphList,polyBuilder);var resultPolyList=polyBuilder.getPolygons();if(resultPolyList.size()<=0){return this.createEmptyResultGeometry();}var resultGeom=this.geomFact.buildGeometry(resultPolyList);return resultGeom;},computeNodedEdges:function computeNodedEdges(bufferSegStrList,precisionModel){var noder=this.getNoder(precisionModel);noder.computeNodes(bufferSegStrList);var nodedSegStrings=noder.getNodedSubstrings();for(var i=nodedSegStrings.iterator();i.hasNext();){var segStr=i.next();var pts=segStr.getCoordinates();if(pts.length===2&&pts[0].equals2D(pts[1]))continue;var oldLabel=segStr.getData();var edge=new Edge(segStr.getCoordinates(),new Label(oldLabel));this.insertUniqueEdge(edge);}},setNoder:function setNoder(noder){this.workingNoder=noder;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return BufferBuilder;}});BufferBuilder.depthDelta=function(label){var lLoc=label.getLocation(0,Position.LEFT);var rLoc=label.getLocation(0,Position.RIGHT);if(lLoc===Location.INTERIOR&&rLoc===Location.EXTERIOR)return 1;else if(lLoc===Location.EXTERIOR&&rLoc===Location.INTERIOR)return-1;return 0;};BufferBuilder.convertSegStrings=function(it){var fact=new GeometryFactory();var lines=new ArrayList();while(it.hasNext()){var ss=it.next();var line=fact.createLineString(ss.getCoordinates());lines.add(line);}return fact.buildGeometry(lines);};function NodingValidator(){this.li=new RobustLineIntersector();this.segStrings=null;var segStrings=arguments[0];this.segStrings=segStrings;}extend(NodingValidator.prototype,{checkEndPtVertexIntersections:function checkEndPtVertexIntersections(){if(arguments.length===0){for(var i=this.segStrings.iterator();i.hasNext();){var ss=i.next();var pts=ss.getCoordinates();this.checkEndPtVertexIntersections(pts[0],this.segStrings);this.checkEndPtVertexIntersections(pts[pts.length-1],this.segStrings);}}else if(arguments.length===2){var testPt=arguments[0],segStrings=arguments[1];for(var i=segStrings.iterator();i.hasNext();){var ss=i.next();var pts=ss.getCoordinates();for(var j=1;j<pts.length-1;j++){if(pts[j].equals(testPt))throw new RuntimeException(\"found endpt/interior pt intersection at index \"+j+\" :pt \"+testPt);}}}},checkInteriorIntersections:function checkInteriorIntersections(){if(arguments.length===0){for(var i=this.segStrings.iterator();i.hasNext();){var ss0=i.next();for(var j=this.segStrings.iterator();j.hasNext();){var ss1=j.next();this.checkInteriorIntersections(ss0,ss1);}}}else if(arguments.length===2){var _ss=arguments[0],_ss2=arguments[1];var pts0=_ss.getCoordinates();var pts1=_ss2.getCoordinates();for(var i0=0;i0<pts0.length-1;i0++){for(var i1=0;i1<pts1.length-1;i1++){this.checkInteriorIntersections(_ss,i0,_ss2,i1);}}}else if(arguments.length===4){var e0=arguments[0],segIndex0=arguments[1],e1=arguments[2],segIndex1=arguments[3];if(e0===e1&&segIndex0===segIndex1)return null;var p00=e0.getCoordinates()[segIndex0];var p01=e0.getCoordinates()[segIndex0+1];var p10=e1.getCoordinates()[segIndex1];var p11=e1.getCoordinates()[segIndex1+1];this.li.computeIntersection(p00,p01,p10,p11);if(this.li.hasIntersection()){if(this.li.isProper()||this.hasInteriorIntersection(this.li,p00,p01)||this.hasInteriorIntersection(this.li,p10,p11)){throw new RuntimeException(\"found non-noded intersection at \"+p00+\"-\"+p01+\" and \"+p10+\"-\"+p11);}}}},checkValid:function checkValid(){this.checkEndPtVertexIntersections();this.checkInteriorIntersections();this.checkCollapses();},checkCollapses:function checkCollapses(){if(arguments.length===0){for(var i=this.segStrings.iterator();i.hasNext();){var ss=i.next();this.checkCollapses(ss);}}else if(arguments.length===1){var _ss3=arguments[0];var pts=_ss3.getCoordinates();for(var i=0;i<pts.length-2;i++){this.checkCollapse(pts[i],pts[i+1],pts[i+2]);}}},hasInteriorIntersection:function hasInteriorIntersection(li,p0,p1){for(var i=0;i<li.getIntersectionNum();i++){var intPt=li.getIntersection(i);if(!(intPt.equals(p0)||intPt.equals(p1)))return true;}return false;},checkCollapse:function checkCollapse(p0,p1,p2){if(p0.equals(p2))throw new RuntimeException(\"found non-noded collapse at \"+NodingValidator.fact.createLineString([p0,p1,p2]));},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return NodingValidator;}});NodingValidator.fact=new GeometryFactory();function HotPixel(){this.li=null;this.pt=null;this.originalPt=null;this.ptScaled=null;this.p0Scaled=null;this.p1Scaled=null;this.scaleFactor=null;this.minx=null;this.maxx=null;this.miny=null;this.maxy=null;this.corner=new Array(4).fill(null);this.safeEnv=null;var pt=arguments[0],scaleFactor=arguments[1],li=arguments[2];this.originalPt=pt;this.pt=pt;this.scaleFactor=scaleFactor;this.li=li;if(scaleFactor<=0)throw new IllegalArgumentException(\"Scale factor must be non-zero\");if(scaleFactor!==1.0){this.pt=new Coordinate(this.scale(pt.x),this.scale(pt.y));this.p0Scaled=new Coordinate();this.p1Scaled=new Coordinate();}this.initCorners(this.pt);}extend(HotPixel.prototype,{intersectsScaled:function intersectsScaled(p0,p1){var segMinx=Math.min(p0.x,p1.x);var segMaxx=Math.max(p0.x,p1.x);var segMiny=Math.min(p0.y,p1.y);var segMaxy=Math.max(p0.y,p1.y);var isOutsidePixelEnv=this.maxx<segMinx||this.minx>segMaxx||this.maxy<segMiny||this.miny>segMaxy;if(isOutsidePixelEnv)return false;var intersects=this.intersectsToleranceSquare(p0,p1);Assert.isTrue(!(isOutsidePixelEnv&&intersects),\"Found bad envelope test\");return intersects;},initCorners:function initCorners(pt){var tolerance=0.5;this.minx=pt.x-tolerance;this.maxx=pt.x+tolerance;this.miny=pt.y-tolerance;this.maxy=pt.y+tolerance;this.corner[0]=new Coordinate(this.maxx,this.maxy);this.corner[1]=new Coordinate(this.minx,this.maxy);this.corner[2]=new Coordinate(this.minx,this.miny);this.corner[3]=new Coordinate(this.maxx,this.miny);},intersects:function intersects(p0,p1){if(this.scaleFactor===1.0)return this.intersectsScaled(p0,p1);this.copyScaled(p0,this.p0Scaled);this.copyScaled(p1,this.p1Scaled);return this.intersectsScaled(this.p0Scaled,this.p1Scaled);},scale:function scale(val){return Math.round(val*this.scaleFactor);},getCoordinate:function getCoordinate(){return this.originalPt;},copyScaled:function copyScaled(p,pScaled){pScaled.x=this.scale(p.x);pScaled.y=this.scale(p.y);},getSafeEnvelope:function getSafeEnvelope(){if(this.safeEnv===null){var safeTolerance=HotPixel.SAFE_ENV_EXPANSION_FACTOR/this.scaleFactor;this.safeEnv=new Envelope(this.originalPt.x-safeTolerance,this.originalPt.x+safeTolerance,this.originalPt.y-safeTolerance,this.originalPt.y+safeTolerance);}return this.safeEnv;},intersectsPixelClosure:function intersectsPixelClosure(p0,p1){this.li.computeIntersection(p0,p1,this.corner[0],this.corner[1]);if(this.li.hasIntersection())return true;this.li.computeIntersection(p0,p1,this.corner[1],this.corner[2]);if(this.li.hasIntersection())return true;this.li.computeIntersection(p0,p1,this.corner[2],this.corner[3]);if(this.li.hasIntersection())return true;this.li.computeIntersection(p0,p1,this.corner[3],this.corner[0]);if(this.li.hasIntersection())return true;return false;},intersectsToleranceSquare:function intersectsToleranceSquare(p0,p1){var intersectsLeft=false;var intersectsBottom=false;this.li.computeIntersection(p0,p1,this.corner[0],this.corner[1]);if(this.li.isProper())return true;this.li.computeIntersection(p0,p1,this.corner[1],this.corner[2]);if(this.li.isProper())return true;if(this.li.hasIntersection())intersectsLeft=true;this.li.computeIntersection(p0,p1,this.corner[2],this.corner[3]);if(this.li.isProper())return true;if(this.li.hasIntersection())intersectsBottom=true;this.li.computeIntersection(p0,p1,this.corner[3],this.corner[0]);if(this.li.isProper())return true;if(intersectsLeft&&intersectsBottom)return true;if(p0.equals(this.pt))return true;if(p1.equals(this.pt))return true;return false;},addSnappedNode:function addSnappedNode(segStr,segIndex){var p0=segStr.getCoordinate(segIndex);var p1=segStr.getCoordinate(segIndex+1);if(this.intersects(p0,p1)){segStr.addIntersection(this.getCoordinate(),segIndex);return true;}return false;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return HotPixel;}});HotPixel.SAFE_ENV_EXPANSION_FACTOR=0.75;function MCIndexPointSnapper(){this.index=null;var index=arguments[0];this.index=index;}extend(MCIndexPointSnapper.prototype,{snap:function snap(){if(arguments.length===1){var hotPixel=arguments[0];return this.snap(hotPixel,null,-1);}else if(arguments.length===3){var _hotPixel=arguments[0],parentEdge=arguments[1],hotPixelVertexIndex=arguments[2];var pixelEnv=_hotPixel.getSafeEnvelope();var hotPixelSnapAction=new HotPixelSnapAction(_hotPixel,parentEdge,hotPixelVertexIndex);this.index.query(pixelEnv,{interfaces_:function interfaces_(){return[ItemVisitor];},visitItem:function visitItem(item){var testChain=item;testChain.select(pixelEnv,hotPixelSnapAction);}});return hotPixelSnapAction.isNodeAdded();}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return MCIndexPointSnapper;}});function HotPixelSnapAction(){MonotoneChainSelectAction.apply(this);this.hotPixel=null;this.parentEdge=null;this.hotPixelVertexIndex=null;this._isNodeAdded=false;var hotPixel=arguments[0],parentEdge=arguments[1],hotPixelVertexIndex=arguments[2];this.hotPixel=hotPixel;this.parentEdge=parentEdge;this.hotPixelVertexIndex=hotPixelVertexIndex;}inherits(HotPixelSnapAction,MonotoneChainSelectAction);extend(HotPixelSnapAction.prototype,{isNodeAdded:function isNodeAdded(){return this._isNodeAdded;},select:function select(){if(arguments.length===2){var mc=arguments[0],startIndex=arguments[1];var ss=mc.getContext();if(this.parentEdge!==null){if(ss===this.parentEdge&&startIndex===this.hotPixelVertexIndex)return null;}this._isNodeAdded=this.hotPixel.addSnappedNode(ss,startIndex);}else return MonotoneChainSelectAction.prototype.select.apply(this,arguments);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return HotPixelSnapAction;}});MCIndexPointSnapper.HotPixelSnapAction=HotPixelSnapAction;function InteriorIntersectionFinderAdder(){this.li=null;this.interiorIntersections=null;var li=arguments[0];this.li=li;this.interiorIntersections=new ArrayList();}extend(InteriorIntersectionFinderAdder.prototype,{processIntersections:function processIntersections(e0,segIndex0,e1,segIndex1){if(e0===e1&&segIndex0===segIndex1)return null;var p00=e0.getCoordinates()[segIndex0];var p01=e0.getCoordinates()[segIndex0+1];var p10=e1.getCoordinates()[segIndex1];var p11=e1.getCoordinates()[segIndex1+1];this.li.computeIntersection(p00,p01,p10,p11);if(this.li.hasIntersection()){if(this.li.isInteriorIntersection()){for(var intIndex=0;intIndex<this.li.getIntersectionNum();intIndex++){this.interiorIntersections.add(this.li.getIntersection(intIndex));}e0.addIntersections(this.li,segIndex0,0);e1.addIntersections(this.li,segIndex1,1);}}},isDone:function isDone(){return false;},getInteriorIntersections:function getInteriorIntersections(){return this.interiorIntersections;},interfaces_:function interfaces_(){return[SegmentIntersector];},getClass:function getClass(){return InteriorIntersectionFinderAdder;}});function MCIndexSnapRounder(){this.pm=null;this.li=null;this.scaleFactor=null;this.noder=null;this.pointSnapper=null;this.nodedSegStrings=null;var pm=arguments[0];this.pm=pm;this.li=new RobustLineIntersector();this.li.setPrecisionModel(pm);this.scaleFactor=pm.getScale();}extend(MCIndexSnapRounder.prototype,{checkCorrectness:function checkCorrectness(inputSegmentStrings){var resultSegStrings=NodedSegmentString.getNodedSubstrings(inputSegmentStrings);var nv=new NodingValidator(resultSegStrings);try{nv.checkValid();}catch(ex){if(ex instanceof Exception){ex.printStackTrace();}else throw ex;}finally{}},getNodedSubstrings:function getNodedSubstrings(){return NodedSegmentString.getNodedSubstrings(this.nodedSegStrings);},snapRound:function snapRound(segStrings,li){var intersections=this.findInteriorIntersections(segStrings,li);this.computeIntersectionSnaps(intersections);this.computeVertexSnaps(segStrings);},findInteriorIntersections:function findInteriorIntersections(segStrings,li){var intFinderAdder=new InteriorIntersectionFinderAdder(li);this.noder.setSegmentIntersector(intFinderAdder);this.noder.computeNodes(segStrings);return intFinderAdder.getInteriorIntersections();},computeVertexSnaps:function computeVertexSnaps(){if(hasInterface(arguments[0],Collection)){var edges=arguments[0];for(var i0=edges.iterator();i0.hasNext();){var edge0=i0.next();this.computeVertexSnaps(edge0);}}else if(arguments[0]instanceof NodedSegmentString){var e=arguments[0];var pts0=e.getCoordinates();for(var i=0;i<pts0.length;i++){var hotPixel=new HotPixel(pts0[i],this.scaleFactor,this.li);var isNodeAdded=this.pointSnapper.snap(hotPixel,e,i);if(isNodeAdded){e.addIntersection(pts0[i],i);}}}},computeNodes:function computeNodes(inputSegmentStrings){this.nodedSegStrings=inputSegmentStrings;this.noder=new MCIndexNoder();this.pointSnapper=new MCIndexPointSnapper(this.noder.getIndex());this.snapRound(inputSegmentStrings,this.li);},computeIntersectionSnaps:function computeIntersectionSnaps(snapPts){for(var it=snapPts.iterator();it.hasNext();){var snapPt=it.next();var hotPixel=new HotPixel(snapPt,this.scaleFactor,this.li);this.pointSnapper.snap(hotPixel);}},interfaces_:function interfaces_(){return[Noder];},getClass:function getClass(){return MCIndexSnapRounder;}});function BufferOp(){this.argGeom=null;this.distance=null;this.bufParams=new BufferParameters();this.resultGeometry=null;this.saveException=null;if(arguments.length===1){var g=arguments[0];this.argGeom=g;}else if(arguments.length===2){var _g=arguments[0],bufParams=arguments[1];this.argGeom=_g;this.bufParams=bufParams;}}extend(BufferOp.prototype,{bufferFixedPrecision:function bufferFixedPrecision(fixedPM){var noder=new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1.0)),fixedPM.getScale());var bufBuilder=new BufferBuilder(this.bufParams);bufBuilder.setWorkingPrecisionModel(fixedPM);bufBuilder.setNoder(noder);this.resultGeometry=bufBuilder.buffer(this.argGeom,this.distance);},bufferReducedPrecision:function bufferReducedPrecision(){if(arguments.length===0){for(var precDigits=BufferOp.MAX_PRECISION_DIGITS;precDigits>=0;precDigits--){try{this.bufferReducedPrecision(precDigits);}catch(ex){if(ex instanceof TopologyException){this.saveException=ex;}else throw ex;}finally{}if(this.resultGeometry!==null)return null;}throw this.saveException;}else if(arguments.length===1){var precisionDigits=arguments[0];var sizeBasedScaleFactor=BufferOp.precisionScaleFactor(this.argGeom,this.distance,precisionDigits);var fixedPM=new PrecisionModel(sizeBasedScaleFactor);this.bufferFixedPrecision(fixedPM);}},computeGeometry:function computeGeometry(){this.bufferOriginalPrecision();if(this.resultGeometry!==null)return null;var argPM=this.argGeom.getFactory().getPrecisionModel();if(argPM.getType()===PrecisionModel.FIXED)this.bufferFixedPrecision(argPM);else this.bufferReducedPrecision();},setQuadrantSegments:function setQuadrantSegments(quadrantSegments){this.bufParams.setQuadrantSegments(quadrantSegments);},bufferOriginalPrecision:function bufferOriginalPrecision(){try{var bufBuilder=new BufferBuilder(this.bufParams);this.resultGeometry=bufBuilder.buffer(this.argGeom,this.distance);}catch(ex){if(ex instanceof RuntimeException){this.saveException=ex;}else throw ex;}finally{}},getResultGeometry:function getResultGeometry(distance){this.distance=distance;this.computeGeometry();return this.resultGeometry;},setEndCapStyle:function setEndCapStyle(endCapStyle){this.bufParams.setEndCapStyle(endCapStyle);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return BufferOp;}});BufferOp.bufferOp=function(){if(arguments.length===2){var g=arguments[0],distance=arguments[1];var gBuf=new BufferOp(g);var geomBuf=gBuf.getResultGeometry(distance);return geomBuf;}else if(arguments.length===3){if(Number.isInteger(arguments[2])&&arguments[0]instanceof Geometry&&typeof arguments[1]===\"number\"){var _g2=arguments[0],_distance=arguments[1],quadrantSegments=arguments[2];var bufOp=new BufferOp(_g2);bufOp.setQuadrantSegments(quadrantSegments);var geomBuf=bufOp.getResultGeometry(_distance);return geomBuf;}else if(arguments[2]instanceof BufferParameters&&arguments[0]instanceof Geometry&&typeof arguments[1]===\"number\"){var _g3=arguments[0],_distance2=arguments[1],params=arguments[2];var bufOp=new BufferOp(_g3,params);var geomBuf=bufOp.getResultGeometry(_distance2);return geomBuf;}}else if(arguments.length===4){var _g4=arguments[0],_distance3=arguments[1],_quadrantSegments=arguments[2],endCapStyle=arguments[3];var bufOp=new BufferOp(_g4);bufOp.setQuadrantSegments(_quadrantSegments);bufOp.setEndCapStyle(endCapStyle);var geomBuf=bufOp.getResultGeometry(_distance3);return geomBuf;}};BufferOp.precisionScaleFactor=function(g,distance,maxPrecisionDigits){var env=g.getEnvelopeInternal();var envMax=MathUtil.max(Math.abs(env.getMaxX()),Math.abs(env.getMaxY()),Math.abs(env.getMinX()),Math.abs(env.getMinY()));var expandByDistance=distance>0.0?distance:0.0;var bufEnvMax=envMax+2*expandByDistance;var bufEnvPrecisionDigits=Math.trunc(Math.log(bufEnvMax)/Math.log(10)+1.0);var minUnitLog10=maxPrecisionDigits-bufEnvPrecisionDigits;var scaleFactor=Math.pow(10.0,minUnitLog10);return scaleFactor;};BufferOp.CAP_ROUND=BufferParameters.CAP_ROUND;BufferOp.CAP_BUTT=BufferParameters.CAP_FLAT;BufferOp.CAP_FLAT=BufferParameters.CAP_FLAT;BufferOp.CAP_SQUARE=BufferParameters.CAP_SQUARE;BufferOp.MAX_PRECISION_DIGITS=12;var buffer=Object.freeze({BufferOp:BufferOp,BufferParameters:BufferParameters});function PolygonExtracter(){this.comps=null;var comps=arguments[0];this.comps=comps;}extend(PolygonExtracter.prototype,{filter:function filter(geom){if(geom instanceof Polygon)this.comps.add(geom);},interfaces_:function interfaces_(){return[GeometryFilter];},getClass:function getClass(){return PolygonExtracter;}});PolygonExtracter.getPolygons=function(){if(arguments.length===1){var geom=arguments[0];return PolygonExtracter.getPolygons(geom,new ArrayList());}else if(arguments.length===2){var _geom=arguments[0],list=arguments[1];if(_geom instanceof Polygon){list.add(_geom);}else if(_geom instanceof GeometryCollection){_geom.apply(new PolygonExtracter(list));}return list;}};function GeometryLocation(){this.component=null;this.segIndex=null;this.pt=null;if(arguments.length===2){var component=arguments[0],pt=arguments[1];GeometryLocation.call(this,component,GeometryLocation.INSIDE_AREA,pt);}else if(arguments.length===3){var _component=arguments[0],segIndex=arguments[1],_pt=arguments[2];this.component=_component;this.segIndex=segIndex;this.pt=_pt;}}extend(GeometryLocation.prototype,{isInsideArea:function isInsideArea(){return this.segIndex===GeometryLocation.INSIDE_AREA;},getCoordinate:function getCoordinate(){return this.pt;},getGeometryComponent:function getGeometryComponent(){return this.component;},getSegmentIndex:function getSegmentIndex(){return this.segIndex;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return GeometryLocation;}});GeometryLocation.INSIDE_AREA=-1;function PointExtracter(){this.pts=null;var pts=arguments[0];this.pts=pts;}extend(PointExtracter.prototype,{filter:function filter(geom){if(geom instanceof Point)this.pts.add(geom);},interfaces_:function interfaces_(){return[GeometryFilter];},getClass:function getClass(){return PointExtracter;}});PointExtracter.getPoints=function(){if(arguments.length===1){var geom=arguments[0];if(geom instanceof Point){return Collections.singletonList(geom);}return PointExtracter.getPoints(geom,new ArrayList());}else if(arguments.length===2){var _geom=arguments[0],list=arguments[1];if(_geom instanceof Point){list.add(_geom);}else if(_geom instanceof GeometryCollection){_geom.apply(new PointExtracter(list));}return list;}};function ConnectedElementLocationFilter(){this.locations=null;var locations=arguments[0];this.locations=locations;}extend(ConnectedElementLocationFilter.prototype,{filter:function filter(geom){if(geom instanceof Point||geom instanceof LineString||geom instanceof Polygon)this.locations.add(new GeometryLocation(geom,0,geom.getCoordinate()));},interfaces_:function interfaces_(){return[GeometryFilter];},getClass:function getClass(){return ConnectedElementLocationFilter;}});ConnectedElementLocationFilter.getLocations=function(geom){var locations=new ArrayList();geom.apply(new ConnectedElementLocationFilter(locations));return locations;};function DistanceOp(){this.geom=null;this.terminateDistance=0.0;this.ptLocator=new PointLocator();this.minDistanceLocation=null;this.minDistance=Double.MAX_VALUE;if(arguments.length===2){var g0=arguments[0],g1=arguments[1];DistanceOp.call(this,g0,g1,0.0);}else if(arguments.length===3){var _g=arguments[0],_g2=arguments[1],terminateDistance=arguments[2];this.geom=new Array(2).fill(null);this.geom[0]=_g;this.geom[1]=_g2;this.terminateDistance=terminateDistance;}}extend(DistanceOp.prototype,{computeContainmentDistance:function computeContainmentDistance(){if(arguments.length===0){var locPtPoly=new Array(2).fill(null);this.computeContainmentDistance(0,locPtPoly);if(this.minDistance<=this.terminateDistance)return null;this.computeContainmentDistance(1,locPtPoly);}else if(arguments.length===2){var polyGeomIndex=arguments[0],_locPtPoly=arguments[1];var locationsIndex=1-polyGeomIndex;var polys=PolygonExtracter.getPolygons(this.geom[polyGeomIndex]);if(polys.size()>0){var insideLocs=ConnectedElementLocationFilter.getLocations(this.geom[locationsIndex]);this.computeContainmentDistance(insideLocs,polys,_locPtPoly);if(this.minDistance<=this.terminateDistance){this.minDistanceLocation[locationsIndex]=_locPtPoly[0];this.minDistanceLocation[polyGeomIndex]=_locPtPoly[1];return null;}}}else if(arguments.length===3){if(arguments[2]instanceof Array&&hasInterface(arguments[0],List)&&hasInterface(arguments[1],List)){var locs=arguments[0],_polys=arguments[1],_locPtPoly2=arguments[2];for(var i=0;i<locs.size();i++){var loc=locs.get(i);for(var j=0;j<_polys.size();j++){this.computeContainmentDistance(loc,_polys.get(j),_locPtPoly2);if(this.minDistance<=this.terminateDistance)return null;}}}else if(arguments[2]instanceof Array&&arguments[0]instanceof GeometryLocation&&arguments[1]instanceof Polygon){var ptLoc=arguments[0],poly=arguments[1],_locPtPoly3=arguments[2];var pt=ptLoc.getCoordinate();if(Location.EXTERIOR!==this.ptLocator.locate(pt,poly)){this.minDistance=0.0;_locPtPoly3[0]=ptLoc;_locPtPoly3[1]=new GeometryLocation(poly,pt);return null;}}}},computeMinDistanceLinesPoints:function computeMinDistanceLinesPoints(lines,points,locGeom){for(var i=0;i<lines.size();i++){var line=lines.get(i);for(var j=0;j<points.size();j++){var pt=points.get(j);this.computeMinDistance(line,pt,locGeom);if(this.minDistance<=this.terminateDistance)return null;}}},computeFacetDistance:function computeFacetDistance(){var locGeom=new Array(2).fill(null);var lines0=LinearComponentExtracter.getLines(this.geom[0]);var lines1=LinearComponentExtracter.getLines(this.geom[1]);var pts0=PointExtracter.getPoints(this.geom[0]);var pts1=PointExtracter.getPoints(this.geom[1]);this.computeMinDistanceLines(lines0,lines1,locGeom);this.updateMinDistance(locGeom,false);if(this.minDistance<=this.terminateDistance)return null;locGeom[0]=null;locGeom[1]=null;this.computeMinDistanceLinesPoints(lines0,pts1,locGeom);this.updateMinDistance(locGeom,false);if(this.minDistance<=this.terminateDistance)return null;locGeom[0]=null;locGeom[1]=null;this.computeMinDistanceLinesPoints(lines1,pts0,locGeom);this.updateMinDistance(locGeom,true);if(this.minDistance<=this.terminateDistance)return null;locGeom[0]=null;locGeom[1]=null;this.computeMinDistancePoints(pts0,pts1,locGeom);this.updateMinDistance(locGeom,false);},nearestLocations:function nearestLocations(){this.computeMinDistance();return this.minDistanceLocation;},updateMinDistance:function updateMinDistance(locGeom,flip){if(locGeom[0]===null)return null;if(flip){this.minDistanceLocation[0]=locGeom[1];this.minDistanceLocation[1]=locGeom[0];}else{this.minDistanceLocation[0]=locGeom[0];this.minDistanceLocation[1]=locGeom[1];}},nearestPoints:function nearestPoints(){this.computeMinDistance();var nearestPts=[this.minDistanceLocation[0].getCoordinate(),this.minDistanceLocation[1].getCoordinate()];return nearestPts;},computeMinDistance:function computeMinDistance(){if(arguments.length===0){if(this.minDistanceLocation!==null)return null;this.minDistanceLocation=new Array(2).fill(null);this.computeContainmentDistance();if(this.minDistance<=this.terminateDistance)return null;this.computeFacetDistance();}else if(arguments.length===3){if(arguments[2]instanceof Array&&arguments[0]instanceof LineString&&arguments[1]instanceof Point){var line=arguments[0],pt=arguments[1],locGeom=arguments[2];if(line.getEnvelopeInternal().distance(pt.getEnvelopeInternal())>this.minDistance)return null;var coord0=line.getCoordinates();var coord=pt.getCoordinate();for(var i=0;i<coord0.length-1;i++){var dist=CGAlgorithms.distancePointLine(coord,coord0[i],coord0[i+1]);if(dist<this.minDistance){this.minDistance=dist;var seg=new LineSegment(coord0[i],coord0[i+1]);var segClosestPoint=seg.closestPoint(coord);locGeom[0]=new GeometryLocation(line,i,segClosestPoint);locGeom[1]=new GeometryLocation(pt,0,coord);}if(this.minDistance<=this.terminateDistance)return null;}}else if(arguments[2]instanceof Array&&arguments[0]instanceof LineString&&arguments[1]instanceof LineString){var line0=arguments[0],line1=arguments[1],_locGeom=arguments[2];if(line0.getEnvelopeInternal().distance(line1.getEnvelopeInternal())>this.minDistance)return null;var coord0=line0.getCoordinates();var coord1=line1.getCoordinates();for(var i=0;i<coord0.length-1;i++){for(var j=0;j<coord1.length-1;j++){var dist=CGAlgorithms.distanceLineLine(coord0[i],coord0[i+1],coord1[j],coord1[j+1]);if(dist<this.minDistance){this.minDistance=dist;var seg0=new LineSegment(coord0[i],coord0[i+1]);var seg1=new LineSegment(coord1[j],coord1[j+1]);var closestPt=seg0.closestPoints(seg1);_locGeom[0]=new GeometryLocation(line0,i,closestPt[0]);_locGeom[1]=new GeometryLocation(line1,j,closestPt[1]);}if(this.minDistance<=this.terminateDistance)return null;}}}}},computeMinDistancePoints:function computeMinDistancePoints(points0,points1,locGeom){for(var i=0;i<points0.size();i++){var pt0=points0.get(i);for(var j=0;j<points1.size();j++){var pt1=points1.get(j);var dist=pt0.getCoordinate().distance(pt1.getCoordinate());if(dist<this.minDistance){this.minDistance=dist;locGeom[0]=new GeometryLocation(pt0,0,pt0.getCoordinate());locGeom[1]=new GeometryLocation(pt1,0,pt1.getCoordinate());}if(this.minDistance<=this.terminateDistance)return null;}}},distance:function distance(){if(this.geom[0]===null||this.geom[1]===null)throw new IllegalArgumentException(\"null geometries are not supported\");if(this.geom[0].isEmpty()||this.geom[1].isEmpty())return 0.0;this.computeMinDistance();return this.minDistance;},computeMinDistanceLines:function computeMinDistanceLines(lines0,lines1,locGeom){for(var i=0;i<lines0.size();i++){var line0=lines0.get(i);for(var j=0;j<lines1.size();j++){var line1=lines1.get(j);this.computeMinDistance(line0,line1,locGeom);if(this.minDistance<=this.terminateDistance)return null;}}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return DistanceOp;}});DistanceOp.distance=function(g0,g1){var distOp=new DistanceOp(g0,g1);return distOp.distance();};DistanceOp.isWithinDistance=function(g0,g1,distance){var distOp=new DistanceOp(g0,g1,distance);return distOp.distance()<=distance;};DistanceOp.nearestPoints=function(g0,g1){var distOp=new DistanceOp(g0,g1);return distOp.nearestPoints();};var distance=Object.freeze({DistanceOp:DistanceOp});function EdgeString(){this.factory=null;this.directedEdges=new ArrayList();this.coordinates=null;var factory=arguments[0];this.factory=factory;}extend(EdgeString.prototype,{getCoordinates:function getCoordinates(){if(this.coordinates===null){var forwardDirectedEdges=0;var reverseDirectedEdges=0;var coordinateList=new CoordinateList();for(var i=this.directedEdges.iterator();i.hasNext();){var directedEdge=i.next();if(directedEdge.getEdgeDirection()){forwardDirectedEdges++;}else{reverseDirectedEdges++;}coordinateList.add(directedEdge.getEdge().getLine().getCoordinates(),false,directedEdge.getEdgeDirection());}this.coordinates=coordinateList.toCoordinateArray();if(reverseDirectedEdges>forwardDirectedEdges){CoordinateArrays.reverse(this.coordinates);}}return this.coordinates;},toLineString:function toLineString(){return this.factory.createLineString(this.getCoordinates());},add:function add(directedEdge){this.directedEdges.add(directedEdge);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return EdgeString;}});function GraphComponent$1(){this._isMarked=false;this._isVisited=false;this.data=null;}extend(GraphComponent$1.prototype,{setVisited:function setVisited(isVisited){this._isVisited=isVisited;},isMarked:function isMarked(){return this._isMarked;},setData:function setData(data){this.data=data;},getData:function getData(){return this.data;},setMarked:function setMarked(isMarked){this._isMarked=isMarked;},getContext:function getContext(){return this.data;},isVisited:function isVisited(){return this._isVisited;},setContext:function setContext(data){this.data=data;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return GraphComponent$1;}});GraphComponent$1.getComponentWithVisitedState=function(i,visitedState){while(i.hasNext()){var comp=i.next();if(comp.isVisited()===visitedState)return comp;}return null;};GraphComponent$1.setVisited=function(i,visited){while(i.hasNext()){var comp=i.next();comp.setVisited(visited);}};GraphComponent$1.setMarked=function(i,marked){while(i.hasNext()){var comp=i.next();comp.setMarked(marked);}};function DirectedEdge$1(){GraphComponent$1.apply(this);this.parentEdge=null;this.from=null;this.to=null;this.p0=null;this.p1=null;this.sym=null;this.edgeDirection=null;this.quadrant=null;this.angle=null;var from=arguments[0],to=arguments[1],directionPt=arguments[2],edgeDirection=arguments[3];this.from=from;this.to=to;this.edgeDirection=edgeDirection;this.p0=from.getCoordinate();this.p1=directionPt;var dx=this.p1.x-this.p0.x;var dy=this.p1.y-this.p0.y;this.quadrant=Quadrant.quadrant(dx,dy);this.angle=Math.atan2(dy,dx);}inherits(DirectedEdge$1,GraphComponent$1);extend(DirectedEdge$1.prototype,{isRemoved:function isRemoved(){return this.parentEdge===null;},compareDirection:function compareDirection(e){if(this.quadrant>e.quadrant)return 1;if(this.quadrant<e.quadrant)return-1;return CGAlgorithms.computeOrientation(e.p0,e.p1,this.p1);},getCoordinate:function getCoordinate(){return this.from.getCoordinate();},print:function print(out){var className=this.getClass().getName();var lastDotPos=className.lastIndexOf('.');var name=className.substring(lastDotPos+1);out.print(\"  \"+name+\": \"+this.p0+\" - \"+this.p1+\" \"+this.quadrant+\":\"+this.angle);},getDirectionPt:function getDirectionPt(){return this.p1;},getAngle:function getAngle(){return this.angle;},compareTo:function compareTo(obj){var de=obj;return this.compareDirection(de);},getFromNode:function getFromNode(){return this.from;},getSym:function getSym(){return this.sym;},setEdge:function setEdge(parentEdge){this.parentEdge=parentEdge;},remove:function remove(){this.sym=null;this.parentEdge=null;},getEdge:function getEdge(){return this.parentEdge;},getQuadrant:function getQuadrant(){return this.quadrant;},setSym:function setSym(sym){this.sym=sym;},getToNode:function getToNode(){return this.to;},getEdgeDirection:function getEdgeDirection(){return this.edgeDirection;},interfaces_:function interfaces_(){return[Comparable];},getClass:function getClass(){return DirectedEdge$1;}});DirectedEdge$1.toEdges=function(dirEdges){var edges=new ArrayList();for(var i=dirEdges.iterator();i.hasNext();){edges.add(i.next().parentEdge);}return edges;};function LineMergeDirectedEdge(){var from=arguments[0],to=arguments[1],directionPt=arguments[2],edgeDirection=arguments[3];DirectedEdge$1.call(this,from,to,directionPt,edgeDirection);}inherits(LineMergeDirectedEdge,DirectedEdge$1);extend(LineMergeDirectedEdge.prototype,{getNext:function getNext(){if(this.getToNode().getDegree()!==2){return null;}if(this.getToNode().getOutEdges().getEdges().get(0)===this.getSym()){return this.getToNode().getOutEdges().getEdges().get(1);}Assert.isTrue(this.getToNode().getOutEdges().getEdges().get(1)===this.getSym());return this.getToNode().getOutEdges().getEdges().get(0);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return LineMergeDirectedEdge;}});function Edge$1(){GraphComponent$1.apply(this);this.dirEdge=null;if(arguments.length===0){}else if(arguments.length===2){var de0=arguments[0],de1=arguments[1];this.setDirectedEdges(de0,de1);}}inherits(Edge$1,GraphComponent$1);extend(Edge$1.prototype,{isRemoved:function isRemoved(){return this.dirEdge===null;},setDirectedEdges:function setDirectedEdges(de0,de1){this.dirEdge=[de0,de1];de0.setEdge(this);de1.setEdge(this);de0.setSym(de1);de1.setSym(de0);de0.getFromNode().addOutEdge(de0);de1.getFromNode().addOutEdge(de1);},getDirEdge:function getDirEdge(){if(Number.isInteger(arguments[0])){var i=arguments[0];return this.dirEdge[i];}else if(arguments[0]instanceof Node$3){var fromNode=arguments[0];if(this.dirEdge[0].getFromNode()===fromNode)return this.dirEdge[0];if(this.dirEdge[1].getFromNode()===fromNode)return this.dirEdge[1];return null;}},remove:function remove(){this.dirEdge=null;},getOppositeNode:function getOppositeNode(node){if(this.dirEdge[0].getFromNode()===node)return this.dirEdge[0].getToNode();if(this.dirEdge[1].getFromNode()===node)return this.dirEdge[1].getToNode();return null;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Edge$1;}});function DirectedEdgeStar$1(){this.outEdges=new ArrayList();this.sorted=false;}extend(DirectedEdgeStar$1.prototype,{getNextEdge:function getNextEdge(dirEdge){var i=this.getIndex(dirEdge);return this.outEdges.get(this.getIndex(i+1));},getCoordinate:function getCoordinate(){var it=this.iterator();if(!it.hasNext())return null;var e=it.next();return e.getCoordinate();},iterator:function iterator(){this.sortEdges();return this.outEdges.iterator();},sortEdges:function sortEdges(){if(!this.sorted){Collections.sort(this.outEdges);this.sorted=true;}},remove:function remove(de){this.outEdges.remove(de);},getEdges:function getEdges(){this.sortEdges();return this.outEdges;},getNextCWEdge:function getNextCWEdge(dirEdge){var i=this.getIndex(dirEdge);return this.outEdges.get(this.getIndex(i-1));},getIndex:function getIndex(){if(arguments[0]instanceof Edge$1){var edge=arguments[0];this.sortEdges();for(var i=0;i<this.outEdges.size();i++){var de=this.outEdges.get(i);if(de.getEdge()===edge)return i;}return-1;}else if(arguments[0]instanceof DirectedEdge$1){var dirEdge=arguments[0];this.sortEdges();for(var i=0;i<this.outEdges.size();i++){var de=this.outEdges.get(i);if(de===dirEdge)return i;}return-1;}else if(Number.isInteger(arguments[0])){var _i=arguments[0];var modi=_i%this.outEdges.size();if(modi<0)modi+=this.outEdges.size();return modi;}},add:function add(de){this.outEdges.add(de);this.sorted=false;},getDegree:function getDegree(){return this.outEdges.size();},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return DirectedEdgeStar$1;}});function Node$3(){GraphComponent$1.apply(this);this.pt=null;this.deStar=null;if(arguments.length===1){var pt=arguments[0];Node$3.call(this,pt,new DirectedEdgeStar$1());}else if(arguments.length===2){var _pt=arguments[0],deStar=arguments[1];this.pt=_pt;this.deStar=deStar;}}inherits(Node$3,GraphComponent$1);extend(Node$3.prototype,{isRemoved:function isRemoved(){return this.pt===null;},addOutEdge:function addOutEdge(de){this.deStar.add(de);},getCoordinate:function getCoordinate(){return this.pt;},getOutEdges:function getOutEdges(){return this.deStar;},remove:function remove(){if(arguments.length===0){this.pt=null;}else if(arguments.length===1){var de=arguments[0];this.deStar.remove(de);}},getIndex:function getIndex(edge){return this.deStar.getIndex(edge);},getDegree:function getDegree(){return this.deStar.getDegree();},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Node$3;}});Node$3.getEdgesBetween=function(node0,node1){var edges0=DirectedEdge$1.toEdges(node0.getOutEdges().getEdges());var commonEdges=new HashSet(edges0);var edges1=DirectedEdge$1.toEdges(node1.getOutEdges().getEdges());commonEdges.retainAll(edges1);return commonEdges;};function LineMergeEdge(){Edge$1.apply(this);this.line=null;var line=arguments[0];this.line=line;}inherits(LineMergeEdge,Edge$1);extend(LineMergeEdge.prototype,{getLine:function getLine(){return this.line;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return LineMergeEdge;}});function NodeMap$1(){this.nodeMap=new TreeMap();}extend(NodeMap$1.prototype,{find:function find(coord){return this.nodeMap.get(coord);},iterator:function iterator(){return this.nodeMap.values().iterator();},remove:function remove(pt){return this.nodeMap.remove(pt);},values:function values(){return this.nodeMap.values();},add:function add(n){this.nodeMap.put(n.getCoordinate(),n);return n;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return NodeMap$1;}});function PlanarGraph$1(){this.edges=new HashSet();this.dirEdges=new HashSet();this.nodeMap=new NodeMap$1();}extend(PlanarGraph$1.prototype,{findNodesOfDegree:function findNodesOfDegree(degree){var nodesFound=new ArrayList();for(var i=this.nodeIterator();i.hasNext();){var node=i.next();if(node.getDegree()===degree)nodesFound.add(node);}return nodesFound;},dirEdgeIterator:function dirEdgeIterator(){return this.dirEdges.iterator();},edgeIterator:function edgeIterator(){return this.edges.iterator();},remove:function remove(){if(arguments[0]instanceof Edge$1){var _edge=arguments[0];this.remove(_edge.getDirEdge(0));this.remove(_edge.getDirEdge(1));this.edges.remove(_edge);_edge.remove();}else if(arguments[0]instanceof DirectedEdge$1){var _de=arguments[0];var sym=_de.getSym();if(sym!==null)sym.setSym(null);_de.getFromNode().remove(_de);_de.remove();this.dirEdges.remove(_de);}else if(arguments[0]instanceof Node$3){var node=arguments[0];var outEdges=node.getOutEdges().getEdges();for(var i=outEdges.iterator();i.hasNext();){var de=i.next();var sym=de.getSym();if(sym!==null)this.remove(sym);this.dirEdges.remove(de);var edge=de.getEdge();if(edge!==null){this.edges.remove(edge);}}this.nodeMap.remove(node.getCoordinate());node.remove();}},findNode:function findNode(pt){return this.nodeMap.find(pt);},getEdges:function getEdges(){return this.edges;},nodeIterator:function nodeIterator(){return this.nodeMap.iterator();},contains:function contains(){if(arguments[0]instanceof Edge$1){var e=arguments[0];return this.edges.contains(e);}else if(arguments[0]instanceof DirectedEdge$1){var de=arguments[0];return this.dirEdges.contains(de);}},add:function add(){if(arguments[0]instanceof Node$3){var node=arguments[0];this.nodeMap.add(node);}else if(arguments[0]instanceof Edge$1){var edge=arguments[0];this.edges.add(edge);this.add(edge.getDirEdge(0));this.add(edge.getDirEdge(1));}else if(arguments[0]instanceof DirectedEdge$1){var dirEdge=arguments[0];this.dirEdges.add(dirEdge);}},getNodes:function getNodes(){return this.nodeMap.values();},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return PlanarGraph$1;}});function LineMergeGraph(){PlanarGraph$1.apply(this);}inherits(LineMergeGraph,PlanarGraph$1);extend(LineMergeGraph.prototype,{addEdge:function addEdge(lineString){if(lineString.isEmpty()){return null;}var coordinates=CoordinateArrays.removeRepeatedPoints(lineString.getCoordinates());if(coordinates.length<=1)return null;var startCoordinate=coordinates[0];var endCoordinate=coordinates[coordinates.length-1];var startNode=this.getNode(startCoordinate);var endNode=this.getNode(endCoordinate);var directedEdge0=new LineMergeDirectedEdge(startNode,endNode,coordinates[1],true);var directedEdge1=new LineMergeDirectedEdge(endNode,startNode,coordinates[coordinates.length-2],false);var edge=new LineMergeEdge(lineString);edge.setDirectedEdges(directedEdge0,directedEdge1);this.add(edge);},getNode:function getNode(coordinate){var node=this.findNode(coordinate);if(node===null){node=new Node$3(coordinate);this.add(node);}return node;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return LineMergeGraph;}});function LineMerger(){this.graph=new LineMergeGraph();this.mergedLineStrings=null;this.factory=null;this.edgeStrings=null;}extend(LineMerger.prototype,{buildEdgeStringsForUnprocessedNodes:function buildEdgeStringsForUnprocessedNodes(){for(var i=this.graph.getNodes().iterator();i.hasNext();){var node=i.next();if(!node.isMarked()){Assert.isTrue(node.getDegree()===2);this.buildEdgeStringsStartingAt(node);node.setMarked(true);}}},buildEdgeStringsForNonDegree2Nodes:function buildEdgeStringsForNonDegree2Nodes(){for(var i=this.graph.getNodes().iterator();i.hasNext();){var node=i.next();if(node.getDegree()!==2){this.buildEdgeStringsStartingAt(node);node.setMarked(true);}}},buildEdgeStringsForObviousStartNodes:function buildEdgeStringsForObviousStartNodes(){this.buildEdgeStringsForNonDegree2Nodes();},getMergedLineStrings:function getMergedLineStrings(){this.merge();return this.mergedLineStrings;},buildEdgeStringsStartingAt:function buildEdgeStringsStartingAt(node){for(var i=node.getOutEdges().iterator();i.hasNext();){var directedEdge=i.next();if(directedEdge.getEdge().isMarked()){continue;}this.edgeStrings.add(this.buildEdgeStringStartingWith(directedEdge));}},merge:function merge(){if(this.mergedLineStrings!==null){return null;}GraphComponent$1.setMarked(this.graph.nodeIterator(),false);GraphComponent$1.setMarked(this.graph.edgeIterator(),false);this.edgeStrings=new ArrayList();this.buildEdgeStringsForObviousStartNodes();this.buildEdgeStringsForIsolatedLoops();this.mergedLineStrings=new ArrayList();for(var i=this.edgeStrings.iterator();i.hasNext();){var edgeString=i.next();this.mergedLineStrings.add(edgeString.toLineString());}},buildEdgeStringStartingWith:function buildEdgeStringStartingWith(start){var edgeString=new EdgeString(this.factory);var current=start;do{edgeString.add(current);current.getEdge().setMarked(true);current=current.getNext();}while(current!==null&&current!==start);return edgeString;},add:function add(){if(arguments[0]instanceof Geometry){var _geometry=arguments[0];_geometry.apply({interfaces_:function interfaces_(){return[GeometryComponentFilter];},filter:function filter(component){if(component instanceof LineString){this.add(component);}}});}else if(hasInterface(arguments[0],Collection)){var geometries=arguments[0];this.mergedLineStrings=null;for(var i=geometries.iterator();i.hasNext();){var geometry=i.next();this.add(geometry);}}else if(arguments[0]instanceof LineString){var lineString=arguments[0];if(this.factory===null){this.factory=lineString.getFactory();}this.graph.addEdge(lineString);}},buildEdgeStringsForIsolatedLoops:function buildEdgeStringsForIsolatedLoops(){this.buildEdgeStringsForUnprocessedNodes();},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return LineMerger;}});var linemerge=Object.freeze({LineMerger:LineMerger});var overlay=Object.freeze({OverlayOp:OverlayOp});function PolygonizeDirectedEdge(){this.edgeRing=null;this.next=null;this.label=-1;var from=arguments[0],to=arguments[1],directionPt=arguments[2],edgeDirection=arguments[3];DirectedEdge$1.call(this,from,to,directionPt,edgeDirection);}inherits(PolygonizeDirectedEdge,DirectedEdge$1);extend(PolygonizeDirectedEdge.prototype,{getNext:function getNext(){return this.next;},isInRing:function isInRing(){return this.edgeRing!==null;},setRing:function setRing(edgeRing){this.edgeRing=edgeRing;},setLabel:function setLabel(label){this.label=label;},getLabel:function getLabel(){return this.label;},setNext:function setNext(next){this.next=next;},getRing:function getRing(){return this.edgeRing;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return PolygonizeDirectedEdge;}});function PolygonizeEdge(){Edge$1.apply(this);this.line=null;var line=arguments[0];this.line=line;}inherits(PolygonizeEdge,Edge$1);extend(PolygonizeEdge.prototype,{getLine:function getLine(){return this.line;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return PolygonizeEdge;}});function ConnectedInteriorTester(){this.geometryFactory=new GeometryFactory();this.geomGraph=null;this.disconnectedRingcoord=null;var geomGraph=arguments[0];this.geomGraph=geomGraph;}extend(ConnectedInteriorTester.prototype,{visitInteriorRing:function visitInteriorRing(ring,graph){var pts=ring.getCoordinates();var pt0=pts[0];var pt1=ConnectedInteriorTester.findDifferentPoint(pts,pt0);var e=graph.findEdgeInSameDirection(pt0,pt1);var de=graph.findEdgeEnd(e);var intDe=null;if(de.getLabel().getLocation(0,Position.RIGHT)===Location.INTERIOR){intDe=de;}else if(de.getSym().getLabel().getLocation(0,Position.RIGHT)===Location.INTERIOR){intDe=de.getSym();}Assert.isTrue(intDe!==null,\"unable to find dirEdge with Interior on RHS\");this.visitLinkedDirectedEdges(intDe);},visitShellInteriors:function visitShellInteriors(g,graph){if(g instanceof Polygon){var p=g;this.visitInteriorRing(p.getExteriorRing(),graph);}if(g instanceof MultiPolygon){var mp=g;for(var i=0;i<mp.getNumGeometries();i++){var p=mp.getGeometryN(i);this.visitInteriorRing(p.getExteriorRing(),graph);}}},getCoordinate:function getCoordinate(){return this.disconnectedRingcoord;},setInteriorEdgesInResult:function setInteriorEdgesInResult(graph){for(var it=graph.getEdgeEnds().iterator();it.hasNext();){var de=it.next();if(de.getLabel().getLocation(0,Position.RIGHT)===Location.INTERIOR){de.setInResult(true);}}},visitLinkedDirectedEdges:function visitLinkedDirectedEdges(start){var startDe=start;var de=start;do{Assert.isTrue(de!==null,\"found null Directed Edge\");de.setVisited(true);de=de.getNext();}while(de!==startDe);},buildEdgeRings:function buildEdgeRings(dirEdges){var edgeRings=new ArrayList();for(var it=dirEdges.iterator();it.hasNext();){var de=it.next();if(de.isInResult()&&de.getEdgeRing()===null){var er=new MaximalEdgeRing(de,this.geometryFactory);er.linkDirectedEdgesForMinimalEdgeRings();var minEdgeRings=er.buildMinimalRings();edgeRings.addAll(minEdgeRings);}}return edgeRings;},hasUnvisitedShellEdge:function hasUnvisitedShellEdge(edgeRings){for(var i=0;i<edgeRings.size();i++){var er=edgeRings.get(i);if(er.isHole())continue;var edges=er.getEdges();var de=edges.get(0);if(de.getLabel().getLocation(0,Position.RIGHT)!==Location.INTERIOR)continue;for(var j=0;j<edges.size();j++){de=edges.get(j);if(!de.isVisited()){this.disconnectedRingcoord=de.getCoordinate();return true;}}}return false;},isInteriorsConnected:function isInteriorsConnected(){var splitEdges=new ArrayList();this.geomGraph.computeSplitEdges(splitEdges);var graph=new PlanarGraph(new OverlayNodeFactory());graph.addEdges(splitEdges);this.setInteriorEdgesInResult(graph);graph.linkResultDirectedEdges();var edgeRings=this.buildEdgeRings(graph.getEdgeEnds());this.visitShellInteriors(this.geomGraph.getGeometry(),graph);return!this.hasUnvisitedShellEdge(edgeRings);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return ConnectedInteriorTester;}});ConnectedInteriorTester.findDifferentPoint=function(coord,pt){for(var i=0;i<coord.length;i++){if(!coord[i].equals(pt))return coord[i];}return null;};function EdgeEndBuilder(){}extend(EdgeEndBuilder.prototype,{createEdgeEndForNext:function createEdgeEndForNext(edge,l,eiCurr,eiNext){var iNext=eiCurr.segmentIndex+1;if(iNext>=edge.getNumPoints()&&eiNext===null)return null;var pNext=edge.getCoordinate(iNext);if(eiNext!==null&&eiNext.segmentIndex===eiCurr.segmentIndex)pNext=eiNext.coord;var e=new EdgeEnd(edge,eiCurr.coord,pNext,new Label(edge.getLabel()));l.add(e);},createEdgeEndForPrev:function createEdgeEndForPrev(edge,l,eiCurr,eiPrev){var iPrev=eiCurr.segmentIndex;if(eiCurr.dist===0.0){if(iPrev===0)return null;iPrev--;}var pPrev=edge.getCoordinate(iPrev);if(eiPrev!==null&&eiPrev.segmentIndex>=iPrev)pPrev=eiPrev.coord;var label=new Label(edge.getLabel());label.flip();var e=new EdgeEnd(edge,eiCurr.coord,pPrev,label);l.add(e);},computeEdgeEnds:function computeEdgeEnds(){if(arguments.length===1){var edges=arguments[0];var l=new ArrayList();for(var i=edges;i.hasNext();){var e=i.next();this.computeEdgeEnds(e,l);}return l;}else if(arguments.length===2){var edge=arguments[0],_l=arguments[1];var eiList=edge.getEdgeIntersectionList();eiList.addEndpoints();var it=eiList.iterator();var eiPrev=null;var eiCurr=null;if(!it.hasNext())return null;var eiNext=it.next();do{eiPrev=eiCurr;eiCurr=eiNext;eiNext=null;if(it.hasNext())eiNext=it.next();if(eiCurr!==null){this.createEdgeEndForPrev(edge,_l,eiCurr,eiPrev);this.createEdgeEndForNext(edge,_l,eiCurr,eiNext);}}while(eiCurr!==null);}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return EdgeEndBuilder;}});function EdgeEndBundle(){this.edgeEnds=new ArrayList();if(arguments.length===1){var e=arguments[0];EdgeEndBundle.call(this,null,e);}else if(arguments.length===2){var boundaryNodeRule=arguments[0],_e=arguments[1];EdgeEnd.call(this,_e.getEdge(),_e.getCoordinate(),_e.getDirectedCoordinate(),new Label(_e.getLabel()));this.insert(_e);}}inherits(EdgeEndBundle,EdgeEnd);extend(EdgeEndBundle.prototype,{insert:function insert(e){this.edgeEnds.add(e);},print:function print(out){out.println(\"EdgeEndBundle--> Label: \"+this.label);for(var it=this.iterator();it.hasNext();){var ee=it.next();ee.print(out);out.println();}},iterator:function iterator(){return this.edgeEnds.iterator();},getEdgeEnds:function getEdgeEnds(){return this.edgeEnds;},computeLabelOn:function computeLabelOn(geomIndex,boundaryNodeRule){var boundaryCount=0;var foundInterior=false;for(var it=this.iterator();it.hasNext();){var e=it.next();var loc=e.getLabel().getLocation(geomIndex);if(loc===Location.BOUNDARY)boundaryCount++;if(loc===Location.INTERIOR)foundInterior=true;}var loc=Location.NONE;if(foundInterior)loc=Location.INTERIOR;if(boundaryCount>0){loc=GeometryGraph.determineBoundary(boundaryNodeRule,boundaryCount);}this.label.setLocation(geomIndex,loc);},computeLabelSide:function computeLabelSide(geomIndex,side){for(var it=this.iterator();it.hasNext();){var e=it.next();if(e.getLabel().isArea()){var loc=e.getLabel().getLocation(geomIndex,side);if(loc===Location.INTERIOR){this.label.setLocation(geomIndex,side,Location.INTERIOR);return null;}else if(loc===Location.EXTERIOR)this.label.setLocation(geomIndex,side,Location.EXTERIOR);}}},getLabel:function getLabel(){return this.label;},computeLabelSides:function computeLabelSides(geomIndex){this.computeLabelSide(geomIndex,Position.LEFT);this.computeLabelSide(geomIndex,Position.RIGHT);},updateIM:function updateIM(im){Edge.updateIM(this.label,im);},computeLabel:function computeLabel(boundaryNodeRule){var isArea=false;for(var it=this.iterator();it.hasNext();){var e=it.next();if(e.getLabel().isArea())isArea=true;}if(isArea)this.label=new Label(Location.NONE,Location.NONE,Location.NONE);else this.label=new Label(Location.NONE);for(var i=0;i<2;i++){this.computeLabelOn(i,boundaryNodeRule);if(isArea)this.computeLabelSides(i);}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return EdgeEndBundle;}});function EdgeEndBundleStar(){EdgeEndStar.apply(this);}inherits(EdgeEndBundleStar,EdgeEndStar);extend(EdgeEndBundleStar.prototype,{updateIM:function updateIM(im){for(var it=this.iterator();it.hasNext();){var esb=it.next();esb.updateIM(im);}},insert:function insert(e){var eb=this.edgeMap.get(e);if(eb===null){eb=new EdgeEndBundle(e);this.insertEdgeEnd(e,eb);}else{eb.insert(e);}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return EdgeEndBundleStar;}});function RelateNode(){var coord=arguments[0],edges=arguments[1];Node.call(this,coord,edges);}inherits(RelateNode,Node);extend(RelateNode.prototype,{updateIMFromEdges:function updateIMFromEdges(im){this.edges.updateIM(im);},computeIM:function computeIM(im){im.setAtLeastIfValid(this.label.getLocation(0),this.label.getLocation(1),0);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return RelateNode;}});function RelateNodeFactory(){NodeFactory.apply(this);}inherits(RelateNodeFactory,NodeFactory);extend(RelateNodeFactory.prototype,{createNode:function createNode(coord){return new RelateNode(coord,new EdgeEndBundleStar());},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return RelateNodeFactory;}});function RelateNodeGraph(){this.nodes=new NodeMap(new RelateNodeFactory());}extend(RelateNodeGraph.prototype,{insertEdgeEnds:function insertEdgeEnds(ee){for(var i=ee.iterator();i.hasNext();){var e=i.next();this.nodes.add(e);}},getNodeIterator:function getNodeIterator(){return this.nodes.iterator();},copyNodesAndLabels:function copyNodesAndLabels(geomGraph,argIndex){for(var nodeIt=geomGraph.getNodeIterator();nodeIt.hasNext();){var graphNode=nodeIt.next();var newNode=this.nodes.addNode(graphNode.getCoordinate());newNode.setLabel(argIndex,graphNode.getLabel().getLocation(argIndex));}},build:function build(geomGraph){this.computeIntersectionNodes(geomGraph,0);this.copyNodesAndLabels(geomGraph,0);var eeBuilder=new EdgeEndBuilder();var eeList=eeBuilder.computeEdgeEnds(geomGraph.getEdgeIterator());this.insertEdgeEnds(eeList);},computeIntersectionNodes:function computeIntersectionNodes(geomGraph,argIndex){for(var edgeIt=geomGraph.getEdgeIterator();edgeIt.hasNext();){var e=edgeIt.next();var eLoc=e.getLabel().getLocation(argIndex);for(var eiIt=e.getEdgeIntersectionList().iterator();eiIt.hasNext();){var ei=eiIt.next();var n=this.nodes.addNode(ei.coord);if(eLoc===Location.BOUNDARY)n.setLabelBoundary(argIndex);else{if(n.getLabel().isNull(argIndex))n.setLabel(argIndex,Location.INTERIOR);}}}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return RelateNodeGraph;}});function ConsistentAreaTester(){this.li=new RobustLineIntersector();this.geomGraph=null;this.nodeGraph=new RelateNodeGraph();this.invalidPoint=null;var geomGraph=arguments[0];this.geomGraph=geomGraph;}extend(ConsistentAreaTester.prototype,{isNodeEdgeAreaLabelsConsistent:function isNodeEdgeAreaLabelsConsistent(){for(var nodeIt=this.nodeGraph.getNodeIterator();nodeIt.hasNext();){var node=nodeIt.next();if(!node.getEdges().isAreaLabelsConsistent(this.geomGraph)){this.invalidPoint=node.getCoordinate().copy();return false;}}return true;},getInvalidPoint:function getInvalidPoint(){return this.invalidPoint;},hasDuplicateRings:function hasDuplicateRings(){for(var nodeIt=this.nodeGraph.getNodeIterator();nodeIt.hasNext();){var node=nodeIt.next();for(var i=node.getEdges().iterator();i.hasNext();){var eeb=i.next();if(eeb.getEdgeEnds().size()>1){this.invalidPoint=eeb.getEdge().getCoordinate(0);return true;}}}return false;},isNodeConsistentArea:function isNodeConsistentArea(){var intersector=this.geomGraph.computeSelfNodes(this.li,true,true);if(intersector.hasProperIntersection()){this.invalidPoint=intersector.getProperIntersectionPoint();return false;}this.nodeGraph.build(this.geomGraph);return this.isNodeEdgeAreaLabelsConsistent();},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return ConsistentAreaTester;}});function IndexedNestedRingTester(){this.graph=null;this.rings=new ArrayList();this.totalEnv=new Envelope();this.index=null;this.nestedPt=null;var graph=arguments[0];this.graph=graph;}extend(IndexedNestedRingTester.prototype,{buildIndex:function buildIndex(){this.index=new STRtree();for(var i=0;i<this.rings.size();i++){var ring=this.rings.get(i);var env=ring.getEnvelopeInternal();this.index.insert(env,ring);}},getNestedPoint:function getNestedPoint(){return this.nestedPt;},isNonNested:function isNonNested(){this.buildIndex();for(var i=0;i<this.rings.size();i++){var innerRing=this.rings.get(i);var innerRingPts=innerRing.getCoordinates();var results=this.index.query(innerRing.getEnvelopeInternal());for(var j=0;j<results.size();j++){var searchRing=results.get(j);var searchRingPts=searchRing.getCoordinates();if(innerRing===searchRing)continue;if(!innerRing.getEnvelopeInternal().intersects(searchRing.getEnvelopeInternal()))continue;var innerRingPt=IsValidOp.findPtNotNode(innerRingPts,searchRing,this.graph);if(innerRingPt===null)continue;var isInside=CGAlgorithms.isPointInRing(innerRingPt,searchRingPts);if(isInside){this.nestedPt=innerRingPt;return false;}}}return true;},add:function add(ring){this.rings.add(ring);this.totalEnv.expandToInclude(ring.getEnvelopeInternal());},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return IndexedNestedRingTester;}});function TopologyValidationError(){this.errorType=null;this.pt=null;if(arguments.length===1){var errorType=arguments[0];TopologyValidationError.call(this,errorType,null);}else if(arguments.length===2){var _errorType=arguments[0],pt=arguments[1];this.errorType=_errorType;if(pt!==null)this.pt=pt.copy();}}extend(TopologyValidationError.prototype,{getErrorType:function getErrorType(){return this.errorType;},getMessage:function getMessage(){return TopologyValidationError.errMsg[this.errorType];},getCoordinate:function getCoordinate(){return this.pt;},toString:function toString(){var locStr=\"\";if(this.pt!==null)locStr=\" at or near point \"+this.pt;return this.getMessage()+locStr;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return TopologyValidationError;}});TopologyValidationError.ERROR=0;TopologyValidationError.REPEATED_POINT=1;TopologyValidationError.HOLE_OUTSIDE_SHELL=2;TopologyValidationError.NESTED_HOLES=3;TopologyValidationError.DISCONNECTED_INTERIOR=4;TopologyValidationError.SELF_INTERSECTION=5;TopologyValidationError.RING_SELF_INTERSECTION=6;TopologyValidationError.NESTED_SHELLS=7;TopologyValidationError.DUPLICATE_RINGS=8;TopologyValidationError.TOO_FEW_POINTS=9;TopologyValidationError.INVALID_COORDINATE=10;TopologyValidationError.RING_NOT_CLOSED=11;TopologyValidationError.errMsg=[\"Topology Validation Error\",\"Repeated Point\",\"Hole lies outside shell\",\"Holes are nested\",\"Interior is disconnected\",\"Self-intersection\",\"Ring Self-intersection\",\"Nested shells\",\"Duplicate Rings\",\"Too few distinct points in geometry component\",\"Invalid Coordinate\",\"Ring is not closed\"];function IsValidOp(){this.parentGeometry=null;this.isSelfTouchingRingFormingHoleValid=false;this.validErr=null;var parentGeometry=arguments[0];this.parentGeometry=parentGeometry;}extend(IsValidOp.prototype,{checkInvalidCoordinates:function checkInvalidCoordinates(){if(arguments[0]instanceof Array){var coords=arguments[0];for(var i=0;i<coords.length;i++){if(!IsValidOp.isValid(coords[i])){this.validErr=new TopologyValidationError(TopologyValidationError.INVALID_COORDINATE,coords[i]);return null;}}}else if(arguments[0]instanceof Polygon){var poly=arguments[0];this.checkInvalidCoordinates(poly.getExteriorRing().getCoordinates());if(this.validErr!==null)return null;for(var i=0;i<poly.getNumInteriorRing();i++){this.checkInvalidCoordinates(poly.getInteriorRingN(i).getCoordinates());if(this.validErr!==null)return null;}}},checkHolesNotNested:function checkHolesNotNested(p,graph){var nestedTester=new IndexedNestedRingTester(graph);for(var i=0;i<p.getNumInteriorRing();i++){var innerHole=p.getInteriorRingN(i);nestedTester.add(innerHole);}var isNonNested=nestedTester.isNonNested();if(!isNonNested){this.validErr=new TopologyValidationError(TopologyValidationError.NESTED_HOLES,nestedTester.getNestedPoint());}},checkConsistentArea:function checkConsistentArea(graph){var cat=new ConsistentAreaTester(graph);var isValidArea=cat.isNodeConsistentArea();if(!isValidArea){this.validErr=new TopologyValidationError(TopologyValidationError.SELF_INTERSECTION,cat.getInvalidPoint());return null;}if(cat.hasDuplicateRings()){this.validErr=new TopologyValidationError(TopologyValidationError.DUPLICATE_RINGS,cat.getInvalidPoint());}},isValid:function isValid(){this.checkValid(this.parentGeometry);return this.validErr===null;},checkShellInsideHole:function checkShellInsideHole(shell,hole,graph){var shellPts=shell.getCoordinates();var holePts=hole.getCoordinates();var shellPt=IsValidOp.findPtNotNode(shellPts,hole,graph);if(shellPt!==null){var insideHole=CGAlgorithms.isPointInRing(shellPt,holePts);if(!insideHole){return shellPt;}}var holePt=IsValidOp.findPtNotNode(holePts,shell,graph);if(holePt!==null){var insideShell=CGAlgorithms.isPointInRing(holePt,shellPts);if(insideShell){return holePt;}return null;}Assert.shouldNeverReachHere(\"points in shell and hole appear to be equal\");return null;},checkNoSelfIntersectingRings:function checkNoSelfIntersectingRings(graph){for(var i=graph.getEdgeIterator();i.hasNext();){var e=i.next();this.checkNoSelfIntersectingRing(e.getEdgeIntersectionList());if(this.validErr!==null)return null;}},checkConnectedInteriors:function checkConnectedInteriors(graph){var cit=new ConnectedInteriorTester(graph);if(!cit.isInteriorsConnected())this.validErr=new TopologyValidationError(TopologyValidationError.DISCONNECTED_INTERIOR,cit.getCoordinate());},checkNoSelfIntersectingRing:function checkNoSelfIntersectingRing(eiList){var nodeSet=new TreeSet();var isFirst=true;for(var i=eiList.iterator();i.hasNext();){var ei=i.next();if(isFirst){isFirst=false;continue;}if(nodeSet.contains(ei.coord)){this.validErr=new TopologyValidationError(TopologyValidationError.RING_SELF_INTERSECTION,ei.coord);return null;}else{nodeSet.add(ei.coord);}}},checkHolesInShell:function checkHolesInShell(p,graph){var shell=p.getExteriorRing();var pir=new MCPointInRing(shell);for(var i=0;i<p.getNumInteriorRing();i++){var hole=p.getInteriorRingN(i);var holePt=IsValidOp.findPtNotNode(hole.getCoordinates(),shell,graph);if(holePt===null)return null;var outside=!pir.isInside(holePt);if(outside){this.validErr=new TopologyValidationError(TopologyValidationError.HOLE_OUTSIDE_SHELL,holePt);return null;}}},checkTooFewPoints:function checkTooFewPoints(graph){if(graph.hasTooFewPoints()){this.validErr=new TopologyValidationError(TopologyValidationError.TOO_FEW_POINTS,graph.getInvalidPoint());return null;}},getValidationError:function getValidationError(){this.checkValid(this.parentGeometry);return this.validErr;},checkValid:function checkValid(){if(arguments[0]instanceof Point){var _g=arguments[0];this.checkInvalidCoordinates(_g.getCoordinates());}else if(arguments[0]instanceof MultiPoint){var _g2=arguments[0];this.checkInvalidCoordinates(_g2.getCoordinates());}else if(arguments[0]instanceof LinearRing){var _g3=arguments[0];this.checkInvalidCoordinates(_g3.getCoordinates());if(this.validErr!==null)return null;this.checkClosedRing(_g3);if(this.validErr!==null)return null;var graph=new GeometryGraph(0,_g3);this.checkTooFewPoints(graph);if(this.validErr!==null)return null;var li=new RobustLineIntersector();graph.computeSelfNodes(li,true,true);this.checkNoSelfIntersectingRings(graph);}else if(arguments[0]instanceof LineString){var _g4=arguments[0];this.checkInvalidCoordinates(_g4.getCoordinates());if(this.validErr!==null)return null;var graph=new GeometryGraph(0,_g4);this.checkTooFewPoints(graph);}else if(arguments[0]instanceof Polygon){var _g5=arguments[0];this.checkInvalidCoordinates(_g5);if(this.validErr!==null)return null;this.checkClosedRings(_g5);if(this.validErr!==null)return null;var graph=new GeometryGraph(0,_g5);this.checkTooFewPoints(graph);if(this.validErr!==null)return null;this.checkConsistentArea(graph);if(this.validErr!==null)return null;if(!this.isSelfTouchingRingFormingHoleValid){this.checkNoSelfIntersectingRings(graph);if(this.validErr!==null)return null;}this.checkHolesInShell(_g5,graph);if(this.validErr!==null)return null;this.checkHolesNotNested(_g5,graph);if(this.validErr!==null)return null;this.checkConnectedInteriors(graph);}else if(arguments[0]instanceof MultiPolygon){var _g6=arguments[0];for(var i=0;i<_g6.getNumGeometries();i++){var p=_g6.getGeometryN(i);this.checkInvalidCoordinates(p);if(this.validErr!==null)return null;this.checkClosedRings(p);if(this.validErr!==null)return null;}var graph=new GeometryGraph(0,_g6);this.checkTooFewPoints(graph);if(this.validErr!==null)return null;this.checkConsistentArea(graph);if(this.validErr!==null)return null;if(!this.isSelfTouchingRingFormingHoleValid){this.checkNoSelfIntersectingRings(graph);if(this.validErr!==null)return null;}for(var i=0;i<_g6.getNumGeometries();i++){var p=_g6.getGeometryN(i);this.checkHolesInShell(p,graph);if(this.validErr!==null)return null;}for(var i=0;i<_g6.getNumGeometries();i++){var p=_g6.getGeometryN(i);this.checkHolesNotNested(p,graph);if(this.validErr!==null)return null;}this.checkShellsNotNested(_g6,graph);if(this.validErr!==null)return null;this.checkConnectedInteriors(graph);}else if(arguments[0]instanceof GeometryCollection){var gc=arguments[0];for(var i=0;i<gc.getNumGeometries();i++){var g=gc.getGeometryN(i);this.checkValid(g);if(this.validErr!==null)return null;}}else if(arguments[0]instanceof Geometry){var _g7=arguments[0];this.validErr=null;if(_g7.isEmpty())return null;if(_g7 instanceof Point)this.checkValid(_g7);else if(_g7 instanceof MultiPoint)this.checkValid(_g7);else if(_g7 instanceof LinearRing)this.checkValid(_g7);else if(_g7 instanceof LineString)this.checkValid(_g7);else if(_g7 instanceof Polygon)this.checkValid(_g7);else if(_g7 instanceof MultiPolygon)this.checkValid(_g7);else if(_g7 instanceof GeometryCollection)this.checkValid(_g7);else throw new UnsupportedOperationException(_g7.getClass().getName());}},setSelfTouchingRingFormingHoleValid:function setSelfTouchingRingFormingHoleValid(isValid){this.isSelfTouchingRingFormingHoleValid=isValid;},checkShellNotNested:function checkShellNotNested(shell,p,graph){var shellPts=shell.getCoordinates();var polyShell=p.getExteriorRing();var polyPts=polyShell.getCoordinates();var shellPt=IsValidOp.findPtNotNode(shellPts,polyShell,graph);if(shellPt===null)return null;var insidePolyShell=CGAlgorithms.isPointInRing(shellPt,polyPts);if(!insidePolyShell)return null;if(p.getNumInteriorRing()<=0){this.validErr=new TopologyValidationError(TopologyValidationError.NESTED_SHELLS,shellPt);return null;}var badNestedPt=null;for(var i=0;i<p.getNumInteriorRing();i++){var hole=p.getInteriorRingN(i);badNestedPt=this.checkShellInsideHole(shell,hole,graph);if(badNestedPt===null)return null;}this.validErr=new TopologyValidationError(TopologyValidationError.NESTED_SHELLS,badNestedPt);},checkClosedRings:function checkClosedRings(poly){this.checkClosedRing(poly.getExteriorRing());if(this.validErr!==null)return null;for(var i=0;i<poly.getNumInteriorRing();i++){this.checkClosedRing(poly.getInteriorRingN(i));if(this.validErr!==null)return null;}},checkClosedRing:function checkClosedRing(ring){if(!ring.isClosed()){var pt=null;if(ring.getNumPoints()>=1)pt=ring.getCoordinateN(0);this.validErr=new TopologyValidationError(TopologyValidationError.RING_NOT_CLOSED,pt);}},checkShellsNotNested:function checkShellsNotNested(mp,graph){for(var i=0;i<mp.getNumGeometries();i++){var p=mp.getGeometryN(i);var shell=p.getExteriorRing();for(var j=0;j<mp.getNumGeometries();j++){if(i===j)continue;var p2=mp.getGeometryN(j);this.checkShellNotNested(shell,p2,graph);if(this.validErr!==null)return null;}}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return IsValidOp;}});IsValidOp.findPtNotNode=function(testCoords,searchRing,graph){var searchEdge=graph.findEdge(searchRing);var eiList=searchEdge.getEdgeIntersectionList();for(var i=0;i<testCoords.length;i++){var pt=testCoords[i];if(!eiList.isIntersection(pt))return pt;}return null;};IsValidOp.isValid=function(){if(arguments[0]instanceof Geometry){var geom=arguments[0];var isValidOp=new IsValidOp(geom);return isValidOp.isValid();}else if(arguments[0]instanceof Coordinate){var coord=arguments[0];if(Double.isNaN(coord.x))return false;if(Double.isInfinite(coord.x))return false;if(Double.isNaN(coord.y))return false;if(Double.isInfinite(coord.y))return false;return true;}};function EdgeRing$1(){this.factory=null;this.deList=new ArrayList();this.lowestEdge=null;this.ring=null;this.ringPts=null;this.holes=null;this.shell=null;this._isHole=null;this._isProcessed=false;this._isIncludedSet=false;this._isIncluded=false;var factory=arguments[0];this.factory=factory;}extend(EdgeRing$1.prototype,{isIncluded:function isIncluded(){return this._isIncluded;},getCoordinates:function getCoordinates(){if(this.ringPts===null){var coordList=new CoordinateList();for(var i=this.deList.iterator();i.hasNext();){var de=i.next();var edge=de.getEdge();EdgeRing$1.addEdge(edge.getLine().getCoordinates(),de.getEdgeDirection(),coordList);}this.ringPts=coordList.toCoordinateArray();}return this.ringPts;},isIncludedSet:function isIncludedSet(){return this._isIncludedSet;},isValid:function isValid(){this.getCoordinates();if(this.ringPts.length<=3)return false;this.getRing();return IsValidOp.isValid(this.ring);},build:function build(startDE){var de=startDE;do{this.add(de);de.setRing(this);de=de.getNext();Assert.isTrue(de!==null,\"found null DE in ring\");Assert.isTrue(de===startDE||!de.isInRing(),\"found DE already in ring\");}while(de!==startDE);},isOuterHole:function isOuterHole(){if(!this._isHole)return false;return!this.hasShell();},getPolygon:function getPolygon(){var holeLR=null;if(this.holes!==null){holeLR=new Array(this.holes.size()).fill(null);for(var i=0;i<this.holes.size();i++){holeLR[i]=this.holes.get(i);}}var poly=this.factory.createPolygon(this.ring,holeLR);return poly;},isHole:function isHole(){return this._isHole;},isProcessed:function isProcessed(){return this._isProcessed;},addHole:function addHole(){if(arguments[0]instanceof LinearRing){var _hole=arguments[0];if(this.holes===null)this.holes=new ArrayList();this.holes.add(_hole);}else if(arguments[0]instanceof EdgeRing$1){var holeER=arguments[0];holeER.setShell(this);var hole=holeER.getRing();if(this.holes===null)this.holes=new ArrayList();this.holes.add(hole);}},setIncluded:function setIncluded(isIncluded){this._isIncluded=isIncluded;this._isIncludedSet=true;},getOuterHole:function getOuterHole(){if(this.isHole())return null;for(var i=0;i<this.deList.size();i++){var de=this.deList.get(i);var adjRing=de.getSym().getRing();if(adjRing.isOuterHole())return adjRing;}return null;},computeHole:function computeHole(){var ring=this.getRing();this._isHole=CGAlgorithms.isCCW(ring.getCoordinates());},hasShell:function hasShell(){return this.shell!==null;},isOuterShell:function isOuterShell(){return this.getOuterHole()!==null;},getLineString:function getLineString(){this.getCoordinates();return this.factory.createLineString(this.ringPts);},toString:function toString(){return WKTWriter.toLineString(new CoordinateArraySequence(this.getCoordinates()));},getShell:function getShell(){if(this.isHole())return this.shell;return this;},add:function add(de){this.deList.add(de);},getRing:function getRing(){if(this.ring!==null)return this.ring;this.getCoordinates();if(this.ringPts.length<3)System.out.println(this.ringPts);try{this.ring=this.factory.createLinearRing(this.ringPts);}catch(ex){if(ex instanceof Exception){System.out.println(this.ringPts);}else throw ex;}finally{}return this.ring;},updateIncluded:function updateIncluded(){if(this.isHole())return null;for(var i=0;i<this.deList.size();i++){var de=this.deList.get(i);var adjShell=de.getSym().getRing().getShell();if(adjShell!==null&&adjShell.isIncludedSet()){this.setIncluded(!adjShell.isIncluded());return null;}}},setShell:function setShell(shell){this.shell=shell;},setProcessed:function setProcessed(isProcessed){this._isProcessed=isProcessed;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return EdgeRing$1;}});EdgeRing$1.findDirEdgesInRing=function(startDE){var de=startDE;var edges=new ArrayList();do{edges.add(de);de=de.getNext();Assert.isTrue(de!==null,\"found null DE in ring\");Assert.isTrue(de===startDE||!de.isInRing(),\"found DE already in ring\");}while(de!==startDE);return edges;};EdgeRing$1.addEdge=function(coords,isForward,coordList){if(isForward){for(var i=0;i<coords.length;i++){coordList.add(coords[i],false);}}else{for(var i=coords.length-1;i>=0;i--){coordList.add(coords[i],false);}}};EdgeRing$1.findEdgeRingContaining=function(testEr,shellList){var testRing=testEr.getRing();var testEnv=testRing.getEnvelopeInternal();var testPt=testRing.getCoordinateN(0);var minShell=null;var minShellEnv=null;for(var it=shellList.iterator();it.hasNext();){var tryShell=it.next();var tryShellRing=tryShell.getRing();var tryShellEnv=tryShellRing.getEnvelopeInternal();if(tryShellEnv.equals(testEnv))continue;if(!tryShellEnv.contains(testEnv))continue;testPt=CoordinateArrays.ptNotInList(testRing.getCoordinates(),tryShellRing.getCoordinates());var isContained=false;if(CGAlgorithms.isPointInRing(testPt,tryShellRing.getCoordinates()))isContained=true;if(isContained){if(minShell===null||minShellEnv.contains(tryShellEnv)){minShell=tryShell;minShellEnv=minShell.getRing().getEnvelopeInternal();}}}return minShell;};function EnvelopeComparator(){}extend(EnvelopeComparator.prototype,{compare:function compare(obj0,obj1){var r0=obj0;var r1=obj1;return r0.getRing().getEnvelope().compareTo(r1.getRing().getEnvelope());},interfaces_:function interfaces_(){return[Comparator];},getClass:function getClass(){return EnvelopeComparator;}});EdgeRing$1.EnvelopeComparator=EnvelopeComparator;function PolygonizeGraph(){PlanarGraph$1.apply(this);this.factory=null;var factory=arguments[0];this.factory=factory;}inherits(PolygonizeGraph,PlanarGraph$1);extend(PolygonizeGraph.prototype,{findEdgeRing:function findEdgeRing(startDE){var er=new EdgeRing$1(this.factory);er.build(startDE);return er;},computeDepthParity:function computeDepthParity(){if(arguments.length===0){while(true){var de=null;if(de===null)return null;this.computeDepthParity(de);}}else if(arguments.length===1){var _de=arguments[0];}},computeNextCWEdges:function computeNextCWEdges(){for(var iNode=this.nodeIterator();iNode.hasNext();){var node=iNode.next();PolygonizeGraph.computeNextCWEdges(node);}},addEdge:function addEdge(line){if(line.isEmpty()){return null;}var linePts=CoordinateArrays.removeRepeatedPoints(line.getCoordinates());if(linePts.length<2){return null;}var startPt=linePts[0];var endPt=linePts[linePts.length-1];var nStart=this.getNode(startPt);var nEnd=this.getNode(endPt);var de0=new PolygonizeDirectedEdge(nStart,nEnd,linePts[1],true);var de1=new PolygonizeDirectedEdge(nEnd,nStart,linePts[linePts.length-2],false);var edge=new PolygonizeEdge(line);edge.setDirectedEdges(de0,de1);this.add(edge);},deleteCutEdges:function deleteCutEdges(){this.computeNextCWEdges();PolygonizeGraph.findLabeledEdgeRings(this.dirEdges);var cutLines=new ArrayList();for(var i=this.dirEdges.iterator();i.hasNext();){var de=i.next();if(de.isMarked())continue;var sym=de.getSym();if(de.getLabel()===sym.getLabel()){de.setMarked(true);sym.setMarked(true);var e=de.getEdge();cutLines.add(e.getLine());}}return cutLines;},getEdgeRings:function getEdgeRings(){this.computeNextCWEdges();PolygonizeGraph.label(this.dirEdges,-1);var maximalRings=PolygonizeGraph.findLabeledEdgeRings(this.dirEdges);this.convertMaximalToMinimalEdgeRings(maximalRings);var edgeRingList=new ArrayList();for(var i=this.dirEdges.iterator();i.hasNext();){var de=i.next();if(de.isMarked())continue;if(de.isInRing())continue;var er=this.findEdgeRing(de);edgeRingList.add(er);}return edgeRingList;},getNode:function getNode(pt){var node=this.findNode(pt);if(node===null){node=new Node$3(pt);this.add(node);}return node;},convertMaximalToMinimalEdgeRings:function convertMaximalToMinimalEdgeRings(ringEdges){for(var i=ringEdges.iterator();i.hasNext();){var de=i.next();var label=de.getLabel();var intNodes=PolygonizeGraph.findIntersectionNodes(de,label);if(intNodes===null)continue;for(var iNode=intNodes.iterator();iNode.hasNext();){var node=iNode.next();PolygonizeGraph.computeNextCCWEdges(node,label);}}},deleteDangles:function deleteDangles(){var nodesToRemove=this.findNodesOfDegree(1);var dangleLines=new HashSet();var nodeStack=new Stack();for(var i=nodesToRemove.iterator();i.hasNext();){nodeStack.push(i.next());}while(!nodeStack.isEmpty()){var node=nodeStack.pop();PolygonizeGraph.deleteAllEdges(node);var nodeOutEdges=node.getOutEdges().getEdges();for(var i=nodeOutEdges.iterator();i.hasNext();){var de=i.next();de.setMarked(true);var sym=de.getSym();if(sym!==null)sym.setMarked(true);var e=de.getEdge();dangleLines.add(e.getLine());var toNode=de.getToNode();if(PolygonizeGraph.getDegreeNonDeleted(toNode)===1)nodeStack.push(toNode);}}return dangleLines;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return PolygonizeGraph;}});PolygonizeGraph.findLabeledEdgeRings=function(dirEdges){var edgeRingStarts=new ArrayList();var currLabel=1;for(var i=dirEdges.iterator();i.hasNext();){var de=i.next();if(de.isMarked())continue;if(de.getLabel()>=0)continue;edgeRingStarts.add(de);var edges=EdgeRing$1.findDirEdgesInRing(de);PolygonizeGraph.label(edges,currLabel);currLabel++;}return edgeRingStarts;};PolygonizeGraph.getDegreeNonDeleted=function(node){var edges=node.getOutEdges().getEdges();var degree=0;for(var i=edges.iterator();i.hasNext();){var de=i.next();if(!de.isMarked())degree++;}return degree;};PolygonizeGraph.deleteAllEdges=function(node){var edges=node.getOutEdges().getEdges();for(var i=edges.iterator();i.hasNext();){var de=i.next();de.setMarked(true);var sym=de.getSym();if(sym!==null)sym.setMarked(true);}};PolygonizeGraph.label=function(dirEdges,label){for(var i=dirEdges.iterator();i.hasNext();){var de=i.next();de.setLabel(label);}};PolygonizeGraph.computeNextCWEdges=function(node){var deStar=node.getOutEdges();var startDE=null;var prevDE=null;for(var i=deStar.getEdges().iterator();i.hasNext();){var outDE=i.next();if(outDE.isMarked())continue;if(startDE===null)startDE=outDE;if(prevDE!==null){var sym=prevDE.getSym();sym.setNext(outDE);}prevDE=outDE;}if(prevDE!==null){var sym=prevDE.getSym();sym.setNext(startDE);}};PolygonizeGraph.computeNextCCWEdges=function(node,label){var deStar=node.getOutEdges();var firstOutDE=null;var prevInDE=null;var edges=deStar.getEdges();for(var i=edges.size()-1;i>=0;i--){var de=edges.get(i);var sym=de.getSym();var outDE=null;if(de.getLabel()===label)outDE=de;var inDE=null;if(sym.getLabel()===label)inDE=sym;if(outDE===null&&inDE===null)continue;if(inDE!==null){prevInDE=inDE;}if(outDE!==null){if(prevInDE!==null){prevInDE.setNext(outDE);prevInDE=null;}if(firstOutDE===null)firstOutDE=outDE;}}if(prevInDE!==null){Assert.isTrue(firstOutDE!==null);prevInDE.setNext(firstOutDE);}};PolygonizeGraph.getDegree=function(node,label){var edges=node.getOutEdges().getEdges();var degree=0;for(var i=edges.iterator();i.hasNext();){var de=i.next();if(de.getLabel()===label)degree++;}return degree;};PolygonizeGraph.findIntersectionNodes=function(startDE,label){var de=startDE;var intNodes=null;do{var node=de.getFromNode();if(PolygonizeGraph.getDegree(node,label)>1){if(intNodes===null)intNodes=new ArrayList();intNodes.add(node);}de=de.getNext();Assert.isTrue(de!==null,\"found null DE in ring\");Assert.isTrue(de===startDE||!de.isInRing(),\"found DE already in ring\");}while(de!==startDE);return intNodes;};function Polygonizer(){this.lineStringAdder=new LineStringAdder(this);this.graph=null;this.dangles=new ArrayList();this.cutEdges=new ArrayList();this.invalidRingLines=new ArrayList();this.holeList=null;this.shellList=null;this.polyList=null;this.isCheckingRingsValid=true;this.extractOnlyPolygonal=null;this.geomFactory=null;if(arguments.length===0){Polygonizer.call(this,false);}else if(arguments.length===1){var extractOnlyPolygonal=arguments[0];this.extractOnlyPolygonal=extractOnlyPolygonal;}}extend(Polygonizer.prototype,{getGeometry:function getGeometry(){if(this.geomFactory===null)this.geomFactory=new GeometryFactory();this.polygonize();if(this.extractOnlyPolygonal){return this.geomFactory.buildGeometry(this.polyList);}return this.geomFactory.createGeometryCollection(GeometryFactory.toGeometryArray(this.polyList));},getInvalidRingLines:function getInvalidRingLines(){this.polygonize();return this.invalidRingLines;},findValidRings:function findValidRings(edgeRingList,validEdgeRingList,invalidRingList){for(var i=edgeRingList.iterator();i.hasNext();){var er=i.next();if(er.isValid())validEdgeRingList.add(er);else invalidRingList.add(er.getLineString());}},polygonize:function polygonize(){if(this.polyList!==null)return null;this.polyList=new ArrayList();if(this.graph===null)return null;this.dangles=this.graph.deleteDangles();this.cutEdges=this.graph.deleteCutEdges();var edgeRingList=this.graph.getEdgeRings();var validEdgeRingList=new ArrayList();this.invalidRingLines=new ArrayList();if(this.isCheckingRingsValid){this.findValidRings(edgeRingList,validEdgeRingList,this.invalidRingLines);}else{validEdgeRingList=edgeRingList;}this.findShellsAndHoles(validEdgeRingList);Polygonizer.assignHolesToShells(this.holeList,this.shellList);Collections.sort(this.shellList,new EdgeRing$1.EnvelopeComparator());var includeAll=true;if(this.extractOnlyPolygonal){Polygonizer.findDisjointShells(this.shellList);includeAll=false;}this.polyList=Polygonizer.extractPolygons(this.shellList,includeAll);},getDangles:function getDangles(){this.polygonize();return this.dangles;},getCutEdges:function getCutEdges(){this.polygonize();return this.cutEdges;},getPolygons:function getPolygons(){this.polygonize();return this.polyList;},add:function add(){if(hasInterface(arguments[0],Collection)){var geomList=arguments[0];for(var i=geomList.iterator();i.hasNext();){var geometry=i.next();this.add(geometry);}}else if(arguments[0]instanceof LineString){var line=arguments[0];this.geomFactory=line.getFactory();if(this.graph===null)this.graph=new PolygonizeGraph(this.geomFactory);this.graph.addEdge(line);}else if(arguments[0]instanceof Geometry){var g=arguments[0];g.apply(this.lineStringAdder);}},setCheckRingsValid:function setCheckRingsValid(isCheckingRingsValid){this.isCheckingRingsValid=isCheckingRingsValid;},findShellsAndHoles:function findShellsAndHoles(edgeRingList){this.holeList=new ArrayList();this.shellList=new ArrayList();for(var i=edgeRingList.iterator();i.hasNext();){var er=i.next();er.computeHole();if(er.isHole())this.holeList.add(er);else this.shellList.add(er);}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Polygonizer;}});Polygonizer.findOuterShells=function(shellList){for(var i=shellList.iterator();i.hasNext();){var er=i.next();var outerHoleER=er.getOuterHole();if(outerHoleER!==null&&!outerHoleER.isProcessed()){er.setIncluded(true);outerHoleER.setProcessed(true);}}};Polygonizer.extractPolygons=function(shellList,includeAll){var polyList=new ArrayList();for(var i=shellList.iterator();i.hasNext();){var er=i.next();if(includeAll||er.isIncluded()){polyList.add(er.getPolygon());}}return polyList;};Polygonizer.assignHolesToShells=function(holeList,shellList){for(var i=holeList.iterator();i.hasNext();){var holeER=i.next();Polygonizer.assignHoleToShell(holeER,shellList);}};Polygonizer.assignHoleToShell=function(holeER,shellList){var shell=EdgeRing$1.findEdgeRingContaining(holeER,shellList);if(shell!==null){shell.addHole(holeER);}};Polygonizer.findDisjointShells=function(shellList){Polygonizer.findOuterShells(shellList);var isMoreToScan=null;do{isMoreToScan=false;for(var i=shellList.iterator();i.hasNext();){var er=i.next();if(er.isIncludedSet())continue;er.updateIncluded();if(!er.isIncludedSet()){isMoreToScan=true;}}}while(isMoreToScan);};function LineStringAdder(){this.p=null;var p=arguments[0];this.p=p;}extend(LineStringAdder.prototype,{filter:function filter(g){if(g instanceof LineString)this.p.add(g);},interfaces_:function interfaces_(){return[GeometryComponentFilter];},getClass:function getClass(){return LineStringAdder;}});Polygonizer.LineStringAdder=LineStringAdder;var polygonize=Object.freeze({Polygonizer:Polygonizer});function RelateComputer(){this.li=new RobustLineIntersector();this.ptLocator=new PointLocator();this.arg=null;this.nodes=new NodeMap(new RelateNodeFactory());this.im=null;this.isolatedEdges=new ArrayList();this.invalidPoint=null;var arg=arguments[0];this.arg=arg;}extend(RelateComputer.prototype,{insertEdgeEnds:function insertEdgeEnds(ee){for(var i=ee.iterator();i.hasNext();){var e=i.next();this.nodes.add(e);}},computeProperIntersectionIM:function computeProperIntersectionIM(intersector,im){var dimA=this.arg[0].getGeometry().getDimension();var dimB=this.arg[1].getGeometry().getDimension();var hasProper=intersector.hasProperIntersection();var hasProperInterior=intersector.hasProperInteriorIntersection();if(dimA===2&&dimB===2){if(hasProper)im.setAtLeast(\"212101212\");}else if(dimA===2&&dimB===1){if(hasProper)im.setAtLeast(\"FFF0FFFF2\");if(hasProperInterior)im.setAtLeast(\"1FFFFF1FF\");}else if(dimA===1&&dimB===2){if(hasProper)im.setAtLeast(\"F0FFFFFF2\");if(hasProperInterior)im.setAtLeast(\"1F1FFFFFF\");}else if(dimA===1&&dimB===1){if(hasProperInterior)im.setAtLeast(\"0FFFFFFFF\");}},labelIsolatedEdges:function labelIsolatedEdges(thisIndex,targetIndex){for(var ei=this.arg[thisIndex].getEdgeIterator();ei.hasNext();){var e=ei.next();if(e.isIsolated()){this.labelIsolatedEdge(e,targetIndex,this.arg[targetIndex].getGeometry());this.isolatedEdges.add(e);}}},labelIsolatedEdge:function labelIsolatedEdge(e,targetIndex,target){if(target.getDimension()>0){var loc=this.ptLocator.locate(e.getCoordinate(),target);e.getLabel().setAllLocations(targetIndex,loc);}else{e.getLabel().setAllLocations(targetIndex,Location.EXTERIOR);}},computeIM:function computeIM(){var im=new IntersectionMatrix();im.set(Location.EXTERIOR,Location.EXTERIOR,2);if(!this.arg[0].getGeometry().getEnvelopeInternal().intersects(this.arg[1].getGeometry().getEnvelopeInternal())){this.computeDisjointIM(im);return im;}this.arg[0].computeSelfNodes(this.li,false);this.arg[1].computeSelfNodes(this.li,false);var intersector=this.arg[0].computeEdgeIntersections(this.arg[1],this.li,false);this.computeIntersectionNodes(0);this.computeIntersectionNodes(1);this.copyNodesAndLabels(0);this.copyNodesAndLabels(1);this.labelIsolatedNodes();this.computeProperIntersectionIM(intersector,im);var eeBuilder=new EdgeEndBuilder();var ee0=eeBuilder.computeEdgeEnds(this.arg[0].getEdgeIterator());this.insertEdgeEnds(ee0);var ee1=eeBuilder.computeEdgeEnds(this.arg[1].getEdgeIterator());this.insertEdgeEnds(ee1);this.labelNodeEdges();this.labelIsolatedEdges(0,1);this.labelIsolatedEdges(1,0);this.updateIM(im);return im;},labelNodeEdges:function labelNodeEdges(){for(var ni=this.nodes.iterator();ni.hasNext();){var node=ni.next();node.getEdges().computeLabelling(this.arg);}},copyNodesAndLabels:function copyNodesAndLabels(argIndex){for(var i=this.arg[argIndex].getNodeIterator();i.hasNext();){var graphNode=i.next();var newNode=this.nodes.addNode(graphNode.getCoordinate());newNode.setLabel(argIndex,graphNode.getLabel().getLocation(argIndex));}},labelIntersectionNodes:function labelIntersectionNodes(argIndex){for(var i=this.arg[argIndex].getEdgeIterator();i.hasNext();){var e=i.next();var eLoc=e.getLabel().getLocation(argIndex);for(var eiIt=e.getEdgeIntersectionList().iterator();eiIt.hasNext();){var ei=eiIt.next();var n=this.nodes.find(ei.coord);if(n.getLabel().isNull(argIndex)){if(eLoc===Location.BOUNDARY)n.setLabelBoundary(argIndex);else n.setLabel(argIndex,Location.INTERIOR);}}}},labelIsolatedNode:function labelIsolatedNode(n,targetIndex){var loc=this.ptLocator.locate(n.getCoordinate(),this.arg[targetIndex].getGeometry());n.getLabel().setAllLocations(targetIndex,loc);},computeIntersectionNodes:function computeIntersectionNodes(argIndex){for(var i=this.arg[argIndex].getEdgeIterator();i.hasNext();){var e=i.next();var eLoc=e.getLabel().getLocation(argIndex);for(var eiIt=e.getEdgeIntersectionList().iterator();eiIt.hasNext();){var ei=eiIt.next();var n=this.nodes.addNode(ei.coord);if(eLoc===Location.BOUNDARY)n.setLabelBoundary(argIndex);else{if(n.getLabel().isNull(argIndex))n.setLabel(argIndex,Location.INTERIOR);}}}},labelIsolatedNodes:function labelIsolatedNodes(){for(var ni=this.nodes.iterator();ni.hasNext();){var n=ni.next();var label=n.getLabel();Assert.isTrue(label.getGeometryCount()>0,\"node with empty label found\");if(n.isIsolated()){if(label.isNull(0))this.labelIsolatedNode(n,0);else this.labelIsolatedNode(n,1);}}},updateIM:function updateIM(im){for(var ei=this.isolatedEdges.iterator();ei.hasNext();){var e=ei.next();e.updateIM(im);}for(var ni=this.nodes.iterator();ni.hasNext();){var node=ni.next();node.updateIM(im);node.updateIMFromEdges(im);}},computeDisjointIM:function computeDisjointIM(im){var ga=this.arg[0].getGeometry();if(!ga.isEmpty()){im.set(Location.INTERIOR,Location.EXTERIOR,ga.getDimension());im.set(Location.BOUNDARY,Location.EXTERIOR,ga.getBoundaryDimension());}var gb=this.arg[1].getGeometry();if(!gb.isEmpty()){im.set(Location.EXTERIOR,Location.INTERIOR,gb.getDimension());im.set(Location.EXTERIOR,Location.BOUNDARY,gb.getBoundaryDimension());}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return RelateComputer;}});function RectangleContains(){this.rectEnv=null;var rectangle=arguments[0];this.rectEnv=rectangle.getEnvelopeInternal();}extend(RectangleContains.prototype,{isContainedInBoundary:function isContainedInBoundary(geom){if(geom instanceof Polygon)return false;if(geom instanceof Point)return this.isPointContainedInBoundary(geom);if(geom instanceof LineString)return this.isLineStringContainedInBoundary(geom);for(var i=0;i<geom.getNumGeometries();i++){var comp=geom.getGeometryN(i);if(!this.isContainedInBoundary(comp))return false;}return true;},isLineSegmentContainedInBoundary:function isLineSegmentContainedInBoundary(p0,p1){if(p0.equals(p1))return this.isPointContainedInBoundary(p0);if(p0.x===p1.x){if(p0.x===this.rectEnv.getMinX()||p0.x===this.rectEnv.getMaxX())return true;}else if(p0.y===p1.y){if(p0.y===this.rectEnv.getMinY()||p0.y===this.rectEnv.getMaxY())return true;}return false;},isLineStringContainedInBoundary:function isLineStringContainedInBoundary(line){var seq=line.getCoordinateSequence();var p0=new Coordinate();var p1=new Coordinate();for(var i=0;i<seq.size()-1;i++){seq.getCoordinate(i,p0);seq.getCoordinate(i+1,p1);if(!this.isLineSegmentContainedInBoundary(p0,p1))return false;}return true;},isPointContainedInBoundary:function isPointContainedInBoundary(){if(arguments[0]instanceof Point){var point=arguments[0];return this.isPointContainedInBoundary(point.getCoordinate());}else if(arguments[0]instanceof Coordinate){var pt=arguments[0];return pt.x===this.rectEnv.getMinX()||pt.x===this.rectEnv.getMaxX()||pt.y===this.rectEnv.getMinY()||pt.y===this.rectEnv.getMaxY();}},contains:function contains(geom){if(!this.rectEnv.contains(geom.getEnvelopeInternal()))return false;if(this.isContainedInBoundary(geom))return false;return true;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return RectangleContains;}});RectangleContains.contains=function(rectangle,b){var rc=new RectangleContains(rectangle);return rc.contains(b);};function RectangleLineIntersector(){this.li=new RobustLineIntersector();this.rectEnv=null;this.diagUp0=null;this.diagUp1=null;this.diagDown0=null;this.diagDown1=null;var rectEnv=arguments[0];this.rectEnv=rectEnv;this.diagUp0=new Coordinate(rectEnv.getMinX(),rectEnv.getMinY());this.diagUp1=new Coordinate(rectEnv.getMaxX(),rectEnv.getMaxY());this.diagDown0=new Coordinate(rectEnv.getMinX(),rectEnv.getMaxY());this.diagDown1=new Coordinate(rectEnv.getMaxX(),rectEnv.getMinY());}extend(RectangleLineIntersector.prototype,{intersects:function intersects(p0,p1){var segEnv=new Envelope(p0,p1);if(!this.rectEnv.intersects(segEnv))return false;if(this.rectEnv.intersects(p0))return true;if(this.rectEnv.intersects(p1))return true;if(p0.compareTo(p1)>0){var tmp=p0;p0=p1;p1=tmp;}var isSegUpwards=false;if(p1.y>p0.y)isSegUpwards=true;if(isSegUpwards){this.li.computeIntersection(p0,p1,this.diagDown0,this.diagDown1);}else{this.li.computeIntersection(p0,p1,this.diagUp0,this.diagUp1);}if(this.li.hasIntersection())return true;return false;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return RectangleLineIntersector;}});function ShortCircuitedGeometryVisitor(){this._isDone=false;}extend(ShortCircuitedGeometryVisitor.prototype,{applyTo:function applyTo(geom){for(var i=0;i<geom.getNumGeometries()&&!this._isDone;i++){var element=geom.getGeometryN(i);if(!(element instanceof GeometryCollection)){this.visit(element);if(this.isDone()){this._isDone=true;return null;}}else this.applyTo(element);}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return ShortCircuitedGeometryVisitor;}});function RectangleIntersects(){this.rectangle=null;this.rectEnv=null;var rectangle=arguments[0];this.rectangle=rectangle;this.rectEnv=rectangle.getEnvelopeInternal();}extend(RectangleIntersects.prototype,{intersects:function intersects(geom){if(!this.rectEnv.intersects(geom.getEnvelopeInternal()))return false;var visitor=new EnvelopeIntersectsVisitor(this.rectEnv);visitor.applyTo(geom);if(visitor.intersects())return true;var ecpVisitor=new GeometryContainsPointVisitor(this.rectangle);ecpVisitor.applyTo(geom);if(ecpVisitor.containsPoint())return true;var riVisitor=new RectangleIntersectsSegmentVisitor(this.rectangle);riVisitor.applyTo(geom);if(riVisitor.intersects())return true;return false;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return RectangleIntersects;}});RectangleIntersects.intersects=function(rectangle,b){var rp=new RectangleIntersects(rectangle);return rp.intersects(b);};function EnvelopeIntersectsVisitor(){ShortCircuitedGeometryVisitor.apply(this);this.rectEnv=null;this._intersects=false;var rectEnv=arguments[0];this.rectEnv=rectEnv;}inherits(EnvelopeIntersectsVisitor,ShortCircuitedGeometryVisitor);extend(EnvelopeIntersectsVisitor.prototype,{isDone:function isDone(){return this._intersects===true;},visit:function visit(element){var elementEnv=element.getEnvelopeInternal();if(!this.rectEnv.intersects(elementEnv)){return null;}if(this.rectEnv.contains(elementEnv)){this._intersects=true;return null;}if(elementEnv.getMinX()>=this.rectEnv.getMinX()&&elementEnv.getMaxX()<=this.rectEnv.getMaxX()){this._intersects=true;return null;}if(elementEnv.getMinY()>=this.rectEnv.getMinY()&&elementEnv.getMaxY()<=this.rectEnv.getMaxY()){this._intersects=true;return null;}},intersects:function intersects(){return this._intersects;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return EnvelopeIntersectsVisitor;}});function GeometryContainsPointVisitor(){ShortCircuitedGeometryVisitor.apply(this);this.rectSeq=null;this.rectEnv=null;this._containsPoint=false;var rectangle=arguments[0];this.rectSeq=rectangle.getExteriorRing().getCoordinateSequence();this.rectEnv=rectangle.getEnvelopeInternal();}inherits(GeometryContainsPointVisitor,ShortCircuitedGeometryVisitor);extend(GeometryContainsPointVisitor.prototype,{isDone:function isDone(){return this._containsPoint===true;},visit:function visit(geom){if(!(geom instanceof Polygon))return null;var elementEnv=geom.getEnvelopeInternal();if(!this.rectEnv.intersects(elementEnv))return null;var rectPt=new Coordinate();for(var i=0;i<4;i++){this.rectSeq.getCoordinate(i,rectPt);if(!elementEnv.contains(rectPt))continue;if(SimplePointInAreaLocator.containsPointInPolygon(rectPt,geom)){this._containsPoint=true;return null;}}},containsPoint:function containsPoint(){return this._containsPoint;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return GeometryContainsPointVisitor;}});function RectangleIntersectsSegmentVisitor(){ShortCircuitedGeometryVisitor.apply(this);this.rectEnv=null;this.rectIntersector=null;this.hasIntersection=false;this.p0=new Coordinate();this.p1=new Coordinate();var rectangle=arguments[0];this.rectEnv=rectangle.getEnvelopeInternal();this.rectIntersector=new RectangleLineIntersector(this.rectEnv);}inherits(RectangleIntersectsSegmentVisitor,ShortCircuitedGeometryVisitor);extend(RectangleIntersectsSegmentVisitor.prototype,{intersects:function intersects(){return this.hasIntersection;},isDone:function isDone(){return this.hasIntersection===true;},visit:function visit(geom){var elementEnv=geom.getEnvelopeInternal();if(!this.rectEnv.intersects(elementEnv))return null;var lines=LinearComponentExtracter.getLines(geom);this.checkIntersectionWithLineStrings(lines);},checkIntersectionWithLineStrings:function checkIntersectionWithLineStrings(lines){for(var i=lines.iterator();i.hasNext();){var testLine=i.next();this.checkIntersectionWithSegments(testLine);if(this.hasIntersection)return null;}},checkIntersectionWithSegments:function checkIntersectionWithSegments(testLine){var seq1=testLine.getCoordinateSequence();for(var j=1;j<seq1.size();j++){seq1.getCoordinate(j-1,this.p0);seq1.getCoordinate(j,this.p1);if(this.rectIntersector.intersects(this.p0,this.p1)){this.hasIntersection=true;return null;}}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return RectangleIntersectsSegmentVisitor;}});function RelateOp(){this._relate=null;if(arguments.length===2){var g0=arguments[0],g1=arguments[1];GeometryGraphOperation.call(this,g0,g1);this._relate=new RelateComputer(this.arg);}else if(arguments.length===3){var _g=arguments[0],_g2=arguments[1],boundaryNodeRule=arguments[2];GeometryGraphOperation.call(this,_g,_g2,boundaryNodeRule);this._relate=new RelateComputer(this.arg);}}inherits(RelateOp,GeometryGraphOperation);extend(RelateOp.prototype,{getIntersectionMatrix:function getIntersectionMatrix(){return this._relate.computeIM();},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return RelateOp;}});RelateOp.covers=function(g1,g2){if(!g1.getEnvelopeInternal().covers(g2.getEnvelopeInternal()))return false;if(g1.isRectangle()){return true;}return RelateOp.relate(g1,g2).isCovers();};RelateOp.intersects=function(g1,g2){if(!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal()))return false;if(g1.isRectangle()){return RectangleIntersects.intersects(g1,g2);}if(g2.isRectangle()){return RectangleIntersects.intersects(g2,g1);}return RelateOp.relate(g1,g2).isIntersects();};RelateOp.touches=function(g1,g2){if(!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal()))return false;return RelateOp.relate(g1,g2).isTouches(g1.getDimension(),g2.getDimension());};RelateOp.within=function(g1,g2){return g2.contains(g1);};RelateOp.coveredBy=function(g1,g2){return RelateOp.covers(g2,g1);};RelateOp.relate=function(){if(arguments.length===2){var a=arguments[0],b=arguments[1];var relOp=new RelateOp(a,b);var im=relOp.getIntersectionMatrix();return im;}else if(arguments.length===3){if(typeof arguments[2]===\"string\"&&arguments[0]instanceof Geometry&&arguments[1]instanceof Geometry){var g1=arguments[0],g2=arguments[1],intersectionPattern=arguments[2];return RelateOp.relateWithCheck(g1,g2).matches(intersectionPattern);}else if(hasInterface(arguments[2],BoundaryNodeRule)&&arguments[0]instanceof Geometry&&arguments[1]instanceof Geometry){var _a=arguments[0],_b=arguments[1],boundaryNodeRule=arguments[2];var relOp=new RelateOp(_a,_b,boundaryNodeRule);var im=relOp.getIntersectionMatrix();return im;}}};RelateOp.overlaps=function(g1,g2){if(!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal()))return false;return RelateOp.relate(g1,g2).isOverlaps(g1.getDimension(),g2.getDimension());};RelateOp.disjoint=function(g1,g2){return!g1.intersects(g2);};RelateOp.relateWithCheck=function(g1,g2){g1.checkNotGeometryCollection(g1);g1.checkNotGeometryCollection(g2);return RelateOp.relate(g1,g2);};RelateOp.crosses=function(g1,g2){if(!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal()))return false;return RelateOp.relate(g1,g2).isCrosses(g1.getDimension(),g2.getDimension());};RelateOp.contains=function(g1,g2){if(!g1.getEnvelopeInternal().contains(g2.getEnvelopeInternal()))return false;if(g1.isRectangle()){return RectangleContains.contains(g1,g2);}return RelateOp.relate(g1,g2).isContains();};var relate=Object.freeze({RelateOp:RelateOp});function GeometryCombiner(){this.geomFactory=null;this.skipEmpty=false;this.inputGeoms=null;var geoms=arguments[0];this.geomFactory=GeometryCombiner.extractFactory(geoms);this.inputGeoms=geoms;}extend(GeometryCombiner.prototype,{extractElements:function extractElements(geom,elems){if(geom===null)return null;for(var i=0;i<geom.getNumGeometries();i++){var elemGeom=geom.getGeometryN(i);if(this.skipEmpty&&elemGeom.isEmpty())continue;elems.add(elemGeom);}},combine:function combine(){var elems=new ArrayList();for(var i=this.inputGeoms.iterator();i.hasNext();){var g=i.next();this.extractElements(g,elems);}if(elems.size()===0){if(this.geomFactory!==null){return this.geomFactory.createGeometryCollection(null);}return null;}return this.geomFactory.buildGeometry(elems);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return GeometryCombiner;}});GeometryCombiner.combine=function(){if(arguments.length===1){var geoms=arguments[0];var combiner=new GeometryCombiner(geoms);return combiner.combine();}else if(arguments.length===2){var g0=arguments[0],g1=arguments[1];var combiner=new GeometryCombiner(GeometryCombiner.createList(g0,g1));return combiner.combine();}else if(arguments.length===3){var _g=arguments[0],_g2=arguments[1],g2=arguments[2];var combiner=new GeometryCombiner(GeometryCombiner.createList(_g,_g2,g2));return combiner.combine();}};GeometryCombiner.extractFactory=function(geoms){if(geoms.isEmpty())return null;return geoms.iterator().next().getFactory();};GeometryCombiner.createList=function(){if(arguments.length===2){var obj0=arguments[0],obj1=arguments[1];var list=new ArrayList();list.add(obj0);list.add(obj1);return list;}else if(arguments.length===3){var _obj=arguments[0],_obj2=arguments[1],obj2=arguments[2];var list=new ArrayList();list.add(_obj);list.add(_obj2);list.add(obj2);return list;}};function PointGeometryUnion(){this.pointGeom=null;this.otherGeom=null;this.geomFact=null;var pointGeom=arguments[0],otherGeom=arguments[1];this.pointGeom=pointGeom;this.otherGeom=otherGeom;this.geomFact=otherGeom.getFactory();}extend(PointGeometryUnion.prototype,{union:function union(){var locater=new PointLocator();var exteriorCoords=new TreeSet();for(var i=0;i<this.pointGeom.getNumGeometries();i++){var point=this.pointGeom.getGeometryN(i);var coord=point.getCoordinate();var loc=locater.locate(coord,this.otherGeom);if(loc===Location.EXTERIOR)exteriorCoords.add(coord);}if(exteriorCoords.size()===0)return this.otherGeom;var ptComp=null;var coords=CoordinateArrays.toCoordinateArray(exteriorCoords);if(coords.length===1){ptComp=this.geomFact.createPoint(coords[0]);}else{ptComp=this.geomFact.createMultiPointFromCoords(coords);}return GeometryCombiner.combine(ptComp,this.otherGeom);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return PointGeometryUnion;}});PointGeometryUnion.union=function(pointGeom,otherGeom){var unioner=new PointGeometryUnion(pointGeom,otherGeom);return unioner.union();};function GeometryExtracter(){this.sortIndex=-1;this.comps=null;var sortIndex=arguments[0],comps=arguments[1];this.sortIndex=sortIndex;this.comps=comps;}extend(GeometryExtracter.prototype,{filter:function filter(geom){if(this.sortIndex===-1||geom.getSortIndex()===this.sortIndex)this.comps.add(geom);},interfaces_:function interfaces_(){return[GeometryFilter];},getClass:function getClass(){return GeometryExtracter;}});GeometryExtracter.extract=function(){if(arguments.length===2){var geom=arguments[0],sortIndex=arguments[1];return GeometryExtracter.extract(geom,sortIndex,new ArrayList());}else if(arguments.length===3){var _geom=arguments[0],_sortIndex=arguments[1],list=arguments[2];if(_geom.getSortIndex()===_sortIndex){list.add(_geom);}else if(_geom instanceof GeometryCollection){_geom.apply(new GeometryExtracter(_sortIndex,list));}return list;}};function CascadedPolygonUnion(){this.inputPolys=null;this.geomFactory=null;var polys=arguments[0];this.inputPolys=polys;if(this.inputPolys===null)this.inputPolys=new ArrayList();}extend(CascadedPolygonUnion.prototype,{reduceToGeometries:function reduceToGeometries(geomTree){var geoms=new ArrayList();for(var i=geomTree.iterator();i.hasNext();){var o=i.next();var geom=null;if(hasInterface(o,List)){geom=this.unionTree(o);}else if(o instanceof Geometry){geom=o;}geoms.add(geom);}return geoms;},extractByEnvelope:function extractByEnvelope(env,geom,disjointGeoms){var intersectingGeoms=new ArrayList();for(var i=0;i<geom.getNumGeometries();i++){var elem=geom.getGeometryN(i);if(elem.getEnvelopeInternal().intersects(env))intersectingGeoms.add(elem);else disjointGeoms.add(elem);}return this.geomFactory.buildGeometry(intersectingGeoms);},unionOptimized:function unionOptimized(g0,g1){var g0Env=g0.getEnvelopeInternal();var g1Env=g1.getEnvelopeInternal();if(!g0Env.intersects(g1Env)){var combo=GeometryCombiner.combine(g0,g1);return combo;}if(g0.getNumGeometries()<=1&&g1.getNumGeometries()<=1)return this.unionActual(g0,g1);var commonEnv=g0Env.intersection(g1Env);return this.unionUsingEnvelopeIntersection(g0,g1,commonEnv);},union:function union(){if(this.inputPolys===null)throw new IllegalStateException(\"union() method cannot be called twice\");if(this.inputPolys.isEmpty())return null;this.geomFactory=this.inputPolys.iterator().next().getFactory();var index=new STRtree(CascadedPolygonUnion.STRTREE_NODE_CAPACITY);for(var i=this.inputPolys.iterator();i.hasNext();){var item=i.next();index.insert(item.getEnvelopeInternal(),item);}this.inputPolys=null;var itemTree=index.itemsTree();var unionAll=this.unionTree(itemTree);return unionAll;},binaryUnion:function binaryUnion(){if(arguments.length===1){var geoms=arguments[0];return this.binaryUnion(geoms,0,geoms.size());}else if(arguments.length===3){var _geoms=arguments[0],start=arguments[1],end=arguments[2];if(end-start<=1){var g0=CascadedPolygonUnion.getGeometry(_geoms,start);return this.unionSafe(g0,null);}else if(end-start===2){return this.unionSafe(CascadedPolygonUnion.getGeometry(_geoms,start),CascadedPolygonUnion.getGeometry(_geoms,start+1));}else{var mid=Math.trunc((end+start)/2);var g0=this.binaryUnion(_geoms,start,mid);var g1=this.binaryUnion(_geoms,mid,end);return this.unionSafe(g0,g1);}}},repeatedUnion:function repeatedUnion(geoms){var union=null;for(var i=geoms.iterator();i.hasNext();){var g=i.next();if(union===null)union=g.copy();else union=union.union(g);}return union;},unionSafe:function unionSafe(g0,g1){if(g0===null&&g1===null)return null;if(g0===null)return g1.copy();if(g1===null)return g0.copy();return this.unionOptimized(g0,g1);},unionActual:function unionActual(g0,g1){return CascadedPolygonUnion.restrictToPolygons(g0.union(g1));},unionTree:function unionTree(geomTree){var geoms=this.reduceToGeometries(geomTree);var union=this.binaryUnion(geoms);return union;},unionUsingEnvelopeIntersection:function unionUsingEnvelopeIntersection(g0,g1,common){var disjointPolys=new ArrayList();var g0Int=this.extractByEnvelope(common,g0,disjointPolys);var g1Int=this.extractByEnvelope(common,g1,disjointPolys);var union=this.unionActual(g0Int,g1Int);disjointPolys.add(union);var overallUnion=GeometryCombiner.combine(disjointPolys);return overallUnion;},bufferUnion:function bufferUnion(){if(arguments.length===1){var geoms=arguments[0];var factory=geoms.get(0).getFactory();var gColl=factory.buildGeometry(geoms);var unionAll=gColl.buffer(0.0);return unionAll;}else if(arguments.length===2){var g0=arguments[0],g1=arguments[1];var factory=g0.getFactory();var gColl=factory.createGeometryCollection([g0,g1]);var unionAll=gColl.buffer(0.0);return unionAll;}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return CascadedPolygonUnion;}});CascadedPolygonUnion.restrictToPolygons=function(g){if(hasInterface(g,Polygonal)){return g;}var polygons=PolygonExtracter.getPolygons(g);if(polygons.size()===1)return polygons.get(0);return g.getFactory().createMultiPolygon(GeometryFactory.toPolygonArray(polygons));};CascadedPolygonUnion.getGeometry=function(list,index){if(index>=list.size())return null;return list.get(index);};CascadedPolygonUnion.union=function(polys){var op=new CascadedPolygonUnion(polys);return op.union();};CascadedPolygonUnion.STRTREE_NODE_CAPACITY=4;function UnaryUnionOp(){this.polygons=new ArrayList();this.lines=new ArrayList();this.points=new ArrayList();this.geomFact=null;if(arguments.length===1){if(hasInterface(arguments[0],Collection)){var geoms=arguments[0];this.extract(geoms);}else if(arguments[0]instanceof Geometry){var geom=arguments[0];this.extract(geom);}}else if(arguments.length===2){var _geoms=arguments[0],geomFact=arguments[1];this.geomFact=geomFact;this.extract(_geoms);}}extend(UnaryUnionOp.prototype,{unionNoOpt:function unionNoOpt(g0){var empty=this.geomFact.createPoint();return SnapIfNeededOverlayOp.overlayOp(g0,empty,OverlayOp.UNION);},unionWithNull:function unionWithNull(g0,g1){if(g0===null&&g1===null)return null;if(g1===null)return g0;if(g0===null)return g1;return g0.union(g1);},extract:function extract(){if(hasInterface(arguments[0],Collection)){var geoms=arguments[0];for(var i=geoms.iterator();i.hasNext();){var geom=i.next();this.extract(geom);}}else if(arguments[0]instanceof Geometry){var _geom=arguments[0];if(this.geomFact===null)this.geomFact=_geom.getFactory();GeometryExtracter.extract(_geom,Geometry.SORTINDEX_POLYGON,this.polygons);GeometryExtracter.extract(_geom,Geometry.SORTINDEX_LINESTRING,this.lines);GeometryExtracter.extract(_geom,Geometry.SORTINDEX_POINT,this.points);}},union:function union(){if(this.geomFact===null){return null;}var unionPoints=null;if(this.points.size()>0){var ptGeom=this.geomFact.buildGeometry(this.points);unionPoints=this.unionNoOpt(ptGeom);}var unionLines=null;if(this.lines.size()>0){var lineGeom=this.geomFact.buildGeometry(this.lines);unionLines=this.unionNoOpt(lineGeom);}var unionPolygons=null;if(this.polygons.size()>0){unionPolygons=CascadedPolygonUnion.union(this.polygons);}var unionLA=this.unionWithNull(unionLines,unionPolygons);var union=null;if(unionPoints===null)union=unionLA;else if(unionLA===null)union=unionPoints;else union=PointGeometryUnion.union(unionPoints,unionLA);if(union===null)return this.geomFact.createGeometryCollection();return union;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return UnaryUnionOp;}});UnaryUnionOp.union=function(){if(arguments.length===1){if(hasInterface(arguments[0],Collection)){var geoms=arguments[0];var op=new UnaryUnionOp(geoms);return op.union();}else if(arguments[0]instanceof Geometry){var geom=arguments[0];var op=new UnaryUnionOp(geom);return op.union();}}else if(arguments.length===2){var _geoms2=arguments[0],geomFact=arguments[1];var op=new UnaryUnionOp(_geoms2,geomFact);return op.union();}};var union=Object.freeze({UnaryUnionOp:UnaryUnionOp});var valid=Object.freeze({IsValidOp:IsValidOp,ConsistentAreaTester:ConsistentAreaTester});var operation=Object.freeze({BoundaryOp:BoundaryOp,IsSimpleOp:IsSimpleOp,buffer:buffer,distance:distance,linemerge:linemerge,overlay:overlay,polygonize:polygonize,relate:relate,union:union,valid:valid});function PrecisionReducerCoordinateOperation(){GeometryEditor.CoordinateOperation.apply(this);this.targetPM=null;this.removeCollapsed=true;var targetPM=arguments[0],removeCollapsed=arguments[1];this.targetPM=targetPM;this.removeCollapsed=removeCollapsed;}inherits(PrecisionReducerCoordinateOperation,GeometryEditor.CoordinateOperation);extend(PrecisionReducerCoordinateOperation.prototype,{editCoordinates:function editCoordinates(coordinates,geom){if(coordinates.length===0)return null;var reducedCoords=new Array(coordinates.length).fill(null);for(var i=0;i<coordinates.length;i++){var coord=new Coordinate(coordinates[i]);this.targetPM.makePrecise(coord);reducedCoords[i]=coord;}var noRepeatedCoordList=new CoordinateList(reducedCoords,false);var noRepeatedCoords=noRepeatedCoordList.toCoordinateArray();var minLength=0;if(geom instanceof LineString)minLength=2;if(geom instanceof LinearRing)minLength=4;var collapsedCoords=reducedCoords;if(this.removeCollapsed)collapsedCoords=null;if(noRepeatedCoords.length<minLength){return collapsedCoords;}return noRepeatedCoords;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return PrecisionReducerCoordinateOperation;}});function GeometryPrecisionReducer(){this.targetPM=null;this.removeCollapsed=true;this.changePrecisionModel=false;this.isPointwise=false;var pm=arguments[0];this.targetPM=pm;}extend(GeometryPrecisionReducer.prototype,{fixPolygonalTopology:function fixPolygonalTopology(geom){var geomToBuffer=geom;if(!this.changePrecisionModel){geomToBuffer=this.changePM(geom,this.targetPM);}var bufGeom=geomToBuffer.buffer(0);var finalGeom=bufGeom;if(!this.changePrecisionModel){finalGeom=this.changePM(bufGeom,geom.getPrecisionModel());}return finalGeom;},reducePointwise:function reducePointwise(geom){var geomEdit=null;if(this.changePrecisionModel){var newFactory=this.createFactory(geom.getFactory(),this.targetPM);geomEdit=new GeometryEditor(newFactory);}else geomEdit=new GeometryEditor();var finalRemoveCollapsed=this.removeCollapsed;if(geom.getDimension()>=2)finalRemoveCollapsed=true;var reduceGeom=geomEdit.edit(geom,new PrecisionReducerCoordinateOperation(this.targetPM,finalRemoveCollapsed));return reduceGeom;},changePM:function changePM(geom,newPM){var geomEditor=this.createEditor(geom.getFactory(),newPM);return geomEditor.edit(geom,new GeometryEditor.NoOpGeometryOperation());},setRemoveCollapsedComponents:function setRemoveCollapsedComponents(removeCollapsed){this.removeCollapsed=removeCollapsed;},createFactory:function createFactory(inputFactory,pm){var newFactory=new GeometryFactory(pm,inputFactory.getSRID(),inputFactory.getCoordinateSequenceFactory());return newFactory;},setChangePrecisionModel:function setChangePrecisionModel(changePrecisionModel){this.changePrecisionModel=changePrecisionModel;},reduce:function reduce(geom){var reducePW=this.reducePointwise(geom);if(this.isPointwise)return reducePW;if(!hasInterface(reducePW,Polygonal))return reducePW;if(reducePW.isValid())return reducePW;return this.fixPolygonalTopology(reducePW);},setPointwise:function setPointwise(isPointwise){this.isPointwise=isPointwise;},createEditor:function createEditor(geomFactory,newPM){if(geomFactory.getPrecisionModel()===newPM)return new GeometryEditor();var newFactory=this.createFactory(geomFactory,newPM);var geomEdit=new GeometryEditor(newFactory);return geomEdit;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return GeometryPrecisionReducer;}});GeometryPrecisionReducer.reduce=function(g,precModel){var reducer=new GeometryPrecisionReducer(precModel);return reducer.reduce(g);};GeometryPrecisionReducer.reducePointwise=function(g,precModel){var reducer=new GeometryPrecisionReducer(precModel);reducer.setPointwise(true);return reducer.reduce(g);};var precision=Object.freeze({GeometryPrecisionReducer:GeometryPrecisionReducer});function DouglasPeuckerLineSimplifier(){this.pts=null;this.usePt=null;this.distanceTolerance=null;this.seg=new LineSegment();var pts=arguments[0];this.pts=pts;}extend(DouglasPeuckerLineSimplifier.prototype,{simplifySection:function simplifySection(i,j){if(i+1===j){return null;}this.seg.p0=this.pts[i];this.seg.p1=this.pts[j];var maxDistance=-1.0;var maxIndex=i;for(var k=i+1;k<j;k++){var distance=this.seg.distance(this.pts[k]);if(distance>maxDistance){maxDistance=distance;maxIndex=k;}}if(maxDistance<=this.distanceTolerance){for(var k=i+1;k<j;k++){this.usePt[k]=false;}}else{this.simplifySection(i,maxIndex);this.simplifySection(maxIndex,j);}},setDistanceTolerance:function setDistanceTolerance(distanceTolerance){this.distanceTolerance=distanceTolerance;},simplify:function simplify(){this.usePt=new Array(this.pts.length).fill(null);for(var i=0;i<this.pts.length;i++){this.usePt[i]=true;}this.simplifySection(0,this.pts.length-1);var coordList=new CoordinateList();for(var i=0;i<this.pts.length;i++){if(this.usePt[i])coordList.add(new Coordinate(this.pts[i]));}return coordList.toCoordinateArray();},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return DouglasPeuckerLineSimplifier;}});DouglasPeuckerLineSimplifier.simplify=function(pts,distanceTolerance){var simp=new DouglasPeuckerLineSimplifier(pts);simp.setDistanceTolerance(distanceTolerance);return simp.simplify();};function DouglasPeuckerSimplifier(){this.inputGeom=null;this.distanceTolerance=null;this.isEnsureValidTopology=true;var inputGeom=arguments[0];this.inputGeom=inputGeom;}extend(DouglasPeuckerSimplifier.prototype,{setEnsureValid:function setEnsureValid(isEnsureValidTopology){this.isEnsureValidTopology=isEnsureValidTopology;},getResultGeometry:function getResultGeometry(){if(this.inputGeom.isEmpty())return this.inputGeom.copy();return new DPTransformer(this.isEnsureValidTopology,this.distanceTolerance).transform(this.inputGeom);},setDistanceTolerance:function setDistanceTolerance(distanceTolerance){if(distanceTolerance<0.0)throw new IllegalArgumentException(\"Tolerance must be non-negative\");this.distanceTolerance=distanceTolerance;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return DouglasPeuckerSimplifier;}});DouglasPeuckerSimplifier.simplify=function(geom,distanceTolerance){var tss=new DouglasPeuckerSimplifier(geom);tss.setDistanceTolerance(distanceTolerance);return tss.getResultGeometry();};function DPTransformer(){GeometryTransformer.apply(this);this.isEnsureValidTopology=true;this.distanceTolerance=null;var isEnsureValidTopology=arguments[0],distanceTolerance=arguments[1];this.isEnsureValidTopology=isEnsureValidTopology;this.distanceTolerance=distanceTolerance;}inherits(DPTransformer,GeometryTransformer);extend(DPTransformer.prototype,{transformPolygon:function transformPolygon(geom,parent){if(geom.isEmpty())return null;var rawGeom=GeometryTransformer.prototype.transformPolygon.call(this,geom,parent);if(parent instanceof MultiPolygon){return rawGeom;}return this.createValidArea(rawGeom);},createValidArea:function createValidArea(rawAreaGeom){if(this.isEnsureValidTopology)return rawAreaGeom.buffer(0.0);return rawAreaGeom;},transformCoordinates:function transformCoordinates(coords,parent){var inputPts=coords.toCoordinateArray();var newPts=null;if(inputPts.length===0){newPts=new Array(0).fill(null);}else{newPts=DouglasPeuckerLineSimplifier.simplify(inputPts,this.distanceTolerance);}return this.factory.getCoordinateSequenceFactory().create(newPts);},transformMultiPolygon:function transformMultiPolygon(geom,parent){var rawGeom=GeometryTransformer.prototype.transformMultiPolygon.call(this,geom,parent);return this.createValidArea(rawGeom);},transformLinearRing:function transformLinearRing(geom,parent){var removeDegenerateRings=parent instanceof Polygon;var simpResult=GeometryTransformer.prototype.transformLinearRing.call(this,geom,parent);if(removeDegenerateRings&&!(simpResult instanceof LinearRing))return null;return simpResult;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return DPTransformer;}});DouglasPeuckerSimplifier.DPTransformer=DPTransformer;function TaggedLineSegment(){this.parent=null;this.index=null;if(arguments.length===2){var p0=arguments[0],p1=arguments[1];TaggedLineSegment.call(this,p0,p1,null,-1);}else if(arguments.length===4){var _p=arguments[0],_p2=arguments[1],parent=arguments[2],index=arguments[3];LineSegment.call(this,_p,_p2);this.parent=parent;this.index=index;}}inherits(TaggedLineSegment,LineSegment);extend(TaggedLineSegment.prototype,{getIndex:function getIndex(){return this.index;},getParent:function getParent(){return this.parent;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return TaggedLineSegment;}});function TaggedLineString(){this.parentLine=null;this.segs=null;this.resultSegs=new ArrayList();this.minimumSize=null;if(arguments.length===1){var parentLine=arguments[0];TaggedLineString.call(this,parentLine,2);}else if(arguments.length===2){var _parentLine=arguments[0],minimumSize=arguments[1];this.parentLine=_parentLine;this.minimumSize=minimumSize;this.init();}}extend(TaggedLineString.prototype,{addToResult:function addToResult(seg){this.resultSegs.add(seg);},asLineString:function asLineString(){return this.parentLine.getFactory().createLineString(TaggedLineString.extractCoordinates(this.resultSegs));},getResultSize:function getResultSize(){var resultSegsSize=this.resultSegs.size();return resultSegsSize===0?0:resultSegsSize+1;},getParent:function getParent(){return this.parentLine;},getSegment:function getSegment(i){return this.segs[i];},getParentCoordinates:function getParentCoordinates(){return this.parentLine.getCoordinates();},getMinimumSize:function getMinimumSize(){return this.minimumSize;},asLinearRing:function asLinearRing(){return this.parentLine.getFactory().createLinearRing(TaggedLineString.extractCoordinates(this.resultSegs));},getSegments:function getSegments(){return this.segs;},init:function init(){var pts=this.parentLine.getCoordinates();this.segs=new Array(pts.length-1).fill(null);for(var i=0;i<pts.length-1;i++){var seg=new TaggedLineSegment(pts[i],pts[i+1],this.parentLine,i);this.segs[i]=seg;}},getResultCoordinates:function getResultCoordinates(){return TaggedLineString.extractCoordinates(this.resultSegs);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return TaggedLineString;}});TaggedLineString.extractCoordinates=function(segs){var pts=new Array(segs.size()+1).fill(null);var seg=null;for(var i=0;i<segs.size();i++){seg=segs.get(i);pts[i]=seg.p0;}pts[pts.length-1]=seg.p1;return pts;};function LineSegmentIndex(){this.index=new Quadtree();}extend(LineSegmentIndex.prototype,{remove:function remove(seg){this.index.remove(new Envelope(seg.p0,seg.p1),seg);},add:function add(){if(arguments[0]instanceof TaggedLineString){var line=arguments[0];var segs=line.getSegments();for(var i=0;i<segs.length;i++){var seg=segs[i];this.add(seg);}}else if(arguments[0]instanceof LineSegment){var _seg=arguments[0];this.index.insert(new Envelope(_seg.p0,_seg.p1),_seg);}},query:function query(querySeg){var env=new Envelope(querySeg.p0,querySeg.p1);var visitor=new LineSegmentVisitor(querySeg);this.index.query(env,visitor);var itemsFound=visitor.getItems();return itemsFound;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return LineSegmentIndex;}});function LineSegmentVisitor(){this.querySeg=null;this.items=new ArrayList();var querySeg=arguments[0];this.querySeg=querySeg;}extend(LineSegmentVisitor.prototype,{visitItem:function visitItem(item){var seg=item;if(Envelope.intersects(seg.p0,seg.p1,this.querySeg.p0,this.querySeg.p1))this.items.add(item);},getItems:function getItems(){return this.items;},interfaces_:function interfaces_(){return[ItemVisitor];},getClass:function getClass(){return LineSegmentVisitor;}});function TaggedLineStringSimplifier(){this.li=new RobustLineIntersector();this.inputIndex=new LineSegmentIndex();this.outputIndex=new LineSegmentIndex();this.line=null;this.linePts=null;this.distanceTolerance=0.0;var inputIndex=arguments[0],outputIndex=arguments[1];this.inputIndex=inputIndex;this.outputIndex=outputIndex;}extend(TaggedLineStringSimplifier.prototype,{flatten:function flatten(start,end){var p0=this.linePts[start];var p1=this.linePts[end];var newSeg=new LineSegment(p0,p1);this.remove(this.line,start,end);this.outputIndex.add(newSeg);return newSeg;},hasBadIntersection:function hasBadIntersection(parentLine,sectionIndex,candidateSeg){if(this.hasBadOutputIntersection(candidateSeg))return true;if(this.hasBadInputIntersection(parentLine,sectionIndex,candidateSeg))return true;return false;},setDistanceTolerance:function setDistanceTolerance(distanceTolerance){this.distanceTolerance=distanceTolerance;},simplifySection:function simplifySection(i,j,depth){depth+=1;var sectionIndex=new Array(2).fill(null);if(i+1===j){var newSeg=this.line.getSegment(i);this.line.addToResult(newSeg);return null;}var isValidToSimplify=true;if(this.line.getResultSize()<this.line.getMinimumSize()){var worstCaseSize=depth+1;if(worstCaseSize<this.line.getMinimumSize())isValidToSimplify=false;}var distance=new Array(1).fill(null);var furthestPtIndex=this.findFurthestPoint(this.linePts,i,j,distance);if(distance[0]>this.distanceTolerance)isValidToSimplify=false;var candidateSeg=new LineSegment();candidateSeg.p0=this.linePts[i];candidateSeg.p1=this.linePts[j];sectionIndex[0]=i;sectionIndex[1]=j;if(this.hasBadIntersection(this.line,sectionIndex,candidateSeg))isValidToSimplify=false;if(isValidToSimplify){var newSeg=this.flatten(i,j);this.line.addToResult(newSeg);return null;}this.simplifySection(i,furthestPtIndex,depth);this.simplifySection(furthestPtIndex,j,depth);},hasBadOutputIntersection:function hasBadOutputIntersection(candidateSeg){var querySegs=this.outputIndex.query(candidateSeg);for(var i=querySegs.iterator();i.hasNext();){var querySeg=i.next();if(this.hasInteriorIntersection(querySeg,candidateSeg)){return true;}}return false;},findFurthestPoint:function findFurthestPoint(pts,i,j,maxDistance){var seg=new LineSegment();seg.p0=pts[i];seg.p1=pts[j];var maxDist=-1.0;var maxIndex=i;for(var k=i+1;k<j;k++){var midPt=pts[k];var distance=seg.distance(midPt);if(distance>maxDist){maxDist=distance;maxIndex=k;}}maxDistance[0]=maxDist;return maxIndex;},simplify:function simplify(line){this.line=line;this.linePts=line.getParentCoordinates();this.simplifySection(0,this.linePts.length-1,0);},remove:function remove(line,start,end){for(var i=start;i<end;i++){var seg=line.getSegment(i);this.inputIndex.remove(seg);}},hasInteriorIntersection:function hasInteriorIntersection(seg0,seg1){this.li.computeIntersection(seg0.p0,seg0.p1,seg1.p0,seg1.p1);return this.li.isInteriorIntersection();},hasBadInputIntersection:function hasBadInputIntersection(parentLine,sectionIndex,candidateSeg){var querySegs=this.inputIndex.query(candidateSeg);for(var i=querySegs.iterator();i.hasNext();){var querySeg=i.next();if(this.hasInteriorIntersection(querySeg,candidateSeg)){if(TaggedLineStringSimplifier.isInLineSection(parentLine,sectionIndex,querySeg))continue;return true;}}return false;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return TaggedLineStringSimplifier;}});TaggedLineStringSimplifier.isInLineSection=function(line,sectionIndex,seg){if(seg.getParent()!==line.getParent())return false;var segIndex=seg.getIndex();if(segIndex>=sectionIndex[0]&&segIndex<sectionIndex[1])return true;return false;};function TaggedLinesSimplifier(){this.inputIndex=new LineSegmentIndex();this.outputIndex=new LineSegmentIndex();this.distanceTolerance=0.0;}extend(TaggedLinesSimplifier.prototype,{setDistanceTolerance:function setDistanceTolerance(distanceTolerance){this.distanceTolerance=distanceTolerance;},simplify:function simplify(taggedLines){for(var i=taggedLines.iterator();i.hasNext();){this.inputIndex.add(i.next());}for(var i=taggedLines.iterator();i.hasNext();){var tlss=new TaggedLineStringSimplifier(this.inputIndex,this.outputIndex);tlss.setDistanceTolerance(this.distanceTolerance);tlss.simplify(i.next());}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return TaggedLinesSimplifier;}});function TopologyPreservingSimplifier(){this.inputGeom=null;this.lineSimplifier=new TaggedLinesSimplifier();this.linestringMap=null;var inputGeom=arguments[0];this.inputGeom=inputGeom;}extend(TopologyPreservingSimplifier.prototype,{getResultGeometry:function getResultGeometry(){if(this.inputGeom.isEmpty())return this.inputGeom.copy();this.linestringMap=new HashMap();this.inputGeom.apply(new LineStringMapBuilderFilter(this));this.lineSimplifier.simplify(this.linestringMap.values());var result=new LineStringTransformer(this.linestringMap).transform(this.inputGeom);return result;},setDistanceTolerance:function setDistanceTolerance(distanceTolerance){if(distanceTolerance<0.0)throw new IllegalArgumentException(\"Tolerance must be non-negative\");this.lineSimplifier.setDistanceTolerance(distanceTolerance);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return TopologyPreservingSimplifier;}});TopologyPreservingSimplifier.simplify=function(geom,distanceTolerance){var tss=new TopologyPreservingSimplifier(geom);tss.setDistanceTolerance(distanceTolerance);return tss.getResultGeometry();};function LineStringTransformer(){GeometryTransformer.apply(this);this.linestringMap=null;var linestringMap=arguments[0];this.linestringMap=linestringMap;}inherits(LineStringTransformer,GeometryTransformer);extend(LineStringTransformer.prototype,{transformCoordinates:function transformCoordinates(coords,parent){if(coords.size()===0)return null;if(parent instanceof LineString){var taggedLine=this.linestringMap.get(parent);return this.createCoordinateSequence(taggedLine.getResultCoordinates());}return GeometryTransformer.prototype.transformCoordinates.call(this,coords,parent);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return LineStringTransformer;}});function LineStringMapBuilderFilter(){this.tps=null;var tps=arguments[0];this.tps=tps;}extend(LineStringMapBuilderFilter.prototype,{filter:function filter(geom){if(geom instanceof LineString){var line=geom;if(line.isEmpty())return null;var minSize=line.isClosed()?4:2;var taggedLine=new TaggedLineString(line,minSize);this.tps.linestringMap.put(line,taggedLine);}},interfaces_:function interfaces_(){return[GeometryComponentFilter];},getClass:function getClass(){return LineStringMapBuilderFilter;}});TopologyPreservingSimplifier.LineStringTransformer=LineStringTransformer;TopologyPreservingSimplifier.LineStringMapBuilderFilter=LineStringMapBuilderFilter;var simplify=Object.freeze({DouglasPeuckerSimplifier:DouglasPeuckerSimplifier,TopologyPreservingSimplifier:TopologyPreservingSimplifier});function SplitSegment(){this.seg=null;this.segLen=null;this.splitPt=null;this.minimumLen=0.0;var seg=arguments[0];this.seg=seg;this.segLen=seg.getLength();}extend(SplitSegment.prototype,{splitAt:function splitAt(){if(arguments.length===1){var pt=arguments[0];var minFrac=this.minimumLen/this.segLen;if(pt.distance(this.seg.p0)<this.minimumLen){this.splitPt=this.seg.pointAlong(minFrac);return null;}if(pt.distance(this.seg.p1)<this.minimumLen){this.splitPt=SplitSegment.pointAlongReverse(this.seg,minFrac);return null;}this.splitPt=pt;}else if(arguments.length===2){var length=arguments[0],endPt=arguments[1];var actualLen=this.getConstrainedLength(length);var frac=actualLen/this.segLen;if(endPt.equals2D(this.seg.p0))this.splitPt=this.seg.pointAlong(frac);else this.splitPt=SplitSegment.pointAlongReverse(this.seg,frac);}},setMinimumLength:function setMinimumLength(minLen){this.minimumLen=minLen;},getConstrainedLength:function getConstrainedLength(len){if(len<this.minimumLen)return this.minimumLen;return len;},getSplitPoint:function getSplitPoint(){return this.splitPt;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return SplitSegment;}});SplitSegment.pointAlongReverse=function(seg,segmentLengthFraction){var coord=new Coordinate();coord.x=seg.p1.x-segmentLengthFraction*(seg.p1.x-seg.p0.x);coord.y=seg.p1.y-segmentLengthFraction*(seg.p1.y-seg.p0.y);return coord;};function ConstraintSplitPointFinder(){}extend(ConstraintSplitPointFinder.prototype,{findSplitPoint:function findSplitPoint(seg,encroachPt){},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return ConstraintSplitPointFinder;}});function NonEncroachingSplitPointFinder(){}extend(NonEncroachingSplitPointFinder.prototype,{findSplitPoint:function findSplitPoint(seg,encroachPt){var lineSeg=seg.getLineSegment();var segLen=lineSeg.getLength();var midPtLen=segLen/2;var splitSeg=new SplitSegment(lineSeg);var projPt=NonEncroachingSplitPointFinder.projectedSplitPoint(seg,encroachPt);var nonEncroachDiam=projPt.distance(encroachPt)*2*0.8;var maxSplitLen=nonEncroachDiam;if(maxSplitLen>midPtLen){maxSplitLen=midPtLen;}splitSeg.setMinimumLength(maxSplitLen);splitSeg.splitAt(projPt);return splitSeg.getSplitPoint();},interfaces_:function interfaces_(){return[ConstraintSplitPointFinder];},getClass:function getClass(){return NonEncroachingSplitPointFinder;}});NonEncroachingSplitPointFinder.projectedSplitPoint=function(seg,encroachPt){var lineSeg=seg.getLineSegment();var projPt=lineSeg.project(encroachPt);return projPt;};function TrianglePredicate(){}extend(TrianglePredicate.prototype,{interfaces_:function interfaces_(){return[];},getClass:function getClass(){return TrianglePredicate;}});TrianglePredicate.triArea=function(a,b,c){return(b.x-a.x)*(c.y-a.y)-(b.y-a.y)*(c.x-a.x);};TrianglePredicate.isInCircleDDNormalized=function(a,b,c,p){var adx=DD.valueOf(a.x).selfSubtract(p.x);var ady=DD.valueOf(a.y).selfSubtract(p.y);var bdx=DD.valueOf(b.x).selfSubtract(p.x);var bdy=DD.valueOf(b.y).selfSubtract(p.y);var cdx=DD.valueOf(c.x).selfSubtract(p.x);var cdy=DD.valueOf(c.y).selfSubtract(p.y);var abdet=adx.multiply(bdy).selfSubtract(bdx.multiply(ady));var bcdet=bdx.multiply(cdy).selfSubtract(cdx.multiply(bdy));var cadet=cdx.multiply(ady).selfSubtract(adx.multiply(cdy));var alift=adx.multiply(adx).selfAdd(ady.multiply(ady));var blift=bdx.multiply(bdx).selfAdd(bdy.multiply(bdy));var clift=cdx.multiply(cdx).selfAdd(cdy.multiply(cdy));var sum=alift.selfMultiply(bcdet).selfAdd(blift.selfMultiply(cadet)).selfAdd(clift.selfMultiply(abdet));var isInCircle=sum.doubleValue()>0;return isInCircle;};TrianglePredicate.checkRobustInCircle=function(a,b,c,p){var nonRobustInCircle=TrianglePredicate.isInCircleNonRobust(a,b,c,p);var isInCircleDD=TrianglePredicate.isInCircleDDSlow(a,b,c,p);var isInCircleCC=TrianglePredicate.isInCircleCC(a,b,c,p);var circumCentre=Triangle.circumcentre(a,b,c);System.out.println(\"p radius diff a = \"+Math.abs(p.distance(circumCentre)-a.distance(circumCentre))/a.distance(circumCentre));if(nonRobustInCircle!==isInCircleDD||nonRobustInCircle!==isInCircleCC){System.out.println(\"inCircle robustness failure (double result = \"+nonRobustInCircle+\", DD result = \"+isInCircleDD+\", CC result = \"+isInCircleCC+\")\");System.out.println(WKTWriter.toLineString(new CoordinateArraySequence([a,b,c,p])));System.out.println(\"Circumcentre = \"+WKTWriter.toPoint(circumCentre)+\" radius = \"+a.distance(circumCentre));System.out.println(\"p radius diff a = \"+Math.abs(p.distance(circumCentre)/a.distance(circumCentre)-1));System.out.println(\"p radius diff b = \"+Math.abs(p.distance(circumCentre)/b.distance(circumCentre)-1));System.out.println(\"p radius diff c = \"+Math.abs(p.distance(circumCentre)/c.distance(circumCentre)-1));System.out.println();}};TrianglePredicate.isInCircleDDFast=function(a,b,c,p){var aTerm=DD.sqr(a.x).selfAdd(DD.sqr(a.y)).selfMultiply(TrianglePredicate.triAreaDDFast(b,c,p));var bTerm=DD.sqr(b.x).selfAdd(DD.sqr(b.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a,c,p));var cTerm=DD.sqr(c.x).selfAdd(DD.sqr(c.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a,b,p));var pTerm=DD.sqr(p.x).selfAdd(DD.sqr(p.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a,b,c));var sum=aTerm.selfSubtract(bTerm).selfAdd(cTerm).selfSubtract(pTerm);var isInCircle=sum.doubleValue()>0;return isInCircle;};TrianglePredicate.isInCircleCC=function(a,b,c,p){var cc=Triangle.circumcentre(a,b,c);var ccRadius=a.distance(cc);var pRadiusDiff=p.distance(cc)-ccRadius;return pRadiusDiff<=0;};TrianglePredicate.isInCircleNormalized=function(a,b,c,p){var adx=a.x-p.x;var ady=a.y-p.y;var bdx=b.x-p.x;var bdy=b.y-p.y;var cdx=c.x-p.x;var cdy=c.y-p.y;var abdet=adx*bdy-bdx*ady;var bcdet=bdx*cdy-cdx*bdy;var cadet=cdx*ady-adx*cdy;var alift=adx*adx+ady*ady;var blift=bdx*bdx+bdy*bdy;var clift=cdx*cdx+cdy*cdy;var disc=alift*bcdet+blift*cadet+clift*abdet;return disc>0;};TrianglePredicate.isInCircleDDSlow=function(a,b,c,p){var px=DD.valueOf(p.x);var py=DD.valueOf(p.y);var ax=DD.valueOf(a.x);var ay=DD.valueOf(a.y);var bx=DD.valueOf(b.x);var by=DD.valueOf(b.y);var cx=DD.valueOf(c.x);var cy=DD.valueOf(c.y);var aTerm=ax.multiply(ax).add(ay.multiply(ay)).multiply(TrianglePredicate.triAreaDDSlow(bx,by,cx,cy,px,py));var bTerm=bx.multiply(bx).add(by.multiply(by)).multiply(TrianglePredicate.triAreaDDSlow(ax,ay,cx,cy,px,py));var cTerm=cx.multiply(cx).add(cy.multiply(cy)).multiply(TrianglePredicate.triAreaDDSlow(ax,ay,bx,by,px,py));var pTerm=px.multiply(px).add(py.multiply(py)).multiply(TrianglePredicate.triAreaDDSlow(ax,ay,bx,by,cx,cy));var sum=aTerm.subtract(bTerm).add(cTerm).subtract(pTerm);var isInCircle=sum.doubleValue()>0;return isInCircle;};TrianglePredicate.isInCircleNonRobust=function(a,b,c,p){var isInCircle=(a.x*a.x+a.y*a.y)*TrianglePredicate.triArea(b,c,p)-(b.x*b.x+b.y*b.y)*TrianglePredicate.triArea(a,c,p)+(c.x*c.x+c.y*c.y)*TrianglePredicate.triArea(a,b,p)-(p.x*p.x+p.y*p.y)*TrianglePredicate.triArea(a,b,c)>0;return isInCircle;};TrianglePredicate.isInCircleRobust=function(a,b,c,p){return TrianglePredicate.isInCircleNormalized(a,b,c,p);};TrianglePredicate.triAreaDDSlow=function(ax,ay,bx,by,cx,cy){return bx.subtract(ax).multiply(cy.subtract(ay)).subtract(by.subtract(ay).multiply(cx.subtract(ax)));};TrianglePredicate.triAreaDDFast=function(a,b,c){var t1=DD.valueOf(b.x).selfSubtract(a.x).selfMultiply(DD.valueOf(c.y).selfSubtract(a.y));var t2=DD.valueOf(b.y).selfSubtract(a.y).selfMultiply(DD.valueOf(c.x).selfSubtract(a.x));return t1.selfSubtract(t2);};function Vertex(){this.p=null;if(arguments.length===1){var _p=arguments[0];this.p=new Coordinate(_p);}else if(arguments.length===2){var _x=arguments[0],_y=arguments[1];this.p=new Coordinate(_x,_y);}else if(arguments.length===3){var _x2=arguments[0],_y2=arguments[1],_z=arguments[2];this.p=new Coordinate(_x2,_y2,_z);}}extend(Vertex.prototype,{circleCenter:function circleCenter(b,c){var a=new Vertex(this.getX(),this.getY());var cab=this.bisector(a,b);var cbc=this.bisector(b,c);var hcc=new HCoordinate(cab,cbc);var cc=null;try{cc=new Vertex(hcc.getX(),hcc.getY());}catch(nre){if(nre instanceof NotRepresentableException){System.err.println(\"a: \"+a+\"  b: \"+b+\"  c: \"+c);System.err.println(nre);}else throw nre;}finally{}return cc;},dot:function dot(v){return this.p.x*v.getX()+this.p.y*v.getY();},magn:function magn(){return Math.sqrt(this.p.x*this.p.x+this.p.y*this.p.y);},getZ:function getZ(){return this.p.z;},bisector:function bisector(a,b){var dx=b.getX()-a.getX();var dy=b.getY()-a.getY();var l1=new HCoordinate(a.getX()+dx/2.0,a.getY()+dy/2.0,1.0);var l2=new HCoordinate(a.getX()-dy+dx/2.0,a.getY()+dx+dy/2.0,1.0);return new HCoordinate(l1,l2);},equals:function equals(){if(arguments.length===1){var _x=arguments[0];if(this.p.x===_x.getX()&&this.p.y===_x.getY()){return true;}else{return false;}}else if(arguments.length===2){var _x3=arguments[0],tolerance=arguments[1];if(this.p.distance(_x3.getCoordinate())<tolerance){return true;}else{return false;}}},getCoordinate:function getCoordinate(){return this.p;},isInCircle:function isInCircle(a,b,c){return TrianglePredicate.isInCircleRobust(a.p,b.p,c.p,this.p);},interpolateZValue:function interpolateZValue(v0,v1,v2){var x0=v0.getX();var y0=v0.getY();var a=v1.getX()-x0;var b=v2.getX()-x0;var c=v1.getY()-y0;var d=v2.getY()-y0;var det=a*d-b*c;var dx=this.getX()-x0;var dy=this.getY()-y0;var t=(d*dx-b*dy)/det;var u=(-c*dx+a*dy)/det;var z=v0.getZ()+t*(v1.getZ()-v0.getZ())+u*(v2.getZ()-v0.getZ());return z;},midPoint:function midPoint(a){var xm=(this.p.x+a.getX())/2.0;var ym=(this.p.y+a.getY())/2.0;var zm=(this.p.z+a.getZ())/2.0;return new Vertex(xm,ym,zm);},rightOf:function rightOf(e){return this.isCCW(e.dest(),e.orig());},isCCW:function isCCW(b,c){return(b.p.x-this.p.x)*(c.p.y-this.p.y)-(b.p.y-this.p.y)*(c.p.x-this.p.x)>0;},getX:function getX(){return this.p.x;},crossProduct:function crossProduct(v){return this.p.x*v.getY()-this.p.y*v.getX();},setZ:function setZ(_z){this.p.z=_z;},times:function times(c){return new Vertex(c*this.p.x,c*this.p.y);},cross:function cross(){return new Vertex(this.p.y,-this.p.x);},leftOf:function leftOf(e){return this.isCCW(e.orig(),e.dest());},toString:function toString(){return\"POINT (\"+this.p.x+\" \"+this.p.y+\")\";},sub:function sub(v){return new Vertex(this.p.x-v.getX(),this.p.y-v.getY());},getY:function getY(){return this.p.y;},classify:function classify(p0,p1){var p2=this;var a=p1.sub(p0);var b=p2.sub(p0);var sa=a.crossProduct(b);if(sa>0.0)return Vertex.LEFT;if(sa<0.0)return Vertex.RIGHT;if(a.getX()*b.getX()<0.0||a.getY()*b.getY()<0.0)return Vertex.BEHIND;if(a.magn()<b.magn())return Vertex.BEYOND;if(p0.equals(p2))return Vertex.ORIGIN;if(p1.equals(p2))return Vertex.DESTINATION;return Vertex.BETWEEN;},sum:function sum(v){return new Vertex(this.p.x+v.getX(),this.p.y+v.getY());},distance:function distance(v1,v2){return Math.sqrt(Math.pow(v2.getX()-v1.getX(),2.0)+Math.pow(v2.getY()-v1.getY(),2.0));},circumRadiusRatio:function circumRadiusRatio(b,c){var x=this.circleCenter(b,c);var radius=this.distance(x,b);var edgeLength=this.distance(this,b);var el=this.distance(b,c);if(el<edgeLength){edgeLength=el;}el=this.distance(c,this);if(el<edgeLength){edgeLength=el;}return radius/edgeLength;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Vertex;}});Vertex.interpolateZ=function(){if(arguments.length===3){var p=arguments[0],p0=arguments[1],p1=arguments[2];var segLen=p0.distance(p1);var ptLen=p.distance(p0);var dz=p1.z-p0.z;var pz=p0.z+dz*(ptLen/segLen);return pz;}else if(arguments.length===4){var _p2=arguments[0],v0=arguments[1],v1=arguments[2],v2=arguments[3];var x0=v0.x;var y0=v0.y;var a=v1.x-x0;var b=v2.x-x0;var c=v1.y-y0;var d=v2.y-y0;var det=a*d-b*c;var dx=_p2.x-x0;var dy=_p2.y-y0;var t=(d*dx-b*dy)/det;var u=(-c*dx+a*dy)/det;var z=v0.z+t*(v1.z-v0.z)+u*(v2.z-v0.z);return z;}};Vertex.LEFT=0;Vertex.RIGHT=1;Vertex.BEYOND=2;Vertex.BEHIND=3;Vertex.BETWEEN=4;Vertex.ORIGIN=5;Vertex.DESTINATION=6;function ConstraintVertex(){this._isOnConstraint=null;this.constraint=null;var p=arguments[0];Vertex.call(this,p);}inherits(ConstraintVertex,Vertex);extend(ConstraintVertex.prototype,{getConstraint:function getConstraint(){return this.constraint;},setOnConstraint:function setOnConstraint(isOnConstraint){this._isOnConstraint=isOnConstraint;},merge:function merge(other){if(other._isOnConstraint){this._isOnConstraint=true;this.constraint=other.constraint;}},isOnConstraint:function isOnConstraint(){return this._isOnConstraint;},setConstraint:function setConstraint(constraint){this._isOnConstraint=true;this.constraint=constraint;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return ConstraintVertex;}});function QuadEdge(){this._rot=null;this.vertex=null;this.next=null;this.data=null;}extend(QuadEdge.prototype,{equalsNonOriented:function equalsNonOriented(qe){if(this.equalsOriented(qe))return true;if(this.equalsOriented(qe.sym()))return true;return false;},toLineSegment:function toLineSegment(){return new LineSegment(this.vertex.getCoordinate(),this.dest().getCoordinate());},dest:function dest(){return this.sym().orig();},oNext:function oNext(){return this.next;},equalsOriented:function equalsOriented(qe){if(this.orig().getCoordinate().equals2D(qe.orig().getCoordinate())&&this.dest().getCoordinate().equals2D(qe.dest().getCoordinate()))return true;return false;},dNext:function dNext(){return this.sym().oNext().sym();},lPrev:function lPrev(){return this.next.sym();},rPrev:function rPrev(){return this.sym().oNext();},rot:function rot(){return this._rot;},oPrev:function oPrev(){return this._rot.next._rot;},sym:function sym(){return this._rot._rot;},setOrig:function setOrig(o){this.vertex=o;},lNext:function lNext(){return this.invRot().oNext().rot();},getLength:function getLength(){return this.orig().getCoordinate().distance(this.dest().getCoordinate());},invRot:function invRot(){return this._rot.sym();},setDest:function setDest(d){this.sym().setOrig(d);},setData:function setData(data){this.data=data;},getData:function getData(){return this.data;},delete:function _delete(){this._rot=null;},orig:function orig(){return this.vertex;},rNext:function rNext(){return this._rot.next.invRot();},toString:function toString(){var p0=this.vertex.getCoordinate();var p1=this.dest().getCoordinate();return WKTWriter.toLineString(p0,p1);},isLive:function isLive(){return this._rot!==null;},getPrimary:function getPrimary(){if(this.orig().getCoordinate().compareTo(this.dest().getCoordinate())<=0)return this;else return this.sym();},dPrev:function dPrev(){return this.invRot().oNext().invRot();},setNext:function setNext(next){this.next=next;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return QuadEdge;}});QuadEdge.makeEdge=function(o,d){var q0=new QuadEdge();var q1=new QuadEdge();var q2=new QuadEdge();var q3=new QuadEdge();q0._rot=q1;q1._rot=q2;q2._rot=q3;q3._rot=q0;q0.setNext(q0);q1.setNext(q3);q2.setNext(q2);q3.setNext(q1);var base=q0;base.setOrig(o);base.setDest(d);return base;};QuadEdge.swap=function(e){var a=e.oPrev();var b=e.sym().oPrev();QuadEdge.splice(e,a);QuadEdge.splice(e.sym(),b);QuadEdge.splice(e,a.lNext());QuadEdge.splice(e.sym(),b.lNext());e.setOrig(a.dest());e.setDest(b.dest());};QuadEdge.splice=function(a,b){var alpha=a.oNext().rot();var beta=b.oNext().rot();var t1=b.oNext();var t2=a.oNext();var t3=beta.oNext();var t4=alpha.oNext();a.setNext(t1);b.setNext(t2);alpha.setNext(t3);beta.setNext(t4);};QuadEdge.connect=function(a,b){var e=QuadEdge.makeEdge(a.dest(),b.orig());QuadEdge.splice(e,a.lNext());QuadEdge.splice(e.sym(),b);return e;};function IncrementalDelaunayTriangulator(){this.subdiv=null;this.isUsingTolerance=false;var subdiv=arguments[0];this.subdiv=subdiv;this.isUsingTolerance=subdiv.getTolerance()>0.0;}extend(IncrementalDelaunayTriangulator.prototype,{insertSite:function insertSite(v){var e=this.subdiv.locate(v);if(this.subdiv.isVertexOfEdge(e,v)){return e;}else if(this.subdiv.isOnEdge(e,v.getCoordinate())){e=e.oPrev();this.subdiv.delete(e.oNext());}var base=this.subdiv.makeEdge(e.orig(),v);QuadEdge.splice(base,e);var startEdge=base;do{base=this.subdiv.connect(e,base.sym());e=base.oPrev();}while(e.lNext()!==startEdge);do{var t=e.oPrev();if(t.dest().rightOf(e)&&v.isInCircle(e.orig(),t.dest(),e.dest())){QuadEdge.swap(e);e=e.oPrev();}else if(e.oNext()===startEdge){return base;}else{e=e.oNext().lPrev();}}while(true);},insertSites:function insertSites(vertices){for(var i=vertices.iterator();i.hasNext();){var v=i.next();this.insertSite(v);}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return IncrementalDelaunayTriangulator;}});function QuadEdgeLocator(){}extend(QuadEdgeLocator.prototype,{locate:function locate(v){},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return QuadEdgeLocator;}});function LastFoundQuadEdgeLocator(){this.subdiv=null;this.lastEdge=null;var subdiv=arguments[0];this.subdiv=subdiv;this.init();}extend(LastFoundQuadEdgeLocator.prototype,{init:function init(){this.lastEdge=this.findEdge();},locate:function locate(v){if(!this.lastEdge.isLive()){this.init();}var e=this.subdiv.locateFromEdge(v,this.lastEdge);this.lastEdge=e;return e;},findEdge:function findEdge(){var edges=this.subdiv.getEdges();return edges.iterator().next();},interfaces_:function interfaces_(){return[QuadEdgeLocator];},getClass:function getClass(){return LastFoundQuadEdgeLocator;}});function LocateFailureException(){this.seg=null;if(arguments.length===1){if(typeof arguments[0]===\"string\"){var msg=arguments[0];RuntimeException.call(this,msg);}else if(arguments[0]instanceof LineSegment){var seg=arguments[0];RuntimeException.call(this,\"Locate failed to converge (at edge: \"+seg+\").  Possible causes include invalid Subdivision topology or very close sites\");this.seg=new LineSegment(seg);}}else if(arguments.length===2){var _msg=arguments[0],_seg=arguments[1];RuntimeException.call(this,LocateFailureException.msgWithSpatial(_msg,_seg));this.seg=new LineSegment(_seg);}}inherits(LocateFailureException,RuntimeException);extend(LocateFailureException.prototype,{getSegment:function getSegment(){return this.seg;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return LocateFailureException;}});LocateFailureException.msgWithSpatial=function(msg,seg){if(seg!==null)return msg+\" [ \"+seg+\" ]\";return msg;};function TriangleVisitor(){}extend(TriangleVisitor.prototype,{visit:function visit(triEdges){},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return TriangleVisitor;}});function QuadEdgeSubdivision(){this.visitedKey=0;this.quadEdges=new ArrayList();this.startingEdge=null;this.tolerance=null;this.edgeCoincidenceTolerance=null;this.frameVertex=new Array(3).fill(null);this.frameEnv=null;this.locator=null;this.seg=new LineSegment();this.triEdges=new Array(3).fill(null);var env=arguments[0],tolerance=arguments[1];this.tolerance=tolerance;this.edgeCoincidenceTolerance=tolerance/QuadEdgeSubdivision.EDGE_COINCIDENCE_TOL_FACTOR;this.createFrame(env);this.startingEdge=this.initSubdiv();this.locator=new LastFoundQuadEdgeLocator(this);}extend(QuadEdgeSubdivision.prototype,{getTriangleVertices:function getTriangleVertices(includeFrame){var visitor=new TriangleVertexListVisitor();this.visitTriangles(visitor,includeFrame);return visitor.getTriangleVertices();},isFrameVertex:function isFrameVertex(v){if(v.equals(this.frameVertex[0]))return true;if(v.equals(this.frameVertex[1]))return true;if(v.equals(this.frameVertex[2]))return true;return false;},isVertexOfEdge:function isVertexOfEdge(e,v){if(v.equals(e.orig(),this.tolerance)||v.equals(e.dest(),this.tolerance)){return true;}return false;},connect:function connect(a,b){var q=QuadEdge.connect(a,b);this.quadEdges.add(q);return q;},getVoronoiCellPolygon:function getVoronoiCellPolygon(qe,geomFact){var cellPts=new ArrayList();var startQE=qe;do{var cc=qe.rot().orig().getCoordinate();cellPts.add(cc);qe=qe.oPrev();}while(qe!==startQE);var coordList=new CoordinateList();coordList.addAll(cellPts,false);coordList.closeRing();if(coordList.size()<4){System.out.println(coordList);coordList.add(coordList.get(coordList.size()-1),true);}var pts=coordList.toCoordinateArray();var cellPoly=geomFact.createPolygon(geomFact.createLinearRing(pts),null);var v=startQE.orig();cellPoly.setUserData(v.getCoordinate());return cellPoly;},setLocator:function setLocator(locator){this.locator=locator;},initSubdiv:function initSubdiv(){var ea=this.makeEdge(this.frameVertex[0],this.frameVertex[1]);var eb=this.makeEdge(this.frameVertex[1],this.frameVertex[2]);QuadEdge.splice(ea.sym(),eb);var ec=this.makeEdge(this.frameVertex[2],this.frameVertex[0]);QuadEdge.splice(eb.sym(),ec);QuadEdge.splice(ec.sym(),ea);return ea;},isFrameBorderEdge:function isFrameBorderEdge(e){var leftTri=new Array(3).fill(null);QuadEdgeSubdivision.getTriangleEdges(e,leftTri);var rightTri=new Array(3).fill(null);QuadEdgeSubdivision.getTriangleEdges(e.sym(),rightTri);var vLeftTriOther=e.lNext().dest();if(this.isFrameVertex(vLeftTriOther))return true;var vRightTriOther=e.sym().lNext().dest();if(this.isFrameVertex(vRightTriOther))return true;return false;},makeEdge:function makeEdge(o,d){var q=QuadEdge.makeEdge(o,d);this.quadEdges.add(q);return q;},visitTriangles:function visitTriangles(triVisitor,includeFrame){this.visitedKey++;var edgeStack=new Stack();edgeStack.push(this.startingEdge);var visitedEdges=new HashSet();while(!edgeStack.empty()){var edge=edgeStack.pop();if(!visitedEdges.contains(edge)){var triEdges=this.fetchTriangleToVisit(edge,edgeStack,includeFrame,visitedEdges);if(triEdges!==null)triVisitor.visit(triEdges);}}},isFrameEdge:function isFrameEdge(e){if(this.isFrameVertex(e.orig())||this.isFrameVertex(e.dest()))return true;return false;},isOnEdge:function isOnEdge(e,p){this.seg.setCoordinates(e.orig().getCoordinate(),e.dest().getCoordinate());var dist=this.seg.distance(p);return dist<this.edgeCoincidenceTolerance;},getEnvelope:function getEnvelope(){return new Envelope(this.frameEnv);},createFrame:function createFrame(env){var deltaX=env.getWidth();var deltaY=env.getHeight();var offset=0.0;if(deltaX>deltaY){offset=deltaX*10.0;}else{offset=deltaY*10.0;}this.frameVertex[0]=new Vertex((env.getMaxX()+env.getMinX())/2.0,env.getMaxY()+offset);this.frameVertex[1]=new Vertex(env.getMinX()-offset,env.getMinY()-offset);this.frameVertex[2]=new Vertex(env.getMaxX()+offset,env.getMinY()-offset);this.frameEnv=new Envelope(this.frameVertex[0].getCoordinate(),this.frameVertex[1].getCoordinate());this.frameEnv.expandToInclude(this.frameVertex[2].getCoordinate());},getTriangleCoordinates:function getTriangleCoordinates(includeFrame){var visitor=new TriangleCoordinatesVisitor();this.visitTriangles(visitor,includeFrame);return visitor.getTriangles();},getVertices:function getVertices(includeFrame){var vertices=new HashSet();for(var i=this.quadEdges.iterator();i.hasNext();){var qe=i.next();var v=qe.orig();if(includeFrame||!this.isFrameVertex(v))vertices.add(v);var vd=qe.dest();if(includeFrame||!this.isFrameVertex(vd))vertices.add(vd);}return vertices;},fetchTriangleToVisit:function fetchTriangleToVisit(edge,edgeStack,includeFrame,visitedEdges){var curr=edge;var edgeCount=0;var isFrame=false;do{this.triEdges[edgeCount]=curr;if(this.isFrameEdge(curr))isFrame=true;var sym=curr.sym();if(!visitedEdges.contains(sym))edgeStack.push(sym);visitedEdges.add(curr);edgeCount++;curr=curr.lNext();}while(curr!==edge);if(isFrame&&!includeFrame)return null;return this.triEdges;},getEdges:function getEdges(){if(arguments.length===0){return this.quadEdges;}else if(arguments.length===1){var geomFact=arguments[0];var quadEdges=this.getPrimaryEdges(false);var edges=new Array(quadEdges.size()).fill(null);var i=0;for(var it=quadEdges.iterator();it.hasNext();){var qe=it.next();edges[i++]=geomFact.createLineString([qe.orig().getCoordinate(),qe.dest().getCoordinate()]);}return geomFact.createMultiLineString(edges);}},getVertexUniqueEdges:function getVertexUniqueEdges(includeFrame){var edges=new ArrayList();var visitedVertices=new HashSet();for(var i=this.quadEdges.iterator();i.hasNext();){var qe=i.next();var v=qe.orig();if(!visitedVertices.contains(v)){visitedVertices.add(v);if(includeFrame||!this.isFrameVertex(v)){edges.add(qe);}}var qd=qe.sym();var vd=qd.orig();if(!visitedVertices.contains(vd)){visitedVertices.add(vd);if(includeFrame||!this.isFrameVertex(vd)){edges.add(qd);}}}return edges;},getTriangleEdges:function getTriangleEdges(includeFrame){var visitor=new TriangleEdgesListVisitor();this.visitTriangles(visitor,includeFrame);return visitor.getTriangleEdges();},getPrimaryEdges:function getPrimaryEdges(includeFrame){this.visitedKey++;var edges=new ArrayList();var edgeStack=new Stack();edgeStack.push(this.startingEdge);var visitedEdges=new HashSet();while(!edgeStack.empty()){var edge=edgeStack.pop();if(!visitedEdges.contains(edge)){var priQE=edge.getPrimary();if(includeFrame||!this.isFrameEdge(priQE))edges.add(priQE);edgeStack.push(edge.oNext());edgeStack.push(edge.sym().oNext());visitedEdges.add(edge);visitedEdges.add(edge.sym());}}return edges;},delete:function _delete(e){QuadEdge.splice(e,e.oPrev());QuadEdge.splice(e.sym(),e.sym().oPrev());var eSym=e.sym();var eRot=e.rot();var eRotSym=e.rot().sym();this.quadEdges.remove(e);this.quadEdges.remove(eSym);this.quadEdges.remove(eRot);this.quadEdges.remove(eRotSym);e.delete();eSym.delete();eRot.delete();eRotSym.delete();},locateFromEdge:function locateFromEdge(v,startEdge){var iter=0;var maxIter=this.quadEdges.size();var e=startEdge;while(true){iter++;if(iter>maxIter){throw new LocateFailureException(e.toLineSegment());}if(v.equals(e.orig())||v.equals(e.dest())){break;}else if(v.rightOf(e)){e=e.sym();}else if(!v.rightOf(e.oNext())){e=e.oNext();}else if(!v.rightOf(e.dPrev())){e=e.dPrev();}else{break;}}return e;},getTolerance:function getTolerance(){return this.tolerance;},getVoronoiCellPolygons:function getVoronoiCellPolygons(geomFact){this.visitTriangles(new TriangleCircumcentreVisitor(),true);var cells=new ArrayList();var edges=this.getVertexUniqueEdges(false);for(var i=edges.iterator();i.hasNext();){var qe=i.next();cells.add(this.getVoronoiCellPolygon(qe,geomFact));}return cells;},getVoronoiDiagram:function getVoronoiDiagram(geomFact){var vorCells=this.getVoronoiCellPolygons(geomFact);return geomFact.createGeometryCollection(GeometryFactory.toGeometryArray(vorCells));},getTriangles:function getTriangles(geomFact){var triPtsList=this.getTriangleCoordinates(false);var tris=new Array(triPtsList.size()).fill(null);var i=0;for(var it=triPtsList.iterator();it.hasNext();){var triPt=it.next();tris[i++]=geomFact.createPolygon(geomFact.createLinearRing(triPt),null);}return geomFact.createGeometryCollection(tris);},insertSite:function insertSite(v){var e=this.locate(v);if(v.equals(e.orig(),this.tolerance)||v.equals(e.dest(),this.tolerance)){return e;}var base=this.makeEdge(e.orig(),v);QuadEdge.splice(base,e);var startEdge=base;do{base=this.connect(e,base.sym());e=base.oPrev();}while(e.lNext()!==startEdge);return startEdge;},locate:function locate(){if(arguments.length===1){if(arguments[0]instanceof Vertex){var v=arguments[0];return this.locator.locate(v);}else if(arguments[0]instanceof Coordinate){var p=arguments[0];return this.locator.locate(new Vertex(p));}}else if(arguments.length===2){var p0=arguments[0],p1=arguments[1];var e=this.locator.locate(new Vertex(p0));if(e===null)return null;var base=e;if(e.dest().getCoordinate().equals2D(p0))base=e.sym();var locEdge=base;do{if(locEdge.dest().getCoordinate().equals2D(p1))return locEdge;locEdge=locEdge.oNext();}while(locEdge!==base);return null;}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return QuadEdgeSubdivision;}});QuadEdgeSubdivision.getTriangleEdges=function(startQE,triEdge){triEdge[0]=startQE;triEdge[1]=triEdge[0].lNext();triEdge[2]=triEdge[1].lNext();if(triEdge[2].lNext()!==triEdge[0])throw new IllegalArgumentException(\"Edges do not form a triangle\");};function TriangleCircumcentreVisitor(){}extend(TriangleCircumcentreVisitor.prototype,{visit:function visit(triEdges){var a=triEdges[0].orig().getCoordinate();var b=triEdges[1].orig().getCoordinate();var c=triEdges[2].orig().getCoordinate();var cc=Triangle.circumcentre(a,b,c);var ccVertex=new Vertex(cc);for(var i=0;i<3;i++){triEdges[i].rot().setOrig(ccVertex);}},interfaces_:function interfaces_(){return[TriangleVisitor];},getClass:function getClass(){return TriangleCircumcentreVisitor;}});function TriangleEdgesListVisitor(){this.triList=new ArrayList();}extend(TriangleEdgesListVisitor.prototype,{getTriangleEdges:function getTriangleEdges(){return this.triList;},visit:function visit(triEdges){this.triList.add(triEdges.clone());},interfaces_:function interfaces_(){return[TriangleVisitor];},getClass:function getClass(){return TriangleEdgesListVisitor;}});function TriangleVertexListVisitor(){this.triList=new ArrayList();}extend(TriangleVertexListVisitor.prototype,{visit:function visit(triEdges){this.triList.add([triEdges[0].orig(),triEdges[1].orig(),triEdges[2].orig()]);},getTriangleVertices:function getTriangleVertices(){return this.triList;},interfaces_:function interfaces_(){return[TriangleVisitor];},getClass:function getClass(){return TriangleVertexListVisitor;}});function TriangleCoordinatesVisitor(){this.coordList=new CoordinateList();this.triCoords=new ArrayList();}extend(TriangleCoordinatesVisitor.prototype,{checkTriangleSize:function checkTriangleSize(pts){var loc=\"\";if(pts.length>=2)loc=WKTWriter.toLineString(pts[0],pts[1]);else{if(pts.length>=1)loc=WKTWriter.toPoint(pts[0]);}},visit:function visit(triEdges){this.coordList.clear();for(var i=0;i<3;i++){var v=triEdges[i].orig();this.coordList.add(v.getCoordinate());}if(this.coordList.size()>0){this.coordList.closeRing();var pts=this.coordList.toCoordinateArray();if(pts.length!==4){return null;}this.triCoords.add(pts);}},getTriangles:function getTriangles(){return this.triCoords;},interfaces_:function interfaces_(){return[TriangleVisitor];},getClass:function getClass(){return TriangleCoordinatesVisitor;}});QuadEdgeSubdivision.TriangleCircumcentreVisitor=TriangleCircumcentreVisitor;QuadEdgeSubdivision.TriangleEdgesListVisitor=TriangleEdgesListVisitor;QuadEdgeSubdivision.TriangleVertexListVisitor=TriangleVertexListVisitor;QuadEdgeSubdivision.TriangleCoordinatesVisitor=TriangleCoordinatesVisitor;QuadEdgeSubdivision.EDGE_COINCIDENCE_TOL_FACTOR=1000;function Segment(){this.ls=null;this.data=null;if(arguments.length===2){var p0=arguments[0],p1=arguments[1];this.ls=new LineSegment(p0,p1);}else if(arguments.length===3){var _p=arguments[0],_p2=arguments[1],data=arguments[2];this.ls=new LineSegment(_p,_p2);this.data=data;}else if(arguments.length===6){var x1=arguments[0],y1=arguments[1],z1=arguments[2],x2=arguments[3],y2=arguments[4],z2=arguments[5];Segment.call(this,new Coordinate(x1,y1,z1),new Coordinate(x2,y2,z2));}else if(arguments.length===7){var _x=arguments[0],_y=arguments[1],_z=arguments[2],_x2=arguments[3],_y2=arguments[4],_z2=arguments[5],_data=arguments[6];Segment.call(this,new Coordinate(_x,_y,_z),new Coordinate(_x2,_y2,_z2),_data);}}extend(Segment.prototype,{getLineSegment:function getLineSegment(){return this.ls;},getEndZ:function getEndZ(){var p=this.ls.getCoordinate(1);return p.z;},getStartZ:function getStartZ(){var p=this.ls.getCoordinate(0);return p.z;},intersection:function intersection(s){return this.ls.intersection(s.getLineSegment());},getStart:function getStart(){return this.ls.getCoordinate(0);},getEnd:function getEnd(){return this.ls.getCoordinate(1);},getEndY:function getEndY(){var p=this.ls.getCoordinate(1);return p.y;},getStartX:function getStartX(){var p=this.ls.getCoordinate(0);return p.x;},equalsTopo:function equalsTopo(s){return this.ls.equalsTopo(s.getLineSegment());},getStartY:function getStartY(){var p=this.ls.getCoordinate(0);return p.y;},setData:function setData(data){this.data=data;},getData:function getData(){return this.data;},getEndX:function getEndX(){var p=this.ls.getCoordinate(1);return p.x;},toString:function toString(){return this.ls.toString();},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return Segment;}});function KdNodeVisitor(){}extend(KdNodeVisitor.prototype,{visit:function visit(node){},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return KdNodeVisitor;}});function KdNode(){this.p=null;this.data=null;this.left=null;this.right=null;this.count=null;if(arguments.length===2){var p=arguments[0],data=arguments[1];this.p=new Coordinate(p);this.left=null;this.right=null;this.count=1;this.data=data;}else if(arguments.length===3){var _x=arguments[0],_y=arguments[1],_data=arguments[2];this.p=new Coordinate(_x,_y);this.left=null;this.right=null;this.count=1;this.data=_data;}}extend(KdNode.prototype,{isRepeated:function isRepeated(){return this.count>1;},getRight:function getRight(){return this.right;},getCoordinate:function getCoordinate(){return this.p;},setLeft:function setLeft(_left){this.left=_left;},getX:function getX(){return this.p.x;},getData:function getData(){return this.data;},getCount:function getCount(){return this.count;},getLeft:function getLeft(){return this.left;},getY:function getY(){return this.p.y;},increment:function increment(){this.count=this.count+1;},setRight:function setRight(_right){this.right=_right;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return KdNode;}});function KdTree(){this.root=null;this.numberOfNodes=null;this.tolerance=null;if(arguments.length===0){KdTree.call(this,0.0);}else if(arguments.length===1){var tolerance=arguments[0];this.tolerance=tolerance;}}extend(KdTree.prototype,{insert:function insert(){if(arguments.length===1){var p=arguments[0];return this.insert(p,null);}else if(arguments.length===2){var _p=arguments[0],data=arguments[1];if(this.root===null){this.root=new KdNode(_p,data);return this.root;}if(this.tolerance>0){var matchNode=this.findBestMatchNode(_p);if(matchNode!==null){matchNode.increment();return matchNode;}}return this.insertExact(_p,data);}},query:function query(){if(arguments.length===1){var queryEnv=arguments[0];var result=new ArrayList();this.query(queryEnv,result);return result;}else if(arguments.length===2){if(arguments[0]instanceof Envelope&&hasInterface(arguments[1],List)){var _queryEnv=arguments[0],_result=arguments[1];this.queryNode(this.root,_queryEnv,true,{interfaces_:function interfaces_(){return[KdNodeVisitor];},visit:function visit(node){_result.add(node);}});}else if(arguments[0]instanceof Envelope&&hasInterface(arguments[1],KdNodeVisitor)){var _queryEnv2=arguments[0],visitor=arguments[1];this.queryNode(this.root,_queryEnv2,true,visitor);}}},queryNode:function queryNode(currentNode,queryEnv,odd,visitor){if(currentNode===null)return null;var min=null;var max=null;var discriminant=null;if(odd){min=queryEnv.getMinX();max=queryEnv.getMaxX();discriminant=currentNode.getX();}else{min=queryEnv.getMinY();max=queryEnv.getMaxY();discriminant=currentNode.getY();}var searchLeft=min<discriminant;var searchRight=discriminant<=max;if(searchLeft){this.queryNode(currentNode.getLeft(),queryEnv,!odd,visitor);}if(queryEnv.contains(currentNode.getCoordinate())){visitor.visit(currentNode);}if(searchRight){this.queryNode(currentNode.getRight(),queryEnv,!odd,visitor);}},findBestMatchNode:function findBestMatchNode(p){var visitor=new BestMatchVisitor(p,this.tolerance);this.query(visitor.queryEnvelope(),visitor);return visitor.getNode();},isEmpty:function isEmpty(){if(this.root===null)return true;return false;},insertExact:function insertExact(p,data){var currentNode=this.root;var leafNode=this.root;var isOddLevel=true;var isLessThan=true;while(currentNode!==null){if(currentNode!==null){var isInTolerance=p.distance(currentNode.getCoordinate())<=this.tolerance;if(isInTolerance){currentNode.increment();return currentNode;}}if(isOddLevel){isLessThan=p.x<currentNode.getX();}else{isLessThan=p.y<currentNode.getY();}leafNode=currentNode;if(isLessThan){currentNode=currentNode.getLeft();}else{currentNode=currentNode.getRight();}isOddLevel=!isOddLevel;}this.numberOfNodes=this.numberOfNodes+1;var node=new KdNode(p,data);if(isLessThan){leafNode.setLeft(node);}else{leafNode.setRight(node);}return node;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return KdTree;}});KdTree.toCoordinates=function(){if(arguments.length===1){var kdnodes=arguments[0];return KdTree.toCoordinates(kdnodes,false);}else if(arguments.length===2){var _kdnodes=arguments[0],includeRepeated=arguments[1];var coord=new CoordinateList();for(var it=_kdnodes.iterator();it.hasNext();){var node=it.next();var count=includeRepeated?node.getCount():1;for(var i=0;i<count;i++){coord.add(node.getCoordinate(),true);}}return coord.toCoordinateArray();}};function BestMatchVisitor(){this.tolerance=null;this.matchNode=null;this.matchDist=0.0;this.p=null;var p=arguments[0],tolerance=arguments[1];this.p=p;this.tolerance=tolerance;}extend(BestMatchVisitor.prototype,{visit:function visit(node){var dist=this.p.distance(node.getCoordinate());var isInTolerance=dist<=this.tolerance;if(!isInTolerance)return null;var update=false;if(this.matchNode===null||dist<this.matchDist||this.matchNode!==null&&dist===this.matchDist&&node.getCoordinate().compareTo(this.matchNode.getCoordinate())<1)update=true;if(update){this.matchNode=node;this.matchDist=dist;}},queryEnvelope:function queryEnvelope(){var queryEnv=new Envelope(this.p);queryEnv.expandBy(this.tolerance);return queryEnv;},getNode:function getNode(){return this.matchNode;},interfaces_:function interfaces_(){return[KdNodeVisitor];},getClass:function getClass(){return BestMatchVisitor;}});KdTree.BestMatchVisitor=BestMatchVisitor;function ConformingDelaunayTriangulator(){this.initialVertices=null;this.segVertices=null;this.segments=new ArrayList();this.subdiv=null;this.incDel=null;this.convexHull=null;this.splitFinder=new NonEncroachingSplitPointFinder();this.kdt=null;this.vertexFactory=null;this.computeAreaEnv=null;this.splitPt=null;this.tolerance=null;var initialVertices=arguments[0],tolerance=arguments[1];this.initialVertices=new ArrayList(initialVertices);this.tolerance=tolerance;this.kdt=new KdTree(tolerance);}extend(ConformingDelaunayTriangulator.prototype,{getInitialVertices:function getInitialVertices(){return this.initialVertices;},getKDT:function getKDT(){return this.kdt;},enforceConstraints:function enforceConstraints(){this.addConstraintVertices();var count=0;var splits=0;do{splits=this.enforceGabriel(this.segments);count++;}while(splits>0&&count<ConformingDelaunayTriangulator.MAX_SPLIT_ITER);},insertSites:function insertSites(vertices){for(var i=vertices.iterator();i.hasNext();){var v=i.next();this.insertSite(v);}},getVertexFactory:function getVertexFactory(){return this.vertexFactory;},getPointArray:function getPointArray(){var pts=new Array(this.initialVertices.size()+this.segVertices.size()).fill(null);var index=0;for(var i=this.initialVertices.iterator();i.hasNext();){var v=i.next();pts[index++]=v.getCoordinate();}for(var i2=this.segVertices.iterator();i2.hasNext();){var v=i2.next();pts[index++]=v.getCoordinate();}return pts;},setConstraints:function setConstraints(segments,segVertices){this.segments=segments;this.segVertices=segVertices;},computeConvexHull:function computeConvexHull(){var fact=new GeometryFactory();var coords=this.getPointArray();var hull=new ConvexHull(coords,fact);this.convexHull=hull.getConvexHull();},addConstraintVertices:function addConstraintVertices(){this.computeConvexHull();this.insertSites(this.segVertices);},findNonGabrielPoint:function findNonGabrielPoint(seg){var p=seg.getStart();var q=seg.getEnd();var midPt=new Coordinate((p.x+q.x)/2.0,(p.y+q.y)/2.0);var segRadius=p.distance(midPt);var env=new Envelope(midPt);env.expandBy(segRadius);var result=this.kdt.query(env);var closestNonGabriel=null;var minDist=Double.MAX_VALUE;for(var i=result.iterator();i.hasNext();){var nextNode=i.next();var testPt=nextNode.getCoordinate();if(testPt.equals2D(p)||testPt.equals2D(q))continue;var testRadius=midPt.distance(testPt);if(testRadius<segRadius){var testDist=testRadius;if(closestNonGabriel===null||testDist<minDist){closestNonGabriel=testPt;minDist=testDist;}}}return closestNonGabriel;},getConstraintSegments:function getConstraintSegments(){return this.segments;},setSplitPointFinder:function setSplitPointFinder(splitFinder){this.splitFinder=splitFinder;},getConvexHull:function getConvexHull(){return this.convexHull;},getTolerance:function getTolerance(){return this.tolerance;},enforceGabriel:function enforceGabriel(segsToInsert){var newSegments=new ArrayList();var splits=0;var segsToRemove=new ArrayList();for(var i=segsToInsert.iterator();i.hasNext();){var seg=i.next();var encroachPt=this.findNonGabrielPoint(seg);if(encroachPt===null)continue;this.splitPt=this.splitFinder.findSplitPoint(seg,encroachPt);var splitVertex=this.createVertex(this.splitPt,seg);var insertedVertex=this.insertSite(splitVertex);var s1=new Segment(seg.getStartX(),seg.getStartY(),seg.getStartZ(),splitVertex.getX(),splitVertex.getY(),splitVertex.getZ(),seg.getData());var s2=new Segment(splitVertex.getX(),splitVertex.getY(),splitVertex.getZ(),seg.getEndX(),seg.getEndY(),seg.getEndZ(),seg.getData());newSegments.add(s1);newSegments.add(s2);segsToRemove.add(seg);splits=splits+1;}segsToInsert.removeAll(segsToRemove);segsToInsert.addAll(newSegments);return splits;},createVertex:function createVertex(){if(arguments.length===1){var p=arguments[0];var v=null;if(this.vertexFactory!==null)v=this.vertexFactory.createVertex(p,null);else v=new ConstraintVertex(p);return v;}else if(arguments.length===2){var _p=arguments[0],seg=arguments[1];var v=null;if(this.vertexFactory!==null)v=this.vertexFactory.createVertex(_p,seg);else v=new ConstraintVertex(_p);v.setOnConstraint(true);return v;}},getSubdivision:function getSubdivision(){return this.subdiv;},computeBoundingBox:function computeBoundingBox(){var vertexEnv=ConformingDelaunayTriangulator.computeVertexEnvelope(this.initialVertices);var segEnv=ConformingDelaunayTriangulator.computeVertexEnvelope(this.segVertices);var allPointsEnv=new Envelope(vertexEnv);allPointsEnv.expandToInclude(segEnv);var deltaX=allPointsEnv.getWidth()*0.2;var deltaY=allPointsEnv.getHeight()*0.2;var delta=Math.max(deltaX,deltaY);this.computeAreaEnv=new Envelope(allPointsEnv);this.computeAreaEnv.expandBy(delta);},setVertexFactory:function setVertexFactory(vertexFactory){this.vertexFactory=vertexFactory;},formInitialDelaunay:function formInitialDelaunay(){this.computeBoundingBox();this.subdiv=new QuadEdgeSubdivision(this.computeAreaEnv,this.tolerance);this.subdiv.setLocator(new LastFoundQuadEdgeLocator(this.subdiv));this.incDel=new IncrementalDelaunayTriangulator(this.subdiv);this.insertSites(this.initialVertices);},insertSite:function insertSite(){if(arguments[0]instanceof ConstraintVertex){var v=arguments[0];var kdnode=this.kdt.insert(v.getCoordinate(),v);if(!kdnode.isRepeated()){this.incDel.insertSite(v);}else{var snappedV=kdnode.getData();snappedV.merge(v);return snappedV;}return v;}else if(arguments[0]instanceof Coordinate){var p=arguments[0];this.insertSite(this.createVertex(p));}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return ConformingDelaunayTriangulator;}});ConformingDelaunayTriangulator.computeVertexEnvelope=function(vertices){var env=new Envelope();for(var i=vertices.iterator();i.hasNext();){var v=i.next();env.expandToInclude(v.getCoordinate());}return env;};ConformingDelaunayTriangulator.MAX_SPLIT_ITER=99;function DelaunayTriangulationBuilder(){this.siteCoords=null;this.tolerance=0.0;this.subdiv=null;}extend(DelaunayTriangulationBuilder.prototype,{create:function create(){if(this.subdiv!==null)return null;var siteEnv=DelaunayTriangulationBuilder.envelope(this.siteCoords);var vertices=DelaunayTriangulationBuilder.toVertices(this.siteCoords);this.subdiv=new QuadEdgeSubdivision(siteEnv,this.tolerance);var triangulator=new IncrementalDelaunayTriangulator(this.subdiv);triangulator.insertSites(vertices);},setTolerance:function setTolerance(tolerance){this.tolerance=tolerance;},setSites:function setSites(){if(arguments[0]instanceof Geometry){var geom=arguments[0];this.siteCoords=DelaunayTriangulationBuilder.extractUniqueCoordinates(geom);}else if(hasInterface(arguments[0],Collection)){var coords=arguments[0];this.siteCoords=DelaunayTriangulationBuilder.unique(CoordinateArrays.toCoordinateArray(coords));}},getEdges:function getEdges(geomFact){this.create();return this.subdiv.getEdges(geomFact);},getSubdivision:function getSubdivision(){this.create();return this.subdiv;},getTriangles:function getTriangles(geomFact){this.create();return this.subdiv.getTriangles(geomFact);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return DelaunayTriangulationBuilder;}});DelaunayTriangulationBuilder.extractUniqueCoordinates=function(geom){if(geom===null)return new CoordinateList();var coords=geom.getCoordinates();return DelaunayTriangulationBuilder.unique(coords);};DelaunayTriangulationBuilder.envelope=function(coords){var env=new Envelope();for(var i=coords.iterator();i.hasNext();){var coord=i.next();env.expandToInclude(coord);}return env;};DelaunayTriangulationBuilder.unique=function(coords){var coordsCopy=CoordinateArrays.copyDeep(coords);Arrays.sort(coordsCopy);var coordList=new CoordinateList(coordsCopy,false);return coordList;};DelaunayTriangulationBuilder.toVertices=function(coords){var verts=new ArrayList();for(var i=coords.iterator();i.hasNext();){var coord=i.next();verts.add(new Vertex(coord));}return verts;};function ConformingDelaunayTriangulationBuilder(){this.siteCoords=null;this.constraintLines=null;this.tolerance=0.0;this.subdiv=null;this.constraintVertexMap=new TreeMap();}extend(ConformingDelaunayTriangulationBuilder.prototype,{createSiteVertices:function createSiteVertices(coords){var verts=new ArrayList();for(var i=coords.iterator();i.hasNext();){var coord=i.next();if(this.constraintVertexMap.containsKey(coord))continue;verts.add(new ConstraintVertex(coord));}return verts;},create:function create(){if(this.subdiv!==null)return null;var siteEnv=DelaunayTriangulationBuilder.envelope(this.siteCoords);var segments=new ArrayList();if(this.constraintLines!==null){siteEnv.expandToInclude(this.constraintLines.getEnvelopeInternal());this.createVertices(this.constraintLines);segments=ConformingDelaunayTriangulationBuilder.createConstraintSegments(this.constraintLines);}var sites=this.createSiteVertices(this.siteCoords);var cdt=new ConformingDelaunayTriangulator(sites,this.tolerance);cdt.setConstraints(segments,new ArrayList(this.constraintVertexMap.values()));cdt.formInitialDelaunay();cdt.enforceConstraints();this.subdiv=cdt.getSubdivision();},setTolerance:function setTolerance(tolerance){this.tolerance=tolerance;},setConstraints:function setConstraints(constraintLines){this.constraintLines=constraintLines;},setSites:function setSites(geom){this.siteCoords=DelaunayTriangulationBuilder.extractUniqueCoordinates(geom);},getEdges:function getEdges(geomFact){this.create();return this.subdiv.getEdges(geomFact);},getSubdivision:function getSubdivision(){this.create();return this.subdiv;},getTriangles:function getTriangles(geomFact){this.create();return this.subdiv.getTriangles(geomFact);},createVertices:function createVertices(geom){var coords=geom.getCoordinates();for(var i=0;i<coords.length;i++){var v=new ConstraintVertex(coords[i]);this.constraintVertexMap.put(coords[i],v);}},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return ConformingDelaunayTriangulationBuilder;}});ConformingDelaunayTriangulationBuilder.createConstraintSegments=function(){if(arguments.length===1){var geom=arguments[0];var lines=LinearComponentExtracter.getLines(geom);var constraintSegs=new ArrayList();for(var i=lines.iterator();i.hasNext();){var line=i.next();ConformingDelaunayTriangulationBuilder.createConstraintSegments(line,constraintSegs);}return constraintSegs;}else if(arguments.length===2){var _line=arguments[0],_constraintSegs=arguments[1];var coords=_line.getCoordinates();for(var i=1;i<coords.length;i++){_constraintSegs.add(new Segment(coords[i-1],coords[i]));}}};function VoronoiDiagramBuilder(){this.siteCoords=null;this.tolerance=0.0;this.subdiv=null;this.clipEnv=null;this.diagramEnv=null;}extend(VoronoiDiagramBuilder.prototype,{create:function create(){if(this.subdiv!==null)return null;var siteEnv=DelaunayTriangulationBuilder.envelope(this.siteCoords);this.diagramEnv=siteEnv;var expandBy=Math.max(this.diagramEnv.getWidth(),this.diagramEnv.getHeight());this.diagramEnv.expandBy(expandBy);if(this.clipEnv!==null)this.diagramEnv.expandToInclude(this.clipEnv);var vertices=DelaunayTriangulationBuilder.toVertices(this.siteCoords);this.subdiv=new QuadEdgeSubdivision(siteEnv,this.tolerance);var triangulator=new IncrementalDelaunayTriangulator(this.subdiv);triangulator.insertSites(vertices);},getDiagram:function getDiagram(geomFact){this.create();var polys=this.subdiv.getVoronoiDiagram(geomFact);return VoronoiDiagramBuilder.clipGeometryCollection(polys,this.diagramEnv);},setTolerance:function setTolerance(tolerance){this.tolerance=tolerance;},setSites:function setSites(){if(arguments[0]instanceof Geometry){var geom=arguments[0];this.siteCoords=DelaunayTriangulationBuilder.extractUniqueCoordinates(geom);}else if(hasInterface(arguments[0],Collection)){var coords=arguments[0];this.siteCoords=DelaunayTriangulationBuilder.unique(CoordinateArrays.toCoordinateArray(coords));}},setClipEnvelope:function setClipEnvelope(clipEnv){this.clipEnv=clipEnv;},getSubdivision:function getSubdivision(){this.create();return this.subdiv;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return VoronoiDiagramBuilder;}});VoronoiDiagramBuilder.clipGeometryCollection=function(geom,clipEnv){var clipPoly=geom.getFactory().toGeometry(clipEnv);var clipped=new ArrayList();for(var i=0;i<geom.getNumGeometries();i++){var g=geom.getGeometryN(i);var result=null;if(clipEnv.contains(g.getEnvelopeInternal()))result=g;else if(clipEnv.intersects(g.getEnvelopeInternal())){result=clipPoly.intersection(g);result.setUserData(g.getUserData());}if(result!==null&&!result.isEmpty()){clipped.add(result);}}return geom.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(clipped));};var quadedge=Object.freeze({Vertex:Vertex});var triangulate=Object.freeze({ConformingDelaunayTriangulationBuilder:ConformingDelaunayTriangulationBuilder,DelaunayTriangulationBuilder:DelaunayTriangulationBuilder,VoronoiDiagramBuilder:VoronoiDiagramBuilder,quadedge:quadedge});function LinearLocation(){this.componentIndex=0;this.segmentIndex=0;this.segmentFraction=0.0;if(arguments.length===0){}else if(arguments.length===1){var loc=arguments[0];this.componentIndex=loc.componentIndex;this.segmentIndex=loc.segmentIndex;this.segmentFraction=loc.segmentFraction;}else if(arguments.length===2){var segmentIndex=arguments[0],segmentFraction=arguments[1];LinearLocation.call(this,0,segmentIndex,segmentFraction);}else if(arguments.length===3){var componentIndex=arguments[0],_segmentIndex=arguments[1],_segmentFraction=arguments[2];this.componentIndex=componentIndex;this.segmentIndex=_segmentIndex;this.segmentFraction=_segmentFraction;this.normalize();}else if(arguments.length===4){var _componentIndex=arguments[0],_segmentIndex2=arguments[1],_segmentFraction2=arguments[2],doNormalize=arguments[3];this.componentIndex=_componentIndex;this.segmentIndex=_segmentIndex2;this.segmentFraction=_segmentFraction2;if(doNormalize)this.normalize();}}extend(LinearLocation.prototype,{getSegmentIndex:function getSegmentIndex(){return this.segmentIndex;},getComponentIndex:function getComponentIndex(){return this.componentIndex;},isEndpoint:function isEndpoint(linearGeom){var lineComp=linearGeom.getGeometryN(this.componentIndex);var nseg=lineComp.getNumPoints()-1;return this.segmentIndex>=nseg||this.segmentIndex===nseg&&this.segmentFraction>=1.0;},isValid:function isValid(linearGeom){if(this.componentIndex<0||this.componentIndex>=linearGeom.getNumGeometries())return false;var lineComp=linearGeom.getGeometryN(this.componentIndex);if(this.segmentIndex<0||this.segmentIndex>lineComp.getNumPoints())return false;if(this.segmentIndex===lineComp.getNumPoints()&&this.segmentFraction!==0.0)return false;if(this.segmentFraction<0.0||this.segmentFraction>1.0)return false;return true;},normalize:function normalize(){if(this.segmentFraction<0.0){this.segmentFraction=0.0;}if(this.segmentFraction>1.0){this.segmentFraction=1.0;}if(this.componentIndex<0){this.componentIndex=0;this.segmentIndex=0;this.segmentFraction=0.0;}if(this.segmentIndex<0){this.segmentIndex=0;this.segmentFraction=0.0;}if(this.segmentFraction===1.0){this.segmentFraction=0.0;this.segmentIndex+=1;}},toLowest:function toLowest(linearGeom){var lineComp=linearGeom.getGeometryN(this.componentIndex);var nseg=lineComp.getNumPoints()-1;if(this.segmentIndex<nseg)return this;return new LinearLocation(this.componentIndex,nseg,1.0,false);},getCoordinate:function getCoordinate(linearGeom){var lineComp=linearGeom.getGeometryN(this.componentIndex);var p0=lineComp.getCoordinateN(this.segmentIndex);if(this.segmentIndex>=lineComp.getNumPoints()-1)return p0;var p1=lineComp.getCoordinateN(this.segmentIndex+1);return LinearLocation.pointAlongSegmentByFraction(p0,p1,this.segmentFraction);},getSegmentFraction:function getSegmentFraction(){return this.segmentFraction;},getSegment:function getSegment(linearGeom){var lineComp=linearGeom.getGeometryN(this.componentIndex);var p0=lineComp.getCoordinateN(this.segmentIndex);if(this.segmentIndex>=lineComp.getNumPoints()-1){var prev=lineComp.getCoordinateN(lineComp.getNumPoints()-2);return new LineSegment(prev,p0);}var p1=lineComp.getCoordinateN(this.segmentIndex+1);return new LineSegment(p0,p1);},clamp:function clamp(linear){if(this.componentIndex>=linear.getNumGeometries()){this.setToEnd(linear);return null;}if(this.segmentIndex>=linear.getNumPoints()){var line=linear.getGeometryN(this.componentIndex);this.segmentIndex=line.getNumPoints()-1;this.segmentFraction=1.0;}},setToEnd:function setToEnd(linear){this.componentIndex=linear.getNumGeometries()-1;var lastLine=linear.getGeometryN(this.componentIndex);this.segmentIndex=lastLine.getNumPoints()-1;this.segmentFraction=1.0;},compareTo:function compareTo(o){var other=o;if(this.componentIndex<other.componentIndex)return-1;if(this.componentIndex>other.componentIndex)return 1;if(this.segmentIndex<other.segmentIndex)return-1;if(this.segmentIndex>other.segmentIndex)return 1;if(this.segmentFraction<other.segmentFraction)return-1;if(this.segmentFraction>other.segmentFraction)return 1;return 0;},clone:function clone(){return new LinearLocation(this.componentIndex,this.segmentIndex,this.segmentFraction);},toString:function toString(){return\"LinearLoc[\"+this.componentIndex+\", \"+this.segmentIndex+\", \"+this.segmentFraction+\"]\";},isOnSameSegment:function isOnSameSegment(loc){if(this.componentIndex!==loc.componentIndex)return false;if(this.segmentIndex===loc.segmentIndex)return true;if(loc.segmentIndex-this.segmentIndex===1&&loc.segmentFraction===0.0)return true;if(this.segmentIndex-loc.segmentIndex===1&&this.segmentFraction===0.0)return true;return false;},snapToVertex:function snapToVertex(linearGeom,minDistance){if(this.segmentFraction<=0.0||this.segmentFraction>=1.0)return null;var segLen=this.getSegmentLength(linearGeom);var lenToStart=this.segmentFraction*segLen;var lenToEnd=segLen-lenToStart;if(lenToStart<=lenToEnd&&lenToStart<minDistance){this.segmentFraction=0.0;}else if(lenToEnd<=lenToStart&&lenToEnd<minDistance){this.segmentFraction=1.0;}},compareLocationValues:function compareLocationValues(componentIndex1,segmentIndex1,segmentFraction1){if(this.componentIndex<componentIndex1)return-1;if(this.componentIndex>componentIndex1)return 1;if(this.segmentIndex<segmentIndex1)return-1;if(this.segmentIndex>segmentIndex1)return 1;if(this.segmentFraction<segmentFraction1)return-1;if(this.segmentFraction>segmentFraction1)return 1;return 0;},getSegmentLength:function getSegmentLength(linearGeom){var lineComp=linearGeom.getGeometryN(this.componentIndex);var segIndex=this.segmentIndex;if(this.segmentIndex>=lineComp.getNumPoints()-1)segIndex=lineComp.getNumPoints()-2;var p0=lineComp.getCoordinateN(segIndex);var p1=lineComp.getCoordinateN(segIndex+1);return p0.distance(p1);},isVertex:function isVertex(){return this.segmentFraction<=0.0||this.segmentFraction>=1.0;},interfaces_:function interfaces_(){return[Comparable];},getClass:function getClass(){return LinearLocation;}});LinearLocation.getEndLocation=function(linear){var loc=new LinearLocation();loc.setToEnd(linear);return loc;};LinearLocation.pointAlongSegmentByFraction=function(p0,p1,frac){if(frac<=0.0)return p0;if(frac>=1.0)return p1;var x=(p1.x-p0.x)*frac+p0.x;var y=(p1.y-p0.y)*frac+p0.y;var z=(p1.z-p0.z)*frac+p0.z;return new Coordinate(x,y,z);};LinearLocation.compareLocationValues=function(componentIndex0,segmentIndex0,segmentFraction0,componentIndex1,segmentIndex1,segmentFraction1){if(componentIndex0<componentIndex1)return-1;if(componentIndex0>componentIndex1)return 1;if(segmentIndex0<segmentIndex1)return-1;if(segmentIndex0>segmentIndex1)return 1;if(segmentFraction0<segmentFraction1)return-1;if(segmentFraction0>segmentFraction1)return 1;return 0;};function LinearIterator(){this.linearGeom=null;this.numLines=null;this.currentLine=null;this.componentIndex=0;this.vertexIndex=0;if(arguments.length===1){var linear=arguments[0];LinearIterator.call(this,linear,0,0);}else if(arguments.length===2){var _linear=arguments[0],start=arguments[1];LinearIterator.call(this,_linear,start.getComponentIndex(),LinearIterator.segmentEndVertexIndex(start));}else if(arguments.length===3){var linearGeom=arguments[0],componentIndex=arguments[1],vertexIndex=arguments[2];if(!hasInterface(linearGeom,Lineal))throw new IllegalArgumentException(\"Lineal geometry is required\");this.linearGeom=linearGeom;this.numLines=linearGeom.getNumGeometries();this.componentIndex=componentIndex;this.vertexIndex=vertexIndex;this.loadCurrentLine();}}extend(LinearIterator.prototype,{getComponentIndex:function getComponentIndex(){return this.componentIndex;},getLine:function getLine(){return this.currentLine;},getVertexIndex:function getVertexIndex(){return this.vertexIndex;},getSegmentEnd:function getSegmentEnd(){if(this.vertexIndex<this.getLine().getNumPoints()-1)return this.currentLine.getCoordinateN(this.vertexIndex+1);return null;},next:function next(){if(!this.hasNext())return null;this.vertexIndex++;if(this.vertexIndex>=this.currentLine.getNumPoints()){this.componentIndex++;this.loadCurrentLine();this.vertexIndex=0;}},loadCurrentLine:function loadCurrentLine(){if(this.componentIndex>=this.numLines){this.currentLine=null;return null;}this.currentLine=this.linearGeom.getGeometryN(this.componentIndex);},getSegmentStart:function getSegmentStart(){return this.currentLine.getCoordinateN(this.vertexIndex);},isEndOfLine:function isEndOfLine(){if(this.componentIndex>=this.numLines)return false;if(this.vertexIndex<this.currentLine.getNumPoints()-1)return false;return true;},hasNext:function hasNext(){if(this.componentIndex>=this.numLines)return false;if(this.componentIndex===this.numLines-1&&this.vertexIndex>=this.currentLine.getNumPoints())return false;return true;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return LinearIterator;}});LinearIterator.segmentEndVertexIndex=function(loc){if(loc.getSegmentFraction()>0.0)return loc.getSegmentIndex()+1;return loc.getSegmentIndex();};function LocationIndexOfPoint(){this.linearGeom=null;var linearGeom=arguments[0];this.linearGeom=linearGeom;}extend(LocationIndexOfPoint.prototype,{indexOf:function indexOf(inputPt){return this.indexOfFromStart(inputPt,null);},indexOfFromStart:function indexOfFromStart(inputPt,minIndex){var minDistance=Double.MAX_VALUE;var minComponentIndex=0;var minSegmentIndex=0;var minFrac=-1.0;var seg=new LineSegment();for(var it=new LinearIterator(this.linearGeom);it.hasNext();it.next()){if(!it.isEndOfLine()){seg.p0=it.getSegmentStart();seg.p1=it.getSegmentEnd();var segDistance=seg.distance(inputPt);var segFrac=seg.segmentFraction(inputPt);var candidateComponentIndex=it.getComponentIndex();var candidateSegmentIndex=it.getVertexIndex();if(segDistance<minDistance){if(minIndex===null||minIndex.compareLocationValues(candidateComponentIndex,candidateSegmentIndex,segFrac)<0){minComponentIndex=candidateComponentIndex;minSegmentIndex=candidateSegmentIndex;minFrac=segFrac;minDistance=segDistance;}}}}if(minDistance===Double.MAX_VALUE){return new LinearLocation(minIndex);}var loc=new LinearLocation(minComponentIndex,minSegmentIndex,minFrac);return loc;},indexOfAfter:function indexOfAfter(inputPt,minIndex){if(minIndex===null)return this.indexOf(inputPt);var endLoc=LinearLocation.getEndLocation(this.linearGeom);if(endLoc.compareTo(minIndex)<=0)return endLoc;var closestAfter=this.indexOfFromStart(inputPt,minIndex);Assert.isTrue(closestAfter.compareTo(minIndex)>=0,\"computed location is before specified minimum location\");return closestAfter;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return LocationIndexOfPoint;}});LocationIndexOfPoint.indexOf=function(linearGeom,inputPt){var locater=new LocationIndexOfPoint(linearGeom);return locater.indexOf(inputPt);};LocationIndexOfPoint.indexOfAfter=function(linearGeom,inputPt,minIndex){var locater=new LocationIndexOfPoint(linearGeom);return locater.indexOfAfter(inputPt,minIndex);};function LocationIndexOfLine(){this.linearGeom=null;var linearGeom=arguments[0];this.linearGeom=linearGeom;}extend(LocationIndexOfLine.prototype,{indicesOf:function indicesOf(subLine){var startPt=subLine.getGeometryN(0).getCoordinateN(0);var lastLine=subLine.getGeometryN(subLine.getNumGeometries()-1);var endPt=lastLine.getCoordinateN(lastLine.getNumPoints()-1);var locPt=new LocationIndexOfPoint(this.linearGeom);var subLineLoc=new Array(2).fill(null);subLineLoc[0]=locPt.indexOf(startPt);if(subLine.getLength()===0.0){subLineLoc[1]=subLineLoc[0].clone();}else{subLineLoc[1]=locPt.indexOfAfter(endPt,subLineLoc[0]);}return subLineLoc;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return LocationIndexOfLine;}});LocationIndexOfLine.indicesOf=function(linearGeom,subLine){var locater=new LocationIndexOfLine(linearGeom);return locater.indicesOf(subLine);};function LinearGeometryBuilder(){this.geomFact=null;this.lines=new ArrayList();this.coordList=null;this.ignoreInvalidLines=false;this.fixInvalidLines=false;this.lastPt=null;var geomFact=arguments[0];this.geomFact=geomFact;}extend(LinearGeometryBuilder.prototype,{getGeometry:function getGeometry(){this.endLine();return this.geomFact.buildGeometry(this.lines);},getLastCoordinate:function getLastCoordinate(){return this.lastPt;},endLine:function endLine(){if(this.coordList===null){return null;}if(this.ignoreInvalidLines&&this.coordList.size()<2){this.coordList=null;return null;}var rawPts=this.coordList.toCoordinateArray();var pts=rawPts;if(this.fixInvalidLines)pts=this.validCoordinateSequence(rawPts);this.coordList=null;var line=null;try{line=this.geomFact.createLineString(pts);}catch(ex){if(ex instanceof IllegalArgumentException){if(!this.ignoreInvalidLines)throw ex;}else throw ex;}finally{}if(line!==null)this.lines.add(line);},setFixInvalidLines:function setFixInvalidLines(fixInvalidLines){this.fixInvalidLines=fixInvalidLines;},add:function add(){if(arguments.length===1){var pt=arguments[0];this.add(pt,true);}else if(arguments.length===2){var _pt=arguments[0],allowRepeatedPoints=arguments[1];if(this.coordList===null)this.coordList=new CoordinateList();this.coordList.add(_pt,allowRepeatedPoints);this.lastPt=_pt;}},setIgnoreInvalidLines:function setIgnoreInvalidLines(ignoreInvalidLines){this.ignoreInvalidLines=ignoreInvalidLines;},validCoordinateSequence:function validCoordinateSequence(pts){if(pts.length>=2)return pts;var validPts=[pts[0],pts[0]];return validPts;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return LinearGeometryBuilder;}});function ExtractLineByLocation(){this.line=null;var line=arguments[0];this.line=line;}extend(ExtractLineByLocation.prototype,{computeLinear:function computeLinear(start,end){var builder=new LinearGeometryBuilder(this.line.getFactory());builder.setFixInvalidLines(true);if(!start.isVertex())builder.add(start.getCoordinate(this.line));for(var it=new LinearIterator(this.line,start);it.hasNext();it.next()){if(end.compareLocationValues(it.getComponentIndex(),it.getVertexIndex(),0.0)<0)break;var pt=it.getSegmentStart();builder.add(pt);if(it.isEndOfLine())builder.endLine();}if(!end.isVertex())builder.add(end.getCoordinate(this.line));return builder.getGeometry();},computeLine:function computeLine(start,end){var coordinates=this.line.getCoordinates();var newCoordinates=new CoordinateList();var startSegmentIndex=start.getSegmentIndex();if(start.getSegmentFraction()>0.0)startSegmentIndex+=1;var lastSegmentIndex=end.getSegmentIndex();if(end.getSegmentFraction()===1.0)lastSegmentIndex+=1;if(lastSegmentIndex>=coordinates.length)lastSegmentIndex=coordinates.length-1;if(!start.isVertex())newCoordinates.add(start.getCoordinate(this.line));for(var i=startSegmentIndex;i<=lastSegmentIndex;i++){newCoordinates.add(coordinates[i]);}if(!end.isVertex())newCoordinates.add(end.getCoordinate(this.line));if(newCoordinates.size()<=0)newCoordinates.add(start.getCoordinate(this.line));var newCoordinateArray=newCoordinates.toCoordinateArray();if(newCoordinateArray.length<=1){newCoordinateArray=[newCoordinateArray[0],newCoordinateArray[0]];}return this.line.getFactory().createLineString(newCoordinateArray);},extract:function extract(start,end){if(end.compareTo(start)<0){return this.reverse(this.computeLinear(end,start));}return this.computeLinear(start,end);},reverse:function reverse(linear){if(linear instanceof LineString)return linear.reverse();if(linear instanceof MultiLineString)return linear.reverse();Assert.shouldNeverReachHere(\"non-linear geometry encountered\");return null;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return ExtractLineByLocation;}});ExtractLineByLocation.extract=function(line,start,end){var ls=new ExtractLineByLocation(line);return ls.extract(start,end);};function LocationIndexedLine(){this.linearGeom=null;var linearGeom=arguments[0];this.linearGeom=linearGeom;this.checkGeometryType();}extend(LocationIndexedLine.prototype,{clampIndex:function clampIndex(index){var loc=index.clone();loc.clamp(this.linearGeom);return loc;},project:function project(pt){return LocationIndexOfPoint.indexOf(this.linearGeom,pt);},checkGeometryType:function checkGeometryType(){if(!(this.linearGeom instanceof LineString||this.linearGeom instanceof MultiLineString))throw new IllegalArgumentException(\"Input geometry must be linear\");},extractPoint:function extractPoint(){if(arguments.length===1){var index=arguments[0];return index.getCoordinate(this.linearGeom);}else if(arguments.length===2){var _index=arguments[0],offsetDistance=arguments[1];var indexLow=_index.toLowest(this.linearGeom);return indexLow.getSegment(this.linearGeom).pointAlongOffset(indexLow.getSegmentFraction(),offsetDistance);}},isValidIndex:function isValidIndex(index){return index.isValid(this.linearGeom);},getEndIndex:function getEndIndex(){return LinearLocation.getEndLocation(this.linearGeom);},getStartIndex:function getStartIndex(){return new LinearLocation();},indexOfAfter:function indexOfAfter(pt,minIndex){return LocationIndexOfPoint.indexOfAfter(this.linearGeom,pt,minIndex);},extractLine:function extractLine(startIndex,endIndex){return ExtractLineByLocation.extract(this.linearGeom,startIndex,endIndex);},indexOf:function indexOf(pt){return LocationIndexOfPoint.indexOf(this.linearGeom,pt);},indicesOf:function indicesOf(subLine){return LocationIndexOfLine.indicesOf(this.linearGeom,subLine);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return LocationIndexedLine;}});function LengthIndexOfPoint(){this.linearGeom=null;var linearGeom=arguments[0];this.linearGeom=linearGeom;}extend(LengthIndexOfPoint.prototype,{indexOf:function indexOf(inputPt){return this.indexOfFromStart(inputPt,-1.0);},indexOfFromStart:function indexOfFromStart(inputPt,minIndex){var minDistance=Double.MAX_VALUE;var ptMeasure=minIndex;var segmentStartMeasure=0.0;var seg=new LineSegment();var it=new LinearIterator(this.linearGeom);while(it.hasNext()){if(!it.isEndOfLine()){seg.p0=it.getSegmentStart();seg.p1=it.getSegmentEnd();var segDistance=seg.distance(inputPt);var segMeasureToPt=this.segmentNearestMeasure(seg,inputPt,segmentStartMeasure);if(segDistance<minDistance&&segMeasureToPt>minIndex){ptMeasure=segMeasureToPt;minDistance=segDistance;}segmentStartMeasure+=seg.getLength();}it.next();}return ptMeasure;},indexOfAfter:function indexOfAfter(inputPt,minIndex){if(minIndex<0.0)return this.indexOf(inputPt);var endIndex=this.linearGeom.getLength();if(endIndex<minIndex)return endIndex;var closestAfter=this.indexOfFromStart(inputPt,minIndex);Assert.isTrue(closestAfter>=minIndex,\"computed index is before specified minimum index\");return closestAfter;},segmentNearestMeasure:function segmentNearestMeasure(seg,inputPt,segmentStartMeasure){var projFactor=seg.projectionFactor(inputPt);if(projFactor<=0.0)return segmentStartMeasure;if(projFactor<=1.0)return segmentStartMeasure+projFactor*seg.getLength();return segmentStartMeasure+seg.getLength();},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return LengthIndexOfPoint;}});LengthIndexOfPoint.indexOf=function(linearGeom,inputPt){var locater=new LengthIndexOfPoint(linearGeom);return locater.indexOf(inputPt);};LengthIndexOfPoint.indexOfAfter=function(linearGeom,inputPt,minIndex){var locater=new LengthIndexOfPoint(linearGeom);return locater.indexOfAfter(inputPt,minIndex);};function LengthLocationMap(){this.linearGeom=null;var linearGeom=arguments[0];this.linearGeom=linearGeom;}extend(LengthLocationMap.prototype,{getLength:function getLength(loc){var totalLength=0.0;var it=new LinearIterator(this.linearGeom);while(it.hasNext()){if(!it.isEndOfLine()){var p0=it.getSegmentStart();var p1=it.getSegmentEnd();var segLen=p1.distance(p0);if(loc.getComponentIndex()===it.getComponentIndex()&&loc.getSegmentIndex()===it.getVertexIndex()){return totalLength+segLen*loc.getSegmentFraction();}totalLength+=segLen;}it.next();}return totalLength;},resolveHigher:function resolveHigher(loc){if(!loc.isEndpoint(this.linearGeom))return loc;var compIndex=loc.getComponentIndex();if(compIndex>=this.linearGeom.getNumGeometries()-1)return loc;do{compIndex++;}while(compIndex<this.linearGeom.getNumGeometries()-1&&this.linearGeom.getGeometryN(compIndex).getLength()===0);return new LinearLocation(compIndex,0,0.0);},getLocation:function getLocation(){if(arguments.length===1){var length=arguments[0];return this.getLocation(length,true);}else if(arguments.length===2){var _length=arguments[0],resolveLower=arguments[1];var forwardLength=_length;if(_length<0.0){var lineLen=this.linearGeom.getLength();forwardLength=lineLen+_length;}var loc=this.getLocationForward(forwardLength);if(resolveLower){return loc;}return this.resolveHigher(loc);}},getLocationForward:function getLocationForward(length){if(length<=0.0)return new LinearLocation();var totalLength=0.0;var it=new LinearIterator(this.linearGeom);while(it.hasNext()){if(it.isEndOfLine()){if(totalLength===length){var compIndex=it.getComponentIndex();var segIndex=it.getVertexIndex();return new LinearLocation(compIndex,segIndex,0.0);}}else{var p0=it.getSegmentStart();var p1=it.getSegmentEnd();var segLen=p1.distance(p0);if(totalLength+segLen>length){var frac=(length-totalLength)/segLen;var compIndex=it.getComponentIndex();var segIndex=it.getVertexIndex();return new LinearLocation(compIndex,segIndex,frac);}totalLength+=segLen;}it.next();}return LinearLocation.getEndLocation(this.linearGeom);},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return LengthLocationMap;}});LengthLocationMap.getLength=function(linearGeom,loc){var locater=new LengthLocationMap(linearGeom);return locater.getLength(loc);};LengthLocationMap.getLocation=function(){if(arguments.length===2){var linearGeom=arguments[0],length=arguments[1];var locater=new LengthLocationMap(linearGeom);return locater.getLocation(length);}else if(arguments.length===3){var _linearGeom=arguments[0],_length2=arguments[1],resolveLower=arguments[2];var locater=new LengthLocationMap(_linearGeom);return locater.getLocation(_length2,resolveLower);}};function LengthIndexedLine(){this.linearGeom=null;var linearGeom=arguments[0];this.linearGeom=linearGeom;}extend(LengthIndexedLine.prototype,{clampIndex:function clampIndex(index){var posIndex=this.positiveIndex(index);var startIndex=this.getStartIndex();if(posIndex<startIndex)return startIndex;var endIndex=this.getEndIndex();if(posIndex>endIndex)return endIndex;return posIndex;},locationOf:function locationOf(){if(arguments.length===1){var index=arguments[0];return LengthLocationMap.getLocation(this.linearGeom,index);}else if(arguments.length===2){var _index=arguments[0],resolveLower=arguments[1];return LengthLocationMap.getLocation(this.linearGeom,_index,resolveLower);}},project:function project(pt){return LengthIndexOfPoint.indexOf(this.linearGeom,pt);},positiveIndex:function positiveIndex(index){if(index>=0.0)return index;return this.linearGeom.getLength()+index;},extractPoint:function extractPoint(){if(arguments.length===1){var index=arguments[0];var loc=LengthLocationMap.getLocation(this.linearGeom,index);return loc.getCoordinate(this.linearGeom);}else if(arguments.length===2){var _index2=arguments[0],offsetDistance=arguments[1];var loc=LengthLocationMap.getLocation(this.linearGeom,_index2);var locLow=loc.toLowest(this.linearGeom);return locLow.getSegment(this.linearGeom).pointAlongOffset(locLow.getSegmentFraction(),offsetDistance);}},isValidIndex:function isValidIndex(index){return index>=this.getStartIndex()&&index<=this.getEndIndex();},getEndIndex:function getEndIndex(){return this.linearGeom.getLength();},getStartIndex:function getStartIndex(){return 0.0;},indexOfAfter:function indexOfAfter(pt,minIndex){return LengthIndexOfPoint.indexOfAfter(this.linearGeom,pt,minIndex);},extractLine:function extractLine(startIndex,endIndex){var lil=new LocationIndexedLine(this.linearGeom);var startIndex2=this.clampIndex(startIndex);var endIndex2=this.clampIndex(endIndex);var resolveStartLower=startIndex2===endIndex2;var startLoc=this.locationOf(startIndex2,resolveStartLower);var endLoc=this.locationOf(endIndex2);return ExtractLineByLocation.extract(this.linearGeom,startLoc,endLoc);},indexOf:function indexOf(pt){return LengthIndexOfPoint.indexOf(this.linearGeom,pt);},indicesOf:function indicesOf(subLine){var locIndex=LocationIndexOfLine.indicesOf(this.linearGeom,subLine);var index=[LengthLocationMap.getLength(this.linearGeom,locIndex[0]),LengthLocationMap.getLength(this.linearGeom,locIndex[1])];return index;},interfaces_:function interfaces_(){return[];},getClass:function getClass(){return LengthIndexedLine;}});var linearref=Object.freeze({LengthIndexedLine:LengthIndexedLine,LengthLocationMap:LengthLocationMap,LinearGeometryBuilder:LinearGeometryBuilder,LinearIterator:LinearIterator,LinearLocation:LinearLocation,LocationIndexedLine:LocationIndexedLine});function UnionOp(){}extend(UnionOp.prototype,{interfaces_:function interfaces_(){return[];},getClass:function getClass(){return UnionOp;}});UnionOp.union=function(g,other){if(g.isEmpty()||other.isEmpty()){if(g.isEmpty()&&other.isEmpty())return OverlayOp.createEmptyResult(OverlayOp.UNION,g,other,g.getFactory());if(g.isEmpty())return other.copy();if(other.isEmpty())return g.copy();}g.checkNotGeometryCollection(g);g.checkNotGeometryCollection(other);return SnapIfNeededOverlayOp.overlayOp(g,other,OverlayOp.UNION);};extend(Geometry.prototype,{equalsTopo:function equalsTopo(g){if(!this.getEnvelopeInternal().equals(g.getEnvelopeInternal()))return false;return RelateOp.relate(this,g).isEquals(this.getDimension(),g.getDimension());},union:function union(){if(arguments.length===0){return UnaryUnionOp.union(this);}else if(arguments.length===1){var other=arguments[0];return UnionOp.union(this,other);}},isValid:function isValid(){return IsValidOp.isValid(this);},intersection:function intersection(other){if(this.isEmpty()||other.isEmpty())return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION,this,other,this.factory);if(this.isGeometryCollection()){var g2=other;return GeometryCollectionMapper.map(this,{interfaces_:function interfaces_(){return[MapOp];},map:function map(g){return g.intersection(g2);}});}this.checkNotGeometryCollection(this);this.checkNotGeometryCollection(other);return SnapIfNeededOverlayOp.overlayOp(this,other,OverlayOp.INTERSECTION);},covers:function covers(g){return RelateOp.covers(this,g);},coveredBy:function coveredBy(g){return RelateOp.coveredBy(this,g);},touches:function touches(g){return RelateOp.touches(this,g);},intersects:function intersects(g){return RelateOp.intersects(this,g);},within:function within(g){return RelateOp.within(this,g);},overlaps:function overlaps(g){return RelateOp.overlaps(this,g);},disjoint:function disjoint(g){return RelateOp.disjoint(this,g);},crosses:function crosses(g){return RelateOp.crosses(this,g);},buffer:function buffer(){if(arguments.length===1){var distance=arguments[0];return BufferOp.bufferOp(this,distance);}else if(arguments.length===2){var _distance=arguments[0],quadrantSegments=arguments[1];return BufferOp.bufferOp(this,_distance,quadrantSegments);}else if(arguments.length===3){var _distance2=arguments[0],_quadrantSegments=arguments[1],endCapStyle=arguments[2];return BufferOp.bufferOp(this,_distance2,_quadrantSegments,endCapStyle);}},convexHull:function convexHull(){return new ConvexHull(this).getConvexHull();},relate:function relate(){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return RelateOp.relate.apply(RelateOp,[this].concat(args));},getCentroid:function getCentroid(){if(this.isEmpty())return this.factory.createPoint();var centPt=Centroid.getCentroid(this);return this.createPointFromInternalCoord(centPt,this);},getInteriorPoint:function getInteriorPoint(){if(this.isEmpty())return this.factory.createPoint();var interiorPt=null;var dim=this.getDimension();if(dim===0){var intPt=new InteriorPointPoint(this);interiorPt=intPt.getInteriorPoint();}else if(dim===1){var intPt=new InteriorPointLine(this);interiorPt=intPt.getInteriorPoint();}else{var intPt=new InteriorPointArea(this);interiorPt=intPt.getInteriorPoint();}return this.createPointFromInternalCoord(interiorPt,this);},symDifference:function symDifference(other){if(this.isEmpty()||other.isEmpty()){if(this.isEmpty()&&other.isEmpty())return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE,this,other,this.factory);if(this.isEmpty())return other.copy();if(other.isEmpty())return this.copy();}this.checkNotGeometryCollection(this);this.checkNotGeometryCollection(other);return SnapIfNeededOverlayOp.overlayOp(this,other,OverlayOp.SYMDIFFERENCE);},createPointFromInternalCoord:function createPointFromInternalCoord(coord,exemplar){exemplar.getPrecisionModel().makePrecise(coord);return exemplar.getFactory().createPoint(coord);},toText:function toText(){var writer=new WKTWriter();return writer.write(this);},toString:function toString(){this.toText();},contains:function contains(g){return RelateOp.contains(this,g);},difference:function difference(other){if(this.isEmpty())return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE,this,other,this.factory);if(other.isEmpty())return this.copy();this.checkNotGeometryCollection(this);this.checkNotGeometryCollection(other);return SnapIfNeededOverlayOp.overlayOp(this,other,OverlayOp.DIFFERENCE);},isSimple:function isSimple(){var op=new IsSimpleOp(this);return op.isSimple();},isWithinDistance:function isWithinDistance(geom,distance){var envDist=this.getEnvelopeInternal().distance(geom.getEnvelopeInternal());if(envDist>distance)return false;return DistanceOp.isWithinDistance(this,geom,distance);},distance:function distance(g){return DistanceOp.distance(this,g);},isEquivalentClass:function isEquivalentClass(other){return this.getClass()===other.getClass();}});var version='1.4.0 (93f117d)';exports.version=version;exports.algorithm=algorithm;exports.densify=densify;exports.dissolve=dissolve;exports.geom=geom;exports.geomgraph=geomgraph;exports.index=index;exports.io=io;exports.noding=noding;exports.operation=operation;exports.precision=precision;exports.simplify=simplify;exports.triangulate=triangulate;exports.linearref=linearref;Object.defineProperty(exports,'__esModule',{value:true});});//# sourceMappingURL=jsts.js.map\n/***/},/* 1 *//***/function(module,exports,__webpack_require__){\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});var _jsts=__webpack_require__(0);var jsts=_interopRequireWildcard(_jsts);function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key];}}newObj.default=obj;return newObj;}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}/*\n * ROUTER routing class for ECG data\n * Gregor Allensworth   gregor@greeninfo.org\n * apololgies in advance for it not being a proper ES6 class\n *\n * Params:\n * ROUTER.findRoute(start_lat, start_lng, target_lat, target_lng, success_callback, failure_callback)\n *\n * Return:\n * A GeoJSON-compliant structure suited for consumption by Leaflet or almost anything\n *\n * Feature properties are:\n * id -- The ID# of the line in CartoDB.\n * title -- The name of the road or trail which this line represents.\n * length -- Length of this section, in meters.\n * transition -- Metadata about the transition to the next segment on the route.\n * transition.title -- Human-readable text for this transition, e.g. \"Turn left onto Hayward Avenue\"\n * transition.lat -- The latitude at which the transition occurs.\n * transition.lng -- The longitude at which the transition occurs.\n * transition.code -- A domain code indicating the type of transition, e.g. \"RT\" for a right turn. This domain-coded version would be suited to selecting icons. Search this document for TRANSITION_CODES to see the list.\n *\n * Additionally, the structure contains a .properties attribute of its own, containing medatata about the route. The attributes of route.properties are as follows:\n * total_meters -- The total length of the route in meters, summed from the individual steps.\n * startpoint_wanted -- The desired starting latlng. GeoJSON-compliant point feature object.\n * endpoint_wanted -- The desired ending latlng. GeoJSON-compliant point feature object.\n * startpoint_trail -- The closest latlng on the route to the desired starting latlng. GeoJSON-compliant point feature object.\n * endpoint_trail -- The closest latlng on the route to the desired starting latlng. GeoJSON-compliant point feature object.\n * startpoint_meters -- The distance in meters, between startpoint_wanted and startpoint_trail.\n * endpoint_meters -- The distance in meters, between endpoint_wanted and endpoint_trail.\n */var ROUTER={init:function init(user,table){// set the router's CARTO account / user & route segments table\nthis.CARTODB_USER=user;this.DBTABLE_EDGES=table;},//\n// main entry point: find a route from start lat+lng to target lat+lng, prettied up with turning directions and all\n// wraps several other functions to find start/end nodes, assemble a path, clean up topology, add turning words, etc.\n// asynchronous: provide success + failure callbacks\n// success -- will be passed 1 param: a GeoJSON document of the segments representing the route\n// error -- will be passed 1 param: error message\n//\nfindRoute:function findRoute(start_lat,start_lng,target_lat,target_lng,success_callback,failure_callback){var self=this;// is this northbound or southbound? the edges and cues are tagged with N/S/B as a proxy for one-way behavior\n//TODO is that really how they want to do things?\n//TODO e.g. Pierson, FL to Daytona Beach, FL is east-northeast but the northern route is the longer\n//TODO perhaps the one-way field is better for this, indicating that travel must be in the direction of the vertices?\nvar northbound=start_lat<=target_lat;// find the best edges for our starting and ending location\nself.findNearestSegmentToLatLng(start_lat,start_lng,northbound?'N':'S',function(start_segment){self.findNearestSegmentToLatLng(target_lat,target_lng,northbound?'N':'S',function(target_segment){console.log(['start segment',start_lat,start_lng,start_segment]);console.log(['target segment',target_lat,target_lng,target_segment]);// fetch relevant route segments\n// loading the whole dataset can be workable over a fast connection, but we'd rather not\n// and a bounding box filter to fetch only the relevant area; no path near Boston can be relevant to a route within Florida\nvar params={n:Math.max(target_segment.n,start_segment.n)+1.0,s:Math.min(target_segment.s,start_segment.s)-1.0,e:Math.max(target_segment.e,start_segment.e)+1.0,w:Math.min(target_segment.w,start_segment.w)-1.0,dir:northbound?'N':'S'};var geomtext=\"ST_SIMPLIFY(the_geom,0.0001)\";// a teeny-tiny simplification to clean some of their flourishes that have wonky angles at starts and ends\nvar sql=\"SELECT pline_id AS id, title, meters, ST_ASTEXT(\"+geomtext+\") AS geom FROM \"+self.DBTABLE_EDGES+\" WHERE DIRECTION IN ('B', '{{ dir }}') AND the_geom && ST_MAKEENVELOPE({{ w }}, {{ s }}, {{ e }}, {{ n }}, 4326)\";new cartodb.SQL({user:self.CARTODB_USER}).execute(sql,params).done(function(data){var wktreader=new jsts.io.WKTReader();var gfactory=new jsts.geom.GeometryFactory();data.rows=data.rows.map(function(segment){// data massage as we load the lines\n// add the ID+title as a single \"debug\" flag; makes debugging easier\nsegment.debug=segment.id+' '+segment.title;// - convert the WKT geometry to a JSTS geometry\n// - add the starting point and ending point, kept as-is; for \"purity\" e.g. decorating the line or adding an icon)\n// - add the starting point and ending point, with a buffer; provides \"snapping\" for finding other candidate lines\n// - add the centroid of this line segment; a \"general sense\" of its location for Manhattan heuristic\nsegment.geom=wktreader.read(segment.geom);segment.centroid=segment.geom.getCentroid();var mypoints=segment.geom.getCoordinates();segment.firstpoint=gfactory.createPoint(mypoints[0]);segment.lastpoint=gfactory.createPoint(mypoints[mypoints.length-1]);// done\nreturn segment;});// hand off to our path-finder\n// tack on some metadata to the resulting list of segments\n// then pass the results through cleanup and serialization\nconsole.log('downloaded '+data.rows.length+' segments, starting assembly');try{var route=self.assemblePath(start_segment,target_segment,data.rows,northbound);if(!route){failure_callback(\"No route could be found between those locations.\");return;}route.start_lat=start_lat;route.start_lng=start_lng;route.target_lat=target_lat;route.target_lng=target_lng;route.start_segment=start_segment;route.target_segment=target_segment;route=self.routeDecorate(route);route=self.routeSerialize(route);success_callback(route);}catch(errmsg){failure_callback(errmsg);}}).error(function(errors){var errmsg=\"error fetching lines universe: \"+errors[0];failure_callback(errmsg);});},function(errmsg){failure_callback(\"error finding target segment: \"+errmsg);});},function(errmsg){failure_callback(\"error finding start segment: \"+errmsg);});},//\n// utility function: find the nearest segment to the given latlng\n// asynchronous: provide success + failure callbacks\n// success -- will be passed 1 param: the resulting segment\n// error -- will be passed 1 param: error message\n//\nfindNearestSegmentToLatLng:function findNearestSegmentToLatLng(lat,lng,direction,success_callback,failure_callback){var self=this;var closest_segment;var directionclause=\"TRUE\";switch(direction){case'N':// N trails only\ndirectionclause=\"direction IN ('B', 'N')\";break;case'S':// S trails only\ndirectionclause=\"direction IN ('B', 'S')\";break;default:// undefined, null, etc. do not filter by directionality\nbreak;}var sql=\"SELECT pline_id AS id, title, ST_DISTANCE(the_geom::geography, ST_SETSRID(ST_MAKEPOINT({{ lng }}, {{ lat }}), 4326)::geography) AS closest_distance, ST_Y(ST_CLOSESTPOINT(the_geom, ST_SETSRID(ST_MAKEPOINT({{ lng }}, {{ lat }}), 4326))) AS closest_lat, ST_X(ST_CLOSESTPOINT(the_geom, ST_SETSRID(ST_MAKEPOINT({{ lng }}, {{ lat }}), 4326))) AS closest_lng, ST_XMAX(the_geom) AS e, ST_XMIN(the_geom) AS w, ST_YMIN(the_geom) AS s, ST_YMAX(the_geom) AS n FROM \"+self.DBTABLE_EDGES+\" WHERE \"+directionclause+\" ORDER BY the_geom <-> ST_SETSRID(ST_MAKEPOINT({{ lng }}, {{ lat }}), 4326) LIMIT 1\";var params={lng:lng,lat:lat};new cartodb.SQL({user:self.CARTODB_USER}).execute(sql,params).done(function(data){closest_segment=data.rows[0];closest_segment.wanted_lat=lat;// decorate with the actually-requested lat+lng\nclosest_segment.wanted_lng=lng;// decorate with the actually-requested lat+lng\nsuccess_callback(closest_segment);}).error(function(errors){var errmsg=\"findNearestSegmentToLatLng failed: \"+errors[0];failure_callback(errmsg);});},//\n// internal function: given a universe of edges/segments, find a path from start to end\n//\nassemblePath:function assemblePath(start_segment,target_segment,universe_segments,northbound){var self=this;// a list of edges which we have already traversed: so we never go backward esp. when exploring forks\nvar poisoned={};// from our universe, extract the target edge\n// we'll refer to this to check our distance to see whether we are going the right direction (Manhattan heuristic)\nvar target_geom=universe_segments.filter(function(segment){return segment.id==target_segment.id;})[0];// start by pulling from the universe, our first edge\n// then poison it so we don't try to re-cross our own starting point\nvar route=universe_segments.filter(function(segment){return segment.id==start_segment.id;});poisoned[start_segment.id]=true;// the big loop\n// starting at our latest segment, find all other segments which touch it (more or less) and they are candidates for our next step\n// unless they've been poisoned (tagged as backward)\nwhile(true){var here=route[route.length-1];if(here.id==target_segment.id)console.log([\"arrived\",here.debug]);if(here.id==target_segment.id)break;// we're there! done!\nconsole.log([\"current location:\",here.debug]);var candidates=universe_segments.filter(function(candidate){// use this to debug if two segments aren't connecting but you think they should\n// compare their endpoint-to-endpoint distance to the tolerance below\n// tip: if the end-to-end distance is greater than the minimum distance, maybe the ends you see aren't really the ends, e.g. the line bends back over itself\n/*\n                if (here.id == 661596 && candidate.id == 661598) {\n                    console.log([ 'minimum distance between segments', here.geom.distance(candidate.geom) ]);\n                    console.log([ 'distance to next segment first endpoint', here.geom.distance(candidate.firstpoint), here.geom.distance(candidate.firstpoint) <= 0.002 ]);\n                    console.log([ 'distance to next segment last endpoint', here.geom.distance(candidate.lastpoint), here.geom.distance(candidate.lastpoint) <= 0.002 ]);\n                }\n                */var tolerance=0.002;// about 50ft; the topology is bad but we should tolerate it\nif(poisoned[candidate.id])return false;return here.geom.distance(candidate.firstpoint)<=tolerance||here.geom.distance(candidate.lastpoint)<=tolerance;});var nextsegment=null;if(candidates.length==1){// only 1 candidate = okay, guess that's our way forward\n// explicitly set fork=false; maybe this step in our route was a fork, and we poisoned enough wrong forks that it's not a decision anymore\nhere.fork=false;nextsegment=candidates[0];}else if(candidates.length){// more than 1 unpoisoned candidate = this is a fork; pick one and move on\n// if we were wrong we'd eventually end up with 0 candidates, a dead end; see below\nconsole.log([\"fork detected here:\",here.debug,'candidates are:',candidates]);here.fork=true;// Manhattan heuristic: whichever candidate is closer to our destination, is probably right\ncandidates.sort(function(p,q){return p.centroid.distance(target_geom.centroid)<q.centroid.distance(target_geom.centroid)?-1:1;});nextsegment=candidates[0];}else{// no candidates at all? then we're at a dead end and it's not our destination\nhere.fork=false;// find the last node in our route which is a fork\n// strip off the remainder of the route\n// then let nextsegment remain null, so our next pass will be on that fork node with one less option\nconsole.log(['dead end at:',here.debug]);for(var i=route.length-1;i>=0;i--){// if we are all the way back at the start and are seeing 0 candidates, it's not gonna happen\nif(i==0){console.log([\"zero candidates at starting node. there is no path\"]);route=null;break;}if(!route[i].fork)continue;console.log([\"last fork was at step:\",i,route[i].debug]);route.splice(i+1);console.log(['stripped back to last fork:',route[route.length-1].debug]);break;}}// the only way that route can become null is by giving up entirely (it's an array with at least the 1 starting segment)\nif(route===null)break;// add this segment to our route\n// then poison this segment so we won't try it again (backward is never a way forward)\nif(nextsegment){poisoned[nextsegment.id]=true;route.push(nextsegment);}}// end of potentially infinite loop\n// done assembling the path; or else a null because there is no path\n// hand back to caller, probably for postprocessing\nreturn route;},//\n// internal function: given a completed path from assemblePath() do some cleanup to it\n// flip segments end-to-end so they have a consistent sequence\n// give each segment a \"transition\" object describing the turn and the transition\n//\nrouteDecorate:function routeDecorate(route){// tip: Point.clone() does not work, thus the use of gfactory\n// also to compose new point objects based on route metadata\nvar gfactory=new jsts.geom.GeometryFactory();// segment flipping -- align each step's ending vertex to the next line's starting vertex\n// this makes the vertices truly sequential along the route, which is relevant to:\n// - generating elevation profile charts, as one would want the elevations in sequence\n// - filling in gaps, by fudging the starting and ending points so they have the same vertex\n// - generating turning directions, where one lines changes into the next\n// http://gregorthemapguy.blogspot.com/2012/08/turning-directions-for-every-segment.html\n//\n// DON'T FORGET when flipping the linestring geometry TO ALSO update the firstpoint and lastpoint references\n// as we will likely be comparing them for later phases of work\nfor(var i=0,l=route.length-2;i<=l;i++){var thisstep=route[i];var nextstep=route[i+1];var dx11=thisstep.firstpoint.distance(nextstep.firstpoint);var dx22=thisstep.lastpoint.distance(nextstep.lastpoint);var dx12=thisstep.firstpoint.distance(nextstep.lastpoint);var dx21=thisstep.lastpoint.distance(nextstep.firstpoint);switch(Math.min(dx11,dx12,dx22,dx21)){case dx21:// this segment's end meets the next segment's start; great!\nconsole.log(['segment end align',thisstep.debug,nextstep.debug,'ok as is']);break;case dx11:// this segment's start meets the next segment's start; flip this one\nconsole.log(['segment end align',thisstep.debug,nextstep.debug,'flip this']);thisstep.geom.geometries[0].points.coordinates.reverse();var thispoints=thisstep.geom.getCoordinates();thisstep.firstpoint=gfactory.createPoint(thispoints[0]);thisstep.lastpoint=gfactory.createPoint(thispoints[thispoints.length-1]);break;case dx12:// this segment's start meets the next segment's end; flip both\nconsole.log(['segment end align',thisstep.debug,nextstep.debug,'flip both']);thisstep.geom.geometries[0].points.coordinates.reverse();nextstep.geom.geometries[0].points.coordinates.reverse();var thispoints=thisstep.geom.getCoordinates();thisstep.firstpoint=gfactory.createPoint(thispoints[0]);thisstep.lastpoint=gfactory.createPoint(thispoints[thispoints.length-1]);var nextpoints=nextstep.geom.getCoordinates();nextstep.firstpoint=gfactory.createPoint(nextpoints[0]);nextstep.lastpoint=gfactory.createPoint(nextpoints[nextpoints.length-1]);break;case dx22:// this segment's end meets the next segment's end; flip next one\nconsole.log(['segment end align',thisstep.debug,nextstep.debug,'flip next']);nextstep.geom.geometries[0].points.coordinates.reverse();var nextpoints=nextstep.geom.getCoordinates();nextstep.firstpoint=gfactory.createPoint(nextpoints[0]);nextstep.lastpoint=gfactory.createPoint(nextpoints[nextpoints.length-1]);break;}}// go through the transitions and clean up non-matching ends, which form visible breaks where the segments don't really touch\n// effectively, fudge the last point of the previous trail to be the same as the first point of next, so they will overlap\nfor(var i=0,l=route.length-2;i<=l;i++){var thisstep=route[i];var nextstep=route[i+1];// if the distance between the two points is quite close, don't bother; the topology is destined for a significant cleanup which will solve many of them\nvar dx=thisstep.lastpoint.distance(nextstep.firstpoint);if(dx<0.0001)continue;// clone the next segment's starting point, append it to our linestring; don't forget to update our lastpoint\n// this is way off API, modifying the geometry in place\nvar newpoint=gfactory.createPoint(nextstep.firstpoint.coordinates.coordinates[0]);console.log(['patching gap',thisstep.debug,nextstep.debug,newpoint]);thisstep.geom.geometries[0].points.coordinates.push(newpoint.coordinates.coordinates[0]);thisstep.lastpoint=newpoint;}// go through the transitions and generate a directions attribute by comparing the azimuth of the old path and the new path\n// - human directions with the name \"Turn right onto Schermerhorn Ct\"\n// - simplified directions fitting a domain \"R\"\n// - latlong of this step-segment's lastpoint vertex for the location of this transition\n//\n// add to the final point a transition as well, so caller doesn't need to scramble with \"if not segment.transition\"\nvar TRANSITION_CODES={RIGHT_TURN:{code:'RT',text:\"Turn right onto \"},RIGHT_SOFT:{code:'RS',text:\"Bear right onto \"},RIGHT_HARD:{code:'RH',text:\"Turn sharply right onto \"},LEFT_TURN:{code:'LT',text:\"Turn left onto \"},LEFT_SOFT:{code:'LS',text:\"Bear left onto \"},LEFT_HARD:{code:'LH',text:\"Turn sharply left onto \"},STRAIGHT:{code:'ST',text:\"Continue onto \"},ARRIVE:{code:'AR',text:\"Arrive\"},OTHER:{code:'XX',text:\"\"}};function rad2deg(angle){return angle*57.29577951308232;// angle / Math.PI * 180\n}function deg2rad(angle){return angle*0.017453292519943295;// (angle / 180) * Math.PI;\n}for(var i=0,l=route.length-2;i<=l;i++){var thisstep=route[i];var nextstep=route[i+1];// find the azimuth (compass heading) of the two paths, and the difference between the azimuths, thus the turning\n// the azimuth of the line's overall bent (firstpoint to lastpoint) is easily thrown off by curves characteristic of trails\n// the azimuth of the very first or last vertex-pair, is too sensitive to very tiny variations when drawing shapes e.g. hand jitters\n// so try the azimuth of the last 3 such pairs, if that many exist\nvar thispoints=thisstep.geom.getCoordinates().slice(-3);var this_last=thispoints[thispoints.length-1],this_prev=thispoints[0];var nextpoints=nextstep.geom.getCoordinates().slice(0,3);var next_first=nextpoints[0],next_second=nextpoints[nextpoints.length-1];var thislon2=this_prev.x,thislat2=this_prev.y,thislon1=this_last.x,thislat1=this_last.y;var nextlon2=next_first.x,nextlat2=next_first.y,nextlon1=next_second.x,nextlat1=next_second.y;var thisaz=(180+rad2deg(Math.atan2(Math.sin(deg2rad(thislon2)-deg2rad(thislon1))*Math.cos(deg2rad(thislat2)),Math.cos(deg2rad(thislat1))*Math.sin(deg2rad(thislat2))-Math.sin(deg2rad(thislat1))*Math.cos(deg2rad(thislat2))*Math.cos(deg2rad(thislon2)-deg2rad(thislon1)))))%360;var nextaz=(180+rad2deg(Math.atan2(Math.sin(deg2rad(nextlon2)-deg2rad(nextlon1))*Math.cos(deg2rad(nextlat2)),Math.cos(deg2rad(nextlat1))*Math.sin(deg2rad(nextlat2))-Math.sin(deg2rad(nextlat1))*Math.cos(deg2rad(nextlat2))*Math.cos(deg2rad(nextlon2)-deg2rad(nextlon1)))))%360;var angle=Math.round(nextaz-thisaz);if(angle>180)angle=angle-360;if(angle<-180)angle=angle+360;console.log(['turning',thisstep.debug,nextstep.debug,thisaz,nextaz,angle]);var turntype=TRANSITION_CODES.OTHER;if(angle>=-30&&angle<=30)turntype=TRANSITION_CODES.STRAIGHT;else if(angle>=31&&angle<=60)turntype=TRANSITION_CODES.RIGHT_SOFT;else if(angle>=61&&angle<=100)turntype=TRANSITION_CODES.RIGHT_TURN;else if(angle>=101)turntype=TRANSITION_CODES.RIGHT_HARD;else if(angle<=-30&&angle>=-60)turntype=TRANSITION_CODES.LEFT_SOFT;else if(angle<=-61&&angle>=-100)turntype=TRANSITION_CODES.LEFT_TURN;else if(angle<=-101)turntype=TRANSITION_CODES.LEFT_HARD;thisstep.transition=_defineProperty({lat:thisstep.lastpoint.coordinates.coordinates[0].y,// wow, no method for this?\nlng:thisstep.lastpoint.coordinates.coordinates[0].x,// wow, no method for this?\ntitle:thisstep.title+' to '+nextstep.title,code:turntype.code},'title',turntype.text+nextstep.title);}var thisstep=route[route.length-1];thisstep.transition={lat:thisstep.lastpoint.coordinates.coordinates[0].y,// wow, no method for this?\nlng:thisstep.lastpoint.coordinates.coordinates[0].x,// wow, no method for this?\ncode:TRANSITION_CODES.ARRIVE.code,title:TRANSITION_CODES.ARRIVE.text};// metadata: the actually-requested starting latlng and target latlng\nroute.wanted_start=gfactory.createPoint(new jsts.geom.Coordinate(route.start_segment.wanted_lng,route.start_segment.wanted_lat));route.wanted_end=gfactory.createPoint(new jsts.geom.Coordinate(route.target_segment.wanted_lng,route.target_segment.wanted_lat));// metadata: the closest point latlng and the closest distance, to our starting and ending segment\n// they already have these from findNearestSegmentToLatLng() but let's formalize them into the output\nroute.closest_point_start=gfactory.createPoint(new jsts.geom.Coordinate(route.start_segment.closest_lng,route.start_segment.closest_lat));route.closest_point_end=gfactory.createPoint(new jsts.geom.Coordinate(route.target_segment.closest_lng,route.target_segment.closest_lat));route.closest_distance_start=route.start_segment.closest_distance;route.closest_distance_end=route.target_segment.closest_distance;// metadata: the sum distance from all the segments, e.g. total trip length\nroute.total_meters=route.reduce(function(sum,segment){return sum+segment.meters;},0);// and Bob's your uncle\nreturn route;},//\n// internal / utility function: given a completed and decorated route from routeDecorate()\n// serialize the sequence of linestrings into a GeoJSON document, ready for consumption\n//\nrouteSerialize:function routeSerialize(route){// final prep for hanging back the route\n// massage it into a GeoJSON-shaped structure, so it's ready to consume by almost anything\nvar self=this;var wktwriter=new jsts.io.GeoJSONWriter();var structure={type:\"FeatureCollection\",properties:{total_meters:route.total_meters,startpoint_wanted:wktwriter.write(route.wanted_start),endpoint_wanted:wktwriter.write(route.wanted_end),startpoint_trail:wktwriter.write(route.closest_point_start),endpoint_trail:wktwriter.write(route.closest_point_end),startpoint_meters:route.closest_distance_start,endpoint_meters:route.closest_distance_end},features:route.map(function(routestep){var feature=wktwriter.write(routestep.geom);feature.properties={id:routestep.id,title:routestep.title,length:routestep.meters,transition:routestep.transition};return feature;})};// done!\nreturn structure;}};exports.default=ROUTER;/***/}]));});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(90)(module)))\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 0.3dbb278452a5b619e573.js","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ecgClientRouter\"] = factory();\n\telse\n\t\troot[\"ecgClientRouter\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * JSTS. See https://github.com/bjornharrtell/jsts\n * https://github.com/bjornharrtell/jsts/blob/master/LICENSE_EDLv1.txt\n * https://github.com/bjornharrtell/jsts/blob/master/LICENSE_EPLv1.txt\n * https://github.com/bjornharrtell/jsts/blob/master/LICENSE_LICENSE_ES6_COLLECTIONS.txt\n * @license\n */\n\n(function (global, factory) {\n\t true ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.jsts = global.jsts || {})));\n}(this, (function (exports) { 'use strict';\n\n/* Polyfill service v3.13.0\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service\n *\n * - Array.prototype.fill, License: CC0 */\n\nif (!('fill' in Array.prototype)) {\n  Object.defineProperty(Array.prototype, 'fill', {\n    configurable: true,\n    value: function fill(value) {\n      if (this === undefined || this === null) {\n        throw new TypeError(this + ' is not an object');\n      }\n\n      var arrayLike = Object(this);\n\n      var length = Math.max(Math.min(arrayLike.length, 9007199254740991), 0) || 0;\n\n      var relativeStart = 1 in arguments ? parseInt(Number(arguments[1]), 10) || 0 : 0;\n\n      relativeStart = relativeStart < 0 ? Math.max(length + relativeStart, 0) : Math.min(relativeStart, length);\n\n      var relativeEnd = 2 in arguments && arguments[2] !== undefined ? parseInt(Number(arguments[2]), 10) || 0 : length;\n\n      relativeEnd = relativeEnd < 0 ? Math.max(length + arguments[2], 0) : Math.min(relativeEnd, length);\n\n      while (relativeStart < relativeEnd) {\n        arrayLike[relativeStart] = value;\n\n        ++relativeStart;\n      }\n\n      return arrayLike;\n    },\n    writable: true\n  });\n}\n\nNumber.isFinite = Number.isFinite || function (value) {\n  return typeof value === 'number' && isFinite(value);\n};\n\nNumber.isInteger = Number.isInteger || function (val) {\n  return typeof val === 'number' && isFinite(val) && Math.floor(val) === val;\n};\n\nNumber.parseFloat = Number.parseFloat || parseFloat;\n\nNumber.isNaN = Number.isNaN || function (value) {\n  return value !== value; // eslint-disable-line\n};\n\nMath.trunc = Math.trunc || function (x) {\n  return x < 0 ? Math.ceil(x) : Math.floor(x);\n};\n\nvar extend = function (target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) target[key] = source[key];\n  }\n};\n\nfunction NumberUtil() {}\nextend(NumberUtil.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn NumberUtil;\n\t}\n});\nNumberUtil.equalsWithTolerance = function (x1, x2, tolerance) {\n\treturn Math.abs(x1 - x2) <= tolerance;\n};\n\nfunction IllegalArgumentException() {}\n\nfunction Double() {}\nDouble.isNaN = function (n) {\n  return Number.isNaN(n);\n};\nDouble.doubleToLongBits = function (n) {\n  return n;\n};\nDouble.longBitsToDouble = function (n) {\n  return n;\n};\nDouble.isInfinite = function (n) {\n  return !Number.isFinite(n);\n};\nDouble.MAX_VALUE = Number.MAX_VALUE;\n\nfunction Comparable() {}\n\nfunction Clonable() {}\n\nfunction Comparator() {}\n\nfunction Serializable() {}\n\nfunction RuntimeException(message) {\n  this.name = 'RuntimeException';\n  this.message = message;\n  this.stack = new Error().stack;\n  Error.call(this, message);\n}\n\nRuntimeException.prototype = Object.create(Error.prototype);\nRuntimeException.prototype.constructor = Error;\n\nvar inherits = function (c, p) {\n  c.prototype = Object.create(p.prototype);\n  c.prototype.constructor = c;\n};\n\nfunction AssertionFailedException() {\n\tif (arguments.length === 0) {\n\t\tRuntimeException.call(this);\n\t} else if (arguments.length === 1) {\n\t\tvar message = arguments[0];\n\t\tRuntimeException.call(this, message);\n\t}\n}\ninherits(AssertionFailedException, RuntimeException);\nextend(AssertionFailedException.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn AssertionFailedException;\n\t}\n});\n\nfunction Assert() {}\nextend(Assert.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Assert;\n\t}\n});\nAssert.shouldNeverReachHere = function () {\n\tif (arguments.length === 0) {\n\t\tAssert.shouldNeverReachHere(null);\n\t} else if (arguments.length === 1) {\n\t\tvar message = arguments[0];\n\t\tthrow new AssertionFailedException(\"Should never reach here\" + (message !== null ? \": \" + message : \"\"));\n\t}\n};\nAssert.isTrue = function () {\n\tif (arguments.length === 1) {\n\t\tvar assertion = arguments[0];\n\t\tAssert.isTrue(assertion, null);\n\t} else if (arguments.length === 2) {\n\t\tvar _assertion = arguments[0],\n\t\t    message = arguments[1];\n\t\tif (!_assertion) {\n\t\t\tif (message === null) {\n\t\t\t\tthrow new AssertionFailedException();\n\t\t\t} else {\n\t\t\t\tthrow new AssertionFailedException(message);\n\t\t\t}\n\t\t}\n\t}\n};\nAssert.equals = function () {\n\tif (arguments.length === 2) {\n\t\tvar expectedValue = arguments[0],\n\t\t    actualValue = arguments[1];\n\t\tAssert.equals(expectedValue, actualValue, null);\n\t} else if (arguments.length === 3) {\n\t\tvar _expectedValue = arguments[0],\n\t\t    _actualValue = arguments[1],\n\t\t    message = arguments[2];\n\t\tif (!_actualValue.equals(_expectedValue)) {\n\t\t\tthrow new AssertionFailedException(\"Expected \" + _expectedValue + \" but encountered \" + _actualValue + (message !== null ? \": \" + message : \"\"));\n\t\t}\n\t}\n};\n\nfunction Coordinate() {\n\tthis.x = null;\n\tthis.y = null;\n\tthis.z = null;\n\tif (arguments.length === 0) {\n\t\tCoordinate.call(this, 0.0, 0.0);\n\t} else if (arguments.length === 1) {\n\t\tvar c = arguments[0];\n\t\tCoordinate.call(this, c.x, c.y, c.z);\n\t} else if (arguments.length === 2) {\n\t\tvar x = arguments[0],\n\t\t    y = arguments[1];\n\t\tCoordinate.call(this, x, y, Coordinate.NULL_ORDINATE);\n\t} else if (arguments.length === 3) {\n\t\tvar _x = arguments[0],\n\t\t    _y = arguments[1],\n\t\t    z = arguments[2];\n\t\tthis.x = _x;\n\t\tthis.y = _y;\n\t\tthis.z = z;\n\t}\n}\nextend(Coordinate.prototype, {\n\tsetOrdinate: function setOrdinate(ordinateIndex, value) {\n\t\tswitch (ordinateIndex) {\n\t\t\tcase Coordinate.X:\n\t\t\t\tthis.x = value;\n\t\t\t\tbreak;\n\t\t\tcase Coordinate.Y:\n\t\t\t\tthis.y = value;\n\t\t\t\tbreak;\n\t\t\tcase Coordinate.Z:\n\t\t\t\tthis.z = value;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new IllegalArgumentException(\"Invalid ordinate index: \" + ordinateIndex);\n\t\t}\n\t},\n\tequals2D: function equals2D() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar other = arguments[0];\n\t\t\tif (this.x !== other.x) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.y !== other.y) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar c = arguments[0],\n\t\t\t    tolerance = arguments[1];\n\t\t\tif (!NumberUtil.equalsWithTolerance(this.x, c.x, tolerance)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!NumberUtil.equalsWithTolerance(this.y, c.y, tolerance)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\tgetOrdinate: function getOrdinate(ordinateIndex) {\n\t\tswitch (ordinateIndex) {\n\t\t\tcase Coordinate.X:\n\t\t\t\treturn this.x;\n\t\t\tcase Coordinate.Y:\n\t\t\t\treturn this.y;\n\t\t\tcase Coordinate.Z:\n\t\t\t\treturn this.z;\n\t\t}\n\t\tthrow new IllegalArgumentException(\"Invalid ordinate index: \" + ordinateIndex);\n\t},\n\tequals3D: function equals3D(other) {\n\t\treturn this.x === other.x && this.y === other.y && (this.z === other.z || Double.isNaN(this.z) && Double.isNaN(other.z));\n\t},\n\tequals: function equals(other) {\n\t\tif (!(other instanceof Coordinate)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.equals2D(other);\n\t},\n\tequalInZ: function equalInZ(c, tolerance) {\n\t\treturn NumberUtil.equalsWithTolerance(this.z, c.z, tolerance);\n\t},\n\tcompareTo: function compareTo(o) {\n\t\tvar other = o;\n\t\tif (this.x < other.x) return -1;\n\t\tif (this.x > other.x) return 1;\n\t\tif (this.y < other.y) return -1;\n\t\tif (this.y > other.y) return 1;\n\t\treturn 0;\n\t},\n\tclone: function clone() {\n\t\ttry {\n\t\t\tvar coord = null;\n\t\t\treturn coord;\n\t\t} catch (e) {\n\t\t\tif (e instanceof CloneNotSupportedException) {\n\t\t\t\tAssert.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\");\n\t\t\t\treturn null;\n\t\t\t} else throw e;\n\t\t} finally {}\n\t},\n\tcopy: function copy() {\n\t\treturn new Coordinate(this);\n\t},\n\ttoString: function toString() {\n\t\treturn \"(\" + this.x + \", \" + this.y + \", \" + this.z + \")\";\n\t},\n\tdistance3D: function distance3D(c) {\n\t\tvar dx = this.x - c.x;\n\t\tvar dy = this.y - c.y;\n\t\tvar dz = this.z - c.z;\n\t\treturn Math.sqrt(dx * dx + dy * dy + dz * dz);\n\t},\n\tdistance: function distance(c) {\n\t\tvar dx = this.x - c.x;\n\t\tvar dy = this.y - c.y;\n\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t},\n\thashCode: function hashCode() {\n\t\tvar result = 17;\n\t\tresult = 37 * result + Coordinate.hashCode(this.x);\n\t\tresult = 37 * result + Coordinate.hashCode(this.y);\n\t\treturn result;\n\t},\n\tsetCoordinate: function setCoordinate(other) {\n\t\tthis.x = other.x;\n\t\tthis.y = other.y;\n\t\tthis.z = other.z;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparable, Clonable, Serializable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Coordinate;\n\t}\n});\nCoordinate.hashCode = function () {\n\tif (arguments.length === 1) {\n\t\tvar x = arguments[0];\n\t\tvar f = Double.doubleToLongBits(x);\n\t\treturn Math.trunc(f ^ f >>> 32);\n\t}\n};\nfunction DimensionalComparator() {\n\tthis.dimensionsToTest = 2;\n\tif (arguments.length === 0) {\n\t\tDimensionalComparator.call(this, 2);\n\t} else if (arguments.length === 1) {\n\t\tvar dimensionsToTest = arguments[0];\n\t\tif (dimensionsToTest !== 2 && dimensionsToTest !== 3) throw new IllegalArgumentException(\"only 2 or 3 dimensions may be specified\");\n\t\tthis.dimensionsToTest = dimensionsToTest;\n\t}\n}\nextend(DimensionalComparator.prototype, {\n\tcompare: function compare(o1, o2) {\n\t\tvar c1 = o1;\n\t\tvar c2 = o2;\n\t\tvar compX = DimensionalComparator.compare(c1.x, c2.x);\n\t\tif (compX !== 0) return compX;\n\t\tvar compY = DimensionalComparator.compare(c1.y, c2.y);\n\t\tif (compY !== 0) return compY;\n\t\tif (this.dimensionsToTest <= 2) return 0;\n\t\tvar compZ = DimensionalComparator.compare(c1.z, c2.z);\n\t\treturn compZ;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DimensionalComparator;\n\t}\n});\nDimensionalComparator.compare = function (a, b) {\n\tif (a < b) return -1;\n\tif (a > b) return 1;\n\tif (Double.isNaN(a)) {\n\t\tif (Double.isNaN(b)) return 0;\n\t\treturn -1;\n\t}\n\tif (Double.isNaN(b)) return 1;\n\treturn 0;\n};\nCoordinate.DimensionalComparator = DimensionalComparator;\nCoordinate.serialVersionUID = 6683108902428366910;\nCoordinate.NULL_ORDINATE = Double.NaN;\nCoordinate.X = 0;\nCoordinate.Y = 1;\nCoordinate.Z = 2;\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Iterator.html\n * @constructor\n * @private\n */\nfunction Iterator() {}\n\n/**\n * Returns true if the iteration has more elements.\n * @return {boolean}\n */\nIterator.prototype.hasNext = function () {};\n\n/**\n * Returns the next element in the iteration.\n * @return {Object}\n */\nIterator.prototype.next = function () {};\n\n/**\n * Removes from the underlying collection the last element returned by the\n * iterator (optional operation).\n */\nIterator.prototype.remove = function () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Collection.html\n *\n * @constructor\n * @private\n */\nfunction Collection() {}\n\n/**\n * Ensures that this collection contains the specified element (optional\n * operation).\n * @param {Object} e\n * @return {boolean}\n */\nCollection.prototype.add = function () {};\n\n/**\n * Appends all of the elements in the specified collection to the end of this\n * list, in the order that they are returned by the specified collection's\n * iterator (optional operation).\n * @param {javascript.util.Collection} c\n * @return {boolean}\n */\nCollection.prototype.addAll = function () {};\n\n/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */\nCollection.prototype.isEmpty = function () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {javascript.util.Iterator}\n */\nCollection.prototype.iterator = function () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {number}\n */\nCollection.prototype.size = function () {};\n\n/**\n * Returns an array containing all of the elements in this collection.\n * @return {Array}\n */\nCollection.prototype.toArray = function () {};\n\n/**\n * Removes a single instance of the specified element from this collection if it\n * is present. (optional)\n * @param {Object} e\n * @return {boolean}\n */\nCollection.prototype.remove = function () {};\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction IndexOutOfBoundsException$1(message) {\n  this.message = message || '';\n}\nIndexOutOfBoundsException$1.prototype = new Error();\n\n/**\n * @type {string}\n */\nIndexOutOfBoundsException$1.prototype.name = 'IndexOutOfBoundsException';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/List.html\n *\n * @extends {javascript.util.Collection}\n * @constructor\n * @private\n */\nfunction List() {}\nList.prototype = Object.create(Collection.prototype);\nList.prototype.constructor = List;\n\n/**\n * Returns the element at the specified position in this list.\n * @param {number} index\n * @return {Object}\n */\nList.prototype.get = function () {};\n\n/**\n * Replaces the element at the specified position in this list with the\n * specified element (optional operation).\n * @param {number} index\n * @param {Object} e\n * @return {Object}\n */\nList.prototype.set = function () {};\n\n/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */\nList.prototype.isEmpty = function () {};\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction NoSuchElementException(message) {\n  this.message = message || '';\n}\nNoSuchElementException.prototype = new Error();\n\n/**\n * @type {string}\n */\nNoSuchElementException.prototype.name = 'NoSuchElementException';\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction OperationNotSupported(message) {\n  this.message = message || '';\n}\nOperationNotSupported.prototype = new Error();\n\n/**\n * @type {string}\n */\nOperationNotSupported.prototype.name = 'OperationNotSupported';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html\n *\n * @extends List\n * @private\n */\nfunction ArrayList() {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n}\nArrayList.prototype = Object.create(List.prototype);\nArrayList.prototype.constructor = ArrayList;\n\nArrayList.prototype.ensureCapacity = function () {};\nArrayList.prototype.interfaces_ = function () {\n  return [List, Collection];\n};\n\n/**\n * @override\n */\nArrayList.prototype.add = function (e) {\n  if (arguments.length === 1) {\n    this.array_.push(e);\n  } else {\n    this.array_.splice(arguments[0], arguments[1]);\n  }\n  return true;\n};\n\nArrayList.prototype.clear = function () {\n  this.array_ = [];\n};\n\n/**\n * @override\n */\nArrayList.prototype.addAll = function (c) {\n  for (var i = c.iterator(); i.hasNext();) {\n    this.add(i.next());\n  }\n  return true;\n};\n\n/**\n * @override\n */\nArrayList.prototype.set = function (index, element) {\n  var oldElement = this.array_[index];\n  this.array_[index] = element;\n  return oldElement;\n};\n\n/**\n * @override\n */\nArrayList.prototype.iterator = function () {\n  return new Iterator_(this);\n};\n\n/**\n * @override\n */\nArrayList.prototype.get = function (index) {\n  if (index < 0 || index >= this.size()) {\n    throw new IndexOutOfBoundsException$1();\n  }\n\n  return this.array_[index];\n};\n\n/**\n * @override\n */\nArrayList.prototype.isEmpty = function () {\n  return this.array_.length === 0;\n};\n\n/**\n * @override\n */\nArrayList.prototype.size = function () {\n  return this.array_.length;\n};\n\n/**\n * @override\n */\nArrayList.prototype.toArray = function () {\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i]);\n  }\n\n  return array;\n};\n\n/**\n * @override\n */\nArrayList.prototype.remove = function (o) {\n  var found = false;\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    if (this.array_[i] === o) {\n      this.array_.splice(i, 1);\n      found = true;\n      break;\n    }\n  }\n\n  return found;\n};\n\n/**\n * @extends {Iterator}\n * @param {ArrayList} arrayList\n * @constructor\n * @private\n */\nvar Iterator_ = function Iterator_(arrayList) {\n  /**\n   * @type {ArrayList}\n   * @private\n  */\n  this.arrayList_ = arrayList;\n  /**\n   * @type {number}\n   * @private\n  */\n  this.position_ = 0;\n};\n\n/**\n * @override\n */\nIterator_.prototype.next = function () {\n  if (this.position_ === this.arrayList_.size()) {\n    throw new NoSuchElementException();\n  }\n  return this.arrayList_.get(this.position_++);\n};\n\n/**\n * @override\n */\nIterator_.prototype.hasNext = function () {\n  if (this.position_ < this.arrayList_.size()) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n/**\n * TODO: should be in ListIterator\n * @override\n */\nIterator_.prototype.set = function (element) {\n  return this.arrayList_.set(this.position_ - 1, element);\n};\n\n/**\n * @override\n */\nIterator_.prototype.remove = function () {\n  this.arrayList_.remove(this.arrayList_.get(this.position_));\n};\n\nfunction CoordinateList() {\n\tArrayList.apply(this);\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tvar coord = arguments[0];\n\t\tthis.ensureCapacity(coord.length);\n\t\tthis.add(coord, true);\n\t} else if (arguments.length === 2) {\n\t\tvar _coord = arguments[0],\n\t\t    allowRepeated = arguments[1];\n\t\tthis.ensureCapacity(_coord.length);\n\t\tthis.add(_coord, allowRepeated);\n\t}\n}\ninherits(CoordinateList, ArrayList);\nextend(CoordinateList.prototype, {\n\tgetCoordinate: function getCoordinate(i) {\n\t\treturn this.get(i);\n\t},\n\taddAll: function addAll() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar coll = arguments[0],\n\t\t\t    allowRepeated = arguments[1];\n\t\t\tvar isChanged = false;\n\t\t\tfor (var i = coll.iterator(); i.hasNext();) {\n\t\t\t\tthis.add(i.next(), allowRepeated);\n\t\t\t\tisChanged = true;\n\t\t\t}\n\t\t\treturn isChanged;\n\t\t} else return ArrayList.prototype.addAll.apply(this, arguments);\n\t},\n\tclone: function clone() {\n\t\tvar clone = ArrayList.prototype.clone.call(this);\n\t\tfor (var i = 0; i < this.size(); i++) {\n\t\t\tclone.add(i, this.get(i).copy());\n\t\t}\n\t\treturn clone;\n\t},\n\ttoCoordinateArray: function toCoordinateArray() {\n\t\treturn this.toArray(CoordinateList.coordArrayType);\n\t},\n\tadd: function add() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar coord = arguments[0];\n\t\t\tArrayList.prototype.add.call(this, coord);\n\t\t} else if (arguments.length === 2) {\n\t\t\tif (arguments[0] instanceof Array && typeof arguments[1] === \"boolean\") {\n\t\t\t\tvar _coord2 = arguments[0],\n\t\t\t\t    allowRepeated = arguments[1];\n\t\t\t\tthis.add(_coord2, allowRepeated, true);\n\t\t\t\treturn true;\n\t\t\t} else if (arguments[0] instanceof Coordinate && typeof arguments[1] === \"boolean\") {\n\t\t\t\tvar _coord3 = arguments[0],\n\t\t\t\t    _allowRepeated = arguments[1];\n\t\t\t\tif (!_allowRepeated) {\n\t\t\t\t\tif (this.size() >= 1) {\n\t\t\t\t\t\tvar last = this.get(this.size() - 1);\n\t\t\t\t\t\tif (last.equals2D(_coord3)) return null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tArrayList.prototype.add.call(this, _coord3);\n\t\t\t} else if (arguments[0] instanceof Object && typeof arguments[1] === \"boolean\") {\n\t\t\t\tvar obj = arguments[0],\n\t\t\t\t    _allowRepeated2 = arguments[1];\n\t\t\t\tthis.add(obj, _allowRepeated2);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (typeof arguments[2] === \"boolean\" && arguments[0] instanceof Array && typeof arguments[1] === \"boolean\") {\n\t\t\t\tvar _coord4 = arguments[0],\n\t\t\t\t    _allowRepeated3 = arguments[1],\n\t\t\t\t    direction = arguments[2];\n\t\t\t\tif (direction) {\n\t\t\t\t\tfor (var i = 0; i < _coord4.length; i++) {\n\t\t\t\t\t\tthis.add(_coord4[i], _allowRepeated3);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (var i = _coord4.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tthis.add(_coord4[i], _allowRepeated3);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else if (typeof arguments[2] === \"boolean\" && Number.isInteger(arguments[0]) && arguments[1] instanceof Coordinate) {\n\t\t\t\tvar _i = arguments[0],\n\t\t\t\t    _coord5 = arguments[1],\n\t\t\t\t    _allowRepeated4 = arguments[2];\n\t\t\t\tif (!_allowRepeated4) {\n\t\t\t\t\tvar size = this.size();\n\t\t\t\t\tif (size > 0) {\n\t\t\t\t\t\tif (_i > 0) {\n\t\t\t\t\t\t\tvar prev = this.get(_i - 1);\n\t\t\t\t\t\t\tif (prev.equals2D(_coord5)) return null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (_i < size) {\n\t\t\t\t\t\t\tvar next = this.get(_i);\n\t\t\t\t\t\t\tif (next.equals2D(_coord5)) return null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tArrayList.prototype.add.call(this, _i, _coord5);\n\t\t\t}\n\t\t} else if (arguments.length === 4) {\n\t\t\tvar _coord6 = arguments[0],\n\t\t\t    _allowRepeated5 = arguments[1],\n\t\t\t    start = arguments[2],\n\t\t\t    end = arguments[3];\n\t\t\tvar inc = 1;\n\t\t\tif (start > end) inc = -1;\n\t\t\tfor (var i = start; i !== end; i += inc) {\n\t\t\t\tthis.add(_coord6[i], _allowRepeated5);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\tcloseRing: function closeRing() {\n\t\tif (this.size() > 0) this.add(new Coordinate(this.get(0)), false);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CoordinateList;\n\t}\n});\nCoordinateList.coordArrayType = new Array(0).fill(null);\n\nfunction Envelope() {\n\tthis.minx = null;\n\tthis.maxx = null;\n\tthis.miny = null;\n\tthis.maxy = null;\n\tif (arguments.length === 0) {\n\t\tthis.init();\n\t} else if (arguments.length === 1) {\n\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\tvar p = arguments[0];\n\t\t\tthis.init(p.x, p.x, p.y, p.y);\n\t\t} else if (arguments[0] instanceof Envelope) {\n\t\t\tvar env = arguments[0];\n\t\t\tthis.init(env);\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tvar p1 = arguments[0],\n\t\t    p2 = arguments[1];\n\t\tthis.init(p1.x, p2.x, p1.y, p2.y);\n\t} else if (arguments.length === 4) {\n\t\tvar x1 = arguments[0],\n\t\t    x2 = arguments[1],\n\t\t    y1 = arguments[2],\n\t\t    y2 = arguments[3];\n\t\tthis.init(x1, x2, y1, y2);\n\t}\n}\nextend(Envelope.prototype, {\n\tgetArea: function getArea() {\n\t\treturn this.getWidth() * this.getHeight();\n\t},\n\tequals: function equals(other) {\n\t\tif (!(other instanceof Envelope)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar otherEnvelope = other;\n\t\tif (this.isNull()) {\n\t\t\treturn otherEnvelope.isNull();\n\t\t}\n\t\treturn this.maxx === otherEnvelope.getMaxX() && this.maxy === otherEnvelope.getMaxY() && this.minx === otherEnvelope.getMinX() && this.miny === otherEnvelope.getMinY();\n\t},\n\tintersection: function intersection(env) {\n\t\tif (this.isNull() || env.isNull() || !this.intersects(env)) return new Envelope();\n\t\tvar intMinX = this.minx > env.minx ? this.minx : env.minx;\n\t\tvar intMinY = this.miny > env.miny ? this.miny : env.miny;\n\t\tvar intMaxX = this.maxx < env.maxx ? this.maxx : env.maxx;\n\t\tvar intMaxY = this.maxy < env.maxy ? this.maxy : env.maxy;\n\t\treturn new Envelope(intMinX, intMaxX, intMinY, intMaxY);\n\t},\n\tisNull: function isNull() {\n\t\treturn this.maxx < this.minx;\n\t},\n\tgetMaxX: function getMaxX() {\n\t\treturn this.maxx;\n\t},\n\tcovers: function covers() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\t\tvar p = arguments[0];\n\t\t\t\treturn this.covers(p.x, p.y);\n\t\t\t} else if (arguments[0] instanceof Envelope) {\n\t\t\t\tvar other = arguments[0];\n\t\t\t\tif (this.isNull() || other.isNull()) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn other.getMinX() >= this.minx && other.getMaxX() <= this.maxx && other.getMinY() >= this.miny && other.getMaxY() <= this.maxy;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar x = arguments[0],\n\t\t\t    y = arguments[1];\n\t\t\tif (this.isNull()) return false;\n\t\t\treturn x >= this.minx && x <= this.maxx && y >= this.miny && y <= this.maxy;\n\t\t}\n\t},\n\tintersects: function intersects() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Envelope) {\n\t\t\t\tvar other = arguments[0];\n\t\t\t\tif (this.isNull() || other.isNull()) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn !(other.minx > this.maxx || other.maxx < this.minx || other.miny > this.maxy || other.maxy < this.miny);\n\t\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\t\tvar p = arguments[0];\n\t\t\t\treturn this.intersects(p.x, p.y);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar x = arguments[0],\n\t\t\t    y = arguments[1];\n\t\t\tif (this.isNull()) return false;\n\t\t\treturn !(x > this.maxx || x < this.minx || y > this.maxy || y < this.miny);\n\t\t}\n\t},\n\tgetMinY: function getMinY() {\n\t\treturn this.miny;\n\t},\n\tgetMinX: function getMinX() {\n\t\treturn this.minx;\n\t},\n\texpandToInclude: function expandToInclude() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\t\tvar p = arguments[0];\n\t\t\t\tthis.expandToInclude(p.x, p.y);\n\t\t\t} else if (arguments[0] instanceof Envelope) {\n\t\t\t\tvar other = arguments[0];\n\t\t\t\tif (other.isNull()) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif (this.isNull()) {\n\t\t\t\t\tthis.minx = other.getMinX();\n\t\t\t\t\tthis.maxx = other.getMaxX();\n\t\t\t\t\tthis.miny = other.getMinY();\n\t\t\t\t\tthis.maxy = other.getMaxY();\n\t\t\t\t} else {\n\t\t\t\t\tif (other.minx < this.minx) {\n\t\t\t\t\t\tthis.minx = other.minx;\n\t\t\t\t\t}\n\t\t\t\t\tif (other.maxx > this.maxx) {\n\t\t\t\t\t\tthis.maxx = other.maxx;\n\t\t\t\t\t}\n\t\t\t\t\tif (other.miny < this.miny) {\n\t\t\t\t\t\tthis.miny = other.miny;\n\t\t\t\t\t}\n\t\t\t\t\tif (other.maxy > this.maxy) {\n\t\t\t\t\t\tthis.maxy = other.maxy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar x = arguments[0],\n\t\t\t    y = arguments[1];\n\t\t\tif (this.isNull()) {\n\t\t\t\tthis.minx = x;\n\t\t\t\tthis.maxx = x;\n\t\t\t\tthis.miny = y;\n\t\t\t\tthis.maxy = y;\n\t\t\t} else {\n\t\t\t\tif (x < this.minx) {\n\t\t\t\t\tthis.minx = x;\n\t\t\t\t}\n\t\t\t\tif (x > this.maxx) {\n\t\t\t\t\tthis.maxx = x;\n\t\t\t\t}\n\t\t\t\tif (y < this.miny) {\n\t\t\t\t\tthis.miny = y;\n\t\t\t\t}\n\t\t\t\tif (y > this.maxy) {\n\t\t\t\t\tthis.maxy = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tminExtent: function minExtent() {\n\t\tif (this.isNull()) return 0.0;\n\t\tvar w = this.getWidth();\n\t\tvar h = this.getHeight();\n\t\tif (w < h) return w;\n\t\treturn h;\n\t},\n\tgetWidth: function getWidth() {\n\t\tif (this.isNull()) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this.maxx - this.minx;\n\t},\n\tcompareTo: function compareTo(o) {\n\t\tvar env = o;\n\t\tif (this.isNull()) {\n\t\t\tif (env.isNull()) return 0;\n\t\t\treturn -1;\n\t\t} else {\n\t\t\tif (env.isNull()) return 1;\n\t\t}\n\t\tif (this.minx < env.minx) return -1;\n\t\tif (this.minx > env.minx) return 1;\n\t\tif (this.miny < env.miny) return -1;\n\t\tif (this.miny > env.miny) return 1;\n\t\tif (this.maxx < env.maxx) return -1;\n\t\tif (this.maxx > env.maxx) return 1;\n\t\tif (this.maxy < env.maxy) return -1;\n\t\tif (this.maxy > env.maxy) return 1;\n\t\treturn 0;\n\t},\n\ttranslate: function translate(transX, transY) {\n\t\tif (this.isNull()) {\n\t\t\treturn null;\n\t\t}\n\t\tthis.init(this.getMinX() + transX, this.getMaxX() + transX, this.getMinY() + transY, this.getMaxY() + transY);\n\t},\n\ttoString: function toString() {\n\t\treturn \"Env[\" + this.minx + \" : \" + this.maxx + \", \" + this.miny + \" : \" + this.maxy + \"]\";\n\t},\n\tsetToNull: function setToNull() {\n\t\tthis.minx = 0;\n\t\tthis.maxx = -1;\n\t\tthis.miny = 0;\n\t\tthis.maxy = -1;\n\t},\n\tgetHeight: function getHeight() {\n\t\tif (this.isNull()) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this.maxy - this.miny;\n\t},\n\tmaxExtent: function maxExtent() {\n\t\tif (this.isNull()) return 0.0;\n\t\tvar w = this.getWidth();\n\t\tvar h = this.getHeight();\n\t\tif (w > h) return w;\n\t\treturn h;\n\t},\n\texpandBy: function expandBy() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar distance = arguments[0];\n\t\t\tthis.expandBy(distance, distance);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar deltaX = arguments[0],\n\t\t\t    deltaY = arguments[1];\n\t\t\tif (this.isNull()) return null;\n\t\t\tthis.minx -= deltaX;\n\t\t\tthis.maxx += deltaX;\n\t\t\tthis.miny -= deltaY;\n\t\t\tthis.maxy += deltaY;\n\t\t\tif (this.minx > this.maxx || this.miny > this.maxy) this.setToNull();\n\t\t}\n\t},\n\tcontains: function contains() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Envelope) {\n\t\t\t\tvar other = arguments[0];\n\t\t\t\treturn this.covers(other);\n\t\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\t\tvar p = arguments[0];\n\t\t\t\treturn this.covers(p);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar x = arguments[0],\n\t\t\t    y = arguments[1];\n\t\t\treturn this.covers(x, y);\n\t\t}\n\t},\n\tcentre: function centre() {\n\t\tif (this.isNull()) return null;\n\t\treturn new Coordinate((this.getMinX() + this.getMaxX()) / 2.0, (this.getMinY() + this.getMaxY()) / 2.0);\n\t},\n\tinit: function init() {\n\t\tif (arguments.length === 0) {\n\t\t\tthis.setToNull();\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\t\tvar p = arguments[0];\n\t\t\t\tthis.init(p.x, p.x, p.y, p.y);\n\t\t\t} else if (arguments[0] instanceof Envelope) {\n\t\t\t\tvar env = arguments[0];\n\t\t\t\tthis.minx = env.minx;\n\t\t\t\tthis.maxx = env.maxx;\n\t\t\t\tthis.miny = env.miny;\n\t\t\t\tthis.maxy = env.maxy;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar p1 = arguments[0],\n\t\t\t    p2 = arguments[1];\n\t\t\tthis.init(p1.x, p2.x, p1.y, p2.y);\n\t\t} else if (arguments.length === 4) {\n\t\t\tvar x1 = arguments[0],\n\t\t\t    x2 = arguments[1],\n\t\t\t    y1 = arguments[2],\n\t\t\t    y2 = arguments[3];\n\t\t\tif (x1 < x2) {\n\t\t\t\tthis.minx = x1;\n\t\t\t\tthis.maxx = x2;\n\t\t\t} else {\n\t\t\t\tthis.minx = x2;\n\t\t\t\tthis.maxx = x1;\n\t\t\t}\n\t\t\tif (y1 < y2) {\n\t\t\t\tthis.miny = y1;\n\t\t\t\tthis.maxy = y2;\n\t\t\t} else {\n\t\t\t\tthis.miny = y2;\n\t\t\t\tthis.maxy = y1;\n\t\t\t}\n\t\t}\n\t},\n\tgetMaxY: function getMaxY() {\n\t\treturn this.maxy;\n\t},\n\tdistance: function distance(env) {\n\t\tif (this.intersects(env)) return 0;\n\t\tvar dx = 0.0;\n\t\tif (this.maxx < env.minx) dx = env.minx - this.maxx;else if (this.minx > env.maxx) dx = this.minx - env.maxx;\n\t\tvar dy = 0.0;\n\t\tif (this.maxy < env.miny) dy = env.miny - this.maxy;else if (this.miny > env.maxy) dy = this.miny - env.maxy;\n\t\tif (dx === 0.0) return dy;\n\t\tif (dy === 0.0) return dx;\n\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t},\n\thashCode: function hashCode() {\n\t\tvar result = 17;\n\t\tresult = 37 * result + Coordinate.hashCode(this.minx);\n\t\tresult = 37 * result + Coordinate.hashCode(this.maxx);\n\t\tresult = 37 * result + Coordinate.hashCode(this.miny);\n\t\tresult = 37 * result + Coordinate.hashCode(this.maxy);\n\t\treturn result;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparable, Serializable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Envelope;\n\t}\n});\nEnvelope.intersects = function () {\n\tif (arguments.length === 3) {\n\t\tvar p1 = arguments[0],\n\t\t    p2 = arguments[1],\n\t\t    q = arguments[2];\n\t\tif (q.x >= (p1.x < p2.x ? p1.x : p2.x) && q.x <= (p1.x > p2.x ? p1.x : p2.x) && q.y >= (p1.y < p2.y ? p1.y : p2.y) && q.y <= (p1.y > p2.y ? p1.y : p2.y)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t} else if (arguments.length === 4) {\n\t\tvar _p = arguments[0],\n\t\t    _p2 = arguments[1],\n\t\t    q1 = arguments[2],\n\t\t    q2 = arguments[3];\n\t\tvar minq = Math.min(q1.x, q2.x);\n\t\tvar maxq = Math.max(q1.x, q2.x);\n\t\tvar minp = Math.min(_p.x, _p2.x);\n\t\tvar maxp = Math.max(_p.x, _p2.x);\n\t\tif (minp > maxq) return false;\n\t\tif (maxp < minq) return false;\n\t\tminq = Math.min(q1.y, q2.y);\n\t\tmaxq = Math.max(q1.y, q2.y);\n\t\tminp = Math.min(_p.y, _p2.y);\n\t\tmaxp = Math.max(_p.y, _p2.y);\n\t\tif (minp > maxq) return false;\n\t\tif (maxp < minq) return false;\n\t\treturn true;\n\t}\n};\nEnvelope.serialVersionUID = 5873921885273102420;\n\nfunction Exception() {}\n\nfunction NotRepresentableException() {\n\tException.call(this, \"Projective point not representable on the Cartesian plane.\");\n}\ninherits(NotRepresentableException, Exception);\nextend(NotRepresentableException.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn NotRepresentableException;\n\t}\n});\n\nfunction Location() {}\nextend(Location.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Location;\n\t}\n});\nLocation.toLocationSymbol = function (locationValue) {\n\tswitch (locationValue) {\n\t\tcase Location.EXTERIOR:\n\t\t\treturn 'e';\n\t\tcase Location.BOUNDARY:\n\t\t\treturn 'b';\n\t\tcase Location.INTERIOR:\n\t\t\treturn 'i';\n\t\tcase Location.NONE:\n\t\t\treturn '-';\n\t}\n\tthrow new IllegalArgumentException(\"Unknown location value: \" + locationValue);\n};\nLocation.INTERIOR = 0;\nLocation.BOUNDARY = 1;\nLocation.EXTERIOR = 2;\nLocation.NONE = -1;\n\nvar hasInterface = function (o, i) {\n  return o.interfaces_ && o.interfaces_().indexOf(i) > -1;\n};\n\nfunction MathUtil() {}\nextend(MathUtil.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MathUtil;\n\t}\n});\nMathUtil.log10 = function (x) {\n\tvar ln = Math.log(x);\n\tif (Double.isInfinite(ln)) return ln;\n\tif (Double.isNaN(ln)) return ln;\n\treturn ln / MathUtil.LOG_10;\n};\nMathUtil.min = function (v1, v2, v3, v4) {\n\tvar min = v1;\n\tif (v2 < min) min = v2;\n\tif (v3 < min) min = v3;\n\tif (v4 < min) min = v4;\n\treturn min;\n};\nMathUtil.clamp = function () {\n\tif (typeof arguments[2] === \"number\" && typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n\t\tvar x = arguments[0],\n\t\t    min = arguments[1],\n\t\t    max = arguments[2];\n\t\tif (x < min) return min;\n\t\tif (x > max) return max;\n\t\treturn x;\n\t} else if (Number.isInteger(arguments[2]) && Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n\t\tvar _x = arguments[0],\n\t\t    _min = arguments[1],\n\t\t    _max = arguments[2];\n\t\tif (_x < _min) return _min;\n\t\tif (_x > _max) return _max;\n\t\treturn _x;\n\t}\n};\nMathUtil.wrap = function (index, max) {\n\tif (index < 0) {\n\t\treturn max - -index % max;\n\t}\n\treturn index % max;\n};\nMathUtil.max = function () {\n\tif (arguments.length === 3) {\n\t\tvar v1 = arguments[0],\n\t\t    v2 = arguments[1],\n\t\t    v3 = arguments[2];\n\t\tvar max = v1;\n\t\tif (v2 > max) max = v2;\n\t\tif (v3 > max) max = v3;\n\t\treturn max;\n\t} else if (arguments.length === 4) {\n\t\tvar _v = arguments[0],\n\t\t    _v2 = arguments[1],\n\t\t    _v3 = arguments[2],\n\t\t    v4 = arguments[3];\n\t\tvar max = _v;\n\t\tif (_v2 > max) max = _v2;\n\t\tif (_v3 > max) max = _v3;\n\t\tif (v4 > max) max = v4;\n\t\treturn max;\n\t}\n};\nMathUtil.average = function (x1, x2) {\n\treturn (x1 + x2) / 2.0;\n};\nMathUtil.LOG_10 = Math.log(10);\n\nfunction StringBuffer(str) {\n  this.str = str;\n}\n\nStringBuffer.prototype.append = function (e) {\n  this.str += e;\n};\n\nStringBuffer.prototype.setCharAt = function (i, c) {\n  this.str = this.str.substr(0, i) + c + this.str.substr(i + 1);\n};\n\nStringBuffer.prototype.toString = function (e) {\n  return this.str;\n};\n\nfunction Integer(value) {\n  this.value = value;\n}\n\nInteger.prototype.intValue = function () {\n  return this.value;\n};\nInteger.prototype.compareTo = function (o) {\n  if (this.value < o) return -1;\n  if (this.value > o) return 1;\n  return 0;\n};\n\nInteger.isNaN = function (n) {\n  return Number.isNaN(n);\n};\n\nfunction Character() {}\nCharacter.isWhitespace = function (c) {\n  return c <= 32 && c >= 0 || c == 127;\n};\nCharacter.toUpperCase = function (c) {\n  return c.toUpperCase();\n};\n\nfunction DD() {\n\tthis.hi = 0.0;\n\tthis.lo = 0.0;\n\tif (arguments.length === 0) {\n\t\tthis.init(0.0);\n\t} else if (arguments.length === 1) {\n\t\tif (typeof arguments[0] === \"number\") {\n\t\t\tvar x = arguments[0];\n\t\t\tthis.init(x);\n\t\t} else if (arguments[0] instanceof DD) {\n\t\t\tvar dd = arguments[0];\n\t\t\tthis.init(dd);\n\t\t} else if (typeof arguments[0] === \"string\") {\n\t\t\tvar str = arguments[0];\n\t\t\tDD.call(this, DD.parse(str));\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tvar hi = arguments[0],\n\t\t    lo = arguments[1];\n\t\tthis.init(hi, lo);\n\t}\n}\nextend(DD.prototype, {\n\tle: function le(y) {\n\t\treturn this.hi < y.hi || this.hi === y.hi && this.lo <= y.lo;\n\t},\n\textractSignificantDigits: function extractSignificantDigits(insertDecimalPoint, magnitude) {\n\t\tvar y = this.abs();\n\t\tvar mag = DD.magnitude(y.hi);\n\t\tvar scale = DD.TEN.pow(mag);\n\t\ty = y.divide(scale);\n\t\tif (y.gt(DD.TEN)) {\n\t\t\ty = y.divide(DD.TEN);\n\t\t\tmag += 1;\n\t\t} else if (y.lt(DD.ONE)) {\n\t\t\ty = y.multiply(DD.TEN);\n\t\t\tmag -= 1;\n\t\t}\n\t\tvar decimalPointPos = mag + 1;\n\t\tvar buf = new StringBuffer();\n\t\tvar numDigits = DD.MAX_PRINT_DIGITS - 1;\n\t\tfor (var i = 0; i <= numDigits; i++) {\n\t\t\tif (insertDecimalPoint && i === decimalPointPos) {\n\t\t\t\tbuf.append('.');\n\t\t\t}\n\t\t\tvar digit = Math.trunc(y.hi);\n\t\t\tif (digit < 0 || digit > 9) {}\n\t\t\tif (digit < 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar rebiasBy10 = false;\n\t\t\tvar digitChar = 0;\n\t\t\tif (digit > 9) {\n\t\t\t\trebiasBy10 = true;\n\t\t\t\tdigitChar = '9';\n\t\t\t} else {\n\t\t\t\tdigitChar = '0' + digit;\n\t\t\t}\n\t\t\tbuf.append(digitChar);\n\t\t\ty = y.subtract(DD.valueOf(digit)).multiply(DD.TEN);\n\t\t\tif (rebiasBy10) y.selfAdd(DD.TEN);\n\t\t\tvar continueExtractingDigits = true;\n\t\t\tvar remMag = DD.magnitude(y.hi);\n\t\t\tif (remMag < 0 && Math.abs(remMag) >= numDigits - i) continueExtractingDigits = false;\n\t\t\tif (!continueExtractingDigits) break;\n\t\t}\n\t\tmagnitude[0] = mag;\n\t\treturn buf.toString();\n\t},\n\tsqr: function sqr() {\n\t\treturn this.multiply(this);\n\t},\n\tdoubleValue: function doubleValue() {\n\t\treturn this.hi + this.lo;\n\t},\n\tsubtract: function subtract() {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tvar y = arguments[0];\n\t\t\treturn this.add(y.negate());\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tvar _y = arguments[0];\n\t\t\treturn this.add(-_y);\n\t\t}\n\t},\n\tequals: function equals() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar y = arguments[0];\n\t\t\treturn this.hi === y.hi && this.lo === y.lo;\n\t\t}\n\t},\n\tisZero: function isZero() {\n\t\treturn this.hi === 0.0 && this.lo === 0.0;\n\t},\n\tselfSubtract: function selfSubtract() {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tvar y = arguments[0];\n\t\t\tif (this.isNaN()) return this;\n\t\t\treturn this.selfAdd(-y.hi, -y.lo);\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tvar _y2 = arguments[0];\n\t\t\tif (this.isNaN()) return this;\n\t\t\treturn this.selfAdd(-_y2, 0.0);\n\t\t}\n\t},\n\tgetSpecialNumberString: function getSpecialNumberString() {\n\t\tif (this.isZero()) return \"0.0\";\n\t\tif (this.isNaN()) return \"NaN \";\n\t\treturn null;\n\t},\n\tmin: function min(x) {\n\t\tif (this.le(x)) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn x;\n\t\t}\n\t},\n\tselfDivide: function selfDivide() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof DD) {\n\t\t\t\tvar y = arguments[0];\n\t\t\t\treturn this.selfDivide(y.hi, y.lo);\n\t\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\t\tvar _y3 = arguments[0];\n\t\t\t\treturn this.selfDivide(_y3, 0.0);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar yhi = arguments[0],\n\t\t\t    ylo = arguments[1];\n\t\t\tvar hc = null,\n\t\t\t    tc = null,\n\t\t\t    hy = null,\n\t\t\t    ty = null,\n\t\t\t    C = null,\n\t\t\t    c = null,\n\t\t\t    U = null,\n\t\t\t    u = null;\n\t\t\tC = this.hi / yhi;\n\t\t\tc = DD.SPLIT * C;\n\t\t\thc = c - C;\n\t\t\tu = DD.SPLIT * yhi;\n\t\t\thc = c - hc;\n\t\t\ttc = C - hc;\n\t\t\thy = u - yhi;\n\t\t\tU = C * yhi;\n\t\t\thy = u - hy;\n\t\t\tty = yhi - hy;\n\t\t\tu = hc * hy - U + hc * ty + tc * hy + tc * ty;\n\t\t\tc = (this.hi - U - u + this.lo - C * ylo) / yhi;\n\t\t\tu = C + c;\n\t\t\tthis.hi = u;\n\t\t\tthis.lo = C - u + c;\n\t\t\treturn this;\n\t\t}\n\t},\n\tdump: function dump() {\n\t\treturn \"DD<\" + this.hi + \", \" + this.lo + \">\";\n\t},\n\tdivide: function divide() {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tvar y = arguments[0];\n\t\t\tvar hc = null,\n\t\t\t    tc = null,\n\t\t\t    hy = null,\n\t\t\t    ty = null,\n\t\t\t    C = null,\n\t\t\t    c = null,\n\t\t\t    U = null,\n\t\t\t    u = null;\n\t\t\tC = this.hi / y.hi;\n\t\t\tc = DD.SPLIT * C;\n\t\t\thc = c - C;\n\t\t\tu = DD.SPLIT * y.hi;\n\t\t\thc = c - hc;\n\t\t\ttc = C - hc;\n\t\t\thy = u - y.hi;\n\t\t\tU = C * y.hi;\n\t\t\thy = u - hy;\n\t\t\tty = y.hi - hy;\n\t\t\tu = hc * hy - U + hc * ty + tc * hy + tc * ty;\n\t\t\tc = (this.hi - U - u + this.lo - C * y.lo) / y.hi;\n\t\t\tu = C + c;\n\t\t\tvar zhi = u;\n\t\t\tvar zlo = C - u + c;\n\t\t\treturn new DD(zhi, zlo);\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tvar _y4 = arguments[0];\n\t\t\tif (Double.isNaN(_y4)) return DD.createNaN();\n\t\t\treturn DD.copy(this).selfDivide(_y4, 0.0);\n\t\t}\n\t},\n\tge: function ge(y) {\n\t\treturn this.hi > y.hi || this.hi === y.hi && this.lo >= y.lo;\n\t},\n\tpow: function pow(exp) {\n\t\tif (exp === 0.0) return DD.valueOf(1.0);\n\t\tvar r = new DD(this);\n\t\tvar s = DD.valueOf(1.0);\n\t\tvar n = Math.abs(exp);\n\t\tif (n > 1) {\n\t\t\twhile (n > 0) {\n\t\t\t\tif (n % 2 === 1) {\n\t\t\t\t\ts.selfMultiply(r);\n\t\t\t\t}\n\t\t\t\tn /= 2;\n\t\t\t\tif (n > 0) r = r.sqr();\n\t\t\t}\n\t\t} else {\n\t\t\ts = r;\n\t\t}\n\t\tif (exp < 0) return s.reciprocal();\n\t\treturn s;\n\t},\n\tceil: function ceil() {\n\t\tif (this.isNaN()) return DD.NaN;\n\t\tvar fhi = Math.ceil(this.hi);\n\t\tvar flo = 0.0;\n\t\tif (fhi === this.hi) {\n\t\t\tflo = Math.ceil(this.lo);\n\t\t}\n\t\treturn new DD(fhi, flo);\n\t},\n\tcompareTo: function compareTo(o) {\n\t\tvar other = o;\n\t\tif (this.hi < other.hi) return -1;\n\t\tif (this.hi > other.hi) return 1;\n\t\tif (this.lo < other.lo) return -1;\n\t\tif (this.lo > other.lo) return 1;\n\t\treturn 0;\n\t},\n\trint: function rint() {\n\t\tif (this.isNaN()) return this;\n\t\tvar plus5 = this.add(0.5);\n\t\treturn plus5.floor();\n\t},\n\tsetValue: function setValue() {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tvar value = arguments[0];\n\t\t\tthis.init(value);\n\t\t\treturn this;\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tvar _value = arguments[0];\n\t\t\tthis.init(_value);\n\t\t\treturn this;\n\t\t}\n\t},\n\tmax: function max(x) {\n\t\tif (this.ge(x)) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn x;\n\t\t}\n\t},\n\tsqrt: function sqrt() {\n\t\tif (this.isZero()) return DD.valueOf(0.0);\n\t\tif (this.isNegative()) {\n\t\t\treturn DD.NaN;\n\t\t}\n\t\tvar x = 1.0 / Math.sqrt(this.hi);\n\t\tvar ax = this.hi * x;\n\t\tvar axdd = DD.valueOf(ax);\n\t\tvar diffSq = this.subtract(axdd.sqr());\n\t\tvar d2 = diffSq.hi * (x * 0.5);\n\t\treturn axdd.add(d2);\n\t},\n\tselfAdd: function selfAdd() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof DD) {\n\t\t\t\tvar y = arguments[0];\n\t\t\t\treturn this.selfAdd(y.hi, y.lo);\n\t\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\t\tvar _y5 = arguments[0];\n\t\t\t\tvar H = null,\n\t\t\t\t    h = null,\n\t\t\t\t    S = null,\n\t\t\t\t    s = null,\n\t\t\t\t    e = null,\n\t\t\t\t    f = null;\n\t\t\t\tS = this.hi + _y5;\n\t\t\t\te = S - this.hi;\n\t\t\t\ts = S - e;\n\t\t\t\ts = _y5 - e + (this.hi - s);\n\t\t\t\tf = s + this.lo;\n\t\t\t\tH = S + f;\n\t\t\t\th = f + (S - H);\n\t\t\t\tthis.hi = H + h;\n\t\t\t\tthis.lo = h + (H - this.hi);\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar yhi = arguments[0],\n\t\t\t    ylo = arguments[1];\n\t\t\tvar H = null,\n\t\t\t    h = null,\n\t\t\t    T = null,\n\t\t\t    t = null,\n\t\t\t    S = null,\n\t\t\t    s = null,\n\t\t\t    e = null,\n\t\t\t    f = null;\n\t\t\tS = this.hi + yhi;\n\t\t\tT = this.lo + ylo;\n\t\t\te = S - this.hi;\n\t\t\tf = T - this.lo;\n\t\t\ts = S - e;\n\t\t\tt = T - f;\n\t\t\ts = yhi - e + (this.hi - s);\n\t\t\tt = ylo - f + (this.lo - t);\n\t\t\te = s + T;\n\t\t\tH = S + e;\n\t\t\th = e + (S - H);\n\t\t\te = t + h;\n\t\t\tvar zhi = H + e;\n\t\t\tvar zlo = e + (H - zhi);\n\t\t\tthis.hi = zhi;\n\t\t\tthis.lo = zlo;\n\t\t\treturn this;\n\t\t}\n\t},\n\tselfMultiply: function selfMultiply() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof DD) {\n\t\t\t\tvar y = arguments[0];\n\t\t\t\treturn this.selfMultiply(y.hi, y.lo);\n\t\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\t\tvar _y6 = arguments[0];\n\t\t\t\treturn this.selfMultiply(_y6, 0.0);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar yhi = arguments[0],\n\t\t\t    ylo = arguments[1];\n\t\t\tvar hx = null,\n\t\t\t    tx = null,\n\t\t\t    hy = null,\n\t\t\t    ty = null,\n\t\t\t    C = null,\n\t\t\t    c = null;\n\t\t\tC = DD.SPLIT * this.hi;\n\t\t\thx = C - this.hi;\n\t\t\tc = DD.SPLIT * yhi;\n\t\t\thx = C - hx;\n\t\t\ttx = this.hi - hx;\n\t\t\thy = c - yhi;\n\t\t\tC = this.hi * yhi;\n\t\t\thy = c - hy;\n\t\t\tty = yhi - hy;\n\t\t\tc = hx * hy - C + hx * ty + tx * hy + tx * ty + (this.hi * ylo + this.lo * yhi);\n\t\t\tvar zhi = C + c;\n\t\t\thx = C - zhi;\n\t\t\tvar zlo = c + hx;\n\t\t\tthis.hi = zhi;\n\t\t\tthis.lo = zlo;\n\t\t\treturn this;\n\t\t}\n\t},\n\tselfSqr: function selfSqr() {\n\t\treturn this.selfMultiply(this);\n\t},\n\tfloor: function floor() {\n\t\tif (this.isNaN()) return DD.NaN;\n\t\tvar fhi = Math.floor(this.hi);\n\t\tvar flo = 0.0;\n\t\tif (fhi === this.hi) {\n\t\t\tflo = Math.floor(this.lo);\n\t\t}\n\t\treturn new DD(fhi, flo);\n\t},\n\tnegate: function negate() {\n\t\tif (this.isNaN()) return this;\n\t\treturn new DD(-this.hi, -this.lo);\n\t},\n\tclone: function clone() {\n\t\ttry {\n\t\t\treturn null;\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof CloneNotSupportedException) {\n\t\t\t\treturn null;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t},\n\tmultiply: function multiply() {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tvar y = arguments[0];\n\t\t\tif (y.isNaN()) return DD.createNaN();\n\t\t\treturn DD.copy(this).selfMultiply(y);\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tvar _y7 = arguments[0];\n\t\t\tif (Double.isNaN(_y7)) return DD.createNaN();\n\t\t\treturn DD.copy(this).selfMultiply(_y7, 0.0);\n\t\t}\n\t},\n\tisNaN: function isNaN() {\n\t\treturn Double.isNaN(this.hi);\n\t},\n\tintValue: function intValue() {\n\t\treturn Math.trunc(this.hi);\n\t},\n\ttoString: function toString() {\n\t\tvar mag = DD.magnitude(this.hi);\n\t\tif (mag >= -3 && mag <= 20) return this.toStandardNotation();\n\t\treturn this.toSciNotation();\n\t},\n\ttoStandardNotation: function toStandardNotation() {\n\t\tvar specialStr = this.getSpecialNumberString();\n\t\tif (specialStr !== null) return specialStr;\n\t\tvar magnitude = new Array(1).fill(null);\n\t\tvar sigDigits = this.extractSignificantDigits(true, magnitude);\n\t\tvar decimalPointPos = magnitude[0] + 1;\n\t\tvar num = sigDigits;\n\t\tif (sigDigits.charAt(0) === '.') {\n\t\t\tnum = \"0\" + sigDigits;\n\t\t} else if (decimalPointPos < 0) {\n\t\t\tnum = \"0.\" + DD.stringOfChar('0', -decimalPointPos) + sigDigits;\n\t\t} else if (sigDigits.indexOf('.') === -1) {\n\t\t\tvar numZeroes = decimalPointPos - sigDigits.length;\n\t\t\tvar zeroes = DD.stringOfChar('0', numZeroes);\n\t\t\tnum = sigDigits + zeroes + \".0\";\n\t\t}\n\t\tif (this.isNegative()) return \"-\" + num;\n\t\treturn num;\n\t},\n\treciprocal: function reciprocal() {\n\t\tvar hc = null,\n\t\t    tc = null,\n\t\t    hy = null,\n\t\t    ty = null,\n\t\t    C = null,\n\t\t    c = null,\n\t\t    U = null,\n\t\t    u = null;\n\t\tC = 1.0 / this.hi;\n\t\tc = DD.SPLIT * C;\n\t\thc = c - C;\n\t\tu = DD.SPLIT * this.hi;\n\t\thc = c - hc;\n\t\ttc = C - hc;\n\t\thy = u - this.hi;\n\t\tU = C * this.hi;\n\t\thy = u - hy;\n\t\tty = this.hi - hy;\n\t\tu = hc * hy - U + hc * ty + tc * hy + tc * ty;\n\t\tc = (1.0 - U - u - C * this.lo) / this.hi;\n\t\tvar zhi = C + c;\n\t\tvar zlo = C - zhi + c;\n\t\treturn new DD(zhi, zlo);\n\t},\n\ttoSciNotation: function toSciNotation() {\n\t\tif (this.isZero()) return DD.SCI_NOT_ZERO;\n\t\tvar specialStr = this.getSpecialNumberString();\n\t\tif (specialStr !== null) return specialStr;\n\t\tvar magnitude = new Array(1).fill(null);\n\t\tvar digits = this.extractSignificantDigits(false, magnitude);\n\t\tvar expStr = DD.SCI_NOT_EXPONENT_CHAR + magnitude[0];\n\t\tif (digits.charAt(0) === '0') {\n\t\t\tthrow new IllegalStateException(\"Found leading zero: \" + digits);\n\t\t}\n\t\tvar trailingDigits = \"\";\n\t\tif (digits.length > 1) trailingDigits = digits.substring(1);\n\t\tvar digitsWithDecimal = digits.charAt(0) + \".\" + trailingDigits;\n\t\tif (this.isNegative()) return \"-\" + digitsWithDecimal + expStr;\n\t\treturn digitsWithDecimal + expStr;\n\t},\n\tabs: function abs() {\n\t\tif (this.isNaN()) return DD.NaN;\n\t\tif (this.isNegative()) return this.negate();\n\t\treturn new DD(this);\n\t},\n\tisPositive: function isPositive() {\n\t\treturn this.hi > 0.0 || this.hi === 0.0 && this.lo > 0.0;\n\t},\n\tlt: function lt(y) {\n\t\treturn this.hi < y.hi || this.hi === y.hi && this.lo < y.lo;\n\t},\n\tadd: function add() {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tvar y = arguments[0];\n\t\t\treturn DD.copy(this).selfAdd(y);\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tvar _y8 = arguments[0];\n\t\t\treturn DD.copy(this).selfAdd(_y8);\n\t\t}\n\t},\n\tinit: function init() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (typeof arguments[0] === \"number\") {\n\t\t\t\tvar x = arguments[0];\n\t\t\t\tthis.hi = x;\n\t\t\t\tthis.lo = 0.0;\n\t\t\t} else if (arguments[0] instanceof DD) {\n\t\t\t\tvar dd = arguments[0];\n\t\t\t\tthis.hi = dd.hi;\n\t\t\t\tthis.lo = dd.lo;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar hi = arguments[0],\n\t\t\t    lo = arguments[1];\n\t\t\tthis.hi = hi;\n\t\t\tthis.lo = lo;\n\t\t}\n\t},\n\tgt: function gt(y) {\n\t\treturn this.hi > y.hi || this.hi === y.hi && this.lo > y.lo;\n\t},\n\tisNegative: function isNegative() {\n\t\treturn this.hi < 0.0 || this.hi === 0.0 && this.lo < 0.0;\n\t},\n\ttrunc: function trunc() {\n\t\tif (this.isNaN()) return DD.NaN;\n\t\tif (this.isPositive()) return this.floor();else return this.ceil();\n\t},\n\tsignum: function signum() {\n\t\tif (this.hi > 0) return 1;\n\t\tif (this.hi < 0) return -1;\n\t\tif (this.lo > 0) return 1;\n\t\tif (this.lo < 0) return -1;\n\t\treturn 0;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Serializable, Comparable, Clonable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DD;\n\t}\n});\nDD.sqr = function (x) {\n\treturn DD.valueOf(x).selfMultiply(x);\n};\nDD.valueOf = function () {\n\tif (typeof arguments[0] === \"string\") {\n\t\tvar str = arguments[0];\n\t\treturn DD.parse(str);\n\t} else if (typeof arguments[0] === \"number\") {\n\t\tvar x = arguments[0];\n\t\treturn new DD(x);\n\t}\n};\nDD.sqrt = function (x) {\n\treturn DD.valueOf(x).sqrt();\n};\nDD.parse = function (str) {\n\tvar i = 0;\n\tvar strlen = str.length;\n\twhile (Character.isWhitespace(str.charAt(i))) {\n\t\ti++;\n\t}var isNegative = false;\n\tif (i < strlen) {\n\t\tvar signCh = str.charAt(i);\n\t\tif (signCh === '-' || signCh === '+') {\n\t\t\ti++;\n\t\t\tif (signCh === '-') isNegative = true;\n\t\t}\n\t}\n\tvar val = new DD();\n\tvar numDigits = 0;\n\tvar numBeforeDec = 0;\n\tvar exp = 0;\n\twhile (true) {\n\t\tif (i >= strlen) break;\n\t\tvar ch = str.charAt(i);\n\t\ti++;\n\t\tif (Character.isDigit(ch)) {\n\t\t\tvar d = ch - '0';\n\t\t\tval.selfMultiply(DD.TEN);\n\t\t\tval.selfAdd(d);\n\t\t\tnumDigits++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (ch === '.') {\n\t\t\tnumBeforeDec = numDigits;\n\t\t\tcontinue;\n\t\t}\n\t\tif (ch === 'e' || ch === 'E') {\n\t\t\tvar expStr = str.substring(i);\n\t\t\ttry {\n\t\t\t\texp = Integer.parseInt(expStr);\n\t\t\t} catch (ex) {\n\t\t\t\tif (ex instanceof NumberFormatException) {\n\t\t\t\t\tthrow new NumberFormatException(\"Invalid exponent \" + expStr + \" in string \" + str);\n\t\t\t\t} else throw ex;\n\t\t\t} finally {}\n\t\t\tbreak;\n\t\t}\n\t\tthrow new NumberFormatException(\"Unexpected character '\" + ch + \"' at position \" + i + \" in string \" + str);\n\t}\n\tvar val2 = val;\n\tvar numDecPlaces = numDigits - numBeforeDec - exp;\n\tif (numDecPlaces === 0) {\n\t\tval2 = val;\n\t} else if (numDecPlaces > 0) {\n\t\tvar scale = DD.TEN.pow(numDecPlaces);\n\t\tval2 = val.divide(scale);\n\t} else if (numDecPlaces < 0) {\n\t\tvar scale = DD.TEN.pow(-numDecPlaces);\n\t\tval2 = val.multiply(scale);\n\t}\n\tif (isNegative) {\n\t\treturn val2.negate();\n\t}\n\treturn val2;\n};\nDD.createNaN = function () {\n\treturn new DD(Double.NaN, Double.NaN);\n};\nDD.copy = function (dd) {\n\treturn new DD(dd);\n};\nDD.magnitude = function (x) {\n\tvar xAbs = Math.abs(x);\n\tvar xLog10 = Math.log(xAbs) / Math.log(10);\n\tvar xMag = Math.trunc(Math.floor(xLog10));\n\tvar xApprox = Math.pow(10, xMag);\n\tif (xApprox * 10 <= xAbs) xMag += 1;\n\treturn xMag;\n};\nDD.stringOfChar = function (ch, len) {\n\tvar buf = new StringBuffer();\n\tfor (var i = 0; i < len; i++) {\n\t\tbuf.append(ch);\n\t}\n\treturn buf.toString();\n};\nDD.PI = new DD(3.141592653589793116e+00, 1.224646799147353207e-16);\nDD.TWO_PI = new DD(6.283185307179586232e+00, 2.449293598294706414e-16);\nDD.PI_2 = new DD(1.570796326794896558e+00, 6.123233995736766036e-17);\nDD.E = new DD(2.718281828459045091e+00, 1.445646891729250158e-16);\nDD.NaN = new DD(Double.NaN, Double.NaN);\nDD.EPS = 1.23259516440783e-32;\nDD.SPLIT = 134217729.0;\nDD.MAX_PRINT_DIGITS = 32;\nDD.TEN = DD.valueOf(10.0);\nDD.ONE = DD.valueOf(1.0);\nDD.SCI_NOT_EXPONENT_CHAR = \"E\";\nDD.SCI_NOT_ZERO = \"0.0E0\";\n\nfunction CGAlgorithmsDD() {}\nextend(CGAlgorithmsDD.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CGAlgorithmsDD;\n\t}\n});\nCGAlgorithmsDD.orientationIndex = function (p1, p2, q) {\n\tvar index = CGAlgorithmsDD.orientationIndexFilter(p1, p2, q);\n\tif (index <= 1) return index;\n\tvar dx1 = DD.valueOf(p2.x).selfAdd(-p1.x);\n\tvar dy1 = DD.valueOf(p2.y).selfAdd(-p1.y);\n\tvar dx2 = DD.valueOf(q.x).selfAdd(-p2.x);\n\tvar dy2 = DD.valueOf(q.y).selfAdd(-p2.y);\n\treturn dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum();\n};\nCGAlgorithmsDD.signOfDet2x2 = function (x1, y1, x2, y2) {\n\tvar det = x1.multiply(y2).selfSubtract(y1.multiply(x2));\n\treturn det.signum();\n};\nCGAlgorithmsDD.intersection = function (p1, p2, q1, q2) {\n\tvar denom1 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p2.x).selfSubtract(p1.x));\n\tvar denom2 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p2.y).selfSubtract(p1.y));\n\tvar denom = denom1.subtract(denom2);\n\tvar numx1 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n\tvar numx2 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n\tvar numx = numx1.subtract(numx2);\n\tvar fracP = numx.selfDivide(denom).doubleValue();\n\tvar x = DD.valueOf(p1.x).selfAdd(DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(fracP)).doubleValue();\n\tvar numy1 = DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n\tvar numy2 = DD.valueOf(p2.y).selfSubtract(p1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n\tvar numy = numy1.subtract(numy2);\n\tvar fracQ = numy.selfDivide(denom).doubleValue();\n\tvar y = DD.valueOf(q1.y).selfAdd(DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(fracQ)).doubleValue();\n\treturn new Coordinate(x, y);\n};\nCGAlgorithmsDD.orientationIndexFilter = function (pa, pb, pc) {\n\tvar detsum = null;\n\tvar detleft = (pa.x - pc.x) * (pb.y - pc.y);\n\tvar detright = (pa.y - pc.y) * (pb.x - pc.x);\n\tvar det = detleft - detright;\n\tif (detleft > 0.0) {\n\t\tif (detright <= 0.0) {\n\t\t\treturn CGAlgorithmsDD.signum(det);\n\t\t} else {\n\t\t\tdetsum = detleft + detright;\n\t\t}\n\t} else if (detleft < 0.0) {\n\t\tif (detright >= 0.0) {\n\t\t\treturn CGAlgorithmsDD.signum(det);\n\t\t} else {\n\t\t\tdetsum = -detleft - detright;\n\t\t}\n\t} else {\n\t\treturn CGAlgorithmsDD.signum(det);\n\t}\n\tvar errbound = CGAlgorithmsDD.DP_SAFE_EPSILON * detsum;\n\tif (det >= errbound || -det >= errbound) {\n\t\treturn CGAlgorithmsDD.signum(det);\n\t}\n\treturn 2;\n};\nCGAlgorithmsDD.signum = function (x) {\n\tif (x > 0) return 1;\n\tif (x < 0) return -1;\n\treturn 0;\n};\nCGAlgorithmsDD.DP_SAFE_EPSILON = 1e-15;\n\nfunction CoordinateSequence() {}\nextend(CoordinateSequence.prototype, {\n\tsetOrdinate: function setOrdinate(index, ordinateIndex, value) {},\n\tsize: function size() {},\n\tgetOrdinate: function getOrdinate(index, ordinateIndex) {},\n\tgetCoordinate: function getCoordinate() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar i = arguments[0];\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar index = arguments[0],\n\t\t\t    coord = arguments[1];\n\t\t}\n\t},\n\tgetCoordinateCopy: function getCoordinateCopy(i) {},\n\tgetDimension: function getDimension() {},\n\tgetX: function getX(index) {},\n\tclone: function clone() {},\n\texpandEnvelope: function expandEnvelope(env) {},\n\tcopy: function copy() {},\n\tgetY: function getY(index) {},\n\ttoCoordinateArray: function toCoordinateArray() {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Clonable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CoordinateSequence;\n\t}\n});\nCoordinateSequence.X = 0;\nCoordinateSequence.Y = 1;\nCoordinateSequence.Z = 2;\nCoordinateSequence.M = 3;\n\nfunction System() {}\n\nSystem.arraycopy = function (src, srcPos, dest, destPos, len) {\n  var c = 0;\n  for (var i = srcPos; i < srcPos + len; i++) {\n    dest[destPos + c] = src[i];\n    c++;\n  }\n};\n\nSystem.getProperty = function (name) {\n  return {\n    'line.separator': '\\n'\n  }[name];\n};\n\nfunction HCoordinate() {\n\tthis.x = null;\n\tthis.y = null;\n\tthis.w = null;\n\tif (arguments.length === 0) {\n\t\tthis.x = 0.0;\n\t\tthis.y = 0.0;\n\t\tthis.w = 1.0;\n\t} else if (arguments.length === 1) {\n\t\tvar p = arguments[0];\n\t\tthis.x = p.x;\n\t\tthis.y = p.y;\n\t\tthis.w = 1.0;\n\t} else if (arguments.length === 2) {\n\t\tif (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n\t\t\tvar _x = arguments[0],\n\t\t\t    _y = arguments[1];\n\t\t\tthis.x = _x;\n\t\t\tthis.y = _y;\n\t\t\tthis.w = 1.0;\n\t\t} else if (arguments[0] instanceof HCoordinate && arguments[1] instanceof HCoordinate) {\n\t\t\tvar p1 = arguments[0],\n\t\t\t    p2 = arguments[1];\n\t\t\tthis.x = p1.y * p2.w - p2.y * p1.w;\n\t\t\tthis.y = p2.x * p1.w - p1.x * p2.w;\n\t\t\tthis.w = p1.x * p2.y - p2.x * p1.y;\n\t\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n\t\t\tvar _p = arguments[0],\n\t\t\t    _p2 = arguments[1];\n\t\t\tthis.x = _p.y - _p2.y;\n\t\t\tthis.y = _p2.x - _p.x;\n\t\t\tthis.w = _p.x * _p2.y - _p2.x * _p.y;\n\t\t}\n\t} else if (arguments.length === 3) {\n\t\tvar _x2 = arguments[0],\n\t\t    _y2 = arguments[1],\n\t\t    _w = arguments[2];\n\t\tthis.x = _x2;\n\t\tthis.y = _y2;\n\t\tthis.w = _w;\n\t} else if (arguments.length === 4) {\n\t\tvar _p3 = arguments[0],\n\t\t    _p4 = arguments[1],\n\t\t    q1 = arguments[2],\n\t\t    q2 = arguments[3];\n\t\tvar px = _p3.y - _p4.y;\n\t\tvar py = _p4.x - _p3.x;\n\t\tvar pw = _p3.x * _p4.y - _p4.x * _p3.y;\n\t\tvar qx = q1.y - q2.y;\n\t\tvar qy = q2.x - q1.x;\n\t\tvar qw = q1.x * q2.y - q2.x * q1.y;\n\t\tthis.x = py * qw - qy * pw;\n\t\tthis.y = qx * pw - px * qw;\n\t\tthis.w = px * qy - qx * py;\n\t}\n}\nextend(HCoordinate.prototype, {\n\tgetY: function getY() {\n\t\tvar a = this.y / this.w;\n\t\tif (Double.isNaN(a) || Double.isInfinite(a)) {\n\t\t\tthrow new NotRepresentableException();\n\t\t}\n\t\treturn a;\n\t},\n\tgetX: function getX() {\n\t\tvar a = this.x / this.w;\n\t\tif (Double.isNaN(a) || Double.isInfinite(a)) {\n\t\t\tthrow new NotRepresentableException();\n\t\t}\n\t\treturn a;\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\tvar p = new Coordinate();\n\t\tp.x = this.getX();\n\t\tp.y = this.getY();\n\t\treturn p;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn HCoordinate;\n\t}\n});\nHCoordinate.intersection = function (p1, p2, q1, q2) {\n\tvar px = p1.y - p2.y;\n\tvar py = p2.x - p1.x;\n\tvar pw = p1.x * p2.y - p2.x * p1.y;\n\tvar qx = q1.y - q2.y;\n\tvar qy = q2.x - q1.x;\n\tvar qw = q1.x * q2.y - q2.x * q1.y;\n\tvar x = py * qw - qy * pw;\n\tvar y = qx * pw - px * qw;\n\tvar w = px * qy - qx * py;\n\tvar xInt = x / w;\n\tvar yInt = y / w;\n\tif (Double.isNaN(xInt) || Double.isInfinite(xInt) || Double.isNaN(yInt) || Double.isInfinite(yInt)) {\n\t\tthrow new NotRepresentableException();\n\t}\n\treturn new Coordinate(xInt, yInt);\n};\n\nfunction CoordinateSequenceFactory() {}\nextend(CoordinateSequenceFactory.prototype, {\n\tcreate: function create() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tvar coordinates = arguments[0];\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tvar coordSeq = arguments[0];\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar size = arguments[0],\n\t\t\t    dimension = arguments[1];\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CoordinateSequenceFactory;\n\t}\n});\n\nfunction GeometryComponentFilter() {}\nextend(GeometryComponentFilter.prototype, {\n\tfilter: function filter(geom) {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryComponentFilter;\n\t}\n});\n\nfunction Geometry() {\n\tthis.envelope = null;\n\tthis.factory = null;\n\tthis.SRID = null;\n\tthis.userData = null;\n\tvar factory = arguments[0];\n\tthis.factory = factory;\n\tthis.SRID = factory.getSRID();\n}\nextend(Geometry.prototype, {\n\tisGeometryCollection: function isGeometryCollection() {\n\t\treturn this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION;\n\t},\n\tgetFactory: function getFactory() {\n\t\treturn this.factory;\n\t},\n\tgetGeometryN: function getGeometryN(n) {\n\t\treturn this;\n\t},\n\tgetArea: function getArea() {\n\t\treturn 0.0;\n\t},\n\tisRectangle: function isRectangle() {\n\t\treturn false;\n\t},\n\tequals: function equals() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Geometry) {\n\t\t\t\tvar _g = arguments[0];\n\t\t\t\tif (_g === null) return false;\n\t\t\t\treturn this.equalsTopo(_g);\n\t\t\t} else if (arguments[0] instanceof Object) {\n\t\t\t\tvar o = arguments[0];\n\t\t\t\tif (!(o instanceof Geometry)) return false;\n\t\t\t\tvar g = o;\n\t\t\t\treturn this.equalsExact(g);\n\t\t\t}\n\t\t}\n\t},\n\tequalsExact: function equalsExact(other) {\n\t\treturn this === other || this.equalsExact(other, 0);\n\t},\n\tgeometryChanged: function geometryChanged() {\n\t\tthis.apply(Geometry.geometryChangedFilter);\n\t},\n\tgeometryChangedAction: function geometryChangedAction() {\n\t\tthis.envelope = null;\n\t},\n\tequalsNorm: function equalsNorm(g) {\n\t\tif (g === null) return false;\n\t\treturn this.norm().equalsExact(g.norm());\n\t},\n\tgetLength: function getLength() {\n\t\treturn 0.0;\n\t},\n\tgetNumGeometries: function getNumGeometries() {\n\t\treturn 1;\n\t},\n\tcompareTo: function compareTo() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar o = arguments[0];\n\t\t\tvar other = o;\n\t\t\tif (this.getSortIndex() !== other.getSortIndex()) {\n\t\t\t\treturn this.getSortIndex() - other.getSortIndex();\n\t\t\t}\n\t\t\tif (this.isEmpty() && other.isEmpty()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (other.isEmpty()) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn this.compareToSameClass(o);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar _o = arguments[0],\n\t\t\t    comp = arguments[1];\n\t\t\tvar other = _o;\n\t\t\tif (this.getSortIndex() !== other.getSortIndex()) {\n\t\t\t\treturn this.getSortIndex() - other.getSortIndex();\n\t\t\t}\n\t\t\tif (this.isEmpty() && other.isEmpty()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (other.isEmpty()) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn this.compareToSameClass(_o, comp);\n\t\t}\n\t},\n\tgetUserData: function getUserData() {\n\t\treturn this.userData;\n\t},\n\tgetSRID: function getSRID() {\n\t\treturn this.SRID;\n\t},\n\tgetEnvelope: function getEnvelope() {\n\t\treturn this.getFactory().toGeometry(this.getEnvelopeInternal());\n\t},\n\tcheckNotGeometryCollection: function checkNotGeometryCollection(g) {\n\t\tif (g.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION) {\n\t\t\tthrow new IllegalArgumentException(\"This method does not support GeometryCollection arguments\");\n\t\t}\n\t},\n\tequal: function equal(a, b, tolerance) {\n\t\tif (tolerance === 0) {\n\t\t\treturn a.equals(b);\n\t\t}\n\t\treturn a.distance(b) <= tolerance;\n\t},\n\tnorm: function norm() {\n\t\tvar copy = this.copy();\n\t\tcopy.normalize();\n\t\treturn copy;\n\t},\n\tgetPrecisionModel: function getPrecisionModel() {\n\t\treturn this.factory.getPrecisionModel();\n\t},\n\tgetEnvelopeInternal: function getEnvelopeInternal() {\n\t\tif (this.envelope === null) {\n\t\t\tthis.envelope = this.computeEnvelopeInternal();\n\t\t}\n\t\treturn new Envelope(this.envelope);\n\t},\n\tsetSRID: function setSRID(SRID) {\n\t\tthis.SRID = SRID;\n\t},\n\tsetUserData: function setUserData(userData) {\n\t\tthis.userData = userData;\n\t},\n\tcompare: function compare(a, b) {\n\t\tvar i = a.iterator();\n\t\tvar j = b.iterator();\n\t\twhile (i.hasNext() && j.hasNext()) {\n\t\t\tvar aElement = i.next();\n\t\t\tvar bElement = j.next();\n\t\t\tvar comparison = aElement.compareTo(bElement);\n\t\t\tif (comparison !== 0) {\n\t\t\t\treturn comparison;\n\t\t\t}\n\t\t}\n\t\tif (i.hasNext()) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (j.hasNext()) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn 0;\n\t},\n\thashCode: function hashCode() {\n\t\treturn this.getEnvelopeInternal().hashCode();\n\t},\n\tisGeometryCollectionOrDerived: function isGeometryCollectionOrDerived() {\n\t\tif (this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOINT || this.getSortIndex() === Geometry.SORTINDEX_MULTILINESTRING || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOLYGON) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Clonable, Comparable, Serializable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Geometry;\n\t}\n});\nGeometry.hasNonEmptyElements = function (geometries) {\n\tfor (var i = 0; i < geometries.length; i++) {\n\t\tif (!geometries[i].isEmpty()) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\nGeometry.hasNullElements = function (array) {\n\tfor (var i = 0; i < array.length; i++) {\n\t\tif (array[i] === null) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\nGeometry.serialVersionUID = 8763622679187376702;\nGeometry.SORTINDEX_POINT = 0;\nGeometry.SORTINDEX_MULTIPOINT = 1;\nGeometry.SORTINDEX_LINESTRING = 2;\nGeometry.SORTINDEX_LINEARRING = 3;\nGeometry.SORTINDEX_MULTILINESTRING = 4;\nGeometry.SORTINDEX_POLYGON = 5;\nGeometry.SORTINDEX_MULTIPOLYGON = 6;\nGeometry.SORTINDEX_GEOMETRYCOLLECTION = 7;\nGeometry.geometryChangedFilter = {\n\tinterfaces_: function interfaces_() {\n\t\treturn [GeometryComponentFilter];\n\t},\n\tfilter: function filter(geom) {\n\t\tgeom.geometryChangedAction();\n\t}\n};\n\nfunction CoordinateFilter() {}\nextend(CoordinateFilter.prototype, {\n\tfilter: function filter(coord) {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CoordinateFilter;\n\t}\n});\n\nfunction BoundaryNodeRule() {}\nextend(BoundaryNodeRule.prototype, {\n\tisInBoundary: function isInBoundary(boundaryCount) {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn BoundaryNodeRule;\n\t}\n});\nfunction Mod2BoundaryNodeRule() {}\nextend(Mod2BoundaryNodeRule.prototype, {\n\tisInBoundary: function isInBoundary(boundaryCount) {\n\t\treturn boundaryCount % 2 === 1;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [BoundaryNodeRule];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Mod2BoundaryNodeRule;\n\t}\n});\nfunction EndPointBoundaryNodeRule() {}\nextend(EndPointBoundaryNodeRule.prototype, {\n\tisInBoundary: function isInBoundary(boundaryCount) {\n\t\treturn boundaryCount > 0;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [BoundaryNodeRule];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EndPointBoundaryNodeRule;\n\t}\n});\nfunction MultiValentEndPointBoundaryNodeRule() {}\nextend(MultiValentEndPointBoundaryNodeRule.prototype, {\n\tisInBoundary: function isInBoundary(boundaryCount) {\n\t\treturn boundaryCount > 1;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [BoundaryNodeRule];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MultiValentEndPointBoundaryNodeRule;\n\t}\n});\nfunction MonoValentEndPointBoundaryNodeRule() {}\nextend(MonoValentEndPointBoundaryNodeRule.prototype, {\n\tisInBoundary: function isInBoundary(boundaryCount) {\n\t\treturn boundaryCount === 1;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [BoundaryNodeRule];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MonoValentEndPointBoundaryNodeRule;\n\t}\n});\nBoundaryNodeRule.Mod2BoundaryNodeRule = Mod2BoundaryNodeRule;\nBoundaryNodeRule.EndPointBoundaryNodeRule = EndPointBoundaryNodeRule;\nBoundaryNodeRule.MultiValentEndPointBoundaryNodeRule = MultiValentEndPointBoundaryNodeRule;\nBoundaryNodeRule.MonoValentEndPointBoundaryNodeRule = MonoValentEndPointBoundaryNodeRule;\nBoundaryNodeRule.MOD2_BOUNDARY_RULE = new Mod2BoundaryNodeRule();\nBoundaryNodeRule.ENDPOINT_BOUNDARY_RULE = new EndPointBoundaryNodeRule();\nBoundaryNodeRule.MULTIVALENT_ENDPOINT_BOUNDARY_RULE = new MultiValentEndPointBoundaryNodeRule();\nBoundaryNodeRule.MONOVALENT_ENDPOINT_BOUNDARY_RULE = new MonoValentEndPointBoundaryNodeRule();\nBoundaryNodeRule.OGC_SFS_BOUNDARY_RULE = BoundaryNodeRule.MOD2_BOUNDARY_RULE;\n\nfunction CoordinateArrays() {}\nextend(CoordinateArrays.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CoordinateArrays;\n\t}\n});\nCoordinateArrays.isRing = function (pts) {\n\tif (pts.length < 4) return false;\n\tif (!pts[0].equals2D(pts[pts.length - 1])) return false;\n\treturn true;\n};\nCoordinateArrays.ptNotInList = function (testPts, pts) {\n\tfor (var i = 0; i < testPts.length; i++) {\n\t\tvar testPt = testPts[i];\n\t\tif (CoordinateArrays.indexOf(testPt, pts) < 0) return testPt;\n\t}\n\treturn null;\n};\nCoordinateArrays.scroll = function (coordinates, firstCoordinate) {\n\tvar i = CoordinateArrays.indexOf(firstCoordinate, coordinates);\n\tif (i < 0) return null;\n\tvar newCoordinates = new Array(coordinates.length).fill(null);\n\tSystem.arraycopy(coordinates, i, newCoordinates, 0, coordinates.length - i);\n\tSystem.arraycopy(coordinates, 0, newCoordinates, coordinates.length - i, i);\n\tSystem.arraycopy(newCoordinates, 0, coordinates, 0, coordinates.length);\n};\nCoordinateArrays.equals = function () {\n\tif (arguments.length === 2) {\n\t\tvar coord1 = arguments[0],\n\t\t    coord2 = arguments[1];\n\t\tif (coord1 === coord2) return true;\n\t\tif (coord1 === null || coord2 === null) return false;\n\t\tif (coord1.length !== coord2.length) return false;\n\t\tfor (var i = 0; i < coord1.length; i++) {\n\t\t\tif (!coord1[i].equals(coord2[i])) return false;\n\t\t}\n\t\treturn true;\n\t} else if (arguments.length === 3) {\n\t\tvar _coord = arguments[0],\n\t\t    _coord2 = arguments[1],\n\t\t    coordinateComparator = arguments[2];\n\t\tif (_coord === _coord2) return true;\n\t\tif (_coord === null || _coord2 === null) return false;\n\t\tif (_coord.length !== _coord2.length) return false;\n\t\tfor (var i = 0; i < _coord.length; i++) {\n\t\t\tif (coordinateComparator.compare(_coord[i], _coord2[i]) !== 0) return false;\n\t\t}\n\t\treturn true;\n\t}\n};\nCoordinateArrays.intersection = function (coordinates, env) {\n\tvar coordList = new CoordinateList();\n\tfor (var i = 0; i < coordinates.length; i++) {\n\t\tif (env.intersects(coordinates[i])) coordList.add(coordinates[i], true);\n\t}\n\treturn coordList.toCoordinateArray();\n};\nCoordinateArrays.hasRepeatedPoints = function (coord) {\n\tfor (var i = 1; i < coord.length; i++) {\n\t\tif (coord[i - 1].equals(coord[i])) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\nCoordinateArrays.removeRepeatedPoints = function (coord) {\n\tif (!CoordinateArrays.hasRepeatedPoints(coord)) return coord;\n\tvar coordList = new CoordinateList(coord, false);\n\treturn coordList.toCoordinateArray();\n};\nCoordinateArrays.reverse = function (coord) {\n\tvar last = coord.length - 1;\n\tvar mid = Math.trunc(last / 2);\n\tfor (var i = 0; i <= mid; i++) {\n\t\tvar tmp = coord[i];\n\t\tcoord[i] = coord[last - i];\n\t\tcoord[last - i] = tmp;\n\t}\n};\nCoordinateArrays.removeNull = function (coord) {\n\tvar nonNull = 0;\n\tfor (var i = 0; i < coord.length; i++) {\n\t\tif (coord[i] !== null) nonNull++;\n\t}\n\tvar newCoord = new Array(nonNull).fill(null);\n\tif (nonNull === 0) return newCoord;\n\tvar j = 0;\n\tfor (var i = 0; i < coord.length; i++) {\n\t\tif (coord[i] !== null) newCoord[j++] = coord[i];\n\t}\n\treturn newCoord;\n};\nCoordinateArrays.copyDeep = function () {\n\tif (arguments.length === 1) {\n\t\tvar coordinates = arguments[0];\n\t\tvar copy = new Array(coordinates.length).fill(null);\n\t\tfor (var i = 0; i < coordinates.length; i++) {\n\t\t\tcopy[i] = new Coordinate(coordinates[i]);\n\t\t}\n\t\treturn copy;\n\t} else if (arguments.length === 5) {\n\t\tvar src = arguments[0],\n\t\t    srcStart = arguments[1],\n\t\t    dest = arguments[2],\n\t\t    destStart = arguments[3],\n\t\t    length = arguments[4];\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tdest[destStart + i] = new Coordinate(src[srcStart + i]);\n\t\t}\n\t}\n};\nCoordinateArrays.isEqualReversed = function (pts1, pts2) {\n\tfor (var i = 0; i < pts1.length; i++) {\n\t\tvar p1 = pts1[i];\n\t\tvar p2 = pts2[pts1.length - i - 1];\n\t\tif (p1.compareTo(p2) !== 0) return false;\n\t}\n\treturn true;\n};\nCoordinateArrays.envelope = function (coordinates) {\n\tvar env = new Envelope();\n\tfor (var i = 0; i < coordinates.length; i++) {\n\t\tenv.expandToInclude(coordinates[i]);\n\t}\n\treturn env;\n};\nCoordinateArrays.toCoordinateArray = function (coordList) {\n\treturn coordList.toArray(CoordinateArrays.coordArrayType);\n};\nCoordinateArrays.atLeastNCoordinatesOrNothing = function (n, c) {\n\treturn c.length >= n ? c : [];\n};\nCoordinateArrays.indexOf = function (coordinate, coordinates) {\n\tfor (var i = 0; i < coordinates.length; i++) {\n\t\tif (coordinate.equals(coordinates[i])) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\nCoordinateArrays.increasingDirection = function (pts) {\n\tfor (var i = 0; i < Math.trunc(pts.length / 2); i++) {\n\t\tvar j = pts.length - 1 - i;\n\t\tvar comp = pts[i].compareTo(pts[j]);\n\t\tif (comp !== 0) return comp;\n\t}\n\treturn 1;\n};\nCoordinateArrays.compare = function (pts1, pts2) {\n\tvar i = 0;\n\twhile (i < pts1.length && i < pts2.length) {\n\t\tvar compare = pts1[i].compareTo(pts2[i]);\n\t\tif (compare !== 0) return compare;\n\t\ti++;\n\t}\n\tif (i < pts2.length) return -1;\n\tif (i < pts1.length) return 1;\n\treturn 0;\n};\nCoordinateArrays.minCoordinate = function (coordinates) {\n\tvar minCoord = null;\n\tfor (var i = 0; i < coordinates.length; i++) {\n\t\tif (minCoord === null || minCoord.compareTo(coordinates[i]) > 0) {\n\t\t\tminCoord = coordinates[i];\n\t\t}\n\t}\n\treturn minCoord;\n};\nCoordinateArrays.extract = function (pts, start, end) {\n\tstart = MathUtil.clamp(start, 0, pts.length);\n\tend = MathUtil.clamp(end, -1, pts.length);\n\tvar npts = end - start + 1;\n\tif (end < 0) npts = 0;\n\tif (start >= pts.length) npts = 0;\n\tif (end < start) npts = 0;\n\tvar extractPts = new Array(npts).fill(null);\n\tif (npts === 0) return extractPts;\n\tvar iPts = 0;\n\tfor (var i = start; i <= end; i++) {\n\t\textractPts[iPts++] = pts[i];\n\t}\n\treturn extractPts;\n};\nfunction ForwardComparator() {}\nextend(ForwardComparator.prototype, {\n\tcompare: function compare(o1, o2) {\n\t\tvar pts1 = o1;\n\t\tvar pts2 = o2;\n\t\treturn CoordinateArrays.compare(pts1, pts2);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ForwardComparator;\n\t}\n});\nfunction BidirectionalComparator() {}\nextend(BidirectionalComparator.prototype, {\n\tcompare: function compare(o1, o2) {\n\t\tvar pts1 = o1;\n\t\tvar pts2 = o2;\n\t\tif (pts1.length < pts2.length) return -1;\n\t\tif (pts1.length > pts2.length) return 1;\n\t\tif (pts1.length === 0) return 0;\n\t\tvar forwardComp = CoordinateArrays.compare(pts1, pts2);\n\t\tvar isEqualRev = CoordinateArrays.isEqualReversed(pts1, pts2);\n\t\tif (isEqualRev) return 0;\n\t\treturn forwardComp;\n\t},\n\tOLDcompare: function OLDcompare(o1, o2) {\n\t\tvar pts1 = o1;\n\t\tvar pts2 = o2;\n\t\tif (pts1.length < pts2.length) return -1;\n\t\tif (pts1.length > pts2.length) return 1;\n\t\tif (pts1.length === 0) return 0;\n\t\tvar dir1 = CoordinateArrays.increasingDirection(pts1);\n\t\tvar dir2 = CoordinateArrays.increasingDirection(pts2);\n\t\tvar i1 = dir1 > 0 ? 0 : pts1.length - 1;\n\t\tvar i2 = dir2 > 0 ? 0 : pts1.length - 1;\n\t\tfor (var i = 0; i < pts1.length; i++) {\n\t\t\tvar comparePt = pts1[i1].compareTo(pts2[i2]);\n\t\t\tif (comparePt !== 0) return comparePt;\n\t\t\ti1 += dir1;\n\t\t\ti2 += dir2;\n\t\t}\n\t\treturn 0;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function getClass() {\n\t\treturn BidirectionalComparator;\n\t}\n});\nCoordinateArrays.ForwardComparator = ForwardComparator;\nCoordinateArrays.BidirectionalComparator = BidirectionalComparator;\nCoordinateArrays.coordArrayType = new Array(0).fill(null);\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Map.html\n *\n * @constructor\n * @private\n */\nfunction Map$1() {}\n\n/**\n * Returns the value to which the specified key is mapped, or null if this map\n * contains no mapping for the key.\n * @param {Object} key\n * @return {Object}\n */\nMap$1.prototype.get = function () {};\n\n/**\n * Associates the specified value with the specified key in this map (optional\n * operation).\n * @param {Object} key\n * @param {Object} value\n * @return {Object}\n */\nMap$1.prototype.put = function () {};\n\n/**\n * Returns the number of key-value mappings in this map.\n * @return {number}\n */\nMap$1.prototype.size = function () {};\n\n/**\n * Returns a Collection view of the values contained in this map.\n * @return {javascript.util.Collection}\n */\nMap$1.prototype.values = function () {};\n\n/**\n * Returns a {@link Set} view of the mappings contained in this map.\n * The set is backed by the map, so changes to the map are\n * reflected in the set, and vice-versa.  If the map is modified\n * while an iteration over the set is in progress (except through\n * the iterator's own <tt>remove</tt> operation, or through the\n * <tt>setValue</tt> operation on a map entry returned by the\n * iterator) the results of the iteration are undefined.  The set\n * supports element removal, which removes the corresponding\n * mapping from the map, via the <tt>Iterator.remove</tt>,\n * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n * <tt>clear</tt> operations.  It does not support the\n * <tt>add</tt> or <tt>addAll</tt> operations.\n *\n * @return {Set} a set view of the mappings contained in this map\n */\nMap$1.prototype.entrySet = function () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedMap.html\n *\n * @extends {Map}\n * @constructor\n * @private\n */\nfunction SortedMap() {}\nSortedMap.prototype = new Map$1();\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Set.html\n *\n * @extends {Collection}\n * @constructor\n * @private\n */\nfunction Set() {}\nSet.prototype = new Collection();\n\n/**\n * Returns true if this set contains the specified element. More formally,\n * returns true if and only if this set contains an element e such that (o==null ?\n * e==null : o.equals(e)).\n * @param {Object} e\n * @return {boolean}\n */\nSet.prototype.contains = function () {};\n\n/**\n * @see http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html\n *\n * @extends {javascript.util.Set}\n * @constructor\n * @private\n */\nfunction HashSet() {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n}\nHashSet.prototype = new Set();\n\n/**\n * @override\n */\nHashSet.prototype.contains = function (o) {\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this.array_[i];\n    if (e === o) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * @override\n */\nHashSet.prototype.add = function (o) {\n  if (this.contains(o)) {\n    return false;\n  }\n\n  this.array_.push(o);\n\n  return true;\n};\n\n/**\n * @override\n */\nHashSet.prototype.addAll = function (c) {\n  for (var i = c.iterator(); i.hasNext();) {\n    this.add(i.next());\n  }\n  return true;\n};\n\n/**\n * @override\n */\nHashSet.prototype.remove = function (o) {\n  throw new javascript.util.OperationNotSupported();\n};\n\n/**\n * @override\n */\nHashSet.prototype.size = function () {\n  return this.array_.length;\n};\n\n/**\n * @override\n */\nHashSet.prototype.isEmpty = function () {\n  return this.array_.length === 0;\n};\n\n/**\n * @override\n */\nHashSet.prototype.toArray = function () {\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i]);\n  }\n\n  return array;\n};\n\n/**\n * @override\n */\nHashSet.prototype.iterator = function () {\n  return new Iterator_$1(this);\n};\n\n/**\n * @extends {Iterator}\n * @param {HashSet} hashSet\n * @constructor\n * @private\n */\nvar Iterator_$1 = function Iterator_(hashSet) {\n  /**\n   * @type {HashSet}\n   * @private\n   */\n  this.hashSet_ = hashSet;\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * @override\n */\nIterator_$1.prototype.next = function () {\n  if (this.position_ === this.hashSet_.size()) {\n    throw new NoSuchElementException();\n  }\n  return this.hashSet_.array_[this.position_++];\n};\n\n/**\n * @override\n */\nIterator_$1.prototype.hasNext = function () {\n  if (this.position_ < this.hashSet_.size()) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n/**\n * @override\n */\nIterator_$1.prototype.remove = function () {\n  throw new OperationNotSupported();\n};\n\nvar BLACK = 0;\nvar RED = 1;\nfunction colorOf(p) {\n  return p == null ? BLACK : p.color;\n}\nfunction parentOf(p) {\n  return p == null ? null : p.parent;\n}\nfunction setColor(p, c) {\n  if (p !== null) p.color = c;\n}\nfunction leftOf(p) {\n  return p == null ? null : p.left;\n}\nfunction rightOf(p) {\n  return p == null ? null : p.right;\n}\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeMap.html\n *\n * @extends {SortedMap}\n * @constructor\n * @private\n */\nfunction TreeMap() {\n  /**\n   * @type {Object}\n   * @private\n   */\n  this.root_ = null;\n  /**\n   * @type {number}\n   * @private\n  */\n  this.size_ = 0;\n}\nTreeMap.prototype = new SortedMap();\n\n/**\n * @override\n */\nTreeMap.prototype.get = function (key) {\n  var p = this.root_;\n  while (p !== null) {\n    var cmp = key['compareTo'](p.key);\n    if (cmp < 0) {\n      p = p.left;\n    } else if (cmp > 0) {\n      p = p.right;\n    } else {\n      return p.value;\n    }\n  }\n  return null;\n};\n\n/**\n * @override\n */\nTreeMap.prototype.put = function (key, value) {\n  if (this.root_ === null) {\n    this.root_ = {\n      key: key,\n      value: value,\n      left: null,\n      right: null,\n      parent: null,\n      color: BLACK,\n      getValue: function getValue() {\n        return this.value;\n      },\n      getKey: function getKey() {\n        return this.key;\n      }\n    };\n    this.size_ = 1;\n    return null;\n  }\n  var t = this.root_,\n      parent,\n      cmp;\n  do {\n    parent = t;\n    cmp = key['compareTo'](t.key);\n    if (cmp < 0) {\n      t = t.left;\n    } else if (cmp > 0) {\n      t = t.right;\n    } else {\n      var oldValue = t.value;\n      t.value = value;\n      return oldValue;\n    }\n  } while (t !== null);\n  var e = {\n    key: key,\n    left: null,\n    right: null,\n    value: value,\n    parent: parent,\n    color: BLACK,\n    getValue: function getValue() {\n      return this.value;\n    },\n    getKey: function getKey() {\n      return this.key;\n    }\n  };\n  if (cmp < 0) {\n    parent.left = e;\n  } else {\n    parent.right = e;\n  }\n  this.fixAfterInsertion(e);\n  this.size_++;\n  return null;\n};\n\n/**\n * @param {Object} x\n */\nTreeMap.prototype.fixAfterInsertion = function (x) {\n  x.color = RED;\n  while (x != null && x != this.root_ && x.parent.color == RED) {\n    if (parentOf(x) == leftOf(parentOf(parentOf(x)))) {\n      var y = rightOf(parentOf(parentOf(x)));\n      if (colorOf(y) == RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x == rightOf(parentOf(x))) {\n          x = parentOf(x);\n          this.rotateLeft(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this.rotateRight(parentOf(parentOf(x)));\n      }\n    } else {\n      var y = leftOf(parentOf(parentOf(x)));\n      if (colorOf(y) == RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x == leftOf(parentOf(x))) {\n          x = parentOf(x);\n          this.rotateRight(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this.rotateLeft(parentOf(parentOf(x)));\n      }\n    }\n  }\n  this.root_.color = BLACK;\n};\n\n/**\n * @override\n */\nTreeMap.prototype.values = function () {\n  var arrayList = new ArrayList();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    arrayList.add(p.value);\n    while ((p = TreeMap.successor(p)) !== null) {\n      arrayList.add(p.value);\n    }\n  }\n  return arrayList;\n};\n\n/**\n * @override\n */\nTreeMap.prototype.entrySet = function () {\n  var hashSet = new HashSet();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    hashSet.add(p);\n    while ((p = TreeMap.successor(p)) !== null) {\n      hashSet.add(p);\n    }\n  }\n  return hashSet;\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateLeft = function (p) {\n  if (p != null) {\n    var r = p.right;\n    p.right = r.left;\n    if (r.left != null) r.left.parent = p;\n    r.parent = p.parent;\n    if (p.parent == null) this.root_ = r;else if (p.parent.left == p) p.parent.left = r;else p.parent.right = r;\n    r.left = p;\n    p.parent = r;\n  }\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateRight = function (p) {\n  if (p != null) {\n    var l = p.left;\n    p.left = l.right;\n    if (l.right != null) l.right.parent = p;\n    l.parent = p.parent;\n    if (p.parent == null) this.root_ = l;else if (p.parent.right == p) p.parent.right = l;else p.parent.left = l;\n    l.right = p;\n    p.parent = l;\n  }\n};\n\n/**\n * @return {Object}\n */\nTreeMap.prototype.getFirstEntry = function () {\n  var p = this.root_;\n  if (p != null) {\n    while (p.left != null) {\n      p = p.left;\n    }\n  }\n  return p;\n};\n\n/**\n * @param {Object} t\n * @return {Object}\n * @private\n */\nTreeMap.successor = function (t) {\n  if (t === null) return null;else if (t.right !== null) {\n    var p = t.right;\n    while (p.left !== null) {\n      p = p.left;\n    }\n    return p;\n  } else {\n    var p = t.parent;\n    var ch = t;\n    while (p !== null && ch === p.right) {\n      ch = p;\n      p = p.parent;\n    }\n    return p;\n  }\n};\n\n/**\n * @override\n */\nTreeMap.prototype.size = function () {\n  return this.size_;\n};\n\nfunction Lineal() {}\nextend(Lineal.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Lineal;\n\t}\n});\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedSet.html\n *\n * @extends {Set}\n * @constructor\n * @private\n */\nfunction SortedSet() {}\nSortedSet.prototype = new Set();\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeSet.html\n *\n * @extends {SortedSet}\n * @constructor\n * @private\n */\nfunction TreeSet() {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n}\nTreeSet.prototype = new SortedSet();\n\n/**\n * @override\n */\nTreeSet.prototype.contains = function (o) {\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this.array_[i];\n    if (e['compareTo'](o) === 0) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * @override\n */\nTreeSet.prototype.add = function (o) {\n  if (this.contains(o)) {\n    return false;\n  }\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this.array_[i];\n    if (e['compareTo'](o) === 1) {\n      this.array_.splice(i, 0, o);\n      return true;\n    }\n  }\n\n  this.array_.push(o);\n\n  return true;\n};\n\n/**\n * @override\n */\nTreeSet.prototype.addAll = function (c) {\n  for (var i = c.iterator(); i.hasNext();) {\n    this.add(i.next());\n  }\n  return true;\n};\n\n/**\n * @override\n */\nTreeSet.prototype.remove = function (e) {\n  throw new OperationNotSupported();\n};\n\n/**\n * @override\n */\nTreeSet.prototype.size = function () {\n  return this.array_.length;\n};\n\n/**\n * @override\n */\nTreeSet.prototype.isEmpty = function () {\n  return this.array_.length === 0;\n};\n\n/**\n * @override\n */\nTreeSet.prototype.toArray = function () {\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i]);\n  }\n\n  return array;\n};\n\n/**\n * @override\n */\nTreeSet.prototype.iterator = function () {\n  return new Iterator_$2(this);\n};\n\n/**\n * @extends {javascript.util.Iterator}\n * @param {javascript.util.TreeSet} treeSet\n * @constructor\n * @private\n */\nvar Iterator_$2 = function Iterator_(treeSet) {\n  /**\n   * @type {javascript.util.TreeSet}\n   * @private\n   */\n  this.treeSet_ = treeSet;\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.next = function () {\n  if (this.position_ === this.treeSet_.size()) {\n    throw new NoSuchElementException();\n  }\n  return this.treeSet_.array_[this.position_++];\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.hasNext = function () {\n  if (this.position_ < this.treeSet_.size()) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.remove = function () {\n  throw new OperationNotSupported();\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Arrays.html\n *\n * @constructor\n * @private\n */\nfunction Arrays() {}\n\n/**\n */\nArrays.sort = function () {\n  var a = arguments[0],\n      i,\n      t,\n      comparator,\n      compare;\n  if (arguments.length === 1) {\n    compare = function compare(a, b) {\n      return a.compareTo(b);\n    };\n    a.sort(compare);\n    return;\n  } else if (arguments.length === 2) {\n    comparator = arguments[1];\n    compare = function compare(a, b) {\n      return comparator['compare'](a, b);\n    };\n    a.sort(compare);\n  } else if (arguments.length === 3) {\n    t = a.slice(arguments[1], arguments[2]);\n    t.sort();\n    var r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n    return;\n  } else if (arguments.length === 4) {\n    t = a.slice(arguments[1], arguments[2]);\n    comparator = arguments[3];\n    compare = function compare(a, b) {\n      return comparator['compare'](a, b);\n    };\n    t.sort(compare);\n    r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n    return;\n  }\n};\n\n/**\n * @param {Array} array\n * @return {ArrayList}\n */\nArrays.asList = function (array) {\n  var arrayList = new ArrayList();\n  for (var i = 0, len = array.length; i < len; i++) {\n    arrayList.add(array[i]);\n  }\n  return arrayList;\n};\n\nfunction Dimension() {}\nextend(Dimension.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Dimension;\n\t}\n});\nDimension.toDimensionSymbol = function (dimensionValue) {\n\tswitch (dimensionValue) {\n\t\tcase Dimension.FALSE:\n\t\t\treturn Dimension.SYM_FALSE;\n\t\tcase Dimension.TRUE:\n\t\t\treturn Dimension.SYM_TRUE;\n\t\tcase Dimension.DONTCARE:\n\t\t\treturn Dimension.SYM_DONTCARE;\n\t\tcase Dimension.P:\n\t\t\treturn Dimension.SYM_P;\n\t\tcase Dimension.L:\n\t\t\treturn Dimension.SYM_L;\n\t\tcase Dimension.A:\n\t\t\treturn Dimension.SYM_A;\n\t}\n\tthrow new IllegalArgumentException(\"Unknown dimension value: \" + dimensionValue);\n};\nDimension.toDimensionValue = function (dimensionSymbol) {\n\tswitch (Character.toUpperCase(dimensionSymbol)) {\n\t\tcase Dimension.SYM_FALSE:\n\t\t\treturn Dimension.FALSE;\n\t\tcase Dimension.SYM_TRUE:\n\t\t\treturn Dimension.TRUE;\n\t\tcase Dimension.SYM_DONTCARE:\n\t\t\treturn Dimension.DONTCARE;\n\t\tcase Dimension.SYM_P:\n\t\t\treturn Dimension.P;\n\t\tcase Dimension.SYM_L:\n\t\t\treturn Dimension.L;\n\t\tcase Dimension.SYM_A:\n\t\t\treturn Dimension.A;\n\t}\n\tthrow new IllegalArgumentException(\"Unknown dimension symbol: \" + dimensionSymbol);\n};\nDimension.P = 0;\nDimension.L = 1;\nDimension.A = 2;\nDimension.FALSE = -1;\nDimension.TRUE = -2;\nDimension.DONTCARE = -3;\nDimension.SYM_FALSE = 'F';\nDimension.SYM_TRUE = 'T';\nDimension.SYM_DONTCARE = '*';\nDimension.SYM_P = '0';\nDimension.SYM_L = '1';\nDimension.SYM_A = '2';\n\nfunction GeometryFilter() {}\nextend(GeometryFilter.prototype, {\n\tfilter: function filter(geom) {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryFilter;\n\t}\n});\n\nfunction CoordinateSequenceFilter() {}\nextend(CoordinateSequenceFilter.prototype, {\n\tfilter: function filter(seq, i) {},\n\tisDone: function isDone() {},\n\tisGeometryChanged: function isGeometryChanged() {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CoordinateSequenceFilter;\n\t}\n});\n\nfunction GeometryCollection() {\n\tthis.geometries = null;\n\tvar geometries = arguments[0],\n\t    factory = arguments[1];\n\tGeometry.call(this, factory);\n\tif (geometries === null) {\n\t\tgeometries = [];\n\t}\n\tif (Geometry.hasNullElements(geometries)) {\n\t\tthrow new IllegalArgumentException(\"geometries must not contain null elements\");\n\t}\n\tthis.geometries = geometries;\n}\ninherits(GeometryCollection, Geometry);\nextend(GeometryCollection.prototype, {\n\tcomputeEnvelopeInternal: function computeEnvelopeInternal() {\n\t\tvar envelope = new Envelope();\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\tenvelope.expandToInclude(this.geometries[i].getEnvelopeInternal());\n\t\t}\n\t\treturn envelope;\n\t},\n\tgetGeometryN: function getGeometryN(n) {\n\t\treturn this.geometries[n];\n\t},\n\tgetSortIndex: function getSortIndex() {\n\t\treturn Geometry.SORTINDEX_GEOMETRYCOLLECTION;\n\t},\n\tgetCoordinates: function getCoordinates() {\n\t\tvar coordinates = new Array(this.getNumPoints()).fill(null);\n\t\tvar k = -1;\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\tvar childCoordinates = this.geometries[i].getCoordinates();\n\t\t\tfor (var j = 0; j < childCoordinates.length; j++) {\n\t\t\t\tk++;\n\t\t\t\tcoordinates[k] = childCoordinates[j];\n\t\t\t}\n\t\t}\n\t\treturn coordinates;\n\t},\n\tgetArea: function getArea() {\n\t\tvar area = 0.0;\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\tarea += this.geometries[i].getArea();\n\t\t}\n\t\treturn area;\n\t},\n\tequalsExact: function equalsExact() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar other = arguments[0],\n\t\t\t    tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar otherCollection = other;\n\t\t\tif (this.geometries.length !== otherCollection.geometries.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\t\tif (!this.geometries[i].equalsExact(otherCollection.geometries[i], tolerance)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else return Geometry.prototype.equalsExact.apply(this, arguments);\n\t},\n\tnormalize: function normalize() {\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\tthis.geometries[i].normalize();\n\t\t}\n\t\tArrays.sort(this.geometries);\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\tif (this.isEmpty()) return null;\n\t\treturn this.geometries[0].getCoordinate();\n\t},\n\tgetBoundaryDimension: function getBoundaryDimension() {\n\t\tvar dimension = Dimension.FALSE;\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\tdimension = Math.max(dimension, this.geometries[i].getBoundaryDimension());\n\t\t}\n\t\treturn dimension;\n\t},\n\tgetDimension: function getDimension() {\n\t\tvar dimension = Dimension.FALSE;\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\tdimension = Math.max(dimension, this.geometries[i].getDimension());\n\t\t}\n\t\treturn dimension;\n\t},\n\tgetLength: function getLength() {\n\t\tvar sum = 0.0;\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\tsum += this.geometries[i].getLength();\n\t\t}\n\t\treturn sum;\n\t},\n\tgetNumPoints: function getNumPoints() {\n\t\tvar numPoints = 0;\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\tnumPoints += this.geometries[i].getNumPoints();\n\t\t}\n\t\treturn numPoints;\n\t},\n\tgetNumGeometries: function getNumGeometries() {\n\t\treturn this.geometries.length;\n\t},\n\treverse: function reverse() {\n\t\tvar n = this.geometries.length;\n\t\tvar revGeoms = new Array(n).fill(null);\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\trevGeoms[i] = this.geometries[i].reverse();\n\t\t}\n\t\treturn this.getFactory().createGeometryCollection(revGeoms);\n\t},\n\tcompareToSameClass: function compareToSameClass() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar o = arguments[0];\n\t\t\tvar theseElements = new TreeSet(Arrays.asList(this.geometries));\n\t\t\tvar otherElements = new TreeSet(Arrays.asList(o.geometries));\n\t\t\treturn this.compare(theseElements, otherElements);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar _o = arguments[0],\n\t\t\t    comp = arguments[1];\n\t\t\tvar gc = _o;\n\t\t\tvar n1 = this.getNumGeometries();\n\t\t\tvar n2 = gc.getNumGeometries();\n\t\t\tvar i = 0;\n\t\t\twhile (i < n1 && i < n2) {\n\t\t\t\tvar thisGeom = this.getGeometryN(i);\n\t\t\t\tvar otherGeom = gc.getGeometryN(i);\n\t\t\t\tvar holeComp = thisGeom.compareToSameClass(otherGeom, comp);\n\t\t\t\tif (holeComp !== 0) return holeComp;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tif (i < n1) return 1;\n\t\t\tif (i < n2) return -1;\n\t\t\treturn 0;\n\t\t}\n\t},\n\tapply: function apply() {\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\n\t\t\tvar filter = arguments[0];\n\t\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\t\tthis.geometries[i].apply(filter);\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n\t\t\tvar _filter = arguments[0];\n\t\t\tif (this.geometries.length === 0) return null;\n\t\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\t\tthis.geometries[i].apply(_filter);\n\t\t\t\tif (_filter.isDone()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_filter.isGeometryChanged()) this.geometryChanged();\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\n\t\t\tvar _filter2 = arguments[0];\n\t\t\t_filter2.filter(this);\n\t\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\t\tthis.geometries[i].apply(_filter2);\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n\t\t\tvar _filter3 = arguments[0];\n\t\t\t_filter3.filter(this);\n\t\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\t\tthis.geometries[i].apply(_filter3);\n\t\t\t}\n\t\t}\n\t},\n\tgetBoundary: function getBoundary() {\n\t\tthis.checkNotGeometryCollection(this);\n\t\tAssert.shouldNeverReachHere();\n\t\treturn null;\n\t},\n\tclone: function clone() {\n\t\tvar gc = Geometry.prototype.clone.call(this);\n\t\tgc.geometries = new Array(this.geometries.length).fill(null);\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\tgc.geometries[i] = this.geometries[i].clone();\n\t\t}\n\t\treturn gc;\n\t},\n\tgetGeometryType: function getGeometryType() {\n\t\treturn \"GeometryCollection\";\n\t},\n\tcopy: function copy() {\n\t\tvar geometries = new Array(this.geometries.length).fill(null);\n\t\tfor (var i = 0; i < geometries.length; i++) {\n\t\t\tgeometries[i] = this.geometries[i].copy();\n\t\t}\n\t\treturn new GeometryCollection(geometries, this.factory);\n\t},\n\tisEmpty: function isEmpty() {\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\tif (!this.geometries[i].isEmpty()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryCollection;\n\t}\n});\nGeometryCollection.serialVersionUID = -5694727726395021467;\n\nfunction MultiLineString() {\n\tvar lineStrings = arguments[0],\n\t    factory = arguments[1];\n\tGeometryCollection.call(this, lineStrings, factory);\n}\ninherits(MultiLineString, GeometryCollection);\nextend(MultiLineString.prototype, {\n\tgetSortIndex: function getSortIndex() {\n\t\treturn Geometry.SORTINDEX_MULTILINESTRING;\n\t},\n\tequalsExact: function equalsExact() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar other = arguments[0],\n\t\t\t    tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn GeometryCollection.prototype.equalsExact.call(this, other, tolerance);\n\t\t} else return GeometryCollection.prototype.equalsExact.apply(this, arguments);\n\t},\n\tgetBoundaryDimension: function getBoundaryDimension() {\n\t\tif (this.isClosed()) {\n\t\t\treturn Dimension.FALSE;\n\t\t}\n\t\treturn 0;\n\t},\n\tisClosed: function isClosed() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\tif (!this.geometries[i].isClosed()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tgetDimension: function getDimension() {\n\t\treturn 1;\n\t},\n\treverse: function reverse() {\n\t\tvar nLines = this.geometries.length;\n\t\tvar revLines = new Array(nLines).fill(null);\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\trevLines[nLines - 1 - i] = this.geometries[i].reverse();\n\t\t}\n\t\treturn this.getFactory().createMultiLineString(revLines);\n\t},\n\tgetBoundary: function getBoundary() {\n\t\treturn new BoundaryOp(this).getBoundary();\n\t},\n\tgetGeometryType: function getGeometryType() {\n\t\treturn \"MultiLineString\";\n\t},\n\tcopy: function copy() {\n\t\tvar lineStrings = new Array(this.geometries.length).fill(null);\n\t\tfor (var i = 0; i < lineStrings.length; i++) {\n\t\t\tlineStrings[i] = this.geometries[i].copy();\n\t\t}\n\t\treturn new MultiLineString(lineStrings, this.factory);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Lineal];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MultiLineString;\n\t}\n});\nMultiLineString.serialVersionUID = 8166665132445433741;\n\nfunction BoundaryOp() {\n\tthis.geom = null;\n\tthis.geomFact = null;\n\tthis.bnRule = null;\n\tthis.endpointMap = null;\n\tif (arguments.length === 1) {\n\t\tvar geom = arguments[0];\n\t\tBoundaryOp.call(this, geom, BoundaryNodeRule.MOD2_BOUNDARY_RULE);\n\t} else if (arguments.length === 2) {\n\t\tvar _geom = arguments[0],\n\t\t    bnRule = arguments[1];\n\t\tthis.geom = _geom;\n\t\tthis.geomFact = _geom.getFactory();\n\t\tthis.bnRule = bnRule;\n\t}\n}\nextend(BoundaryOp.prototype, {\n\tboundaryMultiLineString: function boundaryMultiLineString(mLine) {\n\t\tif (this.geom.isEmpty()) {\n\t\t\treturn this.getEmptyMultiPoint();\n\t\t}\n\t\tvar bdyPts = this.computeBoundaryCoordinates(mLine);\n\t\tif (bdyPts.length === 1) {\n\t\t\treturn this.geomFact.createPoint(bdyPts[0]);\n\t\t}\n\t\treturn this.geomFact.createMultiPointFromCoords(bdyPts);\n\t},\n\tgetBoundary: function getBoundary() {\n\t\tif (this.geom instanceof LineString) return this.boundaryLineString(this.geom);\n\t\tif (this.geom instanceof MultiLineString) return this.boundaryMultiLineString(this.geom);\n\t\treturn this.geom.getBoundary();\n\t},\n\tboundaryLineString: function boundaryLineString(line) {\n\t\tif (this.geom.isEmpty()) {\n\t\t\treturn this.getEmptyMultiPoint();\n\t\t}\n\t\tif (line.isClosed()) {\n\t\t\tvar closedEndpointOnBoundary = this.bnRule.isInBoundary(2);\n\t\t\tif (closedEndpointOnBoundary) {\n\t\t\t\treturn line.getStartPoint();\n\t\t\t} else {\n\t\t\t\treturn this.geomFact.createMultiPoint();\n\t\t\t}\n\t\t}\n\t\treturn this.geomFact.createMultiPoint([line.getStartPoint(), line.getEndPoint()]);\n\t},\n\tgetEmptyMultiPoint: function getEmptyMultiPoint() {\n\t\treturn this.geomFact.createMultiPoint();\n\t},\n\tcomputeBoundaryCoordinates: function computeBoundaryCoordinates(mLine) {\n\t\tvar bdyPts = new ArrayList();\n\t\tthis.endpointMap = new TreeMap();\n\t\tfor (var i = 0; i < mLine.getNumGeometries(); i++) {\n\t\t\tvar line = mLine.getGeometryN(i);\n\t\t\tif (line.getNumPoints() === 0) continue;\n\t\t\tthis.addEndpoint(line.getCoordinateN(0));\n\t\t\tthis.addEndpoint(line.getCoordinateN(line.getNumPoints() - 1));\n\t\t}\n\t\tfor (var it = this.endpointMap.entrySet().iterator(); it.hasNext();) {\n\t\t\tvar entry = it.next();\n\t\t\tvar counter = entry.getValue();\n\t\t\tvar valence = counter.count;\n\t\t\tif (this.bnRule.isInBoundary(valence)) {\n\t\t\t\tbdyPts.add(entry.getKey());\n\t\t\t}\n\t\t}\n\t\treturn CoordinateArrays.toCoordinateArray(bdyPts);\n\t},\n\taddEndpoint: function addEndpoint(pt) {\n\t\tvar counter = this.endpointMap.get(pt);\n\t\tif (counter === null) {\n\t\t\tcounter = new Counter();\n\t\t\tthis.endpointMap.put(pt, counter);\n\t\t}\n\t\tcounter.count++;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn BoundaryOp;\n\t}\n});\nBoundaryOp.getBoundary = function () {\n\tif (arguments.length === 1) {\n\t\tvar g = arguments[0];\n\t\tvar bop = new BoundaryOp(g);\n\t\treturn bop.getBoundary();\n\t} else if (arguments.length === 2) {\n\t\tvar _g = arguments[0],\n\t\t    bnRule = arguments[1];\n\t\tvar bop = new BoundaryOp(_g, bnRule);\n\t\treturn bop.getBoundary();\n\t}\n};\nfunction Counter() {\n\tthis.count = null;\n}\nextend(Counter.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Counter;\n\t}\n});\n\nfunction PrintStream() {}\n\nfunction StringReader() {}\n\nfunction DecimalFormat() {}\n\nfunction ByteArrayOutputStream() {}\n\nfunction IOException() {}\n\nfunction LineNumberReader() {}\n\nfunction StringUtil() {}\nextend(StringUtil.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn StringUtil;\n\t}\n});\nStringUtil.chars = function (c, n) {\n\tvar ch = new Array(n).fill(null);\n\tfor (var i = 0; i < n; i++) {\n\t\tch[i] = c;\n\t}\n\treturn new String(ch);\n};\nStringUtil.getStackTrace = function () {\n\tif (arguments.length === 1) {\n\t\tvar t = arguments[0];\n\t\tvar os = new ByteArrayOutputStream();\n\t\tvar ps = new PrintStream(os);\n\t\tt.printStackTrace(ps);\n\t\treturn os.toString();\n\t} else if (arguments.length === 2) {\n\t\tvar _t = arguments[0],\n\t\t    depth = arguments[1];\n\t\tvar stackTrace = \"\";\n\t\tvar stringReader = new StringReader(StringUtil.getStackTrace(_t));\n\t\tvar lineNumberReader = new LineNumberReader(stringReader);\n\t\tfor (var i = 0; i < depth; i++) {\n\t\t\ttry {\n\t\t\t\tstackTrace += lineNumberReader.readLine() + StringUtil.NEWLINE;\n\t\t\t} catch (e) {\n\t\t\t\tif (e instanceof IOException) {\n\t\t\t\t\tAssert.shouldNeverReachHere();\n\t\t\t\t} else throw e;\n\t\t\t} finally {}\n\t\t}\n\t\treturn stackTrace;\n\t}\n};\nStringUtil.split = function (s, separator) {\n\tvar separatorlen = separator.length;\n\tvar tokenList = new ArrayList();\n\tvar tmpString = \"\" + s;\n\tvar pos = tmpString.indexOf(separator);\n\twhile (pos >= 0) {\n\t\tvar token = tmpString.substring(0, pos);\n\t\ttokenList.add(token);\n\t\ttmpString = tmpString.substring(pos + separatorlen);\n\t\tpos = tmpString.indexOf(separator);\n\t}\n\tif (tmpString.length > 0) tokenList.add(tmpString);\n\tvar res = new Array(tokenList.size()).fill(null);\n\tfor (var i = 0; i < res.length; i++) {\n\t\tres[i] = tokenList.get(i);\n\t}\n\treturn res;\n};\nStringUtil.toString = function () {\n\tif (arguments.length === 1) {\n\t\tvar d = arguments[0];\n\t\treturn StringUtil.SIMPLE_ORDINATE_FORMAT.format(d);\n\t}\n};\nStringUtil.spaces = function (n) {\n\treturn StringUtil.chars(' ', n);\n};\nStringUtil.NEWLINE = System.getProperty(\"line.separator\");\nStringUtil.SIMPLE_ORDINATE_FORMAT = new DecimalFormat(\"0.#\");\n\nfunction CoordinateSequences() {}\nextend(CoordinateSequences.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CoordinateSequences;\n\t}\n});\nCoordinateSequences.copyCoord = function (src, srcPos, dest, destPos) {\n\tvar minDim = Math.min(src.getDimension(), dest.getDimension());\n\tfor (var dim = 0; dim < minDim; dim++) {\n\t\tdest.setOrdinate(destPos, dim, src.getOrdinate(srcPos, dim));\n\t}\n};\nCoordinateSequences.isRing = function (seq) {\n\tvar n = seq.size();\n\tif (n === 0) return true;\n\tif (n <= 3) return false;\n\treturn seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n};\nCoordinateSequences.isEqual = function (cs1, cs2) {\n\tvar cs1Size = cs1.size();\n\tvar cs2Size = cs2.size();\n\tif (cs1Size !== cs2Size) return false;\n\tvar dim = Math.min(cs1.getDimension(), cs2.getDimension());\n\tfor (var i = 0; i < cs1Size; i++) {\n\t\tfor (var d = 0; d < dim; d++) {\n\t\t\tvar v1 = cs1.getOrdinate(i, d);\n\t\t\tvar v2 = cs2.getOrdinate(i, d);\n\t\t\tif (cs1.getOrdinate(i, d) === cs2.getOrdinate(i, d)) continue;\n\t\t\tif (Double.isNaN(v1) && Double.isNaN(v2)) continue;\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n};\nCoordinateSequences.extend = function (fact, seq, size) {\n\tvar newseq = fact.create(size, seq.getDimension());\n\tvar n = seq.size();\n\tCoordinateSequences.copy(seq, 0, newseq, 0, n);\n\tif (n > 0) {\n\t\tfor (var i = n; i < size; i++) {\n\t\t\tCoordinateSequences.copy(seq, n - 1, newseq, i, 1);\n\t\t}\n\t}\n\treturn newseq;\n};\nCoordinateSequences.reverse = function (seq) {\n\tvar last = seq.size() - 1;\n\tvar mid = Math.trunc(last / 2);\n\tfor (var i = 0; i <= mid; i++) {\n\t\tCoordinateSequences.swap(seq, i, last - i);\n\t}\n};\nCoordinateSequences.swap = function (seq, i, j) {\n\tif (i === j) return null;\n\tfor (var dim = 0; dim < seq.getDimension(); dim++) {\n\t\tvar tmp = seq.getOrdinate(i, dim);\n\t\tseq.setOrdinate(i, dim, seq.getOrdinate(j, dim));\n\t\tseq.setOrdinate(j, dim, tmp);\n\t}\n};\nCoordinateSequences.copy = function (src, srcPos, dest, destPos, length) {\n\tfor (var i = 0; i < length; i++) {\n\t\tCoordinateSequences.copyCoord(src, srcPos + i, dest, destPos + i);\n\t}\n};\nCoordinateSequences.toString = function () {\n\tif (arguments.length === 1) {\n\t\tvar cs = arguments[0];\n\t\tvar size = cs.size();\n\t\tif (size === 0) return \"()\";\n\t\tvar dim = cs.getDimension();\n\t\tvar buf = new StringBuffer();\n\t\tbuf.append('(');\n\t\tfor (var i = 0; i < size; i++) {\n\t\t\tif (i > 0) buf.append(\" \");\n\t\t\tfor (var d = 0; d < dim; d++) {\n\t\t\t\tif (d > 0) buf.append(\",\");\n\t\t\t\tbuf.append(StringUtil.toString(cs.getOrdinate(i, d)));\n\t\t\t}\n\t\t}\n\t\tbuf.append(')');\n\t\treturn buf.toString();\n\t}\n};\nCoordinateSequences.ensureValidRing = function (fact, seq) {\n\tvar n = seq.size();\n\tif (n === 0) return seq;\n\tif (n <= 3) return CoordinateSequences.createClosedRing(fact, seq, 4);\n\tvar isClosed = seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n\tif (isClosed) return seq;\n\treturn CoordinateSequences.createClosedRing(fact, seq, n + 1);\n};\nCoordinateSequences.createClosedRing = function (fact, seq, size) {\n\tvar newseq = fact.create(size, seq.getDimension());\n\tvar n = seq.size();\n\tCoordinateSequences.copy(seq, 0, newseq, 0, n);\n\tfor (var i = n; i < size; i++) {\n\t\tCoordinateSequences.copy(seq, 0, newseq, i, 1);\n\t}return newseq;\n};\n\nfunction LineString() {\n\tthis.points = null;\n\tvar points = arguments[0],\n\t    factory = arguments[1];\n\tGeometry.call(this, factory);\n\tthis.init(points);\n}\ninherits(LineString, Geometry);\nextend(LineString.prototype, {\n\tcomputeEnvelopeInternal: function computeEnvelopeInternal() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn new Envelope();\n\t\t}\n\t\treturn this.points.expandEnvelope(new Envelope());\n\t},\n\tisRing: function isRing() {\n\t\treturn this.isClosed() && this.isSimple();\n\t},\n\tgetSortIndex: function getSortIndex() {\n\t\treturn Geometry.SORTINDEX_LINESTRING;\n\t},\n\tgetCoordinates: function getCoordinates() {\n\t\treturn this.points.toCoordinateArray();\n\t},\n\tequalsExact: function equalsExact() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar other = arguments[0],\n\t\t\t    tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar otherLineString = other;\n\t\t\tif (this.points.size() !== otherLineString.points.size()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (var i = 0; i < this.points.size(); i++) {\n\t\t\t\tif (!this.equal(this.points.getCoordinate(i), otherLineString.points.getCoordinate(i), tolerance)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else return Geometry.prototype.equalsExact.apply(this, arguments);\n\t},\n\tnormalize: function normalize() {\n\t\tfor (var i = 0; i < Math.trunc(this.points.size() / 2); i++) {\n\t\t\tvar j = this.points.size() - 1 - i;\n\t\t\tif (!this.points.getCoordinate(i).equals(this.points.getCoordinate(j))) {\n\t\t\t\tif (this.points.getCoordinate(i).compareTo(this.points.getCoordinate(j)) > 0) {\n\t\t\t\t\tCoordinateSequences.reverse(this.points);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\tif (this.isEmpty()) return null;\n\t\treturn this.points.getCoordinate(0);\n\t},\n\tgetBoundaryDimension: function getBoundaryDimension() {\n\t\tif (this.isClosed()) {\n\t\t\treturn Dimension.FALSE;\n\t\t}\n\t\treturn 0;\n\t},\n\tisClosed: function isClosed() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints() - 1));\n\t},\n\tgetEndPoint: function getEndPoint() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.getPointN(this.getNumPoints() - 1);\n\t},\n\tgetDimension: function getDimension() {\n\t\treturn 1;\n\t},\n\tgetLength: function getLength() {\n\t\treturn CGAlgorithms.computeLength(this.points);\n\t},\n\tgetNumPoints: function getNumPoints() {\n\t\treturn this.points.size();\n\t},\n\treverse: function reverse() {\n\t\tvar seq = this.points.copy();\n\t\tCoordinateSequences.reverse(seq);\n\t\tvar revLine = this.getFactory().createLineString(seq);\n\t\treturn revLine;\n\t},\n\tcompareToSameClass: function compareToSameClass() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar o = arguments[0];\n\t\t\tvar line = o;\n\t\t\tvar i = 0;\n\t\t\tvar j = 0;\n\t\t\twhile (i < this.points.size() && j < line.points.size()) {\n\t\t\t\tvar comparison = this.points.getCoordinate(i).compareTo(line.points.getCoordinate(j));\n\t\t\t\tif (comparison !== 0) {\n\t\t\t\t\treturn comparison;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tif (i < this.points.size()) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (j < line.points.size()) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar _o = arguments[0],\n\t\t\t    comp = arguments[1];\n\t\t\tvar line = _o;\n\t\t\treturn comp.compare(this.points, line.points);\n\t\t}\n\t},\n\tapply: function apply() {\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\n\t\t\tvar filter = arguments[0];\n\t\t\tfor (var i = 0; i < this.points.size(); i++) {\n\t\t\t\tfilter.filter(this.points.getCoordinate(i));\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n\t\t\tvar _filter = arguments[0];\n\t\t\tif (this.points.size() === 0) return null;\n\t\t\tfor (var i = 0; i < this.points.size(); i++) {\n\t\t\t\t_filter.filter(this.points, i);\n\t\t\t\tif (_filter.isDone()) break;\n\t\t\t}\n\t\t\tif (_filter.isGeometryChanged()) this.geometryChanged();\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\n\t\t\tvar _filter2 = arguments[0];\n\t\t\t_filter2.filter(this);\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n\t\t\tvar _filter3 = arguments[0];\n\t\t\t_filter3.filter(this);\n\t\t}\n\t},\n\tgetBoundary: function getBoundary() {\n\t\treturn new BoundaryOp(this).getBoundary();\n\t},\n\tisEquivalentClass: function isEquivalentClass(other) {\n\t\treturn other instanceof LineString;\n\t},\n\tclone: function clone() {\n\t\tvar ls = Geometry.prototype.clone.call(this);\n\t\tls.points = this.points.clone();\n\t\treturn ls;\n\t},\n\tgetCoordinateN: function getCoordinateN(n) {\n\t\treturn this.points.getCoordinate(n);\n\t},\n\tgetGeometryType: function getGeometryType() {\n\t\treturn \"LineString\";\n\t},\n\tcopy: function copy() {\n\t\treturn new LineString(this.points.copy(), this.factory);\n\t},\n\tgetCoordinateSequence: function getCoordinateSequence() {\n\t\treturn this.points;\n\t},\n\tisEmpty: function isEmpty() {\n\t\treturn this.points.size() === 0;\n\t},\n\tinit: function init(points) {\n\t\tif (points === null) {\n\t\t\tpoints = this.getFactory().getCoordinateSequenceFactory().create([]);\n\t\t}\n\t\tif (points.size() === 1) {\n\t\t\tthrow new IllegalArgumentException(\"Invalid number of points in LineString (found \" + points.size() + \" - must be 0 or >= 2)\");\n\t\t}\n\t\tthis.points = points;\n\t},\n\tisCoordinate: function isCoordinate(pt) {\n\t\tfor (var i = 0; i < this.points.size(); i++) {\n\t\t\tif (this.points.getCoordinate(i).equals(pt)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetStartPoint: function getStartPoint() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.getPointN(0);\n\t},\n\tgetPointN: function getPointN(n) {\n\t\treturn this.getFactory().createPoint(this.points.getCoordinate(n));\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Lineal];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineString;\n\t}\n});\nLineString.serialVersionUID = 3110669828065365560;\n\nfunction Puntal() {}\nextend(Puntal.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Puntal;\n\t}\n});\n\nfunction Point() {\n\tthis.coordinates = null;\n\tvar coordinates = arguments[0],\n\t    factory = arguments[1];\n\tGeometry.call(this, factory);\n\tthis.init(coordinates);\n}\ninherits(Point, Geometry);\nextend(Point.prototype, {\n\tcomputeEnvelopeInternal: function computeEnvelopeInternal() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn new Envelope();\n\t\t}\n\t\tvar env = new Envelope();\n\t\tenv.expandToInclude(this.coordinates.getX(0), this.coordinates.getY(0));\n\t\treturn env;\n\t},\n\tgetSortIndex: function getSortIndex() {\n\t\treturn Geometry.SORTINDEX_POINT;\n\t},\n\tgetCoordinates: function getCoordinates() {\n\t\treturn this.isEmpty() ? [] : [this.getCoordinate()];\n\t},\n\tequalsExact: function equalsExact() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar other = arguments[0],\n\t\t\t    tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.isEmpty() && other.isEmpty()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (this.isEmpty() !== other.isEmpty()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn this.equal(other.getCoordinate(), this.getCoordinate(), tolerance);\n\t\t} else return Geometry.prototype.equalsExact.apply(this, arguments);\n\t},\n\tnormalize: function normalize() {},\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this.coordinates.size() !== 0 ? this.coordinates.getCoordinate(0) : null;\n\t},\n\tgetBoundaryDimension: function getBoundaryDimension() {\n\t\treturn Dimension.FALSE;\n\t},\n\tgetDimension: function getDimension() {\n\t\treturn 0;\n\t},\n\tgetNumPoints: function getNumPoints() {\n\t\treturn this.isEmpty() ? 0 : 1;\n\t},\n\treverse: function reverse() {\n\t\treturn this.copy();\n\t},\n\tgetX: function getX() {\n\t\tif (this.getCoordinate() === null) {\n\t\t\tthrow new IllegalStateException(\"getX called on empty Point\");\n\t\t}\n\t\treturn this.getCoordinate().x;\n\t},\n\tcompareToSameClass: function compareToSameClass() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar other = arguments[0];\n\t\t\tvar point = other;\n\t\t\treturn this.getCoordinate().compareTo(point.getCoordinate());\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar _other = arguments[0],\n\t\t\t    comp = arguments[1];\n\t\t\tvar point = _other;\n\t\t\treturn comp.compare(this.coordinates, point.coordinates);\n\t\t}\n\t},\n\tapply: function apply() {\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\n\t\t\tvar filter = arguments[0];\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tfilter.filter(this.getCoordinate());\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n\t\t\tvar _filter = arguments[0];\n\t\t\tif (this.isEmpty()) return null;\n\t\t\t_filter.filter(this.coordinates, 0);\n\t\t\tif (_filter.isGeometryChanged()) this.geometryChanged();\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\n\t\t\tvar _filter2 = arguments[0];\n\t\t\t_filter2.filter(this);\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n\t\t\tvar _filter3 = arguments[0];\n\t\t\t_filter3.filter(this);\n\t\t}\n\t},\n\tgetBoundary: function getBoundary() {\n\t\treturn this.getFactory().createGeometryCollection(null);\n\t},\n\tclone: function clone() {\n\t\tvar p = Geometry.prototype.clone.call(this);\n\t\tp.coordinates = this.coordinates.clone();\n\t\treturn p;\n\t},\n\tgetGeometryType: function getGeometryType() {\n\t\treturn \"Point\";\n\t},\n\tcopy: function copy() {\n\t\treturn new Point(this.coordinates.copy(), this.factory);\n\t},\n\tgetCoordinateSequence: function getCoordinateSequence() {\n\t\treturn this.coordinates;\n\t},\n\tgetY: function getY() {\n\t\tif (this.getCoordinate() === null) {\n\t\t\tthrow new IllegalStateException(\"getY called on empty Point\");\n\t\t}\n\t\treturn this.getCoordinate().y;\n\t},\n\tisEmpty: function isEmpty() {\n\t\treturn this.coordinates.size() === 0;\n\t},\n\tinit: function init(coordinates) {\n\t\tif (coordinates === null) {\n\t\t\tcoordinates = this.getFactory().getCoordinateSequenceFactory().create([]);\n\t\t}\n\t\tAssert.isTrue(coordinates.size() <= 1);\n\t\tthis.coordinates = coordinates;\n\t},\n\tisSimple: function isSimple() {\n\t\treturn true;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Puntal];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Point;\n\t}\n});\nPoint.serialVersionUID = 4902022702746614570;\n\nfunction Polygonal() {}\nextend(Polygonal.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Polygonal;\n\t}\n});\n\nfunction Polygon() {\n\tthis.shell = null;\n\tthis.holes = null;\n\tvar shell = arguments[0],\n\t    holes = arguments[1],\n\t    factory = arguments[2];\n\tGeometry.call(this, factory);\n\tif (shell === null) {\n\t\tshell = this.getFactory().createLinearRing();\n\t}\n\tif (holes === null) {\n\t\tholes = [];\n\t}\n\tif (Geometry.hasNullElements(holes)) {\n\t\tthrow new IllegalArgumentException(\"holes must not contain null elements\");\n\t}\n\tif (shell.isEmpty() && Geometry.hasNonEmptyElements(holes)) {\n\t\tthrow new IllegalArgumentException(\"shell is empty but holes are not\");\n\t}\n\tthis.shell = shell;\n\tthis.holes = holes;\n}\ninherits(Polygon, Geometry);\nextend(Polygon.prototype, {\n\tcomputeEnvelopeInternal: function computeEnvelopeInternal() {\n\t\treturn this.shell.getEnvelopeInternal();\n\t},\n\tgetSortIndex: function getSortIndex() {\n\t\treturn Geometry.SORTINDEX_POLYGON;\n\t},\n\tgetCoordinates: function getCoordinates() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn [];\n\t\t}\n\t\tvar coordinates = new Array(this.getNumPoints()).fill(null);\n\t\tvar k = -1;\n\t\tvar shellCoordinates = this.shell.getCoordinates();\n\t\tfor (var x = 0; x < shellCoordinates.length; x++) {\n\t\t\tk++;\n\t\t\tcoordinates[k] = shellCoordinates[x];\n\t\t}\n\t\tfor (var i = 0; i < this.holes.length; i++) {\n\t\t\tvar childCoordinates = this.holes[i].getCoordinates();\n\t\t\tfor (var j = 0; j < childCoordinates.length; j++) {\n\t\t\t\tk++;\n\t\t\t\tcoordinates[k] = childCoordinates[j];\n\t\t\t}\n\t\t}\n\t\treturn coordinates;\n\t},\n\tgetArea: function getArea() {\n\t\tvar area = 0.0;\n\t\tarea += Math.abs(CGAlgorithms.signedArea(this.shell.getCoordinateSequence()));\n\t\tfor (var i = 0; i < this.holes.length; i++) {\n\t\t\tarea -= Math.abs(CGAlgorithms.signedArea(this.holes[i].getCoordinateSequence()));\n\t\t}\n\t\treturn area;\n\t},\n\tisRectangle: function isRectangle() {\n\t\tif (this.getNumInteriorRing() !== 0) return false;\n\t\tif (this.shell === null) return false;\n\t\tif (this.shell.getNumPoints() !== 5) return false;\n\t\tvar seq = this.shell.getCoordinateSequence();\n\t\tvar env = this.getEnvelopeInternal();\n\t\tfor (var i = 0; i < 5; i++) {\n\t\t\tvar x = seq.getX(i);\n\t\t\tif (!(x === env.getMinX() || x === env.getMaxX())) return false;\n\t\t\tvar y = seq.getY(i);\n\t\t\tif (!(y === env.getMinY() || y === env.getMaxY())) return false;\n\t\t}\n\t\tvar prevX = seq.getX(0);\n\t\tvar prevY = seq.getY(0);\n\t\tfor (var i = 1; i <= 4; i++) {\n\t\t\tvar x = seq.getX(i);\n\t\t\tvar y = seq.getY(i);\n\t\t\tvar xChanged = x !== prevX;\n\t\t\tvar yChanged = y !== prevY;\n\t\t\tif (xChanged === yChanged) return false;\n\t\t\tprevX = x;\n\t\t\tprevY = y;\n\t\t}\n\t\treturn true;\n\t},\n\tequalsExact: function equalsExact() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar other = arguments[0],\n\t\t\t    tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar otherPolygon = other;\n\t\t\tvar thisShell = this.shell;\n\t\t\tvar otherPolygonShell = otherPolygon.shell;\n\t\t\tif (!thisShell.equalsExact(otherPolygonShell, tolerance)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.holes.length !== otherPolygon.holes.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (var i = 0; i < this.holes.length; i++) {\n\t\t\t\tif (!this.holes[i].equalsExact(otherPolygon.holes[i], tolerance)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else return Geometry.prototype.equalsExact.apply(this, arguments);\n\t},\n\tnormalize: function normalize() {\n\t\tif (arguments.length === 0) {\n\t\t\tthis.normalize(this.shell, true);\n\t\t\tfor (var i = 0; i < this.holes.length; i++) {\n\t\t\t\tthis.normalize(this.holes[i], false);\n\t\t\t}\n\t\t\tArrays.sort(this.holes);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar ring = arguments[0],\n\t\t\t    clockwise = arguments[1];\n\t\t\tif (ring.isEmpty()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar uniqueCoordinates = new Array(ring.getCoordinates().length - 1).fill(null);\n\t\t\tSystem.arraycopy(ring.getCoordinates(), 0, uniqueCoordinates, 0, uniqueCoordinates.length);\n\t\t\tvar minCoordinate = CoordinateArrays.minCoordinate(ring.getCoordinates());\n\t\t\tCoordinateArrays.scroll(uniqueCoordinates, minCoordinate);\n\t\t\tSystem.arraycopy(uniqueCoordinates, 0, ring.getCoordinates(), 0, uniqueCoordinates.length);\n\t\t\tring.getCoordinates()[uniqueCoordinates.length] = uniqueCoordinates[0];\n\t\t\tif (CGAlgorithms.isCCW(ring.getCoordinates()) === clockwise) {\n\t\t\t\tCoordinateArrays.reverse(ring.getCoordinates());\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this.shell.getCoordinate();\n\t},\n\tgetNumInteriorRing: function getNumInteriorRing() {\n\t\treturn this.holes.length;\n\t},\n\tgetBoundaryDimension: function getBoundaryDimension() {\n\t\treturn 1;\n\t},\n\tgetDimension: function getDimension() {\n\t\treturn 2;\n\t},\n\tgetLength: function getLength() {\n\t\tvar len = 0.0;\n\t\tlen += this.shell.getLength();\n\t\tfor (var i = 0; i < this.holes.length; i++) {\n\t\t\tlen += this.holes[i].getLength();\n\t\t}\n\t\treturn len;\n\t},\n\tgetNumPoints: function getNumPoints() {\n\t\tvar numPoints = this.shell.getNumPoints();\n\t\tfor (var i = 0; i < this.holes.length; i++) {\n\t\t\tnumPoints += this.holes[i].getNumPoints();\n\t\t}\n\t\treturn numPoints;\n\t},\n\treverse: function reverse() {\n\t\tvar poly = this.copy();\n\t\tpoly.shell = this.shell.copy().reverse();\n\t\tpoly.holes = new Array(this.holes.length).fill(null);\n\t\tfor (var i = 0; i < this.holes.length; i++) {\n\t\t\tpoly.holes[i] = this.holes[i].copy().reverse();\n\t\t}\n\t\treturn poly;\n\t},\n\tconvexHull: function convexHull() {\n\t\treturn this.getExteriorRing().convexHull();\n\t},\n\tcompareToSameClass: function compareToSameClass() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar o = arguments[0];\n\t\t\tvar thisShell = this.shell;\n\t\t\tvar otherShell = o.shell;\n\t\t\treturn thisShell.compareToSameClass(otherShell);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar _o = arguments[0],\n\t\t\t    comp = arguments[1];\n\t\t\tvar poly = _o;\n\t\t\tvar thisShell = this.shell;\n\t\t\tvar otherShell = poly.shell;\n\t\t\tvar shellComp = thisShell.compareToSameClass(otherShell, comp);\n\t\t\tif (shellComp !== 0) return shellComp;\n\t\t\tvar nHole1 = this.getNumInteriorRing();\n\t\t\tvar nHole2 = poly.getNumInteriorRing();\n\t\t\tvar i = 0;\n\t\t\twhile (i < nHole1 && i < nHole2) {\n\t\t\t\tvar thisHole = this.getInteriorRingN(i);\n\t\t\t\tvar otherHole = poly.getInteriorRingN(i);\n\t\t\t\tvar holeComp = thisHole.compareToSameClass(otherHole, comp);\n\t\t\t\tif (holeComp !== 0) return holeComp;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tif (i < nHole1) return 1;\n\t\t\tif (i < nHole2) return -1;\n\t\t\treturn 0;\n\t\t}\n\t},\n\tapply: function apply() {\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\n\t\t\tvar filter = arguments[0];\n\t\t\tthis.shell.apply(filter);\n\t\t\tfor (var i = 0; i < this.holes.length; i++) {\n\t\t\t\tthis.holes[i].apply(filter);\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n\t\t\tvar _filter = arguments[0];\n\t\t\tthis.shell.apply(_filter);\n\t\t\tif (!_filter.isDone()) {\n\t\t\t\tfor (var i = 0; i < this.holes.length; i++) {\n\t\t\t\t\tthis.holes[i].apply(_filter);\n\t\t\t\t\tif (_filter.isDone()) break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_filter.isGeometryChanged()) this.geometryChanged();\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\n\t\t\tvar _filter2 = arguments[0];\n\t\t\t_filter2.filter(this);\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n\t\t\tvar _filter3 = arguments[0];\n\t\t\t_filter3.filter(this);\n\t\t\tthis.shell.apply(_filter3);\n\t\t\tfor (var i = 0; i < this.holes.length; i++) {\n\t\t\t\tthis.holes[i].apply(_filter3);\n\t\t\t}\n\t\t}\n\t},\n\tgetBoundary: function getBoundary() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn this.getFactory().createMultiLineString();\n\t\t}\n\t\tvar rings = new Array(this.holes.length + 1).fill(null);\n\t\trings[0] = this.shell;\n\t\tfor (var i = 0; i < this.holes.length; i++) {\n\t\t\trings[i + 1] = this.holes[i];\n\t\t}\n\t\tif (rings.length <= 1) return this.getFactory().createLinearRing(rings[0].getCoordinateSequence());\n\t\treturn this.getFactory().createMultiLineString(rings);\n\t},\n\tclone: function clone() {\n\t\tvar poly = Geometry.prototype.clone.call(this);\n\t\tpoly.shell = this.shell.clone();\n\t\tpoly.holes = new Array(this.holes.length).fill(null);\n\t\tfor (var i = 0; i < this.holes.length; i++) {\n\t\t\tpoly.holes[i] = this.holes[i].clone();\n\t\t}\n\t\treturn poly;\n\t},\n\tgetGeometryType: function getGeometryType() {\n\t\treturn \"Polygon\";\n\t},\n\tcopy: function copy() {\n\t\tvar shell = this.shell.copy();\n\t\tvar holes = new Array(this.holes.length).fill(null);\n\t\tfor (var i = 0; i < holes.length; i++) {\n\t\t\tholes[i] = this.holes[i].copy();\n\t\t}\n\t\treturn new Polygon(shell, holes, this.factory);\n\t},\n\tgetExteriorRing: function getExteriorRing() {\n\t\treturn this.shell;\n\t},\n\tisEmpty: function isEmpty() {\n\t\treturn this.shell.isEmpty();\n\t},\n\tgetInteriorRingN: function getInteriorRingN(n) {\n\t\treturn this.holes[n];\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Polygonal];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Polygon;\n\t}\n});\nPolygon.serialVersionUID = -3494792200821764533;\n\nfunction MultiPoint() {\n\tvar points = arguments[0],\n\t    factory = arguments[1];\n\tGeometryCollection.call(this, points, factory);\n}\ninherits(MultiPoint, GeometryCollection);\nextend(MultiPoint.prototype, {\n\tgetSortIndex: function getSortIndex() {\n\t\treturn Geometry.SORTINDEX_MULTIPOINT;\n\t},\n\tisValid: function isValid() {\n\t\treturn true;\n\t},\n\tequalsExact: function equalsExact() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar other = arguments[0],\n\t\t\t    tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn GeometryCollection.prototype.equalsExact.call(this, other, tolerance);\n\t\t} else return GeometryCollection.prototype.equalsExact.apply(this, arguments);\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar n = arguments[0];\n\t\t\treturn this.geometries[n].getCoordinate();\n\t\t} else return GeometryCollection.prototype.getCoordinate.apply(this, arguments);\n\t},\n\tgetBoundaryDimension: function getBoundaryDimension() {\n\t\treturn Dimension.FALSE;\n\t},\n\tgetDimension: function getDimension() {\n\t\treturn 0;\n\t},\n\tgetBoundary: function getBoundary() {\n\t\treturn this.getFactory().createGeometryCollection(null);\n\t},\n\tgetGeometryType: function getGeometryType() {\n\t\treturn \"MultiPoint\";\n\t},\n\tcopy: function copy() {\n\t\tvar points = new Array(this.geometries.length).fill(null);\n\t\tfor (var i = 0; i < points.length; i++) {\n\t\t\tpoints[i] = this.geometries[i].copy();\n\t\t}\n\t\treturn new MultiPoint(points, this.factory);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Puntal];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MultiPoint;\n\t}\n});\nMultiPoint.serialVersionUID = -8048474874175355449;\n\nfunction LinearRing() {\n\tif (arguments[0] instanceof Coordinate && arguments[1] instanceof GeometryFactory) {\n\t\tvar points = arguments[0],\n\t\t    factory = arguments[1];\n\t\tLinearRing.call(this, factory.getCoordinateSequenceFactory().create(points), factory);\n\t} else if (hasInterface(arguments[0], CoordinateSequence) && arguments[1] instanceof GeometryFactory) {\n\t\tvar _points = arguments[0],\n\t\t    _factory = arguments[1];\n\t\tLineString.call(this, _points, _factory);\n\t\tthis.validateConstruction();\n\t}\n}\ninherits(LinearRing, LineString);\nextend(LinearRing.prototype, {\n\tgetSortIndex: function getSortIndex() {\n\t\treturn Geometry.SORTINDEX_LINEARRING;\n\t},\n\tgetBoundaryDimension: function getBoundaryDimension() {\n\t\treturn Dimension.FALSE;\n\t},\n\tisClosed: function isClosed() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn true;\n\t\t}\n\t\treturn LineString.prototype.isClosed.call(this);\n\t},\n\treverse: function reverse() {\n\t\tvar seq = this.points.copy();\n\t\tCoordinateSequences.reverse(seq);\n\t\tvar rev = this.getFactory().createLinearRing(seq);\n\t\treturn rev;\n\t},\n\tvalidateConstruction: function validateConstruction() {\n\t\tif (!this.isEmpty() && !LineString.prototype.isClosed.call(this)) {\n\t\t\tthrow new IllegalArgumentException(\"Points of LinearRing do not form a closed linestring\");\n\t\t}\n\t\tif (this.getCoordinateSequence().size() >= 1 && this.getCoordinateSequence().size() < LinearRing.MINIMUM_VALID_SIZE) {\n\t\t\tthrow new IllegalArgumentException(\"Invalid number of points in LinearRing (found \" + this.getCoordinateSequence().size() + \" - must be 0 or >= 4)\");\n\t\t}\n\t},\n\tgetGeometryType: function getGeometryType() {\n\t\treturn \"LinearRing\";\n\t},\n\tcopy: function copy() {\n\t\treturn new LinearRing(this.points.copy(), this.factory);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LinearRing;\n\t}\n});\nLinearRing.MINIMUM_VALID_SIZE = 4;\nLinearRing.serialVersionUID = -4261142084085851829;\n\nfunction MultiPolygon() {\n\tvar polygons = arguments[0],\n\t    factory = arguments[1];\n\tGeometryCollection.call(this, polygons, factory);\n}\ninherits(MultiPolygon, GeometryCollection);\nextend(MultiPolygon.prototype, {\n\tgetSortIndex: function getSortIndex() {\n\t\treturn Geometry.SORTINDEX_MULTIPOLYGON;\n\t},\n\tequalsExact: function equalsExact() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar other = arguments[0],\n\t\t\t    tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn GeometryCollection.prototype.equalsExact.call(this, other, tolerance);\n\t\t} else return GeometryCollection.prototype.equalsExact.apply(this, arguments);\n\t},\n\tgetBoundaryDimension: function getBoundaryDimension() {\n\t\treturn 1;\n\t},\n\tgetDimension: function getDimension() {\n\t\treturn 2;\n\t},\n\treverse: function reverse() {\n\t\tvar n = this.geometries.length;\n\t\tvar revGeoms = new Array(n).fill(null);\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\trevGeoms[i] = this.geometries[i].reverse();\n\t\t}\n\t\treturn this.getFactory().createMultiPolygon(revGeoms);\n\t},\n\tgetBoundary: function getBoundary() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn this.getFactory().createMultiLineString();\n\t\t}\n\t\tvar allRings = new ArrayList();\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\n\t\t\tvar polygon = this.geometries[i];\n\t\t\tvar rings = polygon.getBoundary();\n\t\t\tfor (var j = 0; j < rings.getNumGeometries(); j++) {\n\t\t\t\tallRings.add(rings.getGeometryN(j));\n\t\t\t}\n\t\t}\n\t\tvar allRingsArray = new Array(allRings.size()).fill(null);\n\t\treturn this.getFactory().createMultiLineString(allRings.toArray(allRingsArray));\n\t},\n\tgetGeometryType: function getGeometryType() {\n\t\treturn \"MultiPolygon\";\n\t},\n\tcopy: function copy() {\n\t\tvar polygons = new Array(this.geometries.length).fill(null);\n\t\tfor (var i = 0; i < polygons.length; i++) {\n\t\t\tpolygons[i] = this.geometries[i].copy();\n\t\t}\n\t\treturn new MultiPolygon(polygons, this.factory);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Polygonal];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MultiPolygon;\n\t}\n});\nMultiPolygon.serialVersionUID = -551033529766975875;\n\nfunction GeometryEditor() {\n\tthis.factory = null;\n\tthis.isUserDataCopied = false;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tvar factory = arguments[0];\n\t\tthis.factory = factory;\n\t}\n}\nextend(GeometryEditor.prototype, {\n\tsetCopyUserData: function setCopyUserData(isUserDataCopied) {\n\t\tthis.isUserDataCopied = isUserDataCopied;\n\t},\n\tedit: function edit(geometry, operation) {\n\t\tif (geometry === null) return null;\n\t\tvar result = this.editInternal(geometry, operation);\n\t\tif (this.isUserDataCopied) {\n\t\t\tresult.setUserData(geometry.getUserData());\n\t\t}\n\t\treturn result;\n\t},\n\teditInternal: function editInternal(geometry, operation) {\n\t\tif (this.factory === null) this.factory = geometry.getFactory();\n\t\tif (geometry instanceof GeometryCollection) {\n\t\t\treturn this.editGeometryCollection(geometry, operation);\n\t\t}\n\t\tif (geometry instanceof Polygon) {\n\t\t\treturn this.editPolygon(geometry, operation);\n\t\t}\n\t\tif (geometry instanceof Point) {\n\t\t\treturn operation.edit(geometry, this.factory);\n\t\t}\n\t\tif (geometry instanceof LineString) {\n\t\t\treturn operation.edit(geometry, this.factory);\n\t\t}\n\t\tAssert.shouldNeverReachHere(\"Unsupported Geometry class: \" + geometry.getClass().getName());\n\t\treturn null;\n\t},\n\teditGeometryCollection: function editGeometryCollection(collection, operation) {\n\t\tvar collectionForType = operation.edit(collection, this.factory);\n\t\tvar geometries = new ArrayList();\n\t\tfor (var i = 0; i < collectionForType.getNumGeometries(); i++) {\n\t\t\tvar geometry = this.edit(collectionForType.getGeometryN(i), operation);\n\t\t\tif (geometry === null || geometry.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tgeometries.add(geometry);\n\t\t}\n\t\tif (collectionForType.getClass() === MultiPoint) {\n\t\t\treturn this.factory.createMultiPoint(geometries.toArray([]));\n\t\t}\n\t\tif (collectionForType.getClass() === MultiLineString) {\n\t\t\treturn this.factory.createMultiLineString(geometries.toArray([]));\n\t\t}\n\t\tif (collectionForType.getClass() === MultiPolygon) {\n\t\t\treturn this.factory.createMultiPolygon(geometries.toArray([]));\n\t\t}\n\t\treturn this.factory.createGeometryCollection(geometries.toArray([]));\n\t},\n\teditPolygon: function editPolygon(polygon, operation) {\n\t\tvar newPolygon = operation.edit(polygon, this.factory);\n\t\tif (newPolygon === null) newPolygon = this.factory.createPolygon(null);\n\t\tif (newPolygon.isEmpty()) {\n\t\t\treturn newPolygon;\n\t\t}\n\t\tvar shell = this.edit(newPolygon.getExteriorRing(), operation);\n\t\tif (shell === null || shell.isEmpty()) {\n\t\t\treturn this.factory.createPolygon();\n\t\t}\n\t\tvar holes = new ArrayList();\n\t\tfor (var i = 0; i < newPolygon.getNumInteriorRing(); i++) {\n\t\t\tvar hole = this.edit(newPolygon.getInteriorRingN(i), operation);\n\t\t\tif (hole === null || hole.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tholes.add(hole);\n\t\t}\n\t\treturn this.factory.createPolygon(shell, holes.toArray([]));\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryEditor;\n\t}\n});\nfunction GeometryEditorOperation() {}\nGeometryEditor.GeometryEditorOperation = GeometryEditorOperation;\nfunction NoOpGeometryOperation() {}\nextend(NoOpGeometryOperation.prototype, {\n\tedit: function edit(geometry, factory) {\n\t\treturn geometry;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [GeometryEditorOperation];\n\t},\n\tgetClass: function getClass() {\n\t\treturn NoOpGeometryOperation;\n\t}\n});\nfunction CoordinateOperation() {}\nextend(CoordinateOperation.prototype, {\n\tedit: function edit(geometry, factory) {\n\t\tvar coords = this.editCoordinates(geometry.getCoordinates(), geometry);\n\t\tif (coords === null) return geometry;\n\t\tif (geometry instanceof LinearRing) {\n\t\t\treturn factory.createLinearRing(coords);\n\t\t}\n\t\tif (geometry instanceof LineString) {\n\t\t\treturn factory.createLineString(coords);\n\t\t}\n\t\tif (geometry instanceof Point) {\n\t\t\tif (coords.length > 0) {\n\t\t\t\treturn factory.createPoint(coords[0]);\n\t\t\t} else {\n\t\t\t\treturn factory.createPoint();\n\t\t\t}\n\t\t}\n\t\treturn geometry;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [GeometryEditorOperation];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CoordinateOperation;\n\t}\n});\nfunction CoordinateSequenceOperation() {}\nextend(CoordinateSequenceOperation.prototype, {\n\tedit: function edit(geometry, factory) {\n\t\tif (geometry instanceof LinearRing) {\n\t\t\treturn factory.createLinearRing(this.edit(geometry.getCoordinateSequence(), geometry));\n\t\t}\n\t\tif (geometry instanceof LineString) {\n\t\t\treturn factory.createLineString(this.edit(geometry.getCoordinateSequence(), geometry));\n\t\t}\n\t\tif (geometry instanceof Point) {\n\t\t\treturn factory.createPoint(this.edit(geometry.getCoordinateSequence(), geometry));\n\t\t}\n\t\treturn geometry;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [GeometryEditorOperation];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CoordinateSequenceOperation;\n\t}\n});\nGeometryEditor.NoOpGeometryOperation = NoOpGeometryOperation;\nGeometryEditor.CoordinateOperation = CoordinateOperation;\nGeometryEditor.CoordinateSequenceOperation = CoordinateSequenceOperation;\n\nfunction CoordinateArraySequence() {\n\tthis.dimension = 3;\n\tthis.coordinates = null;\n\tif (arguments.length === 1) {\n\t\tif (arguments[0] instanceof Array) {\n\t\t\tvar coordinates = arguments[0];\n\t\t\tCoordinateArraySequence.call(this, coordinates, 3);\n\t\t} else if (Number.isInteger(arguments[0])) {\n\t\t\tvar size = arguments[0];\n\t\t\tthis.coordinates = new Array(size).fill(null);\n\t\t\tfor (var i = 0; i < size; i++) {\n\t\t\t\tthis.coordinates[i] = new Coordinate();\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\tvar coordSeq = arguments[0];\n\t\t\tif (coordSeq === null) {\n\t\t\t\tthis.coordinates = new Array(0).fill(null);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthis.dimension = coordSeq.getDimension();\n\t\t\tthis.coordinates = new Array(coordSeq.size()).fill(null);\n\t\t\tfor (var i = 0; i < this.coordinates.length; i++) {\n\t\t\t\tthis.coordinates[i] = coordSeq.getCoordinateCopy(i);\n\t\t\t}\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tif (arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\n\t\t\tvar _coordinates = arguments[0],\n\t\t\t    dimension = arguments[1];\n\t\t\tthis.coordinates = _coordinates;\n\t\t\tthis.dimension = dimension;\n\t\t\tif (_coordinates === null) this.coordinates = new Array(0).fill(null);\n\t\t} else if (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n\t\t\tvar _size = arguments[0],\n\t\t\t    _dimension = arguments[1];\n\t\t\tthis.coordinates = new Array(_size).fill(null);\n\t\t\tthis.dimension = _dimension;\n\t\t\tfor (var i = 0; i < _size; i++) {\n\t\t\t\tthis.coordinates[i] = new Coordinate();\n\t\t\t}\n\t\t}\n\t}\n}\nextend(CoordinateArraySequence.prototype, {\n\tsetOrdinate: function setOrdinate(index, ordinateIndex, value) {\n\t\tswitch (ordinateIndex) {\n\t\t\tcase CoordinateSequence.X:\n\t\t\t\tthis.coordinates[index].x = value;\n\t\t\t\tbreak;\n\t\t\tcase CoordinateSequence.Y:\n\t\t\t\tthis.coordinates[index].y = value;\n\t\t\t\tbreak;\n\t\t\tcase CoordinateSequence.Z:\n\t\t\t\tthis.coordinates[index].z = value;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new IllegalArgumentException(\"invalid ordinateIndex\");\n\t\t}\n\t},\n\tsize: function size() {\n\t\treturn this.coordinates.length;\n\t},\n\tgetOrdinate: function getOrdinate(index, ordinateIndex) {\n\t\tswitch (ordinateIndex) {\n\t\t\tcase CoordinateSequence.X:\n\t\t\t\treturn this.coordinates[index].x;\n\t\t\tcase CoordinateSequence.Y:\n\t\t\t\treturn this.coordinates[index].y;\n\t\t\tcase CoordinateSequence.Z:\n\t\t\t\treturn this.coordinates[index].z;\n\t\t}\n\t\treturn Double.NaN;\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar i = arguments[0];\n\t\t\treturn this.coordinates[i];\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar index = arguments[0],\n\t\t\t    coord = arguments[1];\n\t\t\tcoord.x = this.coordinates[index].x;\n\t\t\tcoord.y = this.coordinates[index].y;\n\t\t\tcoord.z = this.coordinates[index].z;\n\t\t}\n\t},\n\tgetCoordinateCopy: function getCoordinateCopy(i) {\n\t\treturn new Coordinate(this.coordinates[i]);\n\t},\n\tgetDimension: function getDimension() {\n\t\treturn this.dimension;\n\t},\n\tgetX: function getX(index) {\n\t\treturn this.coordinates[index].x;\n\t},\n\tclone: function clone() {\n\t\tvar cloneCoordinates = new Array(this.size()).fill(null);\n\t\tfor (var i = 0; i < this.coordinates.length; i++) {\n\t\t\tcloneCoordinates[i] = this.coordinates[i].clone();\n\t\t}\n\t\treturn new CoordinateArraySequence(cloneCoordinates, this.dimension);\n\t},\n\texpandEnvelope: function expandEnvelope(env) {\n\t\tfor (var i = 0; i < this.coordinates.length; i++) {\n\t\t\tenv.expandToInclude(this.coordinates[i]);\n\t\t}\n\t\treturn env;\n\t},\n\tcopy: function copy() {\n\t\tvar cloneCoordinates = new Array(this.size()).fill(null);\n\t\tfor (var i = 0; i < this.coordinates.length; i++) {\n\t\t\tcloneCoordinates[i] = this.coordinates[i].copy();\n\t\t}\n\t\treturn new CoordinateArraySequence(cloneCoordinates, this.dimension);\n\t},\n\ttoString: function toString() {\n\t\tif (this.coordinates.length > 0) {\n\t\t\tvar strBuf = new StringBuffer(17 * this.coordinates.length);\n\t\t\tstrBuf.append('(');\n\t\t\tstrBuf.append(this.coordinates[0]);\n\t\t\tfor (var i = 1; i < this.coordinates.length; i++) {\n\t\t\t\tstrBuf.append(\", \");\n\t\t\t\tstrBuf.append(this.coordinates[i]);\n\t\t\t}\n\t\t\tstrBuf.append(')');\n\t\t\treturn strBuf.toString();\n\t\t} else {\n\t\t\treturn \"()\";\n\t\t}\n\t},\n\tgetY: function getY(index) {\n\t\treturn this.coordinates[index].y;\n\t},\n\ttoCoordinateArray: function toCoordinateArray() {\n\t\treturn this.coordinates;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [CoordinateSequence, Serializable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CoordinateArraySequence;\n\t}\n});\nCoordinateArraySequence.serialVersionUID = -915438501601840650;\n\nfunction CoordinateArraySequenceFactory() {}\nextend(CoordinateArraySequenceFactory.prototype, {\n\treadResolve: function readResolve() {\n\t\treturn CoordinateArraySequenceFactory.instance();\n\t},\n\tcreate: function create() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tvar coordinates = arguments[0];\n\t\t\t\treturn new CoordinateArraySequence(coordinates);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tvar coordSeq = arguments[0];\n\t\t\t\treturn new CoordinateArraySequence(coordSeq);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar size = arguments[0],\n\t\t\t    dimension = arguments[1];\n\t\t\tif (dimension > 3) dimension = 3;\n\t\t\tif (dimension < 2) return new CoordinateArraySequence(size);\n\t\t\treturn new CoordinateArraySequence(size, dimension);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [CoordinateSequenceFactory, Serializable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CoordinateArraySequenceFactory;\n\t}\n});\nCoordinateArraySequenceFactory.instance = function () {\n\treturn CoordinateArraySequenceFactory.instanceObject;\n};\nCoordinateArraySequenceFactory.serialVersionUID = -4099577099607551657;\nCoordinateArraySequenceFactory.instanceObject = new CoordinateArraySequenceFactory();\n\n// shared pointer\nvar i;\n// shortcuts\nvar defineProperty = Object.defineProperty;\nfunction is(a, b) {\n  return a === b || a !== a && b !== b;\n} // eslint-disable-line\n\nvar MapPolyfill = createCollection({\n  // WeakMap#delete(key:void*):boolean\n  'delete': sharedDelete,\n  // :was Map#get(key:void*[, d3fault:void*]):void*\n  // Map#has(key:void*):boolean\n  has: mapHas,\n  // Map#get(key:void*):boolean\n  get: sharedGet,\n  // Map#set(key:void*, value:void*):void\n  set: sharedSet,\n  // Map#keys(void):Iterator\n  keys: sharedKeys,\n  // Map#values(void):Iterator\n  values: sharedValues,\n  // Map#entries(void):Iterator\n  entries: mapEntries,\n  // Map#forEach(callback:Function, context:void*):void ==> callback.call(context, key, value, mapObject) === not in specs`\n  forEach: sharedForEach,\n  // Map#clear():\n  clear: sharedClear\n});\n\n/**\n * ES6 collection constructor\n * @return {Function} a collection class\n */\nfunction createCollection(proto, objectOnly) {\n  function Collection(a) {\n    if (!this || this.constructor !== Collection) return new Collection(a);\n    this._keys = [];\n    this._values = [];\n    this._itp = []; // iteration pointers\n    this.objectOnly = objectOnly;\n\n    // parse initial iterable argument passed\n    if (a) init.call(this, a);\n  }\n\n  // define size for non object-only collections\n  if (!objectOnly) {\n    defineProperty(proto, 'size', {\n      get: sharedSize\n    });\n  }\n\n  // set prototype\n  proto.constructor = Collection;\n  Collection.prototype = proto;\n\n  return Collection;\n}\n\n/** parse initial iterable argument passed */\nfunction init(a) {\n  // init Set argument, like `[1,2,3,{}]`\n  if (this.add) a.forEach(this.add, this);\n  // init Map argument like `[[1,2], [{}, 4]]`\n  else a.forEach(function (a) {\n      this.set(a[0], a[1]);\n    }, this);\n}\n\n/** delete */\nfunction sharedDelete(key) {\n  if (this.has(key)) {\n    this._keys.splice(i, 1);\n    this._values.splice(i, 1);\n    // update iteration pointers\n    this._itp.forEach(function (p) {\n      if (i < p[0]) p[0]--;\n    });\n  }\n  // Aurora here does it while Canary doesn't\n  return i > -1;\n}\n\nfunction sharedGet(key) {\n  return this.has(key) ? this._values[i] : undefined;\n}\n\nfunction has(list, key) {\n  if (this.objectOnly && key !== Object(key)) throw new TypeError('Invalid value used as weak collection key');\n  // NaN or 0 passed\n  if (key !== key || key === 0) for (i = list.length; i-- && !is(list[i], key);) {} // eslint-disable-line\n  else i = list.indexOf(key);\n  return i > -1;\n}\n\nfunction mapHas(value) {\n  return has.call(this, this._keys, value);\n}\n\n/** @chainable */\nfunction sharedSet(key, value) {\n  this.has(key) ? this._values[i] = value : this._values[this._keys.push(key) - 1] = value;\n  return this;\n}\n\nfunction sharedClear() {\n  (this._keys || 0).length = this._values.length = 0;\n}\n\n/** keys, values, and iterate related methods */\nfunction sharedKeys() {\n  return sharedIterator(this._itp, this._keys);\n}\n\nfunction sharedValues() {\n  return sharedIterator(this._itp, this._values);\n}\n\nfunction mapEntries() {\n  return sharedIterator(this._itp, this._keys, this._values);\n}\n\nfunction sharedIterator(itp, array, array2) {\n  var p = [0];\n  var done = false;\n  itp.push(p);\n  return {\n    next: function next() {\n      var v;\n      var k = p[0];\n      if (!done && k < array.length) {\n        v = array2 ? [array[k], array2[k]] : array[k];\n        p[0]++;\n      } else {\n        done = true;\n        itp.splice(itp.indexOf(p), 1);\n      }\n      return { done: done, value: v };\n    }\n  };\n}\n\nfunction sharedSize() {\n  return this._values.length;\n}\n\nfunction sharedForEach(callback, context) {\n  var it = this.entries();\n  for (;;) {\n    var r = it.next();\n    if (r.done) break;\n    callback.call(context, r.value[1], r.value[0], this);\n  }\n}\n\nvar MapImpl = typeof Map === 'undefined' || !Map.prototype.values ? MapPolyfill : Map;\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html\n *\n * @extends {javascript.util.Map}\n * @constructor\n * @private\n */\nfunction HashMap() {\n  /**\n   * @type {Object}\n   * @private\n  */\n  this.map_ = new MapImpl();\n}\nHashMap.prototype = new Map$1();\n\n/**\n * @override\n */\nHashMap.prototype.get = function (key) {\n  return this.map_.get(key) || null;\n};\n\n/**\n * @override\n */\nHashMap.prototype.put = function (key, value) {\n  this.map_.set(key, value);\n  return value;\n};\n\n/**\n * @override\n */\nHashMap.prototype.values = function () {\n  var arrayList = new ArrayList();\n  var it = this.map_.values();\n  var o = it.next();\n  while (!o.done) {\n    arrayList.add(o.value);\n    o = it.next();\n  }\n  return arrayList;\n};\n\n/**\n * @override\n */\nHashMap.prototype.entrySet = function () {\n  var hashSet = new HashSet();\n  this.map_.entries().forEach(function (entry) {\n    return hashSet.add(entry);\n  });\n  return hashSet;\n};\n\n/**\n * @override\n */\nHashMap.prototype.size = function () {\n  return this.map_.size();\n};\n\nfunction PrecisionModel() {\n\tthis.modelType = null;\n\tthis.scale = null;\n\tif (arguments.length === 0) {\n\t\tthis.modelType = PrecisionModel.FLOATING;\n\t} else if (arguments.length === 1) {\n\t\tif (arguments[0] instanceof Type) {\n\t\t\tvar modelType = arguments[0];\n\t\t\tthis.modelType = modelType;\n\t\t\tif (modelType === PrecisionModel.FIXED) {\n\t\t\t\tthis.setScale(1.0);\n\t\t\t}\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tvar scale = arguments[0];\n\t\t\tthis.modelType = PrecisionModel.FIXED;\n\t\t\tthis.setScale(scale);\n\t\t} else if (arguments[0] instanceof PrecisionModel) {\n\t\t\tvar pm = arguments[0];\n\t\t\tthis.modelType = pm.modelType;\n\t\t\tthis.scale = pm.scale;\n\t\t}\n\t}\n}\nextend(PrecisionModel.prototype, {\n\tequals: function equals(other) {\n\t\tif (!(other instanceof PrecisionModel)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar otherPrecisionModel = other;\n\t\treturn this.modelType === otherPrecisionModel.modelType && this.scale === otherPrecisionModel.scale;\n\t},\n\tcompareTo: function compareTo(o) {\n\t\tvar other = o;\n\t\tvar sigDigits = this.getMaximumSignificantDigits();\n\t\tvar otherSigDigits = other.getMaximumSignificantDigits();\n\t\treturn new Integer(sigDigits).compareTo(new Integer(otherSigDigits));\n\t},\n\tgetScale: function getScale() {\n\t\treturn this.scale;\n\t},\n\tisFloating: function isFloating() {\n\t\treturn this.modelType === PrecisionModel.FLOATING || this.modelType === PrecisionModel.FLOATING_SINGLE;\n\t},\n\tgetType: function getType() {\n\t\treturn this.modelType;\n\t},\n\ttoString: function toString() {\n\t\tvar description = \"UNKNOWN\";\n\t\tif (this.modelType === PrecisionModel.FLOATING) {\n\t\t\tdescription = \"Floating\";\n\t\t} else if (this.modelType === PrecisionModel.FLOATING_SINGLE) {\n\t\t\tdescription = \"Floating-Single\";\n\t\t} else if (this.modelType === PrecisionModel.FIXED) {\n\t\t\tdescription = \"Fixed (Scale=\" + this.getScale() + \")\";\n\t\t}\n\t\treturn description;\n\t},\n\tmakePrecise: function makePrecise() {\n\t\tif (typeof arguments[0] === \"number\") {\n\t\t\tvar val = arguments[0];\n\t\t\tif (Double.isNaN(val)) return val;\n\t\t\tif (this.modelType === PrecisionModel.FLOATING_SINGLE) {\n\t\t\t\tvar floatSingleVal = val;\n\t\t\t\treturn floatSingleVal;\n\t\t\t}\n\t\t\tif (this.modelType === PrecisionModel.FIXED) {\n\t\t\t\treturn Math.round(val * this.scale) / this.scale;\n\t\t\t}\n\t\t\treturn val;\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tvar coord = arguments[0];\n\t\t\tif (this.modelType === PrecisionModel.FLOATING) return null;\n\t\t\tcoord.x = this.makePrecise(coord.x);\n\t\t\tcoord.y = this.makePrecise(coord.y);\n\t\t}\n\t},\n\tgetMaximumSignificantDigits: function getMaximumSignificantDigits() {\n\t\tvar maxSigDigits = 16;\n\t\tif (this.modelType === PrecisionModel.FLOATING) {\n\t\t\tmaxSigDigits = 16;\n\t\t} else if (this.modelType === PrecisionModel.FLOATING_SINGLE) {\n\t\t\tmaxSigDigits = 6;\n\t\t} else if (this.modelType === PrecisionModel.FIXED) {\n\t\t\tmaxSigDigits = 1 + Math.trunc(Math.ceil(Math.log(this.getScale()) / Math.log(10)));\n\t\t}\n\t\treturn maxSigDigits;\n\t},\n\tsetScale: function setScale(scale) {\n\t\tthis.scale = Math.abs(scale);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Serializable, Comparable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PrecisionModel;\n\t}\n});\nPrecisionModel.mostPrecise = function (pm1, pm2) {\n\tif (pm1.compareTo(pm2) >= 0) return pm1;\n\treturn pm2;\n};\nfunction Type() {\n\tthis.name = null;\n\tvar name = arguments[0];\n\tthis.name = name;\n\tType.nameToTypeMap.put(name, this);\n}\nextend(Type.prototype, {\n\treadResolve: function readResolve() {\n\t\treturn Type.nameToTypeMap.get(this.name);\n\t},\n\ttoString: function toString() {\n\t\treturn this.name;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Serializable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Type;\n\t}\n});\nType.serialVersionUID = -5528602631731589822;\nType.nameToTypeMap = new HashMap();\nPrecisionModel.Type = Type;\nPrecisionModel.serialVersionUID = 7777263578777803835;\nPrecisionModel.FIXED = new Type(\"FIXED\");\nPrecisionModel.FLOATING = new Type(\"FLOATING\");\nPrecisionModel.FLOATING_SINGLE = new Type(\"FLOATING SINGLE\");\nPrecisionModel.maximumPreciseValue = 9007199254740992.0;\n\nfunction GeometryFactory() {\n\tthis.precisionModel = null;\n\tthis.coordinateSequenceFactory = null;\n\tthis.SRID = null;\n\tif (arguments.length === 0) {\n\t\tGeometryFactory.call(this, new PrecisionModel(), 0);\n\t} else if (arguments.length === 1) {\n\t\tif (hasInterface(arguments[0], CoordinateSequenceFactory)) {\n\t\t\tvar coordinateSequenceFactory = arguments[0];\n\t\t\tGeometryFactory.call(this, new PrecisionModel(), 0, coordinateSequenceFactory);\n\t\t} else if (arguments[0] instanceof PrecisionModel) {\n\t\t\tvar precisionModel = arguments[0];\n\t\t\tGeometryFactory.call(this, precisionModel, 0, GeometryFactory.getDefaultCoordinateSequenceFactory());\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tvar _precisionModel = arguments[0],\n\t\t    SRID = arguments[1];\n\t\tGeometryFactory.call(this, _precisionModel, SRID, GeometryFactory.getDefaultCoordinateSequenceFactory());\n\t} else if (arguments.length === 3) {\n\t\tvar _precisionModel2 = arguments[0],\n\t\t    _SRID = arguments[1],\n\t\t    _coordinateSequenceFactory = arguments[2];\n\t\tthis.precisionModel = _precisionModel2;\n\t\tthis.coordinateSequenceFactory = _coordinateSequenceFactory;\n\t\tthis.SRID = _SRID;\n\t}\n}\nextend(GeometryFactory.prototype, {\n\ttoGeometry: function toGeometry(envelope) {\n\t\tif (envelope.isNull()) {\n\t\t\treturn this.createPoint(null);\n\t\t}\n\t\tif (envelope.getMinX() === envelope.getMaxX() && envelope.getMinY() === envelope.getMaxY()) {\n\t\t\treturn this.createPoint(new Coordinate(envelope.getMinX(), envelope.getMinY()));\n\t\t}\n\t\tif (envelope.getMinX() === envelope.getMaxX() || envelope.getMinY() === envelope.getMaxY()) {\n\t\t\treturn this.createLineString([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY())]);\n\t\t}\n\t\treturn this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMinY())]), null);\n\t},\n\tcreateLineString: function createLineString() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.createLineString(this.getCoordinateSequenceFactory().create([]));\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tvar coordinates = arguments[0];\n\t\t\t\treturn this.createLineString(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tvar _coordinates = arguments[0];\n\t\t\t\treturn new LineString(_coordinates, this);\n\t\t\t}\n\t\t}\n\t},\n\tcreateMultiLineString: function createMultiLineString() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new MultiLineString(null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar lineStrings = arguments[0];\n\t\t\treturn new MultiLineString(lineStrings, this);\n\t\t}\n\t},\n\tbuildGeometry: function buildGeometry(geomList) {\n\t\tvar geomClass = null;\n\t\tvar isHeterogeneous = false;\n\t\tvar hasGeometryCollection = false;\n\t\tfor (var i = geomList.iterator(); i.hasNext();) {\n\t\t\tvar geom = i.next();\n\t\t\tvar partClass = geom.getClass();\n\t\t\tif (geomClass === null) {\n\t\t\t\tgeomClass = partClass;\n\t\t\t}\n\t\t\tif (partClass !== geomClass) {\n\t\t\t\tisHeterogeneous = true;\n\t\t\t}\n\t\t\tif (geom.isGeometryCollectionOrDerived()) hasGeometryCollection = true;\n\t\t}\n\t\tif (geomClass === null) {\n\t\t\treturn this.createGeometryCollection();\n\t\t}\n\t\tif (isHeterogeneous || hasGeometryCollection) {\n\t\t\treturn this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList));\n\t\t}\n\t\tvar geom0 = geomList.iterator().next();\n\t\tvar isCollection = geomList.size() > 1;\n\t\tif (isCollection) {\n\t\t\tif (geom0 instanceof Polygon) {\n\t\t\t\treturn this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList));\n\t\t\t} else if (geom0 instanceof LineString) {\n\t\t\t\treturn this.createMultiLineString(GeometryFactory.toLineStringArray(geomList));\n\t\t\t} else if (geom0 instanceof Point) {\n\t\t\t\treturn this.createMultiPoint(GeometryFactory.toPointArray(geomList));\n\t\t\t}\n\t\t\tAssert.shouldNeverReachHere(\"Unhandled class: \" + geom0.getClass().getName());\n\t\t}\n\t\treturn geom0;\n\t},\n\tcreateMultiPointFromCoords: function createMultiPointFromCoords(coordinates) {\n\t\treturn this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\n\t},\n\tcreatePoint: function createPoint() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.createPoint(this.getCoordinateSequenceFactory().create([]));\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\t\tvar coordinate = arguments[0];\n\t\t\t\treturn this.createPoint(coordinate !== null ? this.getCoordinateSequenceFactory().create([coordinate]) : null);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tvar coordinates = arguments[0];\n\t\t\t\treturn new Point(coordinates, this);\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinateSequenceFactory: function getCoordinateSequenceFactory() {\n\t\treturn this.coordinateSequenceFactory;\n\t},\n\tcreatePolygon: function createPolygon() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new Polygon(null, null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tvar coordinates = arguments[0];\n\t\t\t\treturn this.createPolygon(this.createLinearRing(coordinates));\n\t\t\t} else if (arguments[0] instanceof Array) {\n\t\t\t\tvar _coordinates2 = arguments[0];\n\t\t\t\treturn this.createPolygon(this.createLinearRing(_coordinates2));\n\t\t\t} else if (arguments[0] instanceof LinearRing) {\n\t\t\t\tvar shell = arguments[0];\n\t\t\t\treturn this.createPolygon(shell, null);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar _shell = arguments[0],\n\t\t\t    holes = arguments[1];\n\t\t\treturn new Polygon(_shell, holes, this);\n\t\t}\n\t},\n\tgetSRID: function getSRID() {\n\t\treturn this.SRID;\n\t},\n\tcreateGeometryCollection: function createGeometryCollection() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new GeometryCollection(null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar geometries = arguments[0];\n\t\t\treturn new GeometryCollection(geometries, this);\n\t\t}\n\t},\n\tcreateGeometry: function createGeometry(g) {\n\t\tvar editor = new GeometryEditor(this);\n\t\treturn editor.edit(g, {\n\t\t\tedit: function edit() {\n\t\t\t\tif (arguments.length === 2) {\n\t\t\t\t\tvar coordSeq = arguments[0],\n\t\t\t\t\t    geometry = arguments[1];\n\t\t\t\t\treturn this.coordinateSequenceFactory.create(coordSeq);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\tgetPrecisionModel: function getPrecisionModel() {\n\t\treturn this.precisionModel;\n\t},\n\tcreateLinearRing: function createLinearRing() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.createLinearRing(this.getCoordinateSequenceFactory().create([]));\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tvar coordinates = arguments[0];\n\t\t\t\treturn this.createLinearRing(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tvar _coordinates3 = arguments[0];\n\t\t\t\treturn new LinearRing(_coordinates3, this);\n\t\t\t}\n\t\t}\n\t},\n\tcreateMultiPolygon: function createMultiPolygon() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new MultiPolygon(null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar polygons = arguments[0];\n\t\t\treturn new MultiPolygon(polygons, this);\n\t\t}\n\t},\n\tcreateMultiPoint: function createMultiPoint() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new MultiPoint(null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tvar point = arguments[0];\n\t\t\t\treturn new MultiPoint(point, this);\n\t\t\t} else if (arguments[0] instanceof Array) {\n\t\t\t\tvar coordinates = arguments[0];\n\t\t\t\treturn this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tvar _coordinates4 = arguments[0];\n\t\t\t\tif (_coordinates4 === null) {\n\t\t\t\t\treturn this.createMultiPoint(new Array(0).fill(null));\n\t\t\t\t}\n\t\t\t\tvar points = new Array(_coordinates4.size()).fill(null);\n\t\t\t\tfor (var i = 0; i < _coordinates4.size(); i++) {\n\t\t\t\t\tvar ptSeq = this.getCoordinateSequenceFactory().create(1, _coordinates4.getDimension());\n\t\t\t\t\tCoordinateSequences.copy(_coordinates4, i, ptSeq, 0, 1);\n\t\t\t\t\tpoints[i] = this.createPoint(ptSeq);\n\t\t\t\t}\n\t\t\t\treturn this.createMultiPoint(points);\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Serializable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryFactory;\n\t}\n});\nGeometryFactory.toMultiPolygonArray = function (multiPolygons) {\n\tvar multiPolygonArray = new Array(multiPolygons.size()).fill(null);\n\treturn multiPolygons.toArray(multiPolygonArray);\n};\nGeometryFactory.toGeometryArray = function (geometries) {\n\tif (geometries === null) return null;\n\tvar geometryArray = new Array(geometries.size()).fill(null);\n\treturn geometries.toArray(geometryArray);\n};\nGeometryFactory.getDefaultCoordinateSequenceFactory = function () {\n\treturn CoordinateArraySequenceFactory.instance();\n};\nGeometryFactory.toMultiLineStringArray = function (multiLineStrings) {\n\tvar multiLineStringArray = new Array(multiLineStrings.size()).fill(null);\n\treturn multiLineStrings.toArray(multiLineStringArray);\n};\nGeometryFactory.toLineStringArray = function (lineStrings) {\n\tvar lineStringArray = new Array(lineStrings.size()).fill(null);\n\treturn lineStrings.toArray(lineStringArray);\n};\nGeometryFactory.toMultiPointArray = function (multiPoints) {\n\tvar multiPointArray = new Array(multiPoints.size()).fill(null);\n\treturn multiPoints.toArray(multiPointArray);\n};\nGeometryFactory.toLinearRingArray = function (linearRings) {\n\tvar linearRingArray = new Array(linearRings.size()).fill(null);\n\treturn linearRings.toArray(linearRingArray);\n};\nGeometryFactory.toPointArray = function (points) {\n\tvar pointArray = new Array(points.size()).fill(null);\n\treturn points.toArray(pointArray);\n};\nGeometryFactory.toPolygonArray = function (polygons) {\n\tvar polygonArray = new Array(polygons.size()).fill(null);\n\treturn polygons.toArray(polygonArray);\n};\nGeometryFactory.createPointFromInternalCoord = function (coord, exemplar) {\n\texemplar.getPrecisionModel().makePrecise(coord);\n\treturn exemplar.getFactory().createPoint(coord);\n};\nGeometryFactory.serialVersionUID = -6820524753094095635;\n\nvar regExes = {\n  'typeStr': /^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,\n  'emptyTypeStr': /^\\s*(\\w+)\\s*EMPTY\\s*$/,\n  'spaces': /\\s+/,\n  'parenComma': /\\)\\s*,\\s*\\(/,\n  'doubleParenComma': /\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/, // can't use {2} here\n  'trimParens': /^\\s*\\(?(.*?)\\)?\\s*$/\n};\n\n/**\n * Class for reading and writing Well-Known Text.\n *\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/** Create a new parser for WKT\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of WKTParser.\n * @constructor\n * @private\n */\nfunction WKTParser(geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n}\n\nextend(WKTParser.prototype, {\n  /**\n   * Deserialize a WKT string and return a geometry. Supports WKT for POINT,\n   * MULTIPOINT, LINESTRING, LINEARRING, MULTILINESTRING, POLYGON, MULTIPOLYGON,\n   * and GEOMETRYCOLLECTION.\n   *\n   * @param {String} wkt A WKT string.\n   * @return {Geometry} A geometry instance.\n   * @private\n   */\n  read: function read(wkt) {\n    var geometry, type, str;\n    wkt = wkt.replace(/[\\n\\r]/g, ' ');\n    var matches = regExes.typeStr.exec(wkt);\n    if (wkt.search('EMPTY') !== -1) {\n      matches = regExes.emptyTypeStr.exec(wkt);\n      matches[2] = undefined;\n    }\n    if (matches) {\n      type = matches[1].toLowerCase();\n      str = matches[2];\n      if (parse[type]) {\n        geometry = parse[type].apply(this, [str]);\n      }\n    }\n\n    if (geometry === undefined) throw new Error('Could not parse WKT ' + wkt);\n\n    return geometry;\n  },\n\n\n  /**\n   * Serialize a geometry into a WKT string.\n   *\n   * @param {Geometry} geometry A feature or array of features.\n   * @return {String} The WKT string representation of the input geometries.\n   * @private\n   */\n  write: function write(geometry) {\n    return this.extractGeometry(geometry);\n  },\n\n\n  /**\n   * Entry point to construct the WKT for a single Geometry object.\n   *\n   * @param {Geometry} geometry\n   * @return {String} A WKT string of representing the geometry.\n   * @private\n   */\n  extractGeometry: function extractGeometry(geometry) {\n    var type = geometry.getGeometryType().toLowerCase();\n    if (!extract[type]) {\n      return null;\n    }\n    var wktType = type.toUpperCase();\n    var data;\n    if (geometry.isEmpty()) {\n      data = wktType + ' EMPTY';\n    } else {\n      data = wktType + '(' + extract[type].apply(this, [geometry]) + ')';\n    }\n    return data;\n  }\n});\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual data extraction.\n * @private\n */\nvar extract = {\n  coordinate: function coordinate(_coordinate) {\n    return _coordinate.x + ' ' + _coordinate.y;\n  },\n\n\n  /**\n   * Return a space delimited string of point coordinates.\n   *\n   * @param {Point}\n   *          point\n   * @return {String} A string of coordinates representing the point.\n   */\n  point: function point(_point) {\n    return extract.coordinate.call(this, _point.coordinates.coordinates[0]);\n  },\n\n\n  /**\n   * Return a comma delimited string of point coordinates from a multipoint.\n   *\n   * @param {MultiPoint}\n   *          multipoint\n   * @return {String} A string of point coordinate strings representing the\n   *         multipoint.\n   */\n  multipoint: function multipoint(_multipoint) {\n    var array = [];\n    for (var i = 0, len = _multipoint.geometries.length; i < len; ++i) {\n      array.push('(' + extract.point.apply(this, [_multipoint.geometries[i]]) + ')');\n    }\n    return array.join(',');\n  },\n\n\n  /**\n   * Return a comma delimited string of point coordinates from a line.\n   *\n   * @param {LineString} linestring\n   * @return {String} A string of point coordinate strings representing the linestring.\n   */\n  linestring: function linestring(_linestring) {\n    var array = [];\n    for (var i = 0, len = _linestring.points.coordinates.length; i < len; ++i) {\n      array.push(extract.coordinate.apply(this, [_linestring.points.coordinates[i]]));\n    }\n    return array.join(',');\n  },\n  linearring: function linearring(_linearring) {\n    var array = [];\n    for (var i = 0, len = _linearring.points.coordinates.length; i < len; ++i) {\n      array.push(extract.coordinate.apply(this, [_linearring.points.coordinates[i]]));\n    }\n    return array.join(',');\n  },\n\n\n  /**\n   * Return a comma delimited string of linestring strings from a\n   * multilinestring.\n   *\n   * @param {MultiLineString} multilinestring\n   * @return {String} A string of of linestring strings representing the multilinestring.\n   */\n  multilinestring: function multilinestring(_multilinestring) {\n    var array = [];\n    for (var i = 0, len = _multilinestring.geometries.length; i < len; ++i) {\n      array.push('(' + extract.linestring.apply(this, [_multilinestring.geometries[i]]) + ')');\n    }\n    return array.join(',');\n  },\n\n\n  /**\n   * Return a comma delimited string of linear ring arrays from a polygon.\n   *\n   * @param {Polygon} polygon\n   * @return {String} An array of linear ring arrays representing the polygon.\n   */\n  polygon: function polygon(_polygon) {\n    var array = [];\n    array.push('(' + extract.linestring.apply(this, [_polygon.shell]) + ')');\n    for (var i = 0, len = _polygon.holes.length; i < len; ++i) {\n      array.push('(' + extract.linestring.apply(this, [_polygon.holes[i]]) + ')');\n    }\n    return array.join(',');\n  },\n\n\n  /**\n   * Return an array of polygon arrays from a multipolygon.\n   *\n   * @param {MultiPolygon} multipolygon\n   * @return {String} An array of polygon arrays representing the multipolygon.\n   */\n  multipolygon: function multipolygon(_multipolygon) {\n    var array = [];\n    for (var i = 0, len = _multipolygon.geometries.length; i < len; ++i) {\n      array.push('(' + extract.polygon.apply(this, [_multipolygon.geometries[i]]) + ')');\n    }\n    return array.join(',');\n  },\n\n\n  /**\n   * Return the WKT portion between 'GEOMETRYCOLLECTION(' and ')' for an\n   * geometrycollection.\n   *\n   * @param {GeometryCollection} collection\n   * @return {String} internal WKT representation of the collection.\n   */\n  geometrycollection: function geometrycollection(collection) {\n    var array = [];\n    for (var i = 0, len = collection.geometries.length; i < len; ++i) {\n      array.push(this.extractGeometry(collection.geometries[i]));\n    }\n    return array.join(',');\n  }\n};\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual parsing.\n * @private\n */\nvar parse = {\n  /**\n   * Return point geometry given a point WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the point.\n   * @return {Point} A point geometry.\n   * @private\n   */\n  point: function point(str) {\n    if (str === undefined) {\n      return this.geometryFactory.createPoint();\n    }\n\n    var coords = str.trim().split(regExes.spaces);\n    return this.geometryFactory.createPoint(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n  },\n\n\n  /**\n   * Return a multipoint geometry given a multipoint WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipoint.\n   * @return {Point} A multipoint feature.\n   * @private\n   */\n  multipoint: function multipoint(str) {\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPoint();\n    }\n\n    var point;\n    var points = str.trim().split(',');\n    var components = [];\n    for (var i = 0, len = points.length; i < len; ++i) {\n      point = points[i].replace(regExes.trimParens, '$1');\n      components.push(parse.point.apply(this, [point]));\n    }\n    return this.geometryFactory.createMultiPoint(components);\n  },\n\n\n  /**\n   * Return a linestring geometry given a linestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linestring.\n   * @return {LineString} A linestring geometry.\n   * @private\n   */\n  linestring: function linestring(str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLineString();\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLineString(components);\n  },\n\n\n  /**\n   * Return a linearring geometry given a linearring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linearring.\n   * @return {LinearRing} A linearring geometry.\n   * @private\n   */\n  linearring: function linearring(str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLinearRing();\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLinearRing(components);\n  },\n\n\n  /**\n   * Return a multilinestring geometry given a multilinestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multilinestring.\n   * @return {MultiLineString} A multilinestring geometry.\n   * @private\n   */\n  multilinestring: function multilinestring(str) {\n    if (str === undefined) {\n      return this.geometryFactory.createMultiLineString();\n    }\n\n    var line;\n    var lines = str.trim().split(regExes.parenComma);\n    var components = [];\n    for (var i = 0, len = lines.length; i < len; ++i) {\n      line = lines[i].replace(regExes.trimParens, '$1');\n      components.push(parse.linestring.apply(this, [line]));\n    }\n    return this.geometryFactory.createMultiLineString(components);\n  },\n\n\n  /**\n   * Return a polygon geometry given a polygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the polygon.\n   * @return {Polygon} A polygon geometry.\n   * @private\n   */\n  polygon: function polygon(str) {\n    if (str === undefined) {\n      return this.geometryFactory.createPolygon();\n    }\n\n    var ring, linestring, linearring;\n    var rings = str.trim().split(regExes.parenComma);\n    var shell;\n    var holes = [];\n    for (var i = 0, len = rings.length; i < len; ++i) {\n      ring = rings[i].replace(regExes.trimParens, '$1');\n      linestring = parse.linestring.apply(this, [ring]);\n      linearring = this.geometryFactory.createLinearRing(linestring.points);\n      if (i === 0) {\n        shell = linearring;\n      } else {\n        holes.push(linearring);\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes);\n  },\n\n\n  /**\n   * Return a multipolygon geometry given a multipolygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipolygon.\n   * @return {MultiPolygon} A multipolygon geometry.\n   * @private\n   */\n  multipolygon: function multipolygon(str) {\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPolygon();\n    }\n\n    var polygon;\n    var polygons = str.trim().split(regExes.doubleParenComma);\n    var components = [];\n    for (var i = 0, len = polygons.length; i < len; ++i) {\n      polygon = polygons[i].replace(regExes.trimParens, '$1');\n      components.push(parse.polygon.apply(this, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(components);\n  },\n\n\n  /**\n   * Return a geometrycollection given a geometrycollection WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the geometrycollection.\n   * @return {GeometryCollection}\n   * @private\n   */\n  geometrycollection: function geometrycollection(str) {\n    if (str === undefined) {\n      return this.geometryFactory.createGeometryCollection();\n    }\n\n    // separate components of the collection with |\n    str = str.replace(/,\\s*([A-Za-z])/g, '|$1');\n    var wktArray = str.trim().split('|');\n    var components = [];\n    for (var i = 0, len = wktArray.length; i < len; ++i) {\n      components.push(this.read(wktArray[i]));\n    }\n    return this.geometryFactory.createGeometryCollection(components);\n  }\n};\n\n/**\n * Writes the Well-Known Text representation of a {@link Geometry}. The\n * Well-Known Text format is defined in the <A\n * HREF=\"http://www.opengis.org/techno/specs.htm\"> OGC Simple Features\n * Specification for SQL</A>.\n * <p>\n * The <code>WKTWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n * <p>\n * The SFS WKT spec does not define a special tag for {@link LinearRing}s.\n * Under the spec, rings are output as <code>LINESTRING</code>s.\n */\n\n/**\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nfunction WKTWriter(geometryFactory) {\n  this.parser = new WKTParser(geometryFactory);\n}\n\nextend(WKTWriter.prototype, {\n  /**\n   * Converts a <code>Geometry</code> to its Well-known Text representation.\n   *\n   * @param {Geometry} geometry a <code>Geometry</code> to process.\n   * @return {string} a <Geometry Tagged Text> string (see the OpenGIS Simple\n   *         Features Specification).\n   * @memberof WKTWriter\n   */\n  write: function write(geometry) {\n    return this.parser.write(geometry);\n  }\n});\n\nextend(WKTWriter, {\n  /**\n   * Generates the WKT for a <tt>LINESTRING</tt> specified by two\n   * {@link Coordinate}s.\n   *\n   * @param p0 the first coordinate.\n   * @param p1 the second coordinate.\n   *\n   * @return the WKT.\n   * @private\n   */\n  toLineString: function toLineString(p0, p1) {\n    if (arguments.length !== 2) {\n      throw new Error('Not implemented');\n    }\n\n    return 'LINESTRING ( ' + p0.x + ' ' + p0.y + ', ' + p1.x + ' ' + p1.y + ' )';\n  }\n});\n\nfunction LineIntersector() {\n\tthis.result = null;\n\tthis.inputLines = Array(2).fill().map(function () {\n\t\treturn Array(2);\n\t});\n\tthis.intPt = new Array(2).fill(null);\n\tthis.intLineIndex = null;\n\tthis._isProper = null;\n\tthis.pa = null;\n\tthis.pb = null;\n\tthis.precisionModel = null;\n\tthis.intPt[0] = new Coordinate();\n\tthis.intPt[1] = new Coordinate();\n\tthis.pa = this.intPt[0];\n\tthis.pb = this.intPt[1];\n\tthis.result = 0;\n}\nextend(LineIntersector.prototype, {\n\tgetIndexAlongSegment: function getIndexAlongSegment(segmentIndex, intIndex) {\n\t\tthis.computeIntLineIndex();\n\t\treturn this.intLineIndex[segmentIndex][intIndex];\n\t},\n\tgetTopologySummary: function getTopologySummary() {\n\t\tvar catBuf = new StringBuffer();\n\t\tif (this.isEndPoint()) catBuf.append(\" endpoint\");\n\t\tif (this._isProper) catBuf.append(\" proper\");\n\t\tif (this.isCollinear()) catBuf.append(\" collinear\");\n\t\treturn catBuf.toString();\n\t},\n\tcomputeIntersection: function computeIntersection(p1, p2, p3, p4) {\n\t\tthis.inputLines[0][0] = p1;\n\t\tthis.inputLines[0][1] = p2;\n\t\tthis.inputLines[1][0] = p3;\n\t\tthis.inputLines[1][1] = p4;\n\t\tthis.result = this.computeIntersect(p1, p2, p3, p4);\n\t},\n\tgetIntersectionNum: function getIntersectionNum() {\n\t\treturn this.result;\n\t},\n\tcomputeIntLineIndex: function computeIntLineIndex() {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this.intLineIndex === null) {\n\t\t\t\tthis.intLineIndex = Array(2).fill().map(function () {\n\t\t\t\t\treturn Array(2);\n\t\t\t\t});\n\t\t\t\tthis.computeIntLineIndex(0);\n\t\t\t\tthis.computeIntLineIndex(1);\n\t\t\t}\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar segmentIndex = arguments[0];\n\t\t\tvar dist0 = this.getEdgeDistance(segmentIndex, 0);\n\t\t\tvar dist1 = this.getEdgeDistance(segmentIndex, 1);\n\t\t\tif (dist0 > dist1) {\n\t\t\t\tthis.intLineIndex[segmentIndex][0] = 0;\n\t\t\t\tthis.intLineIndex[segmentIndex][1] = 1;\n\t\t\t} else {\n\t\t\t\tthis.intLineIndex[segmentIndex][0] = 1;\n\t\t\t\tthis.intLineIndex[segmentIndex][1] = 0;\n\t\t\t}\n\t\t}\n\t},\n\tisProper: function isProper() {\n\t\treturn this.hasIntersection() && this._isProper;\n\t},\n\tsetPrecisionModel: function setPrecisionModel(precisionModel) {\n\t\tthis.precisionModel = precisionModel;\n\t},\n\tisInteriorIntersection: function isInteriorIntersection() {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this.isInteriorIntersection(0)) return true;\n\t\t\tif (this.isInteriorIntersection(1)) return true;\n\t\t\treturn false;\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar inputLineIndex = arguments[0];\n\t\t\tfor (var i = 0; i < this.result; i++) {\n\t\t\t\tif (!(this.intPt[i].equals2D(this.inputLines[inputLineIndex][0]) || this.intPt[i].equals2D(this.inputLines[inputLineIndex][1]))) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t},\n\tgetIntersection: function getIntersection(intIndex) {\n\t\treturn this.intPt[intIndex];\n\t},\n\tisEndPoint: function isEndPoint() {\n\t\treturn this.hasIntersection() && !this._isProper;\n\t},\n\thasIntersection: function hasIntersection() {\n\t\treturn this.result !== LineIntersector.NO_INTERSECTION;\n\t},\n\tgetEdgeDistance: function getEdgeDistance(segmentIndex, intIndex) {\n\t\tvar dist = LineIntersector.computeEdgeDistance(this.intPt[intIndex], this.inputLines[segmentIndex][0], this.inputLines[segmentIndex][1]);\n\t\treturn dist;\n\t},\n\tisCollinear: function isCollinear() {\n\t\treturn this.result === LineIntersector.COLLINEAR_INTERSECTION;\n\t},\n\ttoString: function toString() {\n\t\treturn WKTWriter.toLineString(this.inputLines[0][0], this.inputLines[0][1]) + \" - \" + WKTWriter.toLineString(this.inputLines[1][0], this.inputLines[1][1]) + this.getTopologySummary();\n\t},\n\tgetEndpoint: function getEndpoint(segmentIndex, ptIndex) {\n\t\treturn this.inputLines[segmentIndex][ptIndex];\n\t},\n\tisIntersection: function isIntersection(pt) {\n\t\tfor (var i = 0; i < this.result; i++) {\n\t\t\tif (this.intPt[i].equals2D(pt)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetIntersectionAlongSegment: function getIntersectionAlongSegment(segmentIndex, intIndex) {\n\t\tthis.computeIntLineIndex();\n\t\treturn this.intPt[this.intLineIndex[segmentIndex][intIndex]];\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineIntersector;\n\t}\n});\nLineIntersector.computeEdgeDistance = function (p, p0, p1) {\n\tvar dx = Math.abs(p1.x - p0.x);\n\tvar dy = Math.abs(p1.y - p0.y);\n\tvar dist = -1.0;\n\tif (p.equals(p0)) {\n\t\tdist = 0.0;\n\t} else if (p.equals(p1)) {\n\t\tif (dx > dy) dist = dx;else dist = dy;\n\t} else {\n\t\tvar pdx = Math.abs(p.x - p0.x);\n\t\tvar pdy = Math.abs(p.y - p0.y);\n\t\tif (dx > dy) dist = pdx;else dist = pdy;\n\t\tif (dist === 0.0 && !p.equals(p0)) {\n\t\t\tdist = Math.max(pdx, pdy);\n\t\t}\n\t}\n\tAssert.isTrue(!(dist === 0.0 && !p.equals(p0)), \"Bad distance calculation\");\n\treturn dist;\n};\nLineIntersector.nonRobustComputeEdgeDistance = function (p, p1, p2) {\n\tvar dx = p.x - p1.x;\n\tvar dy = p.y - p1.y;\n\tvar dist = Math.sqrt(dx * dx + dy * dy);\n\tAssert.isTrue(!(dist === 0.0 && !p.equals(p1)), \"Invalid distance calculation\");\n\treturn dist;\n};\nLineIntersector.DONT_INTERSECT = 0;\nLineIntersector.DO_INTERSECT = 1;\nLineIntersector.COLLINEAR = 2;\nLineIntersector.NO_INTERSECTION = 0;\nLineIntersector.POINT_INTERSECTION = 1;\nLineIntersector.COLLINEAR_INTERSECTION = 2;\n\nfunction RobustLineIntersector() {\n\tLineIntersector.apply(this);\n}\ninherits(RobustLineIntersector, LineIntersector);\nextend(RobustLineIntersector.prototype, {\n\tisInSegmentEnvelopes: function isInSegmentEnvelopes(intPt) {\n\t\tvar env0 = new Envelope(this.inputLines[0][0], this.inputLines[0][1]);\n\t\tvar env1 = new Envelope(this.inputLines[1][0], this.inputLines[1][1]);\n\t\treturn env0.contains(intPt) && env1.contains(intPt);\n\t},\n\tcomputeIntersection: function computeIntersection() {\n\t\tif (arguments.length === 3) {\n\t\t\tvar p = arguments[0],\n\t\t\t    p1 = arguments[1],\n\t\t\t    p2 = arguments[2];\n\t\t\tthis._isProper = false;\n\t\t\tif (Envelope.intersects(p1, p2, p)) {\n\t\t\t\tif (CGAlgorithms.orientationIndex(p1, p2, p) === 0 && CGAlgorithms.orientationIndex(p2, p1, p) === 0) {\n\t\t\t\t\tthis._isProper = true;\n\t\t\t\t\tif (p.equals(p1) || p.equals(p2)) {\n\t\t\t\t\t\tthis._isProper = false;\n\t\t\t\t\t}\n\t\t\t\t\tthis.result = LineIntersector.POINT_INTERSECTION;\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.result = LineIntersector.NO_INTERSECTION;\n\t\t} else return LineIntersector.prototype.computeIntersection.apply(this, arguments);\n\t},\n\tnormalizeToMinimum: function normalizeToMinimum(n1, n2, n3, n4, normPt) {\n\t\tnormPt.x = this.smallestInAbsValue(n1.x, n2.x, n3.x, n4.x);\n\t\tnormPt.y = this.smallestInAbsValue(n1.y, n2.y, n3.y, n4.y);\n\t\tn1.x -= normPt.x;\n\t\tn1.y -= normPt.y;\n\t\tn2.x -= normPt.x;\n\t\tn2.y -= normPt.y;\n\t\tn3.x -= normPt.x;\n\t\tn3.y -= normPt.y;\n\t\tn4.x -= normPt.x;\n\t\tn4.y -= normPt.y;\n\t},\n\tsafeHCoordinateIntersection: function safeHCoordinateIntersection(p1, p2, q1, q2) {\n\t\tvar intPt = null;\n\t\ttry {\n\t\t\tintPt = HCoordinate.intersection(p1, p2, q1, q2);\n\t\t} catch (e) {\n\t\t\tif (e instanceof NotRepresentableException) {\n\t\t\t\tintPt = RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2);\n\t\t\t} else throw e;\n\t\t} finally {}\n\t\treturn intPt;\n\t},\n\tintersection: function intersection(p1, p2, q1, q2) {\n\t\tvar intPt = this.intersectionWithNormalization(p1, p2, q1, q2);\n\t\tif (!this.isInSegmentEnvelopes(intPt)) {\n\t\t\tintPt = new Coordinate(RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2));\n\t\t}\n\t\tif (this.precisionModel !== null) {\n\t\t\tthis.precisionModel.makePrecise(intPt);\n\t\t}\n\t\treturn intPt;\n\t},\n\tsmallestInAbsValue: function smallestInAbsValue(x1, x2, x3, x4) {\n\t\tvar x = x1;\n\t\tvar xabs = Math.abs(x);\n\t\tif (Math.abs(x2) < xabs) {\n\t\t\tx = x2;\n\t\t\txabs = Math.abs(x2);\n\t\t}\n\t\tif (Math.abs(x3) < xabs) {\n\t\t\tx = x3;\n\t\t\txabs = Math.abs(x3);\n\t\t}\n\t\tif (Math.abs(x4) < xabs) {\n\t\t\tx = x4;\n\t\t}\n\t\treturn x;\n\t},\n\tcheckDD: function checkDD(p1, p2, q1, q2, intPt) {\n\t\tvar intPtDD = CGAlgorithmsDD.intersection(p1, p2, q1, q2);\n\t\tvar isIn = this.isInSegmentEnvelopes(intPtDD);\n\t\tSystem.out.println(\"DD in env = \" + isIn + \"  --------------------- \" + intPtDD);\n\t\tif (intPt.distance(intPtDD) > 0.0001) {\n\t\t\tSystem.out.println(\"Distance = \" + intPt.distance(intPtDD));\n\t\t}\n\t},\n\tintersectionWithNormalization: function intersectionWithNormalization(p1, p2, q1, q2) {\n\t\tvar n1 = new Coordinate(p1);\n\t\tvar n2 = new Coordinate(p2);\n\t\tvar n3 = new Coordinate(q1);\n\t\tvar n4 = new Coordinate(q2);\n\t\tvar normPt = new Coordinate();\n\t\tthis.normalizeToEnvCentre(n1, n2, n3, n4, normPt);\n\t\tvar intPt = this.safeHCoordinateIntersection(n1, n2, n3, n4);\n\t\tintPt.x += normPt.x;\n\t\tintPt.y += normPt.y;\n\t\treturn intPt;\n\t},\n\tcomputeCollinearIntersection: function computeCollinearIntersection(p1, p2, q1, q2) {\n\t\tvar p1q1p2 = Envelope.intersects(p1, p2, q1);\n\t\tvar p1q2p2 = Envelope.intersects(p1, p2, q2);\n\t\tvar q1p1q2 = Envelope.intersects(q1, q2, p1);\n\t\tvar q1p2q2 = Envelope.intersects(q1, q2, p2);\n\t\tif (p1q1p2 && p1q2p2) {\n\t\t\tthis.intPt[0] = q1;\n\t\t\tthis.intPt[1] = q2;\n\t\t\treturn LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (q1p1q2 && q1p2q2) {\n\t\t\tthis.intPt[0] = p1;\n\t\t\tthis.intPt[1] = p2;\n\t\t\treturn LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (p1q1p2 && q1p1q2) {\n\t\t\tthis.intPt[0] = q1;\n\t\t\tthis.intPt[1] = p1;\n\t\t\treturn q1.equals(p1) && !p1q2p2 && !q1p2q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (p1q1p2 && q1p2q2) {\n\t\t\tthis.intPt[0] = q1;\n\t\t\tthis.intPt[1] = p2;\n\t\t\treturn q1.equals(p2) && !p1q2p2 && !q1p1q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (p1q2p2 && q1p1q2) {\n\t\t\tthis.intPt[0] = q2;\n\t\t\tthis.intPt[1] = p1;\n\t\t\treturn q2.equals(p1) && !p1q1p2 && !q1p2q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (p1q2p2 && q1p2q2) {\n\t\t\tthis.intPt[0] = q2;\n\t\t\tthis.intPt[1] = p2;\n\t\t\treturn q2.equals(p2) && !p1q1p2 && !q1p1q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\treturn LineIntersector.NO_INTERSECTION;\n\t},\n\tnormalizeToEnvCentre: function normalizeToEnvCentre(n00, n01, n10, n11, normPt) {\n\t\tvar minX0 = n00.x < n01.x ? n00.x : n01.x;\n\t\tvar minY0 = n00.y < n01.y ? n00.y : n01.y;\n\t\tvar maxX0 = n00.x > n01.x ? n00.x : n01.x;\n\t\tvar maxY0 = n00.y > n01.y ? n00.y : n01.y;\n\t\tvar minX1 = n10.x < n11.x ? n10.x : n11.x;\n\t\tvar minY1 = n10.y < n11.y ? n10.y : n11.y;\n\t\tvar maxX1 = n10.x > n11.x ? n10.x : n11.x;\n\t\tvar maxY1 = n10.y > n11.y ? n10.y : n11.y;\n\t\tvar intMinX = minX0 > minX1 ? minX0 : minX1;\n\t\tvar intMaxX = maxX0 < maxX1 ? maxX0 : maxX1;\n\t\tvar intMinY = minY0 > minY1 ? minY0 : minY1;\n\t\tvar intMaxY = maxY0 < maxY1 ? maxY0 : maxY1;\n\t\tvar intMidX = (intMinX + intMaxX) / 2.0;\n\t\tvar intMidY = (intMinY + intMaxY) / 2.0;\n\t\tnormPt.x = intMidX;\n\t\tnormPt.y = intMidY;\n\t\tn00.x -= normPt.x;\n\t\tn00.y -= normPt.y;\n\t\tn01.x -= normPt.x;\n\t\tn01.y -= normPt.y;\n\t\tn10.x -= normPt.x;\n\t\tn10.y -= normPt.y;\n\t\tn11.x -= normPt.x;\n\t\tn11.y -= normPt.y;\n\t},\n\tcomputeIntersect: function computeIntersect(p1, p2, q1, q2) {\n\t\tthis._isProper = false;\n\t\tif (!Envelope.intersects(p1, p2, q1, q2)) return LineIntersector.NO_INTERSECTION;\n\t\tvar Pq1 = CGAlgorithms.orientationIndex(p1, p2, q1);\n\t\tvar Pq2 = CGAlgorithms.orientationIndex(p1, p2, q2);\n\t\tif (Pq1 > 0 && Pq2 > 0 || Pq1 < 0 && Pq2 < 0) {\n\t\t\treturn LineIntersector.NO_INTERSECTION;\n\t\t}\n\t\tvar Qp1 = CGAlgorithms.orientationIndex(q1, q2, p1);\n\t\tvar Qp2 = CGAlgorithms.orientationIndex(q1, q2, p2);\n\t\tif (Qp1 > 0 && Qp2 > 0 || Qp1 < 0 && Qp2 < 0) {\n\t\t\treturn LineIntersector.NO_INTERSECTION;\n\t\t}\n\t\tvar collinear = Pq1 === 0 && Pq2 === 0 && Qp1 === 0 && Qp2 === 0;\n\t\tif (collinear) {\n\t\t\treturn this.computeCollinearIntersection(p1, p2, q1, q2);\n\t\t}\n\t\tif (Pq1 === 0 || Pq2 === 0 || Qp1 === 0 || Qp2 === 0) {\n\t\t\tthis._isProper = false;\n\t\t\tif (p1.equals2D(q1) || p1.equals2D(q2)) {\n\t\t\t\tthis.intPt[0] = p1;\n\t\t\t} else if (p2.equals2D(q1) || p2.equals2D(q2)) {\n\t\t\t\tthis.intPt[0] = p2;\n\t\t\t} else if (Pq1 === 0) {\n\t\t\t\tthis.intPt[0] = new Coordinate(q1);\n\t\t\t} else if (Pq2 === 0) {\n\t\t\t\tthis.intPt[0] = new Coordinate(q2);\n\t\t\t} else if (Qp1 === 0) {\n\t\t\t\tthis.intPt[0] = new Coordinate(p1);\n\t\t\t} else if (Qp2 === 0) {\n\t\t\t\tthis.intPt[0] = new Coordinate(p2);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._isProper = true;\n\t\t\tthis.intPt[0] = this.intersection(p1, p2, q1, q2);\n\t\t}\n\t\treturn LineIntersector.POINT_INTERSECTION;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn RobustLineIntersector;\n\t}\n});\nRobustLineIntersector.nearestEndpoint = function (p1, p2, q1, q2) {\n\tvar nearestPt = p1;\n\tvar minDist = CGAlgorithms.distancePointLine(p1, q1, q2);\n\tvar dist = CGAlgorithms.distancePointLine(p2, q1, q2);\n\tif (dist < minDist) {\n\t\tminDist = dist;\n\t\tnearestPt = p2;\n\t}\n\tdist = CGAlgorithms.distancePointLine(q1, p1, p2);\n\tif (dist < minDist) {\n\t\tminDist = dist;\n\t\tnearestPt = q1;\n\t}\n\tdist = CGAlgorithms.distancePointLine(q2, p1, p2);\n\tif (dist < minDist) {\n\t\tminDist = dist;\n\t\tnearestPt = q2;\n\t}\n\treturn nearestPt;\n};\n\nfunction RobustDeterminant() {}\nextend(RobustDeterminant.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn RobustDeterminant;\n\t}\n});\nRobustDeterminant.orientationIndex = function (p1, p2, q) {\n\tvar dx1 = p2.x - p1.x;\n\tvar dy1 = p2.y - p1.y;\n\tvar dx2 = q.x - p2.x;\n\tvar dy2 = q.y - p2.y;\n\treturn RobustDeterminant.signOfDet2x2(dx1, dy1, dx2, dy2);\n};\nRobustDeterminant.signOfDet2x2 = function (x1, y1, x2, y2) {\n\tvar sign = null;\n\tvar swap = null;\n\tvar k = null;\n\tvar count = 0;\n\tsign = 1;\n\tif (x1 === 0.0 || y2 === 0.0) {\n\t\tif (y1 === 0.0 || x2 === 0.0) {\n\t\t\treturn 0;\n\t\t} else if (y1 > 0) {\n\t\t\tif (x2 > 0) {\n\t\t\t\treturn -sign;\n\t\t\t} else {\n\t\t\t\treturn sign;\n\t\t\t}\n\t\t} else {\n\t\t\tif (x2 > 0) {\n\t\t\t\treturn sign;\n\t\t\t} else {\n\t\t\t\treturn -sign;\n\t\t\t}\n\t\t}\n\t}\n\tif (y1 === 0.0 || x2 === 0.0) {\n\t\tif (y2 > 0) {\n\t\t\tif (x1 > 0) {\n\t\t\t\treturn sign;\n\t\t\t} else {\n\t\t\t\treturn -sign;\n\t\t\t}\n\t\t} else {\n\t\t\tif (x1 > 0) {\n\t\t\t\treturn -sign;\n\t\t\t} else {\n\t\t\t\treturn sign;\n\t\t\t}\n\t\t}\n\t}\n\tif (0.0 < y1) {\n\t\tif (0.0 < y2) {\n\t\t\tif (y1 <= y2) {\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tsign = -sign;\n\t\t\t\tswap = x1;\n\t\t\t\tx1 = x2;\n\t\t\t\tx2 = swap;\n\t\t\t\tswap = y1;\n\t\t\t\ty1 = y2;\n\t\t\t\ty2 = swap;\n\t\t\t}\n\t\t} else {\n\t\t\tif (y1 <= -y2) {\n\t\t\t\tsign = -sign;\n\t\t\t\tx2 = -x2;\n\t\t\t\ty2 = -y2;\n\t\t\t} else {\n\t\t\t\tswap = x1;\n\t\t\t\tx1 = -x2;\n\t\t\t\tx2 = swap;\n\t\t\t\tswap = y1;\n\t\t\t\ty1 = -y2;\n\t\t\t\ty2 = swap;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (0.0 < y2) {\n\t\t\tif (-y1 <= y2) {\n\t\t\t\tsign = -sign;\n\t\t\t\tx1 = -x1;\n\t\t\t\ty1 = -y1;\n\t\t\t} else {\n\t\t\t\tswap = -x1;\n\t\t\t\tx1 = x2;\n\t\t\t\tx2 = swap;\n\t\t\t\tswap = -y1;\n\t\t\t\ty1 = y2;\n\t\t\t\ty2 = swap;\n\t\t\t}\n\t\t} else {\n\t\t\tif (y1 >= y2) {\n\t\t\t\tx1 = -x1;\n\t\t\t\ty1 = -y1;\n\t\t\t\tx2 = -x2;\n\t\t\t\ty2 = -y2;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tsign = -sign;\n\t\t\t\tswap = -x1;\n\t\t\t\tx1 = -x2;\n\t\t\t\tx2 = swap;\n\t\t\t\tswap = -y1;\n\t\t\t\ty1 = -y2;\n\t\t\t\ty2 = swap;\n\t\t\t}\n\t\t}\n\t}\n\tif (0.0 < x1) {\n\t\tif (0.0 < x2) {\n\t\t\tif (x1 <= x2) {\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\treturn sign;\n\t\t\t}\n\t\t} else {\n\t\t\treturn sign;\n\t\t}\n\t} else {\n\t\tif (0.0 < x2) {\n\t\t\treturn -sign;\n\t\t} else {\n\t\t\tif (x1 >= x2) {\n\t\t\t\tsign = -sign;\n\t\t\t\tx1 = -x1;\n\t\t\t\tx2 = -x2;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\treturn -sign;\n\t\t\t}\n\t\t}\n\t}\n\twhile (true) {\n\t\tcount = count + 1;\n\t\tk = Math.floor(x2 / x1);\n\t\tx2 = x2 - k * x1;\n\t\ty2 = y2 - k * y1;\n\t\tif (y2 < 0.0) {\n\t\t\treturn -sign;\n\t\t}\n\t\tif (y2 > y1) {\n\t\t\treturn sign;\n\t\t}\n\t\tif (x1 > x2 + x2) {\n\t\t\tif (y1 < y2 + y2) {\n\t\t\t\treturn sign;\n\t\t\t}\n\t\t} else {\n\t\t\tif (y1 > y2 + y2) {\n\t\t\t\treturn -sign;\n\t\t\t} else {\n\t\t\t\tx2 = x1 - x2;\n\t\t\t\ty2 = y1 - y2;\n\t\t\t\tsign = -sign;\n\t\t\t}\n\t\t}\n\t\tif (y2 === 0.0) {\n\t\t\tif (x2 === 0.0) {\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\treturn -sign;\n\t\t\t}\n\t\t}\n\t\tif (x2 === 0.0) {\n\t\t\treturn sign;\n\t\t}\n\t\tk = Math.floor(x1 / x2);\n\t\tx1 = x1 - k * x2;\n\t\ty1 = y1 - k * y2;\n\t\tif (y1 < 0.0) {\n\t\t\treturn sign;\n\t\t}\n\t\tif (y1 > y2) {\n\t\t\treturn -sign;\n\t\t}\n\t\tif (x2 > x1 + x1) {\n\t\t\tif (y2 < y1 + y1) {\n\t\t\t\treturn -sign;\n\t\t\t}\n\t\t} else {\n\t\t\tif (y2 > y1 + y1) {\n\t\t\t\treturn sign;\n\t\t\t} else {\n\t\t\t\tx1 = x2 - x1;\n\t\t\t\ty1 = y2 - y1;\n\t\t\t\tsign = -sign;\n\t\t\t}\n\t\t}\n\t\tif (y1 === 0.0) {\n\t\t\tif (x1 === 0.0) {\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\treturn sign;\n\t\t\t}\n\t\t}\n\t\tif (x1 === 0.0) {\n\t\t\treturn -sign;\n\t\t}\n\t}\n};\n\nfunction RayCrossingCounter() {\n\tthis.p = null;\n\tthis.crossingCount = 0;\n\tthis.isPointOnSegment = false;\n\tvar p = arguments[0];\n\tthis.p = p;\n}\nextend(RayCrossingCounter.prototype, {\n\tcountSegment: function countSegment(p1, p2) {\n\t\tif (p1.x < this.p.x && p2.x < this.p.x) return null;\n\t\tif (this.p.x === p2.x && this.p.y === p2.y) {\n\t\t\tthis.isPointOnSegment = true;\n\t\t\treturn null;\n\t\t}\n\t\tif (p1.y === this.p.y && p2.y === this.p.y) {\n\t\t\tvar minx = p1.x;\n\t\t\tvar maxx = p2.x;\n\t\t\tif (minx > maxx) {\n\t\t\t\tminx = p2.x;\n\t\t\t\tmaxx = p1.x;\n\t\t\t}\n\t\t\tif (this.p.x >= minx && this.p.x <= maxx) {\n\t\t\t\tthis.isPointOnSegment = true;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tif (p1.y > this.p.y && p2.y <= this.p.y || p2.y > this.p.y && p1.y <= this.p.y) {\n\t\t\tvar x1 = p1.x - this.p.x;\n\t\t\tvar y1 = p1.y - this.p.y;\n\t\t\tvar x2 = p2.x - this.p.x;\n\t\t\tvar y2 = p2.y - this.p.y;\n\t\t\tvar xIntSign = RobustDeterminant.signOfDet2x2(x1, y1, x2, y2);\n\t\t\tif (xIntSign === 0.0) {\n\t\t\t\tthis.isPointOnSegment = true;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (y2 < y1) xIntSign = -xIntSign;\n\t\t\tif (xIntSign > 0.0) {\n\t\t\t\tthis.crossingCount++;\n\t\t\t}\n\t\t}\n\t},\n\tisPointInPolygon: function isPointInPolygon() {\n\t\treturn this.getLocation() !== Location.EXTERIOR;\n\t},\n\tgetLocation: function getLocation() {\n\t\tif (this.isPointOnSegment) return Location.BOUNDARY;\n\t\tif (this.crossingCount % 2 === 1) {\n\t\t\treturn Location.INTERIOR;\n\t\t}\n\t\treturn Location.EXTERIOR;\n\t},\n\tisOnSegment: function isOnSegment() {\n\t\treturn this.isPointOnSegment;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn RayCrossingCounter;\n\t}\n});\nRayCrossingCounter.locatePointInRing = function () {\n\tif (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n\t\tvar p = arguments[0],\n\t\t    ring = arguments[1];\n\t\tvar counter = new RayCrossingCounter(p);\n\t\tvar p1 = new Coordinate();\n\t\tvar p2 = new Coordinate();\n\t\tfor (var i = 1; i < ring.size(); i++) {\n\t\t\tring.getCoordinate(i, p1);\n\t\t\tring.getCoordinate(i - 1, p2);\n\t\t\tcounter.countSegment(p1, p2);\n\t\t\tif (counter.isOnSegment()) return counter.getLocation();\n\t\t}\n\t\treturn counter.getLocation();\n\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n\t\tvar _p = arguments[0],\n\t\t    _ring = arguments[1];\n\t\tvar counter = new RayCrossingCounter(_p);\n\t\tfor (var i = 1; i < _ring.length; i++) {\n\t\t\tvar p1 = _ring[i];\n\t\t\tvar p2 = _ring[i - 1];\n\t\t\tcounter.countSegment(p1, p2);\n\t\t\tif (counter.isOnSegment()) return counter.getLocation();\n\t\t}\n\t\treturn counter.getLocation();\n\t}\n};\n\nfunction CGAlgorithms() {}\nextend(CGAlgorithms.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CGAlgorithms;\n\t}\n});\nCGAlgorithms.orientationIndex = function (p1, p2, q) {\n\treturn CGAlgorithmsDD.orientationIndex(p1, p2, q);\n};\nCGAlgorithms.signedArea = function () {\n\tif (arguments[0] instanceof Array) {\n\t\tvar ring = arguments[0];\n\t\tif (ring.length < 3) return 0.0;\n\t\tvar sum = 0.0;\n\t\tvar x0 = ring[0].x;\n\t\tfor (var i = 1; i < ring.length - 1; i++) {\n\t\t\tvar x = ring[i].x - x0;\n\t\t\tvar y1 = ring[i + 1].y;\n\t\t\tvar y2 = ring[i - 1].y;\n\t\t\tsum += x * (y2 - y1);\n\t\t}\n\t\treturn sum / 2.0;\n\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\tvar _ring = arguments[0];\n\t\tvar n = _ring.size();\n\t\tif (n < 3) return 0.0;\n\t\tvar p0 = new Coordinate();\n\t\tvar p1 = new Coordinate();\n\t\tvar p2 = new Coordinate();\n\t\t_ring.getCoordinate(0, p1);\n\t\t_ring.getCoordinate(1, p2);\n\t\tvar x0 = p1.x;\n\t\tp2.x -= x0;\n\t\tvar sum = 0.0;\n\t\tfor (var i = 1; i < n - 1; i++) {\n\t\t\tp0.y = p1.y;\n\t\t\tp1.x = p2.x;\n\t\t\tp1.y = p2.y;\n\t\t\t_ring.getCoordinate(i + 1, p2);\n\t\t\tp2.x -= x0;\n\t\t\tsum += p1.x * (p0.y - p2.y);\n\t\t}\n\t\treturn sum / 2.0;\n\t}\n};\nCGAlgorithms.distanceLineLine = function (A, B, C, D) {\n\tif (A.equals(B)) return CGAlgorithms.distancePointLine(A, C, D);\n\tif (C.equals(D)) return CGAlgorithms.distancePointLine(D, A, B);\n\tvar noIntersection = false;\n\tif (!Envelope.intersects(A, B, C, D)) {\n\t\tnoIntersection = true;\n\t} else {\n\t\tvar denom = (B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x);\n\t\tif (denom === 0) {\n\t\t\tnoIntersection = true;\n\t\t} else {\n\t\t\tvar r_num = (A.y - C.y) * (D.x - C.x) - (A.x - C.x) * (D.y - C.y);\n\t\t\tvar s_num = (A.y - C.y) * (B.x - A.x) - (A.x - C.x) * (B.y - A.y);\n\t\t\tvar s = s_num / denom;\n\t\t\tvar r = r_num / denom;\n\t\t\tif (r < 0 || r > 1 || s < 0 || s > 1) {\n\t\t\t\tnoIntersection = true;\n\t\t\t}\n\t\t}\n\t}\n\tif (noIntersection) {\n\t\treturn MathUtil.min(CGAlgorithms.distancePointLine(A, C, D), CGAlgorithms.distancePointLine(B, C, D), CGAlgorithms.distancePointLine(C, A, B), CGAlgorithms.distancePointLine(D, A, B));\n\t}\n\treturn 0.0;\n};\nCGAlgorithms.isPointInRing = function (p, ring) {\n\treturn CGAlgorithms.locatePointInRing(p, ring) !== Location.EXTERIOR;\n};\nCGAlgorithms.computeLength = function (pts) {\n\tvar n = pts.size();\n\tif (n <= 1) return 0.0;\n\tvar len = 0.0;\n\tvar p = new Coordinate();\n\tpts.getCoordinate(0, p);\n\tvar x0 = p.x;\n\tvar y0 = p.y;\n\tfor (var i = 1; i < n; i++) {\n\t\tpts.getCoordinate(i, p);\n\t\tvar x1 = p.x;\n\t\tvar y1 = p.y;\n\t\tvar dx = x1 - x0;\n\t\tvar dy = y1 - y0;\n\t\tlen += Math.sqrt(dx * dx + dy * dy);\n\t\tx0 = x1;\n\t\ty0 = y1;\n\t}\n\treturn len;\n};\nCGAlgorithms.isCCW = function (ring) {\n\tvar nPts = ring.length - 1;\n\tif (nPts < 3) throw new IllegalArgumentException(\"Ring has fewer than 4 points, so orientation cannot be determined\");\n\tvar hiPt = ring[0];\n\tvar hiIndex = 0;\n\tfor (var i = 1; i <= nPts; i++) {\n\t\tvar p = ring[i];\n\t\tif (p.y > hiPt.y) {\n\t\t\thiPt = p;\n\t\t\thiIndex = i;\n\t\t}\n\t}\n\tvar iPrev = hiIndex;\n\tdo {\n\t\tiPrev = iPrev - 1;\n\t\tif (iPrev < 0) iPrev = nPts;\n\t} while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex);\n\tvar iNext = hiIndex;\n\tdo {\n\t\tiNext = (iNext + 1) % nPts;\n\t} while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex);\n\tvar prev = ring[iPrev];\n\tvar next = ring[iNext];\n\tif (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) return false;\n\tvar disc = CGAlgorithms.computeOrientation(prev, hiPt, next);\n\tvar isCCW = false;\n\tif (disc === 0) {\n\t\tisCCW = prev.x > next.x;\n\t} else {\n\t\tisCCW = disc > 0;\n\t}\n\treturn isCCW;\n};\nCGAlgorithms.locatePointInRing = function (p, ring) {\n\treturn RayCrossingCounter.locatePointInRing(p, ring);\n};\nCGAlgorithms.distancePointLinePerpendicular = function (p, A, B) {\n\tvar len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n\tvar s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n\treturn Math.abs(s) * Math.sqrt(len2);\n};\nCGAlgorithms.computeOrientation = function (p1, p2, q) {\n\treturn CGAlgorithms.orientationIndex(p1, p2, q);\n};\nCGAlgorithms.distancePointLine = function () {\n\tif (arguments.length === 2) {\n\t\tvar p = arguments[0],\n\t\t    line = arguments[1];\n\t\tif (line.length === 0) throw new IllegalArgumentException(\"Line array must contain at least one vertex\");\n\t\tvar minDistance = p.distance(line[0]);\n\t\tfor (var i = 0; i < line.length - 1; i++) {\n\t\t\tvar dist = CGAlgorithms.distancePointLine(p, line[i], line[i + 1]);\n\t\t\tif (dist < minDistance) {\n\t\t\t\tminDistance = dist;\n\t\t\t}\n\t\t}\n\t\treturn minDistance;\n\t} else if (arguments.length === 3) {\n\t\tvar _p = arguments[0],\n\t\t    A = arguments[1],\n\t\t    B = arguments[2];\n\t\tif (A.x === B.x && A.y === B.y) return _p.distance(A);\n\t\tvar len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n\t\tvar r = ((_p.x - A.x) * (B.x - A.x) + (_p.y - A.y) * (B.y - A.y)) / len2;\n\t\tif (r <= 0.0) return _p.distance(A);\n\t\tif (r >= 1.0) return _p.distance(B);\n\t\tvar s = ((A.y - _p.y) * (B.x - A.x) - (A.x - _p.x) * (B.y - A.y)) / len2;\n\t\treturn Math.abs(s) * Math.sqrt(len2);\n\t}\n};\nCGAlgorithms.isOnLine = function (p, pt) {\n\tvar lineIntersector = new RobustLineIntersector();\n\tfor (var i = 1; i < pt.length; i++) {\n\t\tvar p0 = pt[i - 1];\n\t\tvar p1 = pt[i];\n\t\tlineIntersector.computeIntersection(p, p0, p1);\n\t\tif (lineIntersector.hasIntersection()) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\nCGAlgorithms.CLOCKWISE = -1;\nCGAlgorithms.RIGHT = CGAlgorithms.CLOCKWISE;\nCGAlgorithms.COUNTERCLOCKWISE = 1;\nCGAlgorithms.LEFT = CGAlgorithms.COUNTERCLOCKWISE;\nCGAlgorithms.COLLINEAR = 0;\nCGAlgorithms.STRAIGHT = CGAlgorithms.COLLINEAR;\n\nfunction LineSegment() {\n\tthis.p0 = null;\n\tthis.p1 = null;\n\tif (arguments.length === 0) {\n\t\tLineSegment.call(this, new Coordinate(), new Coordinate());\n\t} else if (arguments.length === 1) {\n\t\tvar ls = arguments[0];\n\t\tLineSegment.call(this, ls.p0, ls.p1);\n\t} else if (arguments.length === 2) {\n\t\tvar p0 = arguments[0],\n\t\t    p1 = arguments[1];\n\t\tthis.p0 = p0;\n\t\tthis.p1 = p1;\n\t} else if (arguments.length === 4) {\n\t\tvar x0 = arguments[0],\n\t\t    y0 = arguments[1],\n\t\t    x1 = arguments[2],\n\t\t    y1 = arguments[3];\n\t\tLineSegment.call(this, new Coordinate(x0, y0), new Coordinate(x1, y1));\n\t}\n}\nextend(LineSegment.prototype, {\n\tminX: function minX() {\n\t\treturn Math.min(this.p0.x, this.p1.x);\n\t},\n\torientationIndex: function orientationIndex() {\n\t\tif (arguments[0] instanceof LineSegment) {\n\t\t\tvar seg = arguments[0];\n\t\t\tvar orient0 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p0);\n\t\t\tvar orient1 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p1);\n\t\t\tif (orient0 >= 0 && orient1 >= 0) return Math.max(orient0, orient1);\n\t\t\tif (orient0 <= 0 && orient1 <= 0) return Math.max(orient0, orient1);\n\t\t\treturn 0;\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tvar p = arguments[0];\n\t\t\treturn CGAlgorithms.orientationIndex(this.p0, this.p1, p);\n\t\t}\n\t},\n\ttoGeometry: function toGeometry(geomFactory) {\n\t\treturn geomFactory.createLineString([this.p0, this.p1]);\n\t},\n\tisVertical: function isVertical() {\n\t\treturn this.p0.x === this.p1.x;\n\t},\n\tequals: function equals(o) {\n\t\tif (!(o instanceof LineSegment)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar other = o;\n\t\treturn this.p0.equals(other.p0) && this.p1.equals(other.p1);\n\t},\n\tintersection: function intersection(line) {\n\t\tvar li = new RobustLineIntersector();\n\t\tli.computeIntersection(this.p0, this.p1, line.p0, line.p1);\n\t\tif (li.hasIntersection()) return li.getIntersection(0);\n\t\treturn null;\n\t},\n\tproject: function project() {\n\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\tvar p = arguments[0];\n\t\t\tif (p.equals(this.p0) || p.equals(this.p1)) return new Coordinate(p);\n\t\t\tvar r = this.projectionFactor(p);\n\t\t\tvar coord = new Coordinate();\n\t\t\tcoord.x = this.p0.x + r * (this.p1.x - this.p0.x);\n\t\t\tcoord.y = this.p0.y + r * (this.p1.y - this.p0.y);\n\t\t\treturn coord;\n\t\t} else if (arguments[0] instanceof LineSegment) {\n\t\t\tvar seg = arguments[0];\n\t\t\tvar pf0 = this.projectionFactor(seg.p0);\n\t\t\tvar pf1 = this.projectionFactor(seg.p1);\n\t\t\tif (pf0 >= 1.0 && pf1 >= 1.0) return null;\n\t\t\tif (pf0 <= 0.0 && pf1 <= 0.0) return null;\n\t\t\tvar newp0 = this.project(seg.p0);\n\t\t\tif (pf0 < 0.0) newp0 = this.p0;\n\t\t\tif (pf0 > 1.0) newp0 = this.p1;\n\t\t\tvar newp1 = this.project(seg.p1);\n\t\t\tif (pf1 < 0.0) newp1 = this.p0;\n\t\t\tif (pf1 > 1.0) newp1 = this.p1;\n\t\t\treturn new LineSegment(newp0, newp1);\n\t\t}\n\t},\n\tnormalize: function normalize() {\n\t\tif (this.p1.compareTo(this.p0) < 0) this.reverse();\n\t},\n\tangle: function angle() {\n\t\treturn Math.atan2(this.p1.y - this.p0.y, this.p1.x - this.p0.x);\n\t},\n\tgetCoordinate: function getCoordinate(i) {\n\t\tif (i === 0) return this.p0;\n\t\treturn this.p1;\n\t},\n\tdistancePerpendicular: function distancePerpendicular(p) {\n\t\treturn CGAlgorithms.distancePointLinePerpendicular(p, this.p0, this.p1);\n\t},\n\tminY: function minY() {\n\t\treturn Math.min(this.p0.y, this.p1.y);\n\t},\n\tmidPoint: function midPoint() {\n\t\treturn LineSegment.midPoint(this.p0, this.p1);\n\t},\n\tprojectionFactor: function projectionFactor(p) {\n\t\tif (p.equals(this.p0)) return 0.0;\n\t\tif (p.equals(this.p1)) return 1.0;\n\t\tvar dx = this.p1.x - this.p0.x;\n\t\tvar dy = this.p1.y - this.p0.y;\n\t\tvar len = dx * dx + dy * dy;\n\t\tif (len <= 0.0) return Double.NaN;\n\t\tvar r = ((p.x - this.p0.x) * dx + (p.y - this.p0.y) * dy) / len;\n\t\treturn r;\n\t},\n\tclosestPoints: function closestPoints(line) {\n\t\tvar intPt = this.intersection(line);\n\t\tif (intPt !== null) {\n\t\t\treturn [intPt, intPt];\n\t\t}\n\t\tvar closestPt = new Array(2).fill(null);\n\t\tvar minDistance = Double.MAX_VALUE;\n\t\tvar dist = null;\n\t\tvar close00 = this.closestPoint(line.p0);\n\t\tminDistance = close00.distance(line.p0);\n\t\tclosestPt[0] = close00;\n\t\tclosestPt[1] = line.p0;\n\t\tvar close01 = this.closestPoint(line.p1);\n\t\tdist = close01.distance(line.p1);\n\t\tif (dist < minDistance) {\n\t\t\tminDistance = dist;\n\t\t\tclosestPt[0] = close01;\n\t\t\tclosestPt[1] = line.p1;\n\t\t}\n\t\tvar close10 = line.closestPoint(this.p0);\n\t\tdist = close10.distance(this.p0);\n\t\tif (dist < minDistance) {\n\t\t\tminDistance = dist;\n\t\t\tclosestPt[0] = this.p0;\n\t\t\tclosestPt[1] = close10;\n\t\t}\n\t\tvar close11 = line.closestPoint(this.p1);\n\t\tdist = close11.distance(this.p1);\n\t\tif (dist < minDistance) {\n\t\t\tminDistance = dist;\n\t\t\tclosestPt[0] = this.p1;\n\t\t\tclosestPt[1] = close11;\n\t\t}\n\t\treturn closestPt;\n\t},\n\tclosestPoint: function closestPoint(p) {\n\t\tvar factor = this.projectionFactor(p);\n\t\tif (factor > 0 && factor < 1) {\n\t\t\treturn this.project(p);\n\t\t}\n\t\tvar dist0 = this.p0.distance(p);\n\t\tvar dist1 = this.p1.distance(p);\n\t\tif (dist0 < dist1) return this.p0;\n\t\treturn this.p1;\n\t},\n\tmaxX: function maxX() {\n\t\treturn Math.max(this.p0.x, this.p1.x);\n\t},\n\tgetLength: function getLength() {\n\t\treturn this.p0.distance(this.p1);\n\t},\n\tcompareTo: function compareTo(o) {\n\t\tvar other = o;\n\t\tvar comp0 = this.p0.compareTo(other.p0);\n\t\tif (comp0 !== 0) return comp0;\n\t\treturn this.p1.compareTo(other.p1);\n\t},\n\treverse: function reverse() {\n\t\tvar temp = this.p0;\n\t\tthis.p0 = this.p1;\n\t\tthis.p1 = temp;\n\t},\n\tequalsTopo: function equalsTopo(other) {\n\t\treturn this.p0.equals(other.p0) && this.p1.equals(other.p1) || this.p0.equals(other.p1) && this.p1.equals(other.p0);\n\t},\n\tlineIntersection: function lineIntersection(line) {\n\t\ttry {\n\t\t\tvar intPt = HCoordinate.intersection(this.p0, this.p1, line.p0, line.p1);\n\t\t\treturn intPt;\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof NotRepresentableException) {} else throw ex;\n\t\t} finally {}\n\t\treturn null;\n\t},\n\tmaxY: function maxY() {\n\t\treturn Math.max(this.p0.y, this.p1.y);\n\t},\n\tpointAlongOffset: function pointAlongOffset(segmentLengthFraction, offsetDistance) {\n\t\tvar segx = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n\t\tvar segy = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n\t\tvar dx = this.p1.x - this.p0.x;\n\t\tvar dy = this.p1.y - this.p0.y;\n\t\tvar len = Math.sqrt(dx * dx + dy * dy);\n\t\tvar ux = 0.0;\n\t\tvar uy = 0.0;\n\t\tif (offsetDistance !== 0.0) {\n\t\t\tif (len <= 0.0) throw new IllegalStateException(\"Cannot compute offset from zero-length line segment\");\n\t\t\tux = offsetDistance * dx / len;\n\t\t\tuy = offsetDistance * dy / len;\n\t\t}\n\t\tvar offsetx = segx - uy;\n\t\tvar offsety = segy + ux;\n\t\tvar coord = new Coordinate(offsetx, offsety);\n\t\treturn coord;\n\t},\n\tsetCoordinates: function setCoordinates() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar ls = arguments[0];\n\t\t\tthis.setCoordinates(ls.p0, ls.p1);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar p0 = arguments[0],\n\t\t\t    p1 = arguments[1];\n\t\t\tthis.p0.x = p0.x;\n\t\t\tthis.p0.y = p0.y;\n\t\t\tthis.p1.x = p1.x;\n\t\t\tthis.p1.y = p1.y;\n\t\t}\n\t},\n\tsegmentFraction: function segmentFraction(inputPt) {\n\t\tvar segFrac = this.projectionFactor(inputPt);\n\t\tif (segFrac < 0.0) segFrac = 0.0;else if (segFrac > 1.0 || Double.isNaN(segFrac)) segFrac = 1.0;\n\t\treturn segFrac;\n\t},\n\ttoString: function toString() {\n\t\treturn \"LINESTRING( \" + this.p0.x + \" \" + this.p0.y + \", \" + this.p1.x + \" \" + this.p1.y + \")\";\n\t},\n\tisHorizontal: function isHorizontal() {\n\t\treturn this.p0.y === this.p1.y;\n\t},\n\tdistance: function distance() {\n\t\tif (arguments[0] instanceof LineSegment) {\n\t\t\tvar ls = arguments[0];\n\t\t\treturn CGAlgorithms.distanceLineLine(this.p0, this.p1, ls.p0, ls.p1);\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tvar p = arguments[0];\n\t\t\treturn CGAlgorithms.distancePointLine(p, this.p0, this.p1);\n\t\t}\n\t},\n\tpointAlong: function pointAlong(segmentLengthFraction) {\n\t\tvar coord = new Coordinate();\n\t\tcoord.x = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n\t\tcoord.y = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n\t\treturn coord;\n\t},\n\thashCode: function hashCode() {\n\t\tvar bits0 = java.lang.Double.doubleToLongBits(this.p0.x);\n\t\tbits0 ^= java.lang.Double.doubleToLongBits(this.p0.y) * 31;\n\t\tvar hash0 = Math.trunc(bits0) ^ Math.trunc(bits0 >> 32);\n\t\tvar bits1 = java.lang.Double.doubleToLongBits(this.p1.x);\n\t\tbits1 ^= java.lang.Double.doubleToLongBits(this.p1.y) * 31;\n\t\tvar hash1 = Math.trunc(bits1) ^ Math.trunc(bits1 >> 32);\n\t\treturn hash0 ^ hash1;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparable, Serializable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineSegment;\n\t}\n});\nLineSegment.midPoint = function (p0, p1) {\n\treturn new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2);\n};\nLineSegment.serialVersionUID = 3252005833466256227;\n\nfunction IntersectionMatrix() {\n\tthis.matrix = null;\n\tif (arguments.length === 0) {\n\t\tthis.matrix = Array(3).fill().map(function () {\n\t\t\treturn Array(3);\n\t\t});\n\t\tthis.setAll(Dimension.FALSE);\n\t} else if (arguments.length === 1) {\n\t\tif (typeof arguments[0] === \"string\") {\n\t\t\tvar elements = arguments[0];\n\t\t\tIntersectionMatrix.call(this);\n\t\t\tthis.set(elements);\n\t\t} else if (arguments[0] instanceof IntersectionMatrix) {\n\t\t\tvar other = arguments[0];\n\t\t\tIntersectionMatrix.call(this);\n\t\t\tthis.matrix[Location.INTERIOR][Location.INTERIOR] = other.matrix[Location.INTERIOR][Location.INTERIOR];\n\t\t\tthis.matrix[Location.INTERIOR][Location.BOUNDARY] = other.matrix[Location.INTERIOR][Location.BOUNDARY];\n\t\t\tthis.matrix[Location.INTERIOR][Location.EXTERIOR] = other.matrix[Location.INTERIOR][Location.EXTERIOR];\n\t\t\tthis.matrix[Location.BOUNDARY][Location.INTERIOR] = other.matrix[Location.BOUNDARY][Location.INTERIOR];\n\t\t\tthis.matrix[Location.BOUNDARY][Location.BOUNDARY] = other.matrix[Location.BOUNDARY][Location.BOUNDARY];\n\t\t\tthis.matrix[Location.BOUNDARY][Location.EXTERIOR] = other.matrix[Location.BOUNDARY][Location.EXTERIOR];\n\t\t\tthis.matrix[Location.EXTERIOR][Location.INTERIOR] = other.matrix[Location.EXTERIOR][Location.INTERIOR];\n\t\t\tthis.matrix[Location.EXTERIOR][Location.BOUNDARY] = other.matrix[Location.EXTERIOR][Location.BOUNDARY];\n\t\t\tthis.matrix[Location.EXTERIOR][Location.EXTERIOR] = other.matrix[Location.EXTERIOR][Location.EXTERIOR];\n\t\t}\n\t}\n}\nextend(IntersectionMatrix.prototype, {\n\tisIntersects: function isIntersects() {\n\t\treturn !this.isDisjoint();\n\t},\n\tisCovers: function isCovers() {\n\t\tvar hasPointInCommon = IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR]) || IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.BOUNDARY]);\n\t\treturn hasPointInCommon && this.matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this.matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE;\n\t},\n\tisCoveredBy: function isCoveredBy() {\n\t\tvar hasPointInCommon = IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR]) || IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.BOUNDARY]);\n\t\treturn hasPointInCommon && this.matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this.matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE;\n\t},\n\tset: function set() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar dimensionSymbols = arguments[0];\n\t\t\tfor (var i = 0; i < dimensionSymbols.length; i++) {\n\t\t\t\tvar row = Math.trunc(i / 3);\n\t\t\t\tvar col = i % 3;\n\t\t\t\tthis.matrix[row][col] = Dimension.toDimensionValue(dimensionSymbols.charAt(i));\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tvar _row = arguments[0],\n\t\t\t    column = arguments[1],\n\t\t\t    dimensionValue = arguments[2];\n\t\t\tthis.matrix[_row][column] = dimensionValue;\n\t\t}\n\t},\n\tisContains: function isContains() {\n\t\treturn IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR]) && this.matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this.matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE;\n\t},\n\tsetAtLeast: function setAtLeast() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar minimumDimensionSymbols = arguments[0];\n\t\t\tfor (var i = 0; i < minimumDimensionSymbols.length; i++) {\n\t\t\t\tvar row = Math.trunc(i / 3);\n\t\t\t\tvar col = i % 3;\n\t\t\t\tthis.setAtLeast(row, col, Dimension.toDimensionValue(minimumDimensionSymbols.charAt(i)));\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tvar _row2 = arguments[0],\n\t\t\t    column = arguments[1],\n\t\t\t    minimumDimensionValue = arguments[2];\n\t\t\tif (this.matrix[_row2][column] < minimumDimensionValue) {\n\t\t\t\tthis.matrix[_row2][column] = minimumDimensionValue;\n\t\t\t}\n\t\t}\n\t},\n\tsetAtLeastIfValid: function setAtLeastIfValid(row, column, minimumDimensionValue) {\n\t\tif (row >= 0 && column >= 0) {\n\t\t\tthis.setAtLeast(row, column, minimumDimensionValue);\n\t\t}\n\t},\n\tisWithin: function isWithin() {\n\t\treturn IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR]) && this.matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this.matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE;\n\t},\n\tisTouches: function isTouches(dimensionOfGeometryA, dimensionOfGeometryB) {\n\t\tif (dimensionOfGeometryA > dimensionOfGeometryB) {\n\t\t\treturn this.isTouches(dimensionOfGeometryB, dimensionOfGeometryA);\n\t\t}\n\t\tif (dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.L) {\n\t\t\treturn this.matrix[Location.INTERIOR][Location.INTERIOR] === Dimension.FALSE && (IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.BOUNDARY]));\n\t\t}\n\t\treturn false;\n\t},\n\tisOverlaps: function isOverlaps(dimensionOfGeometryA, dimensionOfGeometryB) {\n\t\tif (dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.A) {\n\t\t\treturn IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.EXTERIOR]) && IntersectionMatrix.isTrue(this.matrix[Location.EXTERIOR][Location.INTERIOR]);\n\t\t}\n\t\tif (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L) {\n\t\t\treturn this.matrix[Location.INTERIOR][Location.INTERIOR] === 1 && IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.EXTERIOR]) && IntersectionMatrix.isTrue(this.matrix[Location.EXTERIOR][Location.INTERIOR]);\n\t\t}\n\t\treturn false;\n\t},\n\tisEquals: function isEquals(dimensionOfGeometryA, dimensionOfGeometryB) {\n\t\tif (dimensionOfGeometryA !== dimensionOfGeometryB) {\n\t\t\treturn false;\n\t\t}\n\t\treturn IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR]) && this.matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this.matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE && this.matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this.matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE;\n\t},\n\ttoString: function toString() {\n\t\tvar buf = new StringBuffer(\"123456789\");\n\t\tfor (var ai = 0; ai < 3; ai++) {\n\t\t\tfor (var bi = 0; bi < 3; bi++) {\n\t\t\t\tbuf.setCharAt(3 * ai + bi, Dimension.toDimensionSymbol(this.matrix[ai][bi]));\n\t\t\t}\n\t\t}\n\t\treturn buf.toString();\n\t},\n\tsetAll: function setAll(dimensionValue) {\n\t\tfor (var ai = 0; ai < 3; ai++) {\n\t\t\tfor (var bi = 0; bi < 3; bi++) {\n\t\t\t\tthis.matrix[ai][bi] = dimensionValue;\n\t\t\t}\n\t\t}\n\t},\n\tget: function get(row, column) {\n\t\treturn this.matrix[row][column];\n\t},\n\ttranspose: function transpose() {\n\t\tvar temp = this.matrix[1][0];\n\t\tthis.matrix[1][0] = this.matrix[0][1];\n\t\tthis.matrix[0][1] = temp;\n\t\ttemp = this.matrix[2][0];\n\t\tthis.matrix[2][0] = this.matrix[0][2];\n\t\tthis.matrix[0][2] = temp;\n\t\ttemp = this.matrix[2][1];\n\t\tthis.matrix[2][1] = this.matrix[1][2];\n\t\tthis.matrix[1][2] = temp;\n\t\treturn this;\n\t},\n\tmatches: function matches(requiredDimensionSymbols) {\n\t\tif (requiredDimensionSymbols.length !== 9) {\n\t\t\tthrow new IllegalArgumentException(\"Should be length 9: \" + requiredDimensionSymbols);\n\t\t}\n\t\tfor (var ai = 0; ai < 3; ai++) {\n\t\t\tfor (var bi = 0; bi < 3; bi++) {\n\t\t\t\tif (!IntersectionMatrix.matches(this.matrix[ai][bi], requiredDimensionSymbols.charAt(3 * ai + bi))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tadd: function add(im) {\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\tthis.setAtLeast(i, j, im.get(i, j));\n\t\t\t}\n\t\t}\n\t},\n\tisDisjoint: function isDisjoint() {\n\t\treturn this.matrix[Location.INTERIOR][Location.INTERIOR] === Dimension.FALSE && this.matrix[Location.INTERIOR][Location.BOUNDARY] === Dimension.FALSE && this.matrix[Location.BOUNDARY][Location.INTERIOR] === Dimension.FALSE && this.matrix[Location.BOUNDARY][Location.BOUNDARY] === Dimension.FALSE;\n\t},\n\tisCrosses: function isCrosses(dimensionOfGeometryA, dimensionOfGeometryB) {\n\t\tif (dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.L || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.A) {\n\t\t\treturn IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.EXTERIOR]);\n\t\t}\n\t\tif (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.L) {\n\t\t\treturn IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this.matrix[Location.EXTERIOR][Location.INTERIOR]);\n\t\t}\n\t\tif (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L) {\n\t\t\treturn this.matrix[Location.INTERIOR][Location.INTERIOR] === 0;\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Clonable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn IntersectionMatrix;\n\t}\n});\nIntersectionMatrix.matches = function () {\n\tif (Number.isInteger(arguments[0]) && typeof arguments[1] === \"string\") {\n\t\tvar actualDimensionValue = arguments[0],\n\t\t    requiredDimensionSymbol = arguments[1];\n\t\tif (requiredDimensionSymbol === Dimension.SYM_DONTCARE) {\n\t\t\treturn true;\n\t\t}\n\t\tif (requiredDimensionSymbol === Dimension.SYM_TRUE && (actualDimensionValue >= 0 || actualDimensionValue === Dimension.TRUE)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (requiredDimensionSymbol === Dimension.SYM_FALSE && actualDimensionValue === Dimension.FALSE) {\n\t\t\treturn true;\n\t\t}\n\t\tif (requiredDimensionSymbol === Dimension.SYM_P && actualDimensionValue === Dimension.P) {\n\t\t\treturn true;\n\t\t}\n\t\tif (requiredDimensionSymbol === Dimension.SYM_L && actualDimensionValue === Dimension.L) {\n\t\t\treturn true;\n\t\t}\n\t\tif (requiredDimensionSymbol === Dimension.SYM_A && actualDimensionValue === Dimension.A) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t} else if (typeof arguments[0] === \"string\" && typeof arguments[1] === \"string\") {\n\t\tvar actualDimensionSymbols = arguments[0],\n\t\t    requiredDimensionSymbols = arguments[1];\n\t\tvar m = new IntersectionMatrix(actualDimensionSymbols);\n\t\treturn m.matches(requiredDimensionSymbols);\n\t}\n};\nIntersectionMatrix.isTrue = function (actualDimensionValue) {\n\tif (actualDimensionValue >= 0 || actualDimensionValue === Dimension.TRUE) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\n\n\nvar geom = Object.freeze({\n\tCoordinate: Coordinate,\n\tCoordinateList: CoordinateList,\n\tEnvelope: Envelope,\n\tLineSegment: LineSegment,\n\tGeometryFactory: GeometryFactory,\n\tGeometry: Geometry,\n\tPoint: Point,\n\tLineString: LineString,\n\tLinearRing: LinearRing,\n\tPolygon: Polygon,\n\tGeometryCollection: GeometryCollection,\n\tMultiPoint: MultiPoint,\n\tMultiLineString: MultiLineString,\n\tMultiPolygon: MultiPolygon,\n\tDimension: Dimension,\n\tIntersectionMatrix: IntersectionMatrix,\n\tPrecisionModel: PrecisionModel\n});\n\nfunction Centroid() {\n\tthis.areaBasePt = null;\n\tthis.triangleCent3 = new Coordinate();\n\tthis.areasum2 = 0;\n\tthis.cg3 = new Coordinate();\n\tthis.lineCentSum = new Coordinate();\n\tthis.totalLength = 0.0;\n\tthis.ptCount = 0;\n\tthis.ptCentSum = new Coordinate();\n\tvar geom = arguments[0];\n\tthis.areaBasePt = null;\n\tthis.add(geom);\n}\nextend(Centroid.prototype, {\n\taddPoint: function addPoint(pt) {\n\t\tthis.ptCount += 1;\n\t\tthis.ptCentSum.x += pt.x;\n\t\tthis.ptCentSum.y += pt.y;\n\t},\n\tsetBasePoint: function setBasePoint(basePt) {\n\t\tif (this.areaBasePt === null) this.areaBasePt = basePt;\n\t},\n\taddLineSegments: function addLineSegments(pts) {\n\t\tvar lineLen = 0.0;\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tvar segmentLen = pts[i].distance(pts[i + 1]);\n\t\t\tif (segmentLen === 0.0) continue;\n\t\t\tlineLen += segmentLen;\n\t\t\tvar midx = (pts[i].x + pts[i + 1].x) / 2;\n\t\t\tthis.lineCentSum.x += segmentLen * midx;\n\t\t\tvar midy = (pts[i].y + pts[i + 1].y) / 2;\n\t\t\tthis.lineCentSum.y += segmentLen * midy;\n\t\t}\n\t\tthis.totalLength += lineLen;\n\t\tif (lineLen === 0.0 && pts.length > 0) this.addPoint(pts[0]);\n\t},\n\taddHole: function addHole(pts) {\n\t\tvar isPositiveArea = CGAlgorithms.isCCW(pts);\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tthis.addTriangle(this.areaBasePt, pts[i], pts[i + 1], isPositiveArea);\n\t\t}\n\t\tthis.addLineSegments(pts);\n\t},\n\tgetCentroid: function getCentroid() {\n\t\tvar cent = new Coordinate();\n\t\tif (Math.abs(this.areasum2) > 0.0) {\n\t\t\tcent.x = this.cg3.x / 3 / this.areasum2;\n\t\t\tcent.y = this.cg3.y / 3 / this.areasum2;\n\t\t} else if (this.totalLength > 0.0) {\n\t\t\tcent.x = this.lineCentSum.x / this.totalLength;\n\t\t\tcent.y = this.lineCentSum.y / this.totalLength;\n\t\t} else if (this.ptCount > 0) {\n\t\t\tcent.x = this.ptCentSum.x / this.ptCount;\n\t\t\tcent.y = this.ptCentSum.y / this.ptCount;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t\treturn cent;\n\t},\n\taddShell: function addShell(pts) {\n\t\tif (pts.length > 0) this.setBasePoint(pts[0]);\n\t\tvar isPositiveArea = !CGAlgorithms.isCCW(pts);\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tthis.addTriangle(this.areaBasePt, pts[i], pts[i + 1], isPositiveArea);\n\t\t}\n\t\tthis.addLineSegments(pts);\n\t},\n\taddTriangle: function addTriangle(p0, p1, p2, isPositiveArea) {\n\t\tvar sign = isPositiveArea ? 1.0 : -1.0;\n\t\tCentroid.centroid3(p0, p1, p2, this.triangleCent3);\n\t\tvar area2 = Centroid.area2(p0, p1, p2);\n\t\tthis.cg3.x += sign * area2 * this.triangleCent3.x;\n\t\tthis.cg3.y += sign * area2 * this.triangleCent3.y;\n\t\tthis.areasum2 += sign * area2;\n\t},\n\tadd: function add() {\n\t\tif (arguments[0] instanceof Polygon) {\n\t\t\tvar _poly = arguments[0];\n\t\t\tthis.addShell(_poly.getExteriorRing().getCoordinates());\n\t\t\tfor (var i = 0; i < _poly.getNumInteriorRing(); i++) {\n\t\t\t\tthis.addHole(_poly.getInteriorRingN(i).getCoordinates());\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tvar geom = arguments[0];\n\t\t\tif (geom.isEmpty()) return null;\n\t\t\tif (geom instanceof Point) {\n\t\t\t\tthis.addPoint(geom.getCoordinate());\n\t\t\t} else if (geom instanceof LineString) {\n\t\t\t\tthis.addLineSegments(geom.getCoordinates());\n\t\t\t} else if (geom instanceof Polygon) {\n\t\t\t\tvar poly = geom;\n\t\t\t\tthis.add(poly);\n\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\tvar gc = geom;\n\t\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\t\tthis.add(gc.getGeometryN(i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Centroid;\n\t}\n});\nCentroid.area2 = function (p1, p2, p3) {\n\treturn (p2.x - p1.x) * (p3.y - p1.y) - (p3.x - p1.x) * (p2.y - p1.y);\n};\nCentroid.centroid3 = function (p1, p2, p3, c) {\n\tc.x = p1.x + p2.x + p3.x;\n\tc.y = p1.y + p2.y + p3.y;\n\treturn null;\n};\nCentroid.getCentroid = function (geom) {\n\tvar cent = new Centroid(geom);\n\treturn cent.getCentroid();\n};\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction EmptyStackException(message) {\n  this.message = message || '';\n}\nEmptyStackException.prototype = new Error();\n\n/**\n * @type {string}\n */\nEmptyStackException.prototype.name = 'EmptyStackException';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Stack.html\n *\n * @extends {List}\n * @constructor\n * @private\n */\nfunction Stack() {\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.array_ = [];\n}\nStack.prototype = new List();\n\n/**\n * @override\n */\nStack.prototype.add = function (e) {\n  this.array_.push(e);\n  return true;\n};\n\n/**\n * @override\n */\nStack.prototype.get = function (index) {\n  if (index < 0 || index >= this.size()) {\n    throw new IndexOutOfBoundsException();\n  }\n\n  return this.array_[index];\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.push = function (e) {\n  this.array_.push(e);\n  return e;\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.pop = function (e) {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException();\n  }\n\n  return this.array_.pop();\n};\n\n/**\n * Looks at the object at the top of this stack without removing it from the\n * stack.\n * @return {Object}\n */\nStack.prototype.peek = function () {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException();\n  }\n\n  return this.array_[this.array_.length - 1];\n};\n\n/**\n * Tests if this stack is empty.\n * @return {boolean} true if and only if this stack contains no items; false\n *         otherwise.\n */\nStack.prototype.empty = function () {\n  if (this.array_.length === 0) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n/**\n * @return {boolean}\n */\nStack.prototype.isEmpty = function () {\n  return this.empty();\n};\n\n/**\n * Returns the 1-based position where an object is on this stack. If the object\n * o occurs as an item in this stack, this method returns the distance from the\n * top of the stack of the occurrence nearest the top of the stack; the topmost\n * item on the stack is considered to be at distance 1. The equals method is\n * used to compare o to the items in this stack.\n *\n * NOTE: does not currently actually use equals. (=== is used)\n *\n * @param {Object} o\n * @return {number} the 1-based position from the top of the stack where the\n *         object is located; the return value -1 indicates that the object is\n *         not on the stack.\n */\nStack.prototype.search = function (o) {\n  return this.array_.indexOf(o);\n};\n\n/**\n * @return {number}\n * @export\n */\nStack.prototype.size = function () {\n  return this.array_.length;\n};\n\n/**\n * @return {Array}\n */\nStack.prototype.toArray = function () {\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i]);\n  }\n\n  return array;\n};\n\nfunction UniqueCoordinateArrayFilter() {\n\tthis.treeSet = new TreeSet();\n\tthis.list = new ArrayList();\n}\nextend(UniqueCoordinateArrayFilter.prototype, {\n\tfilter: function filter(coord) {\n\t\tif (!this.treeSet.contains(coord)) {\n\t\t\tthis.list.add(coord);\n\t\t\tthis.treeSet.add(coord);\n\t\t}\n\t},\n\tgetCoordinates: function getCoordinates() {\n\t\tvar coordinates = new Array(this.list.size()).fill(null);\n\t\treturn this.list.toArray(coordinates);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [CoordinateFilter];\n\t},\n\tgetClass: function getClass() {\n\t\treturn UniqueCoordinateArrayFilter;\n\t}\n});\nUniqueCoordinateArrayFilter.filterCoordinates = function (coords) {\n\tvar filter = new UniqueCoordinateArrayFilter();\n\tfor (var i = 0; i < coords.length; i++) {\n\t\tfilter.filter(coords[i]);\n\t}\n\treturn filter.getCoordinates();\n};\n\nfunction ConvexHull() {\n\tthis.geomFactory = null;\n\tthis.inputPts = null;\n\tif (arguments.length === 1) {\n\t\tvar geometry = arguments[0];\n\t\tConvexHull.call(this, ConvexHull.extractCoordinates(geometry), geometry.getFactory());\n\t} else if (arguments.length === 2) {\n\t\tvar pts = arguments[0],\n\t\t    geomFactory = arguments[1];\n\t\tthis.inputPts = UniqueCoordinateArrayFilter.filterCoordinates(pts);\n\t\tthis.geomFactory = geomFactory;\n\t}\n}\nextend(ConvexHull.prototype, {\n\tpreSort: function preSort(pts) {\n\t\tvar t = null;\n\t\tfor (var i = 1; i < pts.length; i++) {\n\t\t\tif (pts[i].y < pts[0].y || pts[i].y === pts[0].y && pts[i].x < pts[0].x) {\n\t\t\t\tt = pts[0];\n\t\t\t\tpts[0] = pts[i];\n\t\t\t\tpts[i] = t;\n\t\t\t}\n\t\t}\n\t\tArrays.sort(pts, 1, pts.length, new RadialComparator(pts[0]));\n\t\treturn pts;\n\t},\n\tcomputeOctRing: function computeOctRing(inputPts) {\n\t\tvar octPts = this.computeOctPts(inputPts);\n\t\tvar coordList = new CoordinateList();\n\t\tcoordList.add(octPts, false);\n\t\tif (coordList.size() < 3) {\n\t\t\treturn null;\n\t\t}\n\t\tcoordList.closeRing();\n\t\treturn coordList.toCoordinateArray();\n\t},\n\tlineOrPolygon: function lineOrPolygon(coordinates) {\n\t\tcoordinates = this.cleanRing(coordinates);\n\t\tif (coordinates.length === 3) {\n\t\t\treturn this.geomFactory.createLineString([coordinates[0], coordinates[1]]);\n\t\t}\n\t\tvar linearRing = this.geomFactory.createLinearRing(coordinates);\n\t\treturn this.geomFactory.createPolygon(linearRing, null);\n\t},\n\tcleanRing: function cleanRing(original) {\n\t\tAssert.equals(original[0], original[original.length - 1]);\n\t\tvar cleanedRing = new ArrayList();\n\t\tvar previousDistinctCoordinate = null;\n\t\tfor (var i = 0; i <= original.length - 2; i++) {\n\t\t\tvar currentCoordinate = original[i];\n\t\t\tvar nextCoordinate = original[i + 1];\n\t\t\tif (currentCoordinate.equals(nextCoordinate)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (previousDistinctCoordinate !== null && this.isBetween(previousDistinctCoordinate, currentCoordinate, nextCoordinate)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcleanedRing.add(currentCoordinate);\n\t\t\tpreviousDistinctCoordinate = currentCoordinate;\n\t\t}\n\t\tcleanedRing.add(original[original.length - 1]);\n\t\tvar cleanedRingCoordinates = new Array(cleanedRing.size()).fill(null);\n\t\treturn cleanedRing.toArray(cleanedRingCoordinates);\n\t},\n\tisBetween: function isBetween(c1, c2, c3) {\n\t\tif (CGAlgorithms.computeOrientation(c1, c2, c3) !== 0) {\n\t\t\treturn false;\n\t\t}\n\t\tif (c1.x !== c3.x) {\n\t\t\tif (c1.x <= c2.x && c2.x <= c3.x) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (c3.x <= c2.x && c2.x <= c1.x) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tif (c1.y !== c3.y) {\n\t\t\tif (c1.y <= c2.y && c2.y <= c3.y) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (c3.y <= c2.y && c2.y <= c1.y) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\treduce: function reduce(inputPts) {\n\t\tvar polyPts = this.computeOctRing(inputPts);\n\t\tif (polyPts === null) return inputPts;\n\t\tvar reducedSet = new TreeSet();\n\t\tfor (var i = 0; i < polyPts.length; i++) {\n\t\t\treducedSet.add(polyPts[i]);\n\t\t}\n\t\tfor (var i = 0; i < inputPts.length; i++) {\n\t\t\tif (!CGAlgorithms.isPointInRing(inputPts[i], polyPts)) {\n\t\t\t\treducedSet.add(inputPts[i]);\n\t\t\t}\n\t\t}\n\t\tvar reducedPts = CoordinateArrays.toCoordinateArray(reducedSet);\n\t\tif (reducedPts.length < 3) return this.padArray3(reducedPts);\n\t\treturn reducedPts;\n\t},\n\tgetConvexHull: function getConvexHull() {\n\t\tif (this.inputPts.length === 0) {\n\t\t\treturn this.geomFactory.createGeometryCollection(null);\n\t\t}\n\t\tif (this.inputPts.length === 1) {\n\t\t\treturn this.geomFactory.createPoint(this.inputPts[0]);\n\t\t}\n\t\tif (this.inputPts.length === 2) {\n\t\t\treturn this.geomFactory.createLineString(this.inputPts);\n\t\t}\n\t\tvar reducedPts = this.inputPts;\n\t\tif (this.inputPts.length > 50) {\n\t\t\treducedPts = this.reduce(this.inputPts);\n\t\t}\n\t\tvar sortedPts = this.preSort(reducedPts);\n\t\tvar cHS = this.grahamScan(sortedPts);\n\t\tvar cH = this.toCoordinateArray(cHS);\n\t\treturn this.lineOrPolygon(cH);\n\t},\n\tpadArray3: function padArray3(pts) {\n\t\tvar pad = new Array(3).fill(null);\n\t\tfor (var i = 0; i < pad.length; i++) {\n\t\t\tif (i < pts.length) {\n\t\t\t\tpad[i] = pts[i];\n\t\t\t} else pad[i] = pts[0];\n\t\t}\n\t\treturn pad;\n\t},\n\tcomputeOctPts: function computeOctPts(inputPts) {\n\t\tvar pts = new Array(8).fill(null);\n\t\tfor (var j = 0; j < pts.length; j++) {\n\t\t\tpts[j] = inputPts[0];\n\t\t}\n\t\tfor (var i = 1; i < inputPts.length; i++) {\n\t\t\tif (inputPts[i].x < pts[0].x) {\n\t\t\t\tpts[0] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x - inputPts[i].y < pts[1].x - pts[1].y) {\n\t\t\t\tpts[1] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].y > pts[2].y) {\n\t\t\t\tpts[2] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x + inputPts[i].y > pts[3].x + pts[3].y) {\n\t\t\t\tpts[3] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x > pts[4].x) {\n\t\t\t\tpts[4] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x - inputPts[i].y > pts[5].x - pts[5].y) {\n\t\t\t\tpts[5] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].y < pts[6].y) {\n\t\t\t\tpts[6] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x + inputPts[i].y < pts[7].x + pts[7].y) {\n\t\t\t\tpts[7] = inputPts[i];\n\t\t\t}\n\t\t}\n\t\treturn pts;\n\t},\n\ttoCoordinateArray: function toCoordinateArray(stack) {\n\t\tvar coordinates = new Array(stack.size()).fill(null);\n\t\tfor (var i = 0; i < stack.size(); i++) {\n\t\t\tvar coordinate = stack.get(i);\n\t\t\tcoordinates[i] = coordinate;\n\t\t}\n\t\treturn coordinates;\n\t},\n\tgrahamScan: function grahamScan(c) {\n\t\tvar p = null;\n\t\tvar ps = new Stack();\n\t\tp = ps.push(c[0]);\n\t\tp = ps.push(c[1]);\n\t\tp = ps.push(c[2]);\n\t\tfor (var i = 3; i < c.length; i++) {\n\t\t\tp = ps.pop();\n\t\t\twhile (!ps.empty() && CGAlgorithms.computeOrientation(ps.peek(), p, c[i]) > 0) {\n\t\t\t\tp = ps.pop();\n\t\t\t}\n\t\t\tp = ps.push(p);\n\t\t\tp = ps.push(c[i]);\n\t\t}\n\t\tp = ps.push(c[0]);\n\t\treturn ps;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ConvexHull;\n\t}\n});\nConvexHull.extractCoordinates = function (geom) {\n\tvar filter = new UniqueCoordinateArrayFilter();\n\tgeom.apply(filter);\n\treturn filter.getCoordinates();\n};\nfunction RadialComparator() {\n\tthis.origin = null;\n\tvar origin = arguments[0];\n\tthis.origin = origin;\n}\nextend(RadialComparator.prototype, {\n\tcompare: function compare(o1, o2) {\n\t\tvar p1 = o1;\n\t\tvar p2 = o2;\n\t\treturn RadialComparator.polarCompare(this.origin, p1, p2);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function getClass() {\n\t\treturn RadialComparator;\n\t}\n});\nRadialComparator.polarCompare = function (o, p, q) {\n\tvar dxp = p.x - o.x;\n\tvar dyp = p.y - o.y;\n\tvar dxq = q.x - o.x;\n\tvar dyq = q.y - o.y;\n\tvar orient = CGAlgorithms.computeOrientation(o, p, q);\n\tif (orient === CGAlgorithms.COUNTERCLOCKWISE) return 1;\n\tif (orient === CGAlgorithms.CLOCKWISE) return -1;\n\tvar op = dxp * dxp + dyp * dyp;\n\tvar oq = dxq * dxq + dyq * dyq;\n\tif (op < oq) {\n\t\treturn -1;\n\t}\n\tif (op > oq) {\n\t\treturn 1;\n\t}\n\treturn 0;\n};\nConvexHull.RadialComparator = RadialComparator;\n\nfunction GeometryTransformer() {\n\tthis.inputGeom = null;\n\tthis.factory = null;\n\tthis.pruneEmptyGeometry = true;\n\tthis.preserveGeometryCollectionType = true;\n\tthis.preserveCollections = false;\n\tthis.preserveType = false;\n}\nextend(GeometryTransformer.prototype, {\n\ttransformPoint: function transformPoint(geom, parent) {\n\t\treturn this.factory.createPoint(this.transformCoordinates(geom.getCoordinateSequence(), geom));\n\t},\n\ttransformPolygon: function transformPolygon(geom, parent) {\n\t\tvar isAllValidLinearRings = true;\n\t\tvar shell = this.transformLinearRing(geom.getExteriorRing(), geom);\n\t\tif (shell === null || !(shell instanceof LinearRing) || shell.isEmpty()) isAllValidLinearRings = false;\n\t\tvar holes = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumInteriorRing(); i++) {\n\t\t\tvar hole = this.transformLinearRing(geom.getInteriorRingN(i), geom);\n\t\t\tif (hole === null || hole.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!(hole instanceof LinearRing)) isAllValidLinearRings = false;\n\t\t\tholes.add(hole);\n\t\t}\n\t\tif (isAllValidLinearRings) return this.factory.createPolygon(shell, holes.toArray([]));else {\n\t\t\tvar components = new ArrayList();\n\t\t\tif (shell !== null) components.add(shell);\n\t\t\tcomponents.addAll(holes);\n\t\t\treturn this.factory.buildGeometry(components);\n\t\t}\n\t},\n\tcreateCoordinateSequence: function createCoordinateSequence(coords) {\n\t\treturn this.factory.getCoordinateSequenceFactory().create(coords);\n\t},\n\tgetInputGeometry: function getInputGeometry() {\n\t\treturn this.inputGeom;\n\t},\n\ttransformMultiLineString: function transformMultiLineString(geom, parent) {\n\t\tvar transGeomList = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar transformGeom = this.transformLineString(geom.getGeometryN(i), geom);\n\t\t\tif (transformGeom === null) continue;\n\t\t\tif (transformGeom.isEmpty()) continue;\n\t\t\ttransGeomList.add(transformGeom);\n\t\t}\n\t\treturn this.factory.buildGeometry(transGeomList);\n\t},\n\ttransformCoordinates: function transformCoordinates(coords, parent) {\n\t\treturn this.copy(coords);\n\t},\n\ttransformLineString: function transformLineString(geom, parent) {\n\t\treturn this.factory.createLineString(this.transformCoordinates(geom.getCoordinateSequence(), geom));\n\t},\n\ttransformMultiPoint: function transformMultiPoint(geom, parent) {\n\t\tvar transGeomList = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar transformGeom = this.transformPoint(geom.getGeometryN(i), geom);\n\t\t\tif (transformGeom === null) continue;\n\t\t\tif (transformGeom.isEmpty()) continue;\n\t\t\ttransGeomList.add(transformGeom);\n\t\t}\n\t\treturn this.factory.buildGeometry(transGeomList);\n\t},\n\ttransformMultiPolygon: function transformMultiPolygon(geom, parent) {\n\t\tvar transGeomList = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar transformGeom = this.transformPolygon(geom.getGeometryN(i), geom);\n\t\t\tif (transformGeom === null) continue;\n\t\t\tif (transformGeom.isEmpty()) continue;\n\t\t\ttransGeomList.add(transformGeom);\n\t\t}\n\t\treturn this.factory.buildGeometry(transGeomList);\n\t},\n\tcopy: function copy(seq) {\n\t\treturn seq.copy();\n\t},\n\ttransformGeometryCollection: function transformGeometryCollection(geom, parent) {\n\t\tvar transGeomList = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar transformGeom = this.transform(geom.getGeometryN(i));\n\t\t\tif (transformGeom === null) continue;\n\t\t\tif (this.pruneEmptyGeometry && transformGeom.isEmpty()) continue;\n\t\t\ttransGeomList.add(transformGeom);\n\t\t}\n\t\tif (this.preserveGeometryCollectionType) return this.factory.createGeometryCollection(GeometryFactory.toGeometryArray(transGeomList));\n\t\treturn this.factory.buildGeometry(transGeomList);\n\t},\n\ttransform: function transform(inputGeom) {\n\t\tthis.inputGeom = inputGeom;\n\t\tthis.factory = inputGeom.getFactory();\n\t\tif (inputGeom instanceof Point) return this.transformPoint(inputGeom, null);\n\t\tif (inputGeom instanceof MultiPoint) return this.transformMultiPoint(inputGeom, null);\n\t\tif (inputGeom instanceof LinearRing) return this.transformLinearRing(inputGeom, null);\n\t\tif (inputGeom instanceof LineString) return this.transformLineString(inputGeom, null);\n\t\tif (inputGeom instanceof MultiLineString) return this.transformMultiLineString(inputGeom, null);\n\t\tif (inputGeom instanceof Polygon) return this.transformPolygon(inputGeom, null);\n\t\tif (inputGeom instanceof MultiPolygon) return this.transformMultiPolygon(inputGeom, null);\n\t\tif (inputGeom instanceof GeometryCollection) return this.transformGeometryCollection(inputGeom, null);\n\t\tthrow new IllegalArgumentException(\"Unknown Geometry subtype: \" + inputGeom.getClass().getName());\n\t},\n\ttransformLinearRing: function transformLinearRing(geom, parent) {\n\t\tvar seq = this.transformCoordinates(geom.getCoordinateSequence(), geom);\n\t\tif (seq === null) return this.factory.createLinearRing(null);\n\t\tvar seqSize = seq.size();\n\t\tif (seqSize > 0 && seqSize < 4 && !this.preserveType) return this.factory.createLineString(seq);\n\t\treturn this.factory.createLinearRing(seq);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryTransformer;\n\t}\n});\n\nfunction LineStringSnapper() {\n\tthis.snapTolerance = 0.0;\n\tthis.srcPts = null;\n\tthis.seg = new LineSegment();\n\tthis.allowSnappingToSourceVertices = false;\n\tthis._isClosed = false;\n\tif (arguments[0] instanceof LineString && typeof arguments[1] === \"number\") {\n\t\tvar srcLine = arguments[0],\n\t\t    snapTolerance = arguments[1];\n\t\tLineStringSnapper.call(this, srcLine.getCoordinates(), snapTolerance);\n\t} else if (arguments[0] instanceof Array && typeof arguments[1] === \"number\") {\n\t\tvar srcPts = arguments[0],\n\t\t    _snapTolerance = arguments[1];\n\t\tthis.srcPts = srcPts;\n\t\tthis._isClosed = LineStringSnapper.isClosed(srcPts);\n\t\tthis.snapTolerance = _snapTolerance;\n\t}\n}\nextend(LineStringSnapper.prototype, {\n\tsnapVertices: function snapVertices(srcCoords, snapPts) {\n\t\tvar end = this._isClosed ? srcCoords.size() - 1 : srcCoords.size();\n\t\tfor (var i = 0; i < end; i++) {\n\t\t\tvar srcPt = srcCoords.get(i);\n\t\t\tvar snapVert = this.findSnapForVertex(srcPt, snapPts);\n\t\t\tif (snapVert !== null) {\n\t\t\t\tsrcCoords.set(i, new Coordinate(snapVert));\n\t\t\t\tif (i === 0 && this._isClosed) srcCoords.set(srcCoords.size() - 1, new Coordinate(snapVert));\n\t\t\t}\n\t\t}\n\t},\n\tfindSnapForVertex: function findSnapForVertex(pt, snapPts) {\n\t\tfor (var i = 0; i < snapPts.length; i++) {\n\t\t\tif (pt.equals2D(snapPts[i])) return null;\n\t\t\tif (pt.distance(snapPts[i]) < this.snapTolerance) return snapPts[i];\n\t\t}\n\t\treturn null;\n\t},\n\tsnapTo: function snapTo(snapPts) {\n\t\tvar coordList = new CoordinateList(this.srcPts);\n\t\tthis.snapVertices(coordList, snapPts);\n\t\tthis.snapSegments(coordList, snapPts);\n\t\tvar newPts = coordList.toCoordinateArray();\n\t\treturn newPts;\n\t},\n\tsnapSegments: function snapSegments(srcCoords, snapPts) {\n\t\tif (snapPts.length === 0) return null;\n\t\tvar distinctPtCount = snapPts.length;\n\t\tif (snapPts[0].equals2D(snapPts[snapPts.length - 1])) distinctPtCount = snapPts.length - 1;\n\t\tfor (var i = 0; i < distinctPtCount; i++) {\n\t\t\tvar snapPt = snapPts[i];\n\t\t\tvar index = this.findSegmentIndexToSnap(snapPt, srcCoords);\n\t\t\tif (index >= 0) {\n\t\t\t\tsrcCoords.add(index + 1, new Coordinate(snapPt), false);\n\t\t\t}\n\t\t}\n\t},\n\tfindSegmentIndexToSnap: function findSegmentIndexToSnap(snapPt, srcCoords) {\n\t\tvar minDist = Double.MAX_VALUE;\n\t\tvar snapIndex = -1;\n\t\tfor (var i = 0; i < srcCoords.size() - 1; i++) {\n\t\t\tthis.seg.p0 = srcCoords.get(i);\n\t\t\tthis.seg.p1 = srcCoords.get(i + 1);\n\t\t\tif (this.seg.p0.equals2D(snapPt) || this.seg.p1.equals2D(snapPt)) {\n\t\t\t\tif (this.allowSnappingToSourceVertices) continue;else return -1;\n\t\t\t}\n\t\t\tvar dist = this.seg.distance(snapPt);\n\t\t\tif (dist < this.snapTolerance && dist < minDist) {\n\t\t\t\tminDist = dist;\n\t\t\t\tsnapIndex = i;\n\t\t\t}\n\t\t}\n\t\treturn snapIndex;\n\t},\n\tsetAllowSnappingToSourceVertices: function setAllowSnappingToSourceVertices(allowSnappingToSourceVertices) {\n\t\tthis.allowSnappingToSourceVertices = allowSnappingToSourceVertices;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineStringSnapper;\n\t}\n});\nLineStringSnapper.isClosed = function (pts) {\n\tif (pts.length <= 1) return false;\n\treturn pts[0].equals2D(pts[pts.length - 1]);\n};\n\nfunction GeometrySnapper() {\n\tthis.srcGeom = null;\n\tvar srcGeom = arguments[0];\n\tthis.srcGeom = srcGeom;\n}\nextend(GeometrySnapper.prototype, {\n\tsnapTo: function snapTo(snapGeom, snapTolerance) {\n\t\tvar snapPts = this.extractTargetCoordinates(snapGeom);\n\t\tvar snapTrans = new SnapTransformer(snapTolerance, snapPts);\n\t\treturn snapTrans.transform(this.srcGeom);\n\t},\n\tsnapToSelf: function snapToSelf(snapTolerance, cleanResult) {\n\t\tvar snapPts = this.extractTargetCoordinates(this.srcGeom);\n\t\tvar snapTrans = new SnapTransformer(snapTolerance, snapPts, true);\n\t\tvar snappedGeom = snapTrans.transform(this.srcGeom);\n\t\tvar result = snappedGeom;\n\t\tif (cleanResult && hasInterface(result, Polygonal)) {\n\t\t\tresult = snappedGeom.buffer(0);\n\t\t}\n\t\treturn result;\n\t},\n\tcomputeSnapTolerance: function computeSnapTolerance(ringPts) {\n\t\tvar minSegLen = this.computeMinimumSegmentLength(ringPts);\n\t\tvar snapTol = minSegLen / 10;\n\t\treturn snapTol;\n\t},\n\textractTargetCoordinates: function extractTargetCoordinates(g) {\n\t\tvar ptSet = new TreeSet();\n\t\tvar pts = g.getCoordinates();\n\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\tptSet.add(pts[i]);\n\t\t}\n\t\treturn ptSet.toArray(new Array(0).fill(null));\n\t},\n\tcomputeMinimumSegmentLength: function computeMinimumSegmentLength(pts) {\n\t\tvar minSegLen = Double.MAX_VALUE;\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tvar segLen = pts[i].distance(pts[i + 1]);\n\t\t\tif (segLen < minSegLen) minSegLen = segLen;\n\t\t}\n\t\treturn minSegLen;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometrySnapper;\n\t}\n});\nGeometrySnapper.snap = function (g0, g1, snapTolerance) {\n\tvar snapGeom = new Array(2).fill(null);\n\tvar snapper0 = new GeometrySnapper(g0);\n\tsnapGeom[0] = snapper0.snapTo(g1, snapTolerance);\n\tvar snapper1 = new GeometrySnapper(g1);\n\tsnapGeom[1] = snapper1.snapTo(snapGeom[0], snapTolerance);\n\treturn snapGeom;\n};\nGeometrySnapper.computeOverlaySnapTolerance = function () {\n\tif (arguments.length === 1) {\n\t\tvar g = arguments[0];\n\t\tvar snapTolerance = GeometrySnapper.computeSizeBasedSnapTolerance(g);\n\t\tvar pm = g.getPrecisionModel();\n\t\tif (pm.getType() === PrecisionModel.FIXED) {\n\t\t\tvar fixedSnapTol = 1 / pm.getScale() * 2 / 1.415;\n\t\t\tif (fixedSnapTol > snapTolerance) snapTolerance = fixedSnapTol;\n\t\t}\n\t\treturn snapTolerance;\n\t} else if (arguments.length === 2) {\n\t\tvar g0 = arguments[0],\n\t\t    g1 = arguments[1];\n\t\treturn Math.min(GeometrySnapper.computeOverlaySnapTolerance(g0), GeometrySnapper.computeOverlaySnapTolerance(g1));\n\t}\n};\nGeometrySnapper.computeSizeBasedSnapTolerance = function (g) {\n\tvar env = g.getEnvelopeInternal();\n\tvar minDimension = Math.min(env.getHeight(), env.getWidth());\n\tvar snapTol = minDimension * GeometrySnapper.SNAP_PRECISION_FACTOR;\n\treturn snapTol;\n};\nGeometrySnapper.snapToSelf = function (geom, snapTolerance, cleanResult) {\n\tvar snapper0 = new GeometrySnapper(geom);\n\treturn snapper0.snapToSelf(snapTolerance, cleanResult);\n};\nGeometrySnapper.SNAP_PRECISION_FACTOR = 1e-9;\nfunction SnapTransformer() {\n\tGeometryTransformer.apply(this);\n\tthis.snapTolerance = null;\n\tthis.snapPts = null;\n\tthis.isSelfSnap = false;\n\tif (arguments.length === 2) {\n\t\tvar snapTolerance = arguments[0],\n\t\t    snapPts = arguments[1];\n\t\tthis.snapTolerance = snapTolerance;\n\t\tthis.snapPts = snapPts;\n\t} else if (arguments.length === 3) {\n\t\tvar _snapTolerance = arguments[0],\n\t\t    _snapPts = arguments[1],\n\t\t    isSelfSnap = arguments[2];\n\t\tthis.snapTolerance = _snapTolerance;\n\t\tthis.snapPts = _snapPts;\n\t\tthis.isSelfSnap = isSelfSnap;\n\t}\n}\ninherits(SnapTransformer, GeometryTransformer);\nextend(SnapTransformer.prototype, {\n\tsnapLine: function snapLine(srcPts, snapPts) {\n\t\tvar snapper = new LineStringSnapper(srcPts, this.snapTolerance);\n\t\tsnapper.setAllowSnappingToSourceVertices(this.isSelfSnap);\n\t\treturn snapper.snapTo(snapPts);\n\t},\n\ttransformCoordinates: function transformCoordinates(coords, parent) {\n\t\tvar srcPts = coords.toCoordinateArray();\n\t\tvar newPts = this.snapLine(srcPts, this.snapPts);\n\t\treturn this.factory.getCoordinateSequenceFactory().create(newPts);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SnapTransformer;\n\t}\n});\n\nfunction CommonBits() {\n\tthis.isFirst = true;\n\tthis.commonMantissaBitsCount = 53;\n\tthis.commonBits = 0;\n\tthis.commonSignExp = null;\n}\nextend(CommonBits.prototype, {\n\tgetCommon: function getCommon() {\n\t\treturn Double.longBitsToDouble(this.commonBits);\n\t},\n\tadd: function add(num) {\n\t\tvar numBits = Double.doubleToLongBits(num);\n\t\tif (this.isFirst) {\n\t\t\tthis.commonBits = numBits;\n\t\t\tthis.commonSignExp = CommonBits.signExpBits(this.commonBits);\n\t\t\tthis.isFirst = false;\n\t\t\treturn null;\n\t\t}\n\t\tvar numSignExp = CommonBits.signExpBits(numBits);\n\t\tif (numSignExp !== this.commonSignExp) {\n\t\t\tthis.commonBits = 0;\n\t\t\treturn null;\n\t\t}\n\t\tthis.commonMantissaBitsCount = CommonBits.numCommonMostSigMantissaBits(this.commonBits, numBits);\n\t\tthis.commonBits = CommonBits.zeroLowerBits(this.commonBits, 64 - (12 + this.commonMantissaBitsCount));\n\t},\n\ttoString: function toString() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar bits = arguments[0];\n\t\t\tvar x = Double.longBitsToDouble(bits);\n\t\t\tvar numStr = Long.toBinaryString(bits);\n\t\t\tvar padStr = \"0000000000000000000000000000000000000000000000000000000000000000\" + numStr;\n\t\t\tvar bitStr = padStr.substring(padStr.length - 64);\n\t\t\tvar str = bitStr.substring(0, 1) + \"  \" + bitStr.substring(1, 12) + \"(exp) \" + bitStr.substring(12) + \" [ \" + x + \" ]\";\n\t\t\treturn str;\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CommonBits;\n\t}\n});\nCommonBits.getBit = function (bits, i) {\n\tvar mask = 1 << i;\n\treturn (bits & mask) !== 0 ? 1 : 0;\n};\nCommonBits.signExpBits = function (num) {\n\treturn num >> 52;\n};\nCommonBits.zeroLowerBits = function (bits, nBits) {\n\tvar invMask = (1 << nBits) - 1;\n\tvar mask = ~invMask;\n\tvar zeroed = bits & mask;\n\treturn zeroed;\n};\nCommonBits.numCommonMostSigMantissaBits = function (num1, num2) {\n\tvar count = 0;\n\tfor (var i = 52; i >= 0; i--) {\n\t\tif (CommonBits.getBit(num1, i) !== CommonBits.getBit(num2, i)) return count;\n\t\tcount++;\n\t}\n\treturn 52;\n};\n\nfunction CommonBitsRemover() {\n\tthis.commonCoord = null;\n\tthis.ccFilter = new CommonCoordinateFilter();\n}\nextend(CommonBitsRemover.prototype, {\n\taddCommonBits: function addCommonBits(geom) {\n\t\tvar trans = new Translater(this.commonCoord);\n\t\tgeom.apply(trans);\n\t\tgeom.geometryChanged();\n\t},\n\tremoveCommonBits: function removeCommonBits(geom) {\n\t\tif (this.commonCoord.x === 0.0 && this.commonCoord.y === 0.0) return geom;\n\t\tvar invCoord = new Coordinate(this.commonCoord);\n\t\tinvCoord.x = -invCoord.x;\n\t\tinvCoord.y = -invCoord.y;\n\t\tvar trans = new Translater(invCoord);\n\t\tgeom.apply(trans);\n\t\tgeom.geometryChanged();\n\t\treturn geom;\n\t},\n\tgetCommonCoordinate: function getCommonCoordinate() {\n\t\treturn this.commonCoord;\n\t},\n\tadd: function add(geom) {\n\t\tgeom.apply(this.ccFilter);\n\t\tthis.commonCoord = this.ccFilter.getCommonCoordinate();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CommonBitsRemover;\n\t}\n});\nfunction CommonCoordinateFilter() {\n\tthis.commonBitsX = new CommonBits();\n\tthis.commonBitsY = new CommonBits();\n}\nextend(CommonCoordinateFilter.prototype, {\n\tfilter: function filter(coord) {\n\t\tthis.commonBitsX.add(coord.x);\n\t\tthis.commonBitsY.add(coord.y);\n\t},\n\tgetCommonCoordinate: function getCommonCoordinate() {\n\t\treturn new Coordinate(this.commonBitsX.getCommon(), this.commonBitsY.getCommon());\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [CoordinateFilter];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CommonCoordinateFilter;\n\t}\n});\nfunction Translater() {\n\tthis.trans = null;\n\tvar trans = arguments[0];\n\tthis.trans = trans;\n}\nextend(Translater.prototype, {\n\tfilter: function filter(seq, i) {\n\t\tvar xp = seq.getOrdinate(i, 0) + this.trans.x;\n\t\tvar yp = seq.getOrdinate(i, 1) + this.trans.y;\n\t\tseq.setOrdinate(i, 0, xp);\n\t\tseq.setOrdinate(i, 1, yp);\n\t},\n\tisDone: function isDone() {\n\t\treturn false;\n\t},\n\tisGeometryChanged: function isGeometryChanged() {\n\t\treturn true;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [CoordinateSequenceFilter];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Translater;\n\t}\n});\nCommonBitsRemover.CommonCoordinateFilter = CommonCoordinateFilter;\nCommonBitsRemover.Translater = Translater;\n\nfunction GeometryCollectionIterator() {\n\tthis.parent = null;\n\tthis.atStart = null;\n\tthis.max = null;\n\tthis.index = null;\n\tthis.subcollectionIterator = null;\n\tvar parent = arguments[0];\n\tthis.parent = parent;\n\tthis.atStart = true;\n\tthis.index = 0;\n\tthis.max = parent.getNumGeometries();\n}\nextend(GeometryCollectionIterator.prototype, {\n\tnext: function next() {\n\t\tif (this.atStart) {\n\t\t\tthis.atStart = false;\n\t\t\tif (GeometryCollectionIterator.isAtomic(this.parent)) this.index++;\n\t\t\treturn this.parent;\n\t\t}\n\t\tif (this.subcollectionIterator !== null) {\n\t\t\tif (this.subcollectionIterator.hasNext()) {\n\t\t\t\treturn this.subcollectionIterator.next();\n\t\t\t} else {\n\t\t\t\tthis.subcollectionIterator = null;\n\t\t\t}\n\t\t}\n\t\tif (this.index >= this.max) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tvar obj = this.parent.getGeometryN(this.index++);\n\t\tif (obj instanceof GeometryCollection) {\n\t\t\tthis.subcollectionIterator = new GeometryCollectionIterator(obj);\n\t\t\treturn this.subcollectionIterator.next();\n\t\t}\n\t\treturn obj;\n\t},\n\tremove: function remove() {\n\t\tthrow new UnsupportedOperationException(this.getClass().getName());\n\t},\n\thasNext: function hasNext() {\n\t\tif (this.atStart) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this.subcollectionIterator !== null) {\n\t\t\tif (this.subcollectionIterator.hasNext()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tthis.subcollectionIterator = null;\n\t\t}\n\t\tif (this.index >= this.max) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Iterator];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryCollectionIterator;\n\t}\n});\nGeometryCollectionIterator.isAtomic = function (geom) {\n\treturn !(geom instanceof GeometryCollection);\n};\n\nfunction PointLocator() {\n\tthis.boundaryRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n\tthis.isIn = null;\n\tthis.numBoundaries = null;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tvar boundaryRule = arguments[0];\n\t\tif (boundaryRule === null) throw new IllegalArgumentException(\"Rule must be non-null\");\n\t\tthis.boundaryRule = boundaryRule;\n\t}\n}\nextend(PointLocator.prototype, {\n\tlocateInternal: function locateInternal() {\n\t\tif (arguments[0] instanceof Coordinate && arguments[1] instanceof Polygon) {\n\t\t\tvar p = arguments[0],\n\t\t\t    poly = arguments[1];\n\t\t\tif (poly.isEmpty()) return Location.EXTERIOR;\n\t\t\tvar shell = poly.getExteriorRing();\n\t\t\tvar shellLoc = this.locateInPolygonRing(p, shell);\n\t\t\tif (shellLoc === Location.EXTERIOR) return Location.EXTERIOR;\n\t\t\tif (shellLoc === Location.BOUNDARY) return Location.BOUNDARY;\n\t\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\t\t\tvar hole = poly.getInteriorRingN(i);\n\t\t\t\tvar holeLoc = this.locateInPolygonRing(p, hole);\n\t\t\t\tif (holeLoc === Location.INTERIOR) return Location.EXTERIOR;\n\t\t\t\tif (holeLoc === Location.BOUNDARY) return Location.BOUNDARY;\n\t\t\t}\n\t\t\treturn Location.INTERIOR;\n\t\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof LineString) {\n\t\t\tvar _p = arguments[0],\n\t\t\t    l = arguments[1];\n\t\t\tif (!l.getEnvelopeInternal().intersects(_p)) return Location.EXTERIOR;\n\t\t\tvar pt = l.getCoordinates();\n\t\t\tif (!l.isClosed()) {\n\t\t\t\tif (_p.equals(pt[0]) || _p.equals(pt[pt.length - 1])) {\n\t\t\t\t\treturn Location.BOUNDARY;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (CGAlgorithms.isOnLine(_p, pt)) return Location.INTERIOR;\n\t\t\treturn Location.EXTERIOR;\n\t\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Point) {\n\t\t\tvar _p2 = arguments[0],\n\t\t\t    _pt = arguments[1];\n\t\t\tvar ptCoord = _pt.getCoordinate();\n\t\t\tif (ptCoord.equals2D(_p2)) return Location.INTERIOR;\n\t\t\treturn Location.EXTERIOR;\n\t\t}\n\t},\n\tlocateInPolygonRing: function locateInPolygonRing(p, ring) {\n\t\tif (!ring.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR;\n\t\treturn CGAlgorithms.locatePointInRing(p, ring.getCoordinates());\n\t},\n\tintersects: function intersects(p, geom) {\n\t\treturn this.locate(p, geom) !== Location.EXTERIOR;\n\t},\n\tupdateLocationInfo: function updateLocationInfo(loc) {\n\t\tif (loc === Location.INTERIOR) this.isIn = true;\n\t\tif (loc === Location.BOUNDARY) this.numBoundaries++;\n\t},\n\tcomputeLocation: function computeLocation(p, geom) {\n\t\tif (geom instanceof Point) {\n\t\t\tthis.updateLocationInfo(this.locateInternal(p, geom));\n\t\t}\n\t\tif (geom instanceof LineString) {\n\t\t\tthis.updateLocationInfo(this.locateInternal(p, geom));\n\t\t} else if (geom instanceof Polygon) {\n\t\t\tthis.updateLocationInfo(this.locateInternal(p, geom));\n\t\t} else if (geom instanceof MultiLineString) {\n\t\t\tvar ml = geom;\n\t\t\tfor (var i = 0; i < ml.getNumGeometries(); i++) {\n\t\t\t\tvar l = ml.getGeometryN(i);\n\t\t\t\tthis.updateLocationInfo(this.locateInternal(p, l));\n\t\t\t}\n\t\t} else if (geom instanceof MultiPolygon) {\n\t\t\tvar mpoly = geom;\n\t\t\tfor (var i = 0; i < mpoly.getNumGeometries(); i++) {\n\t\t\t\tvar poly = mpoly.getGeometryN(i);\n\t\t\t\tthis.updateLocationInfo(this.locateInternal(p, poly));\n\t\t\t}\n\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\tvar geomi = new GeometryCollectionIterator(geom);\n\t\t\twhile (geomi.hasNext()) {\n\t\t\t\tvar g2 = geomi.next();\n\t\t\t\tif (g2 !== geom) this.computeLocation(p, g2);\n\t\t\t}\n\t\t}\n\t},\n\tlocate: function locate(p, geom) {\n\t\tif (geom.isEmpty()) return Location.EXTERIOR;\n\t\tif (geom instanceof LineString) {\n\t\t\treturn this.locateInternal(p, geom);\n\t\t} else if (geom instanceof Polygon) {\n\t\t\treturn this.locateInternal(p, geom);\n\t\t}\n\t\tthis.isIn = false;\n\t\tthis.numBoundaries = 0;\n\t\tthis.computeLocation(p, geom);\n\t\tif (this.boundaryRule.isInBoundary(this.numBoundaries)) return Location.BOUNDARY;\n\t\tif (this.numBoundaries > 0 || this.isIn) return Location.INTERIOR;\n\t\treturn Location.EXTERIOR;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PointLocator;\n\t}\n});\n\nfunction Octant() {}\nextend(Octant.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Octant;\n\t}\n});\nOctant.octant = function () {\n\tif (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n\t\tvar _dx = arguments[0],\n\t\t    _dy = arguments[1];\n\t\tif (_dx === 0.0 && _dy === 0.0) throw new IllegalArgumentException(\"Cannot compute the octant for point ( \" + _dx + \", \" + _dy + \" )\");\n\t\tvar adx = Math.abs(_dx);\n\t\tvar ady = Math.abs(_dy);\n\t\tif (_dx >= 0) {\n\t\t\tif (_dy >= 0) {\n\t\t\t\tif (adx >= ady) return 0;else return 1;\n\t\t\t} else {\n\t\t\t\tif (adx >= ady) return 7;else return 6;\n\t\t\t}\n\t\t} else {\n\t\t\tif (_dy >= 0) {\n\t\t\t\tif (adx >= ady) return 3;else return 2;\n\t\t\t} else {\n\t\t\t\tif (adx >= ady) return 4;else return 5;\n\t\t\t}\n\t\t}\n\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n\t\tvar p0 = arguments[0],\n\t\t    p1 = arguments[1];\n\t\tvar dx = p1.x - p0.x;\n\t\tvar dy = p1.y - p0.y;\n\t\tif (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException(\"Cannot compute the octant for two identical points \" + p0);\n\t\treturn Octant.octant(dx, dy);\n\t}\n};\n\nfunction SegmentString() {}\nextend(SegmentString.prototype, {\n\tgetCoordinates: function getCoordinates() {},\n\tsize: function size() {},\n\tgetCoordinate: function getCoordinate(i) {},\n\tisClosed: function isClosed() {},\n\tsetData: function setData(data) {},\n\tgetData: function getData() {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SegmentString;\n\t}\n});\n\nfunction BasicSegmentString() {\n\tthis.pts = null;\n\tthis.data = null;\n\tvar pts = arguments[0],\n\t    data = arguments[1];\n\tthis.pts = pts;\n\tthis.data = data;\n}\nextend(BasicSegmentString.prototype, {\n\tgetCoordinates: function getCoordinates() {\n\t\treturn this.pts;\n\t},\n\tsize: function size() {\n\t\treturn this.pts.length;\n\t},\n\tgetCoordinate: function getCoordinate(i) {\n\t\treturn this.pts[i];\n\t},\n\tisClosed: function isClosed() {\n\t\treturn this.pts[0].equals(this.pts[this.pts.length - 1]);\n\t},\n\tgetSegmentOctant: function getSegmentOctant(index) {\n\t\tif (index === this.pts.length - 1) return -1;\n\t\treturn Octant.octant(this.getCoordinate(index), this.getCoordinate(index + 1));\n\t},\n\tsetData: function setData(data) {\n\t\tthis.data = data;\n\t},\n\tgetData: function getData() {\n\t\treturn this.data;\n\t},\n\ttoString: function toString() {\n\t\treturn WKTWriter.toLineString(new CoordinateArraySequence(this.pts));\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [SegmentString];\n\t},\n\tgetClass: function getClass() {\n\t\treturn BasicSegmentString;\n\t}\n});\n\nfunction Boundable() {}\nextend(Boundable.prototype, {\n\tgetBounds: function getBounds() {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Boundable;\n\t}\n});\n\nfunction ItemBoundable() {\n\tthis.bounds = null;\n\tthis.item = null;\n\tvar bounds = arguments[0],\n\t    item = arguments[1];\n\tthis.bounds = bounds;\n\tthis.item = item;\n}\nextend(ItemBoundable.prototype, {\n\tgetItem: function getItem() {\n\t\treturn this.item;\n\t},\n\tgetBounds: function getBounds() {\n\t\treturn this.bounds;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Boundable, Serializable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ItemBoundable;\n\t}\n});\n\nfunction PriorityQueue() {\n\tthis._size = null;\n\tthis.items = null;\n\tthis._size = 0;\n\tthis.items = new ArrayList();\n\tthis.items.add(null);\n}\nextend(PriorityQueue.prototype, {\n\tpoll: function poll() {\n\t\tif (this.isEmpty()) return null;\n\t\tvar minItem = this.items.get(1);\n\t\tthis.items.set(1, this.items.get(this._size));\n\t\tthis._size -= 1;\n\t\tthis.reorder(1);\n\t\treturn minItem;\n\t},\n\tsize: function size() {\n\t\treturn this._size;\n\t},\n\treorder: function reorder(hole) {\n\t\tvar child = null;\n\t\tvar tmp = this.items.get(hole);\n\t\tfor (; hole * 2 <= this._size; hole = child) {\n\t\t\tchild = hole * 2;\n\t\t\tif (child !== this._size && this.items.get(child + 1).compareTo(this.items.get(child)) < 0) child++;\n\t\t\tif (this.items.get(child).compareTo(tmp) < 0) this.items.set(hole, this.items.get(child));else break;\n\t\t}\n\t\tthis.items.set(hole, tmp);\n\t},\n\tclear: function clear() {\n\t\tthis._size = 0;\n\t\tthis.items.clear();\n\t},\n\tisEmpty: function isEmpty() {\n\t\treturn this._size === 0;\n\t},\n\tadd: function add(x) {\n\t\tthis.items.add(null);\n\t\tthis._size += 1;\n\t\tvar hole = this._size;\n\t\tthis.items.set(0, x);\n\t\tfor (; x.compareTo(this.items.get(Math.trunc(hole / 2))) < 0; hole /= 2) {\n\t\t\tthis.items.set(hole, this.items.get(Math.trunc(hole / 2)));\n\t\t}\n\t\tthis.items.set(hole, x);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PriorityQueue;\n\t}\n});\n\nfunction ItemVisitor() {}\nextend(ItemVisitor.prototype, {\n\tvisitItem: function visitItem(item) {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ItemVisitor;\n\t}\n});\n\nfunction SpatialIndex() {}\nextend(SpatialIndex.prototype, {\n\tinsert: function insert(itemEnv, item) {},\n\tremove: function remove(itemEnv, item) {},\n\tquery: function query() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar searchEnv = arguments[0];\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar _searchEnv = arguments[0],\n\t\t\t    visitor = arguments[1];\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SpatialIndex;\n\t}\n});\n\nfunction AbstractNode() {\n\tthis.childBoundables = new ArrayList();\n\tthis.bounds = null;\n\tthis.level = null;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tvar level = arguments[0];\n\t\tthis.level = level;\n\t}\n}\nextend(AbstractNode.prototype, {\n\tgetLevel: function getLevel() {\n\t\treturn this.level;\n\t},\n\tsize: function size() {\n\t\treturn this.childBoundables.size();\n\t},\n\tgetChildBoundables: function getChildBoundables() {\n\t\treturn this.childBoundables;\n\t},\n\taddChildBoundable: function addChildBoundable(childBoundable) {\n\t\tAssert.isTrue(this.bounds === null);\n\t\tthis.childBoundables.add(childBoundable);\n\t},\n\tisEmpty: function isEmpty() {\n\t\treturn this.childBoundables.isEmpty();\n\t},\n\tgetBounds: function getBounds() {\n\t\tif (this.bounds === null) {\n\t\t\tthis.bounds = this.computeBounds();\n\t\t}\n\t\treturn this.bounds;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Boundable, Serializable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn AbstractNode;\n\t}\n});\nAbstractNode.serialVersionUID = 6493722185909573708;\n\nvar Collections = {\n  reverseOrder: function reverseOrder() {\n    return {\n      compare: function compare(a, b) {\n        return b.compareTo(a);\n      }\n    };\n  },\n  min: function min(l) {\n    Collections.sort(l);\n    return l.get(0);\n  },\n  sort: function sort(l, c) {\n    var a = l.toArray();\n    if (c) {\n      Arrays.sort(a, c);\n    } else {\n      Arrays.sort(a);\n    }\n    var i = l.iterator();\n    for (var pos = 0, alen = a.length; pos < alen; pos++) {\n      i.next();\n      i.set(a[pos]);\n    }\n  },\n  singletonList: function singletonList(o) {\n    var arrayList = new ArrayList();\n    arrayList.add(o);\n    return arrayList;\n  }\n};\n\nfunction BoundablePair() {\n\tthis.boundable1 = null;\n\tthis.boundable2 = null;\n\tthis._distance = null;\n\tthis.itemDistance = null;\n\tvar boundable1 = arguments[0],\n\t    boundable2 = arguments[1],\n\t    itemDistance = arguments[2];\n\tthis.boundable1 = boundable1;\n\tthis.boundable2 = boundable2;\n\tthis.itemDistance = itemDistance;\n\tthis._distance = this.distance();\n}\nextend(BoundablePair.prototype, {\n\texpandToQueue: function expandToQueue(priQ, minDistance) {\n\t\tvar isComp1 = BoundablePair.isComposite(this.boundable1);\n\t\tvar isComp2 = BoundablePair.isComposite(this.boundable2);\n\t\tif (isComp1 && isComp2) {\n\t\t\tif (BoundablePair.area(this.boundable1) > BoundablePair.area(this.boundable2)) {\n\t\t\t\tthis.expand(this.boundable1, this.boundable2, priQ, minDistance);\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthis.expand(this.boundable2, this.boundable1, priQ, minDistance);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else if (isComp1) {\n\t\t\tthis.expand(this.boundable1, this.boundable2, priQ, minDistance);\n\t\t\treturn null;\n\t\t} else if (isComp2) {\n\t\t\tthis.expand(this.boundable2, this.boundable1, priQ, minDistance);\n\t\t\treturn null;\n\t\t}\n\t\tthrow new IllegalArgumentException(\"neither boundable is composite\");\n\t},\n\tisLeaves: function isLeaves() {\n\t\treturn !(BoundablePair.isComposite(this.boundable1) || BoundablePair.isComposite(this.boundable2));\n\t},\n\tcompareTo: function compareTo(o) {\n\t\tvar nd = o;\n\t\tif (this._distance < nd._distance) return -1;\n\t\tif (this._distance > nd._distance) return 1;\n\t\treturn 0;\n\t},\n\texpand: function expand(bndComposite, bndOther, priQ, minDistance) {\n\t\tvar children = bndComposite.getChildBoundables();\n\t\tfor (var i = children.iterator(); i.hasNext();) {\n\t\t\tvar child = i.next();\n\t\t\tvar bp = new BoundablePair(child, bndOther, this.itemDistance);\n\t\t\tif (bp.getDistance() < minDistance) {\n\t\t\t\tpriQ.add(bp);\n\t\t\t}\n\t\t}\n\t},\n\tgetBoundable: function getBoundable(i) {\n\t\tif (i === 0) return this.boundable1;\n\t\treturn this.boundable2;\n\t},\n\tgetDistance: function getDistance() {\n\t\treturn this._distance;\n\t},\n\tdistance: function distance() {\n\t\tif (this.isLeaves()) {\n\t\t\treturn this.itemDistance.distance(this.boundable1, this.boundable2);\n\t\t}\n\t\treturn this.boundable1.getBounds().distance(this.boundable2.getBounds());\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn BoundablePair;\n\t}\n});\nBoundablePair.area = function (b) {\n\treturn b.getBounds().getArea();\n};\nBoundablePair.isComposite = function (item) {\n\treturn item instanceof AbstractNode;\n};\n\nfunction AbstractSTRtree() {\n\tthis.root = null;\n\tthis.built = false;\n\tthis.itemBoundables = new ArrayList();\n\tthis.nodeCapacity = null;\n\tif (arguments.length === 0) {\n\t\tAbstractSTRtree.call(this, AbstractSTRtree.DEFAULT_NODE_CAPACITY);\n\t} else if (arguments.length === 1) {\n\t\tvar nodeCapacity = arguments[0];\n\t\tAssert.isTrue(nodeCapacity > 1, \"Node capacity must be greater than 1\");\n\t\tthis.nodeCapacity = nodeCapacity;\n\t}\n}\nextend(AbstractSTRtree.prototype, {\n\tgetNodeCapacity: function getNodeCapacity() {\n\t\treturn this.nodeCapacity;\n\t},\n\tlastNode: function lastNode(nodes) {\n\t\treturn nodes.get(nodes.size() - 1);\n\t},\n\tsize: function size() {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tthis.build();\n\t\t\treturn this.size(this.root);\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar node = arguments[0];\n\t\t\tvar size = 0;\n\t\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tsize += this.size(childBoundable);\n\t\t\t\t} else if (childBoundable instanceof ItemBoundable) {\n\t\t\t\t\tsize += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn size;\n\t\t}\n\t},\n\tremoveItem: function removeItem(node, item) {\n\t\tvar childToRemove = null;\n\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n\t\t\tvar childBoundable = i.next();\n\t\t\tif (childBoundable instanceof ItemBoundable) {\n\t\t\t\tif (childBoundable.getItem() === item) childToRemove = childBoundable;\n\t\t\t}\n\t\t}\n\t\tif (childToRemove !== null) {\n\t\t\tnode.getChildBoundables().remove(childToRemove);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\titemsTree: function itemsTree() {\n\t\tif (arguments.length === 0) {\n\t\t\tthis.build();\n\t\t\tvar valuesTree = this.itemsTree(this.root);\n\t\t\tif (valuesTree === null) return new ArrayList();\n\t\t\treturn valuesTree;\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar node = arguments[0];\n\t\t\tvar valuesTreeForNode = new ArrayList();\n\t\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tvar valuesTreeForChild = this.itemsTree(childBoundable);\n\t\t\t\t\tif (valuesTreeForChild !== null) valuesTreeForNode.add(valuesTreeForChild);\n\t\t\t\t} else if (childBoundable instanceof ItemBoundable) {\n\t\t\t\t\tvaluesTreeForNode.add(childBoundable.getItem());\n\t\t\t\t} else {\n\t\t\t\t\tAssert.shouldNeverReachHere();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (valuesTreeForNode.size() <= 0) return null;\n\t\t\treturn valuesTreeForNode;\n\t\t}\n\t},\n\tinsert: function insert(bounds, item) {\n\t\tAssert.isTrue(!this.built, \"Cannot insert items into an STR packed R-tree after it has been built.\");\n\t\tthis.itemBoundables.add(new ItemBoundable(bounds, item));\n\t},\n\tboundablesAtLevel: function boundablesAtLevel() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar level = arguments[0];\n\t\t\tvar boundables = new ArrayList();\n\t\t\tthis.boundablesAtLevel(level, this.root, boundables);\n\t\t\treturn boundables;\n\t\t} else if (arguments.length === 3) {\n\t\t\tvar _level = arguments[0],\n\t\t\t    top = arguments[1],\n\t\t\t    _boundables = arguments[2];\n\t\t\tAssert.isTrue(_level > -2);\n\t\t\tif (top.getLevel() === _level) {\n\t\t\t\t_boundables.add(top);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tfor (var i = top.getChildBoundables().iterator(); i.hasNext();) {\n\t\t\t\tvar boundable = i.next();\n\t\t\t\tif (boundable instanceof AbstractNode) {\n\t\t\t\t\tthis.boundablesAtLevel(_level, boundable, _boundables);\n\t\t\t\t} else {\n\t\t\t\t\tAssert.isTrue(boundable instanceof ItemBoundable);\n\t\t\t\t\tif (_level === -1) {\n\t\t\t\t\t\t_boundables.add(boundable);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t},\n\tquery: function query() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar searchBounds = arguments[0];\n\t\t\tthis.build();\n\t\t\tvar matches = new ArrayList();\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn matches;\n\t\t\t}\n\t\t\tif (this.getIntersectsOp().intersects(this.root.getBounds(), searchBounds)) {\n\t\t\t\tthis.query(searchBounds, this.root, matches);\n\t\t\t}\n\t\t\treturn matches;\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar _searchBounds = arguments[0],\n\t\t\t    visitor = arguments[1];\n\t\t\tthis.build();\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (this.getIntersectsOp().intersects(this.root.getBounds(), _searchBounds)) {\n\t\t\t\tthis.query(_searchBounds, this.root, visitor);\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (hasInterface(arguments[2], ItemVisitor) && arguments[0] instanceof Object && arguments[1] instanceof AbstractNode) {\n\t\t\t\tvar _searchBounds2 = arguments[0],\n\t\t\t\t    node = arguments[1],\n\t\t\t\t    _visitor = arguments[2];\n\t\t\t\tvar childBoundables = node.getChildBoundables();\n\t\t\t\tfor (var i = 0; i < childBoundables.size(); i++) {\n\t\t\t\t\tvar childBoundable = childBoundables.get(i);\n\t\t\t\t\tif (!this.getIntersectsOp().intersects(childBoundable.getBounds(), _searchBounds2)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\t\tthis.query(_searchBounds2, childBoundable, _visitor);\n\t\t\t\t\t} else if (childBoundable instanceof ItemBoundable) {\n\t\t\t\t\t\t_visitor.visitItem(childBoundable.getItem());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tAssert.shouldNeverReachHere();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (hasInterface(arguments[2], List) && arguments[0] instanceof Object && arguments[1] instanceof AbstractNode) {\n\t\t\t\tvar _searchBounds3 = arguments[0],\n\t\t\t\t    _node = arguments[1],\n\t\t\t\t    _matches = arguments[2];\n\t\t\t\tvar childBoundables = _node.getChildBoundables();\n\t\t\t\tfor (var i = 0; i < childBoundables.size(); i++) {\n\t\t\t\t\tvar childBoundable = childBoundables.get(i);\n\t\t\t\t\tif (!this.getIntersectsOp().intersects(childBoundable.getBounds(), _searchBounds3)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\t\tthis.query(_searchBounds3, childBoundable, _matches);\n\t\t\t\t\t} else if (childBoundable instanceof ItemBoundable) {\n\t\t\t\t\t\t_matches.add(childBoundable.getItem());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tAssert.shouldNeverReachHere();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tbuild: function build() {\n\t\tif (this.built) return null;\n\t\tthis.root = this.itemBoundables.isEmpty() ? this.createNode(0) : this.createHigherLevels(this.itemBoundables, -1);\n\t\tthis.itemBoundables = null;\n\t\tthis.built = true;\n\t},\n\tgetRoot: function getRoot() {\n\t\tthis.build();\n\t\treturn this.root;\n\t},\n\tremove: function remove() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar searchBounds = arguments[0],\n\t\t\t    item = arguments[1];\n\t\t\tthis.build();\n\t\t\tif (this.getIntersectsOp().intersects(this.root.getBounds(), searchBounds)) {\n\t\t\t\treturn this.remove(searchBounds, this.root, item);\n\t\t\t}\n\t\t\treturn false;\n\t\t} else if (arguments.length === 3) {\n\t\t\tvar _searchBounds4 = arguments[0],\n\t\t\t    node = arguments[1],\n\t\t\t    _item = arguments[2];\n\t\t\tvar found = this.removeItem(node, _item);\n\t\t\tif (found) return true;\n\t\t\tvar childToPrune = null;\n\t\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tif (!this.getIntersectsOp().intersects(childBoundable.getBounds(), _searchBounds4)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tfound = this.remove(_searchBounds4, childBoundable, _item);\n\t\t\t\t\tif (found) {\n\t\t\t\t\t\tchildToPrune = childBoundable;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (childToPrune !== null) {\n\t\t\t\tif (childToPrune.getChildBoundables().isEmpty()) {\n\t\t\t\t\tnode.getChildBoundables().remove(childToPrune);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn found;\n\t\t}\n\t},\n\tcreateHigherLevels: function createHigherLevels(boundablesOfALevel, level) {\n\t\tAssert.isTrue(!boundablesOfALevel.isEmpty());\n\t\tvar parentBoundables = this.createParentBoundables(boundablesOfALevel, level + 1);\n\t\tif (parentBoundables.size() === 1) {\n\t\t\treturn parentBoundables.get(0);\n\t\t}\n\t\treturn this.createHigherLevels(parentBoundables, level + 1);\n\t},\n\tdepth: function depth() {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tthis.build();\n\t\t\treturn this.depth(this.root);\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar node = arguments[0];\n\t\t\tvar maxChildDepth = 0;\n\t\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tvar childDepth = this.depth(childBoundable);\n\t\t\t\t\tif (childDepth > maxChildDepth) maxChildDepth = childDepth;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn maxChildDepth + 1;\n\t\t}\n\t},\n\tcreateParentBoundables: function createParentBoundables(childBoundables, newLevel) {\n\t\tAssert.isTrue(!childBoundables.isEmpty());\n\t\tvar parentBoundables = new ArrayList();\n\t\tparentBoundables.add(this.createNode(newLevel));\n\t\tvar sortedChildBoundables = new ArrayList(childBoundables);\n\t\tCollections.sort(sortedChildBoundables, this.getComparator());\n\t\tfor (var i = sortedChildBoundables.iterator(); i.hasNext();) {\n\t\t\tvar childBoundable = i.next();\n\t\t\tif (this.lastNode(parentBoundables).getChildBoundables().size() === this.getNodeCapacity()) {\n\t\t\t\tparentBoundables.add(this.createNode(newLevel));\n\t\t\t}\n\t\t\tthis.lastNode(parentBoundables).addChildBoundable(childBoundable);\n\t\t}\n\t\treturn parentBoundables;\n\t},\n\tisEmpty: function isEmpty() {\n\t\tif (!this.built) return this.itemBoundables.isEmpty();\n\t\treturn this.root.isEmpty();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Serializable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn AbstractSTRtree;\n\t}\n});\nAbstractSTRtree.compareDoubles = function (a, b) {\n\treturn a > b ? 1 : a < b ? -1 : 0;\n};\nfunction IntersectsOp$1() {}\nAbstractSTRtree.IntersectsOp = IntersectsOp$1;\nAbstractSTRtree.serialVersionUID = -3886435814360241337;\nAbstractSTRtree.DEFAULT_NODE_CAPACITY = 10;\n\nfunction ItemDistance() {}\nextend(ItemDistance.prototype, {\n\tdistance: function distance(item1, item2) {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ItemDistance;\n\t}\n});\n\nfunction STRtree() {\n\tif (arguments.length === 0) {\n\t\tSTRtree.call(this, STRtree.DEFAULT_NODE_CAPACITY);\n\t} else if (arguments.length === 1) {\n\t\tvar nodeCapacity = arguments[0];\n\t\tAbstractSTRtree.call(this, nodeCapacity);\n\t}\n}\ninherits(STRtree, AbstractSTRtree);\nextend(STRtree.prototype, {\n\tcreateParentBoundablesFromVerticalSlices: function createParentBoundablesFromVerticalSlices(verticalSlices, newLevel) {\n\t\tAssert.isTrue(verticalSlices.length > 0);\n\t\tvar parentBoundables = new ArrayList();\n\t\tfor (var i = 0; i < verticalSlices.length; i++) {\n\t\t\tparentBoundables.addAll(this.createParentBoundablesFromVerticalSlice(verticalSlices[i], newLevel));\n\t\t}\n\t\treturn parentBoundables;\n\t},\n\tcreateNode: function createNode(level) {\n\t\treturn new STRtreeNode(level);\n\t},\n\tsize: function size() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn AbstractSTRtree.prototype.size.call(this);\n\t\t} else return AbstractSTRtree.prototype.size.apply(this, arguments);\n\t},\n\tinsert: function insert() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar itemEnv = arguments[0],\n\t\t\t    item = arguments[1];\n\t\t\tif (itemEnv.isNull()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tAbstractSTRtree.prototype.insert.call(this, itemEnv, item);\n\t\t} else return AbstractSTRtree.prototype.insert.apply(this, arguments);\n\t},\n\tgetIntersectsOp: function getIntersectsOp() {\n\t\treturn STRtree.intersectsOp;\n\t},\n\tverticalSlices: function verticalSlices(childBoundables, sliceCount) {\n\t\tvar sliceCapacity = Math.trunc(Math.ceil(childBoundables.size() / sliceCount));\n\t\tvar slices = new Array(sliceCount).fill(null);\n\t\tvar i = childBoundables.iterator();\n\t\tfor (var j = 0; j < sliceCount; j++) {\n\t\t\tslices[j] = new ArrayList();\n\t\t\tvar boundablesAddedToSlice = 0;\n\t\t\twhile (i.hasNext() && boundablesAddedToSlice < sliceCapacity) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tslices[j].add(childBoundable);\n\t\t\t\tboundablesAddedToSlice++;\n\t\t\t}\n\t\t}\n\t\treturn slices;\n\t},\n\tquery: function query() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar searchEnv = arguments[0];\n\t\t\treturn AbstractSTRtree.prototype.query.call(this, searchEnv);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar _searchEnv = arguments[0],\n\t\t\t    visitor = arguments[1];\n\t\t\tAbstractSTRtree.prototype.query.call(this, _searchEnv, visitor);\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (hasInterface(arguments[2], ItemVisitor) && arguments[0] instanceof Object && arguments[1] instanceof AbstractNode) {\n\t\t\t\tvar searchBounds = arguments[0],\n\t\t\t\t    node = arguments[1],\n\t\t\t\t    _visitor = arguments[2];\n\t\t\t\tAbstractSTRtree.prototype.query.call(this, searchBounds, node, _visitor);\n\t\t\t} else if (hasInterface(arguments[2], List) && arguments[0] instanceof Object && arguments[1] instanceof AbstractNode) {\n\t\t\t\tvar _searchBounds = arguments[0],\n\t\t\t\t    _node = arguments[1],\n\t\t\t\t    matches = arguments[2];\n\t\t\t\tAbstractSTRtree.prototype.query.call(this, _searchBounds, _node, matches);\n\t\t\t}\n\t\t}\n\t},\n\tgetComparator: function getComparator() {\n\t\treturn STRtree.yComparator;\n\t},\n\tcreateParentBoundablesFromVerticalSlice: function createParentBoundablesFromVerticalSlice(childBoundables, newLevel) {\n\t\treturn AbstractSTRtree.prototype.createParentBoundables.call(this, childBoundables, newLevel);\n\t},\n\tremove: function remove() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar itemEnv = arguments[0],\n\t\t\t    item = arguments[1];\n\t\t\treturn AbstractSTRtree.prototype.remove.call(this, itemEnv, item);\n\t\t} else return AbstractSTRtree.prototype.remove.apply(this, arguments);\n\t},\n\tdepth: function depth() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn AbstractSTRtree.prototype.depth.call(this);\n\t\t} else return AbstractSTRtree.prototype.depth.apply(this, arguments);\n\t},\n\tcreateParentBoundables: function createParentBoundables(childBoundables, newLevel) {\n\t\tAssert.isTrue(!childBoundables.isEmpty());\n\t\tvar minLeafCount = Math.trunc(Math.ceil(childBoundables.size() / this.getNodeCapacity()));\n\t\tvar sortedChildBoundables = new ArrayList(childBoundables);\n\t\tCollections.sort(sortedChildBoundables, STRtree.xComparator);\n\t\tvar verticalSlices = this.verticalSlices(sortedChildBoundables, Math.trunc(Math.ceil(Math.sqrt(minLeafCount))));\n\t\treturn this.createParentBoundablesFromVerticalSlices(verticalSlices, newLevel);\n\t},\n\tnearestNeighbour: function nearestNeighbour() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (hasInterface(arguments[0], ItemDistance)) {\n\t\t\t\tvar itemDist = arguments[0];\n\t\t\t\tvar bp = new BoundablePair(this.getRoot(), this.getRoot(), itemDist);\n\t\t\t\treturn this.nearestNeighbour(bp);\n\t\t\t} else if (arguments[0] instanceof BoundablePair) {\n\t\t\t\tvar initBndPair = arguments[0];\n\t\t\t\treturn this.nearestNeighbour(initBndPair, Double.POSITIVE_INFINITY);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tif (arguments[0] instanceof STRtree && hasInterface(arguments[1], ItemDistance)) {\n\t\t\t\tvar tree = arguments[0],\n\t\t\t\t    _itemDist = arguments[1];\n\t\t\t\tvar bp = new BoundablePair(this.getRoot(), tree.getRoot(), _itemDist);\n\t\t\t\treturn this.nearestNeighbour(bp);\n\t\t\t} else if (arguments[0] instanceof BoundablePair && typeof arguments[1] === \"number\") {\n\t\t\t\tvar _initBndPair = arguments[0],\n\t\t\t\t    maxDistance = arguments[1];\n\t\t\t\tvar distanceLowerBound = maxDistance;\n\t\t\t\tvar minPair = null;\n\t\t\t\tvar priQ = new PriorityQueue();\n\t\t\t\tpriQ.add(_initBndPair);\n\t\t\t\twhile (!priQ.isEmpty() && distanceLowerBound > 0.0) {\n\t\t\t\t\tvar bndPair = priQ.poll();\n\t\t\t\t\tvar currentDistance = bndPair.getDistance();\n\t\t\t\t\tif (currentDistance >= distanceLowerBound) break;\n\t\t\t\t\tif (bndPair.isLeaves()) {\n\t\t\t\t\t\tdistanceLowerBound = currentDistance;\n\t\t\t\t\t\tminPair = bndPair;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbndPair.expandToQueue(priQ, distanceLowerBound);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn [minPair.getBoundable(0).getItem(), minPair.getBoundable(1).getItem()];\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tvar env = arguments[0],\n\t\t\t    item = arguments[1],\n\t\t\t    _itemDist2 = arguments[2];\n\t\t\tvar bnd = new ItemBoundable(env, item);\n\t\t\tvar bp = new BoundablePair(this.getRoot(), bnd, _itemDist2);\n\t\t\treturn this.nearestNeighbour(bp)[0];\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [SpatialIndex, Serializable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn STRtree;\n\t}\n});\nSTRtree.centreX = function (e) {\n\treturn STRtree.avg(e.getMinX(), e.getMaxX());\n};\nSTRtree.avg = function (a, b) {\n\treturn (a + b) / 2;\n};\nSTRtree.centreY = function (e) {\n\treturn STRtree.avg(e.getMinY(), e.getMaxY());\n};\nfunction STRtreeNode() {\n\tvar level = arguments[0];\n\tAbstractNode.call(this, level);\n}\ninherits(STRtreeNode, AbstractNode);\nextend(STRtreeNode.prototype, {\n\tcomputeBounds: function computeBounds() {\n\t\tvar bounds = null;\n\t\tfor (var i = this.getChildBoundables().iterator(); i.hasNext();) {\n\t\t\tvar childBoundable = i.next();\n\t\t\tif (bounds === null) {\n\t\t\t\tbounds = new Envelope(childBoundable.getBounds());\n\t\t\t} else {\n\t\t\t\tbounds.expandToInclude(childBoundable.getBounds());\n\t\t\t}\n\t\t}\n\t\treturn bounds;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn STRtreeNode;\n\t}\n});\nSTRtree.STRtreeNode = STRtreeNode;\nSTRtree.serialVersionUID = 259274702368956900;\nSTRtree.xComparator = {\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparator];\n\t},\n\tcompare: function compare(o1, o2) {\n\t\treturn AbstractSTRtree.compareDoubles(STRtree.centreX(o1.getBounds()), STRtree.centreX(o2.getBounds()));\n\t}\n};\nSTRtree.yComparator = {\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparator];\n\t},\n\tcompare: function compare(o1, o2) {\n\t\treturn AbstractSTRtree.compareDoubles(STRtree.centreY(o1.getBounds()), STRtree.centreY(o2.getBounds()));\n\t}\n};\nSTRtree.intersectsOp = {\n\tinterfaces_: function interfaces_() {\n\t\treturn [IntersectsOp];\n\t},\n\tintersects: function intersects(aBounds, bBounds) {\n\t\treturn aBounds.intersects(bBounds);\n\t}\n};\nSTRtree.DEFAULT_NODE_CAPACITY = 10;\n\nfunction SegmentPointComparator() {}\nextend(SegmentPointComparator.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SegmentPointComparator;\n\t}\n});\nSegmentPointComparator.relativeSign = function (x0, x1) {\n\tif (x0 < x1) return -1;\n\tif (x0 > x1) return 1;\n\treturn 0;\n};\nSegmentPointComparator.compare = function (octant, p0, p1) {\n\tif (p0.equals2D(p1)) return 0;\n\tvar xSign = SegmentPointComparator.relativeSign(p0.x, p1.x);\n\tvar ySign = SegmentPointComparator.relativeSign(p0.y, p1.y);\n\tswitch (octant) {\n\t\tcase 0:\n\t\t\treturn SegmentPointComparator.compareValue(xSign, ySign);\n\t\tcase 1:\n\t\t\treturn SegmentPointComparator.compareValue(ySign, xSign);\n\t\tcase 2:\n\t\t\treturn SegmentPointComparator.compareValue(ySign, -xSign);\n\t\tcase 3:\n\t\t\treturn SegmentPointComparator.compareValue(-xSign, ySign);\n\t\tcase 4:\n\t\t\treturn SegmentPointComparator.compareValue(-xSign, -ySign);\n\t\tcase 5:\n\t\t\treturn SegmentPointComparator.compareValue(-ySign, -xSign);\n\t\tcase 6:\n\t\t\treturn SegmentPointComparator.compareValue(-ySign, xSign);\n\t\tcase 7:\n\t\t\treturn SegmentPointComparator.compareValue(xSign, -ySign);\n\t}\n\tAssert.shouldNeverReachHere(\"invalid octant value\");\n\treturn 0;\n};\nSegmentPointComparator.compareValue = function (compareSign0, compareSign1) {\n\tif (compareSign0 < 0) return -1;\n\tif (compareSign0 > 0) return 1;\n\tif (compareSign1 < 0) return -1;\n\tif (compareSign1 > 0) return 1;\n\treturn 0;\n};\n\nfunction SegmentNode() {\n\tthis.segString = null;\n\tthis.coord = null;\n\tthis.segmentIndex = null;\n\tthis.segmentOctant = null;\n\tthis._isInterior = null;\n\tvar segString = arguments[0],\n\t    coord = arguments[1],\n\t    segmentIndex = arguments[2],\n\t    segmentOctant = arguments[3];\n\tthis.segString = segString;\n\tthis.coord = new Coordinate(coord);\n\tthis.segmentIndex = segmentIndex;\n\tthis.segmentOctant = segmentOctant;\n\tthis._isInterior = !coord.equals2D(segString.getCoordinate(segmentIndex));\n}\nextend(SegmentNode.prototype, {\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this.coord;\n\t},\n\tprint: function print(out) {\n\t\tout.print(this.coord);\n\t\tout.print(\" seg # = \" + this.segmentIndex);\n\t},\n\tcompareTo: function compareTo(obj) {\n\t\tvar other = obj;\n\t\tif (this.segmentIndex < other.segmentIndex) return -1;\n\t\tif (this.segmentIndex > other.segmentIndex) return 1;\n\t\tif (this.coord.equals2D(other.coord)) return 0;\n\t\treturn SegmentPointComparator.compare(this.segmentOctant, this.coord, other.coord);\n\t},\n\tisEndPoint: function isEndPoint(maxSegmentIndex) {\n\t\tif (this.segmentIndex === 0 && !this._isInterior) return true;\n\t\tif (this.segmentIndex === maxSegmentIndex) return true;\n\t\treturn false;\n\t},\n\tisInterior: function isInterior() {\n\t\treturn this._isInterior;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SegmentNode;\n\t}\n});\n\nfunction SegmentNodeList() {\n\tthis.nodeMap = new TreeMap();\n\tthis.edge = null;\n\tvar edge = arguments[0];\n\tthis.edge = edge;\n}\nextend(SegmentNodeList.prototype, {\n\tgetSplitCoordinates: function getSplitCoordinates() {\n\t\tvar coordList = new CoordinateList();\n\t\tthis.addEndpoints();\n\t\tvar it = this.iterator();\n\t\tvar eiPrev = it.next();\n\t\twhile (it.hasNext()) {\n\t\t\tvar ei = it.next();\n\t\t\tthis.addEdgeCoordinates(eiPrev, ei, coordList);\n\t\t\teiPrev = ei;\n\t\t}\n\t\treturn coordList.toCoordinateArray();\n\t},\n\taddCollapsedNodes: function addCollapsedNodes() {\n\t\tvar collapsedVertexIndexes = new ArrayList();\n\t\tthis.findCollapsesFromInsertedNodes(collapsedVertexIndexes);\n\t\tthis.findCollapsesFromExistingVertices(collapsedVertexIndexes);\n\t\tfor (var it = collapsedVertexIndexes.iterator(); it.hasNext();) {\n\t\t\tvar vertexIndex = it.next().intValue();\n\t\t\tthis.add(this.edge.getCoordinate(vertexIndex), vertexIndex);\n\t\t}\n\t},\n\tprint: function print(out) {\n\t\tout.println(\"Intersections:\");\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar ei = it.next();\n\t\t\tei.print(out);\n\t\t}\n\t},\n\tfindCollapsesFromExistingVertices: function findCollapsesFromExistingVertices(collapsedVertexIndexes) {\n\t\tfor (var i = 0; i < this.edge.size() - 2; i++) {\n\t\t\tvar p0 = this.edge.getCoordinate(i);\n\t\t\tvar p1 = this.edge.getCoordinate(i + 1);\n\t\t\tvar p2 = this.edge.getCoordinate(i + 2);\n\t\t\tif (p0.equals2D(p2)) {\n\t\t\t\tcollapsedVertexIndexes.add(new Integer(i + 1));\n\t\t\t}\n\t\t}\n\t},\n\taddEdgeCoordinates: function addEdgeCoordinates(ei0, ei1, coordList) {\n\t\tvar npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n\t\tvar lastSegStartPt = this.edge.getCoordinate(ei1.segmentIndex);\n\t\tvar useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n\t\tif (!useIntPt1) {\n\t\t\tnpts--;\n\t\t}\n\t\tvar ipt = 0;\n\t\tcoordList.add(new Coordinate(ei0.coord), false);\n\t\tfor (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n\t\t\tcoordList.add(this.edge.getCoordinate(i));\n\t\t}\n\t\tif (useIntPt1) {\n\t\t\tcoordList.add(new Coordinate(ei1.coord));\n\t\t}\n\t},\n\titerator: function iterator() {\n\t\treturn this.nodeMap.values().iterator();\n\t},\n\taddSplitEdges: function addSplitEdges(edgeList) {\n\t\tthis.addEndpoints();\n\t\tthis.addCollapsedNodes();\n\t\tvar it = this.iterator();\n\t\tvar eiPrev = it.next();\n\t\twhile (it.hasNext()) {\n\t\t\tvar ei = it.next();\n\t\t\tvar newEdge = this.createSplitEdge(eiPrev, ei);\n\t\t\tedgeList.add(newEdge);\n\t\t\teiPrev = ei;\n\t\t}\n\t},\n\tfindCollapseIndex: function findCollapseIndex(ei0, ei1, collapsedVertexIndex) {\n\t\tif (!ei0.coord.equals2D(ei1.coord)) return false;\n\t\tvar numVerticesBetween = ei1.segmentIndex - ei0.segmentIndex;\n\t\tif (!ei1.isInterior()) {\n\t\t\tnumVerticesBetween--;\n\t\t}\n\t\tif (numVerticesBetween === 1) {\n\t\t\tcollapsedVertexIndex[0] = ei0.segmentIndex + 1;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\tfindCollapsesFromInsertedNodes: function findCollapsesFromInsertedNodes(collapsedVertexIndexes) {\n\t\tvar collapsedVertexIndex = new Array(1).fill(null);\n\t\tvar it = this.iterator();\n\t\tvar eiPrev = it.next();\n\t\twhile (it.hasNext()) {\n\t\t\tvar ei = it.next();\n\t\t\tvar isCollapsed = this.findCollapseIndex(eiPrev, ei, collapsedVertexIndex);\n\t\t\tif (isCollapsed) collapsedVertexIndexes.add(new Integer(collapsedVertexIndex[0]));\n\t\t\teiPrev = ei;\n\t\t}\n\t},\n\tgetEdge: function getEdge() {\n\t\treturn this.edge;\n\t},\n\taddEndpoints: function addEndpoints() {\n\t\tvar maxSegIndex = this.edge.size() - 1;\n\t\tthis.add(this.edge.getCoordinate(0), 0);\n\t\tthis.add(this.edge.getCoordinate(maxSegIndex), maxSegIndex);\n\t},\n\tcreateSplitEdge: function createSplitEdge(ei0, ei1) {\n\t\tvar npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n\t\tvar lastSegStartPt = this.edge.getCoordinate(ei1.segmentIndex);\n\t\tvar useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n\t\tif (!useIntPt1) {\n\t\t\tnpts--;\n\t\t}\n\t\tvar pts = new Array(npts).fill(null);\n\t\tvar ipt = 0;\n\t\tpts[ipt++] = new Coordinate(ei0.coord);\n\t\tfor (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n\t\t\tpts[ipt++] = this.edge.getCoordinate(i);\n\t\t}\n\t\tif (useIntPt1) pts[ipt] = new Coordinate(ei1.coord);\n\t\treturn new NodedSegmentString(pts, this.edge.getData());\n\t},\n\tadd: function add(intPt, segmentIndex) {\n\t\tvar eiNew = new SegmentNode(this.edge, intPt, segmentIndex, this.edge.getSegmentOctant(segmentIndex));\n\t\tvar ei = this.nodeMap.get(eiNew);\n\t\tif (ei !== null) {\n\t\t\tAssert.isTrue(ei.coord.equals2D(intPt), \"Found equal nodes with different coordinates\");\n\t\t\treturn ei;\n\t\t}\n\t\tthis.nodeMap.put(eiNew, eiNew);\n\t\treturn eiNew;\n\t},\n\tcheckSplitEdgesCorrectness: function checkSplitEdgesCorrectness(splitEdges) {\n\t\tvar edgePts = this.edge.getCoordinates();\n\t\tvar split0 = splitEdges.get(0);\n\t\tvar pt0 = split0.getCoordinate(0);\n\t\tif (!pt0.equals2D(edgePts[0])) throw new RuntimeException(\"bad split edge start point at \" + pt0);\n\t\tvar splitn = splitEdges.get(splitEdges.size() - 1);\n\t\tvar splitnPts = splitn.getCoordinates();\n\t\tvar ptn = splitnPts[splitnPts.length - 1];\n\t\tif (!ptn.equals2D(edgePts[edgePts.length - 1])) throw new RuntimeException(\"bad split edge end point at \" + ptn);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SegmentNodeList;\n\t}\n});\nfunction NodeVertexIterator() {\n\tthis.nodeList = null;\n\tthis.edge = null;\n\tthis.nodeIt = null;\n\tthis.currNode = null;\n\tthis.nextNode = null;\n\tthis.currSegIndex = 0;\n\tvar nodeList = arguments[0];\n\tthis.nodeList = nodeList;\n\tthis.edge = nodeList.getEdge();\n\tthis.nodeIt = nodeList.iterator();\n\tthis.readNextNode();\n}\nextend(NodeVertexIterator.prototype, {\n\tnext: function next() {\n\t\tif (this.currNode === null) {\n\t\t\tthis.currNode = this.nextNode;\n\t\t\tthis.currSegIndex = this.currNode.segmentIndex;\n\t\t\tthis.readNextNode();\n\t\t\treturn this.currNode;\n\t\t}\n\t\tif (this.nextNode === null) return null;\n\t\tif (this.nextNode.segmentIndex === this.currNode.segmentIndex) {\n\t\t\tthis.currNode = this.nextNode;\n\t\t\tthis.currSegIndex = this.currNode.segmentIndex;\n\t\t\tthis.readNextNode();\n\t\t\treturn this.currNode;\n\t\t}\n\t\tif (this.nextNode.segmentIndex > this.currNode.segmentIndex) {}\n\t\treturn null;\n\t},\n\tremove: function remove() {\n\t\tthrow new UnsupportedOperationException(this.getClass().getName());\n\t},\n\thasNext: function hasNext() {\n\t\tif (this.nextNode === null) return false;\n\t\treturn true;\n\t},\n\treadNextNode: function readNextNode() {\n\t\tif (this.nodeIt.hasNext()) this.nextNode = this.nodeIt.next();else this.nextNode = null;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Iterator];\n\t},\n\tgetClass: function getClass() {\n\t\treturn NodeVertexIterator;\n\t}\n});\n\nfunction NodableSegmentString() {}\nextend(NodableSegmentString.prototype, {\n\taddIntersection: function addIntersection(intPt, segmentIndex) {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [SegmentString];\n\t},\n\tgetClass: function getClass() {\n\t\treturn NodableSegmentString;\n\t}\n});\n\nfunction NodedSegmentString() {\n\tthis.nodeList = new SegmentNodeList(this);\n\tthis.pts = null;\n\tthis.data = null;\n\tvar pts = arguments[0],\n\t    data = arguments[1];\n\tthis.pts = pts;\n\tthis.data = data;\n}\nextend(NodedSegmentString.prototype, {\n\tgetCoordinates: function getCoordinates() {\n\t\treturn this.pts;\n\t},\n\tsize: function size() {\n\t\treturn this.pts.length;\n\t},\n\tgetCoordinate: function getCoordinate(i) {\n\t\treturn this.pts[i];\n\t},\n\tisClosed: function isClosed() {\n\t\treturn this.pts[0].equals(this.pts[this.pts.length - 1]);\n\t},\n\tgetSegmentOctant: function getSegmentOctant(index) {\n\t\tif (index === this.pts.length - 1) return -1;\n\t\treturn this.safeOctant(this.getCoordinate(index), this.getCoordinate(index + 1));\n\t},\n\tsetData: function setData(data) {\n\t\tthis.data = data;\n\t},\n\tsafeOctant: function safeOctant(p0, p1) {\n\t\tif (p0.equals2D(p1)) return 0;\n\t\treturn Octant.octant(p0, p1);\n\t},\n\tgetData: function getData() {\n\t\treturn this.data;\n\t},\n\taddIntersection: function addIntersection() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar _intPt = arguments[0],\n\t\t\t    segmentIndex = arguments[1];\n\t\t\tthis.addIntersectionNode(_intPt, segmentIndex);\n\t\t} else if (arguments.length === 4) {\n\t\t\tvar li = arguments[0],\n\t\t\t    _segmentIndex = arguments[1],\n\t\t\t    geomIndex = arguments[2],\n\t\t\t    intIndex = arguments[3];\n\t\t\tvar intPt = new Coordinate(li.getIntersection(intIndex));\n\t\t\tthis.addIntersection(intPt, _segmentIndex);\n\t\t}\n\t},\n\ttoString: function toString() {\n\t\treturn WKTWriter.toLineString(new CoordinateArraySequence(this.pts));\n\t},\n\tgetNodeList: function getNodeList() {\n\t\treturn this.nodeList;\n\t},\n\taddIntersectionNode: function addIntersectionNode(intPt, segmentIndex) {\n\t\tvar normalizedSegmentIndex = segmentIndex;\n\t\tvar nextSegIndex = normalizedSegmentIndex + 1;\n\t\tif (nextSegIndex < this.pts.length) {\n\t\t\tvar nextPt = this.pts[nextSegIndex];\n\t\t\tif (intPt.equals2D(nextPt)) {\n\t\t\t\tnormalizedSegmentIndex = nextSegIndex;\n\t\t\t}\n\t\t}\n\t\tvar ei = this.nodeList.add(intPt, normalizedSegmentIndex);\n\t\treturn ei;\n\t},\n\taddIntersections: function addIntersections(li, segmentIndex, geomIndex) {\n\t\tfor (var i = 0; i < li.getIntersectionNum(); i++) {\n\t\t\tthis.addIntersection(li, segmentIndex, geomIndex, i);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [NodableSegmentString];\n\t},\n\tgetClass: function getClass() {\n\t\treturn NodedSegmentString;\n\t}\n});\nNodedSegmentString.getNodedSubstrings = function () {\n\tif (arguments.length === 1) {\n\t\tvar segStrings = arguments[0];\n\t\tvar resultEdgelist = new ArrayList();\n\t\tNodedSegmentString.getNodedSubstrings(segStrings, resultEdgelist);\n\t\treturn resultEdgelist;\n\t} else if (arguments.length === 2) {\n\t\tvar _segStrings = arguments[0],\n\t\t    _resultEdgelist = arguments[1];\n\t\tfor (var i = _segStrings.iterator(); i.hasNext();) {\n\t\t\tvar ss = i.next();\n\t\t\tss.getNodeList().addSplitEdges(_resultEdgelist);\n\t\t}\n\t}\n};\n\nfunction MonotoneChainOverlapAction() {\n\tthis.tempEnv1 = new Envelope();\n\tthis.tempEnv2 = new Envelope();\n\tthis.overlapSeg1 = new LineSegment();\n\tthis.overlapSeg2 = new LineSegment();\n}\nextend(MonotoneChainOverlapAction.prototype, {\n\toverlap: function overlap() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar seg1 = arguments[0],\n\t\t\t    seg2 = arguments[1];\n\t\t} else if (arguments.length === 4) {\n\t\t\tvar mc1 = arguments[0],\n\t\t\t    start1 = arguments[1],\n\t\t\t    mc2 = arguments[2],\n\t\t\t    start2 = arguments[3];\n\t\t\tmc1.getLineSegment(start1, this.overlapSeg1);\n\t\t\tmc2.getLineSegment(start2, this.overlapSeg2);\n\t\t\tthis.overlap(this.overlapSeg1, this.overlapSeg2);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MonotoneChainOverlapAction;\n\t}\n});\n\nfunction MonotoneChain() {\n\tthis.pts = null;\n\tthis.start = null;\n\tthis.end = null;\n\tthis.env = null;\n\tthis.context = null;\n\tthis.id = null;\n\tvar pts = arguments[0],\n\t    start = arguments[1],\n\t    end = arguments[2],\n\t    context = arguments[3];\n\tthis.pts = pts;\n\tthis.start = start;\n\tthis.end = end;\n\tthis.context = context;\n}\nextend(MonotoneChain.prototype, {\n\tgetLineSegment: function getLineSegment(index, ls) {\n\t\tls.p0 = this.pts[index];\n\t\tls.p1 = this.pts[index + 1];\n\t},\n\tcomputeSelect: function computeSelect(searchEnv, start0, end0, mcs) {\n\t\tvar p0 = this.pts[start0];\n\t\tvar p1 = this.pts[end0];\n\t\tmcs.tempEnv1.init(p0, p1);\n\t\tif (end0 - start0 === 1) {\n\t\t\tmcs.select(this, start0);\n\t\t\treturn null;\n\t\t}\n\t\tif (!searchEnv.intersects(mcs.tempEnv1)) return null;\n\t\tvar mid = Math.trunc((start0 + end0) / 2);\n\t\tif (start0 < mid) {\n\t\t\tthis.computeSelect(searchEnv, start0, mid, mcs);\n\t\t}\n\t\tif (mid < end0) {\n\t\t\tthis.computeSelect(searchEnv, mid, end0, mcs);\n\t\t}\n\t},\n\tgetCoordinates: function getCoordinates() {\n\t\tvar coord = new Array(this.end - this.start + 1).fill(null);\n\t\tvar index = 0;\n\t\tfor (var i = this.start; i <= this.end; i++) {\n\t\t\tcoord[index++] = this.pts[i];\n\t\t}\n\t\treturn coord;\n\t},\n\tcomputeOverlaps: function computeOverlaps(mc, mco) {\n\t\tthis.computeOverlapsInternal(this.start, this.end, mc, mc.start, mc.end, mco);\n\t},\n\tsetId: function setId(id) {\n\t\tthis.id = id;\n\t},\n\tselect: function select(searchEnv, mcs) {\n\t\tthis.computeSelect(searchEnv, this.start, this.end, mcs);\n\t},\n\tgetEnvelope: function getEnvelope() {\n\t\tif (this.env === null) {\n\t\t\tvar p0 = this.pts[this.start];\n\t\t\tvar p1 = this.pts[this.end];\n\t\t\tthis.env = new Envelope(p0, p1);\n\t\t}\n\t\treturn this.env;\n\t},\n\tgetEndIndex: function getEndIndex() {\n\t\treturn this.end;\n\t},\n\tgetStartIndex: function getStartIndex() {\n\t\treturn this.start;\n\t},\n\tgetContext: function getContext() {\n\t\treturn this.context;\n\t},\n\tgetId: function getId() {\n\t\treturn this.id;\n\t},\n\tcomputeOverlapsInternal: function computeOverlapsInternal(start0, end0, mc, start1, end1, mco) {\n\t\tvar p00 = this.pts[start0];\n\t\tvar p01 = this.pts[end0];\n\t\tvar p10 = mc.pts[start1];\n\t\tvar p11 = mc.pts[end1];\n\t\tif (end0 - start0 === 1 && end1 - start1 === 1) {\n\t\t\tmco.overlap(this, start0, mc, start1);\n\t\t\treturn null;\n\t\t}\n\t\tmco.tempEnv1.init(p00, p01);\n\t\tmco.tempEnv2.init(p10, p11);\n\t\tif (!mco.tempEnv1.intersects(mco.tempEnv2)) return null;\n\t\tvar mid0 = Math.trunc((start0 + end0) / 2);\n\t\tvar mid1 = Math.trunc((start1 + end1) / 2);\n\t\tif (start0 < mid0) {\n\t\t\tif (start1 < mid1) this.computeOverlapsInternal(start0, mid0, mc, start1, mid1, mco);\n\t\t\tif (mid1 < end1) this.computeOverlapsInternal(start0, mid0, mc, mid1, end1, mco);\n\t\t}\n\t\tif (mid0 < end0) {\n\t\t\tif (start1 < mid1) this.computeOverlapsInternal(mid0, end0, mc, start1, mid1, mco);\n\t\t\tif (mid1 < end1) this.computeOverlapsInternal(mid0, end0, mc, mid1, end1, mco);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MonotoneChain;\n\t}\n});\n\nfunction Quadrant() {}\nextend(Quadrant.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Quadrant;\n\t}\n});\nQuadrant.isNorthern = function (quad) {\n\treturn quad === Quadrant.NE || quad === Quadrant.NW;\n};\nQuadrant.isOpposite = function (quad1, quad2) {\n\tif (quad1 === quad2) return false;\n\tvar diff = (quad1 - quad2 + 4) % 4;\n\tif (diff === 2) return true;\n\treturn false;\n};\nQuadrant.commonHalfPlane = function (quad1, quad2) {\n\tif (quad1 === quad2) return quad1;\n\tvar diff = (quad1 - quad2 + 4) % 4;\n\tif (diff === 2) return -1;\n\tvar min = quad1 < quad2 ? quad1 : quad2;\n\tvar max = quad1 > quad2 ? quad1 : quad2;\n\tif (min === 0 && max === 3) return 3;\n\treturn min;\n};\nQuadrant.isInHalfPlane = function (quad, halfPlane) {\n\tif (halfPlane === Quadrant.SE) {\n\t\treturn quad === Quadrant.SE || quad === Quadrant.SW;\n\t}\n\treturn quad === halfPlane || quad === halfPlane + 1;\n};\nQuadrant.quadrant = function () {\n\tif (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n\t\tvar dx = arguments[0],\n\t\t    dy = arguments[1];\n\t\tif (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException(\"Cannot compute the quadrant for point ( \" + dx + \", \" + dy + \" )\");\n\t\tif (dx >= 0.0) {\n\t\t\tif (dy >= 0.0) return Quadrant.NE;else return Quadrant.SE;\n\t\t} else {\n\t\t\tif (dy >= 0.0) return Quadrant.NW;else return Quadrant.SW;\n\t\t}\n\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n\t\tvar p0 = arguments[0],\n\t\t    p1 = arguments[1];\n\t\tif (p1.x === p0.x && p1.y === p0.y) throw new IllegalArgumentException(\"Cannot compute the quadrant for two identical points \" + p0);\n\t\tif (p1.x >= p0.x) {\n\t\t\tif (p1.y >= p0.y) return Quadrant.NE;else return Quadrant.SE;\n\t\t} else {\n\t\t\tif (p1.y >= p0.y) return Quadrant.NW;else return Quadrant.SW;\n\t\t}\n\t}\n};\nQuadrant.NE = 0;\nQuadrant.NW = 1;\nQuadrant.SW = 2;\nQuadrant.SE = 3;\n\nfunction MonotoneChainBuilder() {}\nextend(MonotoneChainBuilder.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MonotoneChainBuilder;\n\t}\n});\nMonotoneChainBuilder.getChainStartIndices = function (pts) {\n\tvar start = 0;\n\tvar startIndexList = new ArrayList();\n\tstartIndexList.add(new Integer(start));\n\tdo {\n\t\tvar last = MonotoneChainBuilder.findChainEnd(pts, start);\n\t\tstartIndexList.add(new Integer(last));\n\t\tstart = last;\n\t} while (start < pts.length - 1);\n\tvar startIndex = MonotoneChainBuilder.toIntArray(startIndexList);\n\treturn startIndex;\n};\nMonotoneChainBuilder.findChainEnd = function (pts, start) {\n\tvar safeStart = start;\n\twhile (safeStart < pts.length - 1 && pts[safeStart].equals2D(pts[safeStart + 1])) {\n\t\tsafeStart++;\n\t}\n\tif (safeStart >= pts.length - 1) {\n\t\treturn pts.length - 1;\n\t}\n\tvar chainQuad = Quadrant.quadrant(pts[safeStart], pts[safeStart + 1]);\n\tvar last = start + 1;\n\twhile (last < pts.length) {\n\t\tif (!pts[last - 1].equals2D(pts[last])) {\n\t\t\tvar quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n\t\t\tif (quad !== chainQuad) break;\n\t\t}\n\t\tlast++;\n\t}\n\treturn last - 1;\n};\nMonotoneChainBuilder.getChains = function () {\n\tif (arguments.length === 1) {\n\t\tvar pts = arguments[0];\n\t\treturn MonotoneChainBuilder.getChains(pts, null);\n\t} else if (arguments.length === 2) {\n\t\tvar _pts = arguments[0],\n\t\t    context = arguments[1];\n\t\tvar mcList = new ArrayList();\n\t\tvar startIndex = MonotoneChainBuilder.getChainStartIndices(_pts);\n\t\tfor (var i = 0; i < startIndex.length - 1; i++) {\n\t\t\tvar mc = new MonotoneChain(_pts, startIndex[i], startIndex[i + 1], context);\n\t\t\tmcList.add(mc);\n\t\t}\n\t\treturn mcList;\n\t}\n};\nMonotoneChainBuilder.toIntArray = function (list) {\n\tvar array = new Array(list.size()).fill(null);\n\tfor (var i = 0; i < array.length; i++) {\n\t\tarray[i] = list.get(i).intValue();\n\t}\n\treturn array;\n};\n\nfunction Noder() {}\nextend(Noder.prototype, {\n\tcomputeNodes: function computeNodes(segStrings) {},\n\tgetNodedSubstrings: function getNodedSubstrings() {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Noder;\n\t}\n});\n\nfunction SinglePassNoder() {\n\tthis.segInt = null;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tvar segInt = arguments[0];\n\t\tthis.setSegmentIntersector(segInt);\n\t}\n}\nextend(SinglePassNoder.prototype, {\n\tsetSegmentIntersector: function setSegmentIntersector(segInt) {\n\t\tthis.segInt = segInt;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Noder];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SinglePassNoder;\n\t}\n});\n\nfunction MCIndexNoder() {\n\tthis.monoChains = new ArrayList();\n\tthis.index = new STRtree();\n\tthis.idCounter = 0;\n\tthis.nodedSegStrings = null;\n\tthis.nOverlaps = 0;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tvar si = arguments[0];\n\t\tSinglePassNoder.call(this, si);\n\t}\n}\ninherits(MCIndexNoder, SinglePassNoder);\nextend(MCIndexNoder.prototype, {\n\tgetMonotoneChains: function getMonotoneChains() {\n\t\treturn this.monoChains;\n\t},\n\tgetNodedSubstrings: function getNodedSubstrings() {\n\t\treturn NodedSegmentString.getNodedSubstrings(this.nodedSegStrings);\n\t},\n\tgetIndex: function getIndex() {\n\t\treturn this.index;\n\t},\n\tadd: function add(segStr) {\n\t\tvar segChains = MonotoneChainBuilder.getChains(segStr.getCoordinates(), segStr);\n\t\tfor (var i = segChains.iterator(); i.hasNext();) {\n\t\t\tvar mc = i.next();\n\t\t\tmc.setId(this.idCounter++);\n\t\t\tthis.index.insert(mc.getEnvelope(), mc);\n\t\t\tthis.monoChains.add(mc);\n\t\t}\n\t},\n\tcomputeNodes: function computeNodes(inputSegStrings) {\n\t\tthis.nodedSegStrings = inputSegStrings;\n\t\tfor (var i = inputSegStrings.iterator(); i.hasNext();) {\n\t\t\tthis.add(i.next());\n\t\t}\n\t\tthis.intersectChains();\n\t},\n\tintersectChains: function intersectChains() {\n\t\tvar overlapAction = new SegmentOverlapAction(this.segInt);\n\t\tfor (var i = this.monoChains.iterator(); i.hasNext();) {\n\t\t\tvar queryChain = i.next();\n\t\t\tvar overlapChains = this.index.query(queryChain.getEnvelope());\n\t\t\tfor (var j = overlapChains.iterator(); j.hasNext();) {\n\t\t\t\tvar testChain = j.next();\n\t\t\t\tif (testChain.getId() > queryChain.getId()) {\n\t\t\t\t\tqueryChain.computeOverlaps(testChain, overlapAction);\n\t\t\t\t\tthis.nOverlaps++;\n\t\t\t\t}\n\t\t\t\tif (this.segInt.isDone()) return null;\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MCIndexNoder;\n\t}\n});\nfunction SegmentOverlapAction() {\n\tMonotoneChainOverlapAction.apply(this);\n\tthis.si = null;\n\tvar si = arguments[0];\n\tthis.si = si;\n}\ninherits(SegmentOverlapAction, MonotoneChainOverlapAction);\nextend(SegmentOverlapAction.prototype, {\n\toverlap: function overlap() {\n\t\tif (arguments.length === 4) {\n\t\t\tvar mc1 = arguments[0],\n\t\t\t    start1 = arguments[1],\n\t\t\t    mc2 = arguments[2],\n\t\t\t    start2 = arguments[3];\n\t\t\tvar ss1 = mc1.getContext();\n\t\t\tvar ss2 = mc2.getContext();\n\t\t\tthis.si.processIntersections(ss1, start1, ss2, start2);\n\t\t} else return MonotoneChainOverlapAction.prototype.overlap.apply(this, arguments);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SegmentOverlapAction;\n\t}\n});\nMCIndexNoder.SegmentOverlapAction = SegmentOverlapAction;\n\nfunction TopologyException() {\n\tthis.pt = null;\n\tif (arguments.length === 1) {\n\t\tvar msg = arguments[0];\n\t\tRuntimeException.call(this, msg);\n\t} else if (arguments.length === 2) {\n\t\tvar _msg = arguments[0],\n\t\t    pt = arguments[1];\n\t\tRuntimeException.call(this, TopologyException.msgWithCoord(_msg, pt));\n\t\tthis.name = 'TopologyException';\n\t\tthis.pt = new Coordinate(pt);\n\t}\n}\ninherits(TopologyException, RuntimeException);\nextend(TopologyException.prototype, {\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this.pt;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn TopologyException;\n\t}\n});\nTopologyException.msgWithCoord = function (msg, pt) {\n\tif (pt !== null) return msg + \" [ \" + pt + \" ]\";\n\treturn msg;\n};\n\nfunction SegmentIntersector() {}\nextend(SegmentIntersector.prototype, {\n\tprocessIntersections: function processIntersections(e0, segIndex0, e1, segIndex1) {},\n\tisDone: function isDone() {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SegmentIntersector;\n\t}\n});\n\nfunction InteriorIntersectionFinder() {\n\tthis.findAllIntersections = false;\n\tthis.isCheckEndSegmentsOnly = false;\n\tthis.li = null;\n\tthis.interiorIntersection = null;\n\tthis.intSegments = null;\n\tthis.intersections = new ArrayList();\n\tthis.intersectionCount = 0;\n\tthis.keepIntersections = true;\n\tvar li = arguments[0];\n\tthis.li = li;\n\tthis.interiorIntersection = null;\n}\nextend(InteriorIntersectionFinder.prototype, {\n\tgetInteriorIntersection: function getInteriorIntersection() {\n\t\treturn this.interiorIntersection;\n\t},\n\tsetCheckEndSegmentsOnly: function setCheckEndSegmentsOnly(isCheckEndSegmentsOnly) {\n\t\tthis.isCheckEndSegmentsOnly = isCheckEndSegmentsOnly;\n\t},\n\tgetIntersectionSegments: function getIntersectionSegments() {\n\t\treturn this.intSegments;\n\t},\n\tcount: function count() {\n\t\treturn this.intersectionCount;\n\t},\n\tgetIntersections: function getIntersections() {\n\t\treturn this.intersections;\n\t},\n\tsetFindAllIntersections: function setFindAllIntersections(findAllIntersections) {\n\t\tthis.findAllIntersections = findAllIntersections;\n\t},\n\tsetKeepIntersections: function setKeepIntersections(keepIntersections) {\n\t\tthis.keepIntersections = keepIntersections;\n\t},\n\tprocessIntersections: function processIntersections(e0, segIndex0, e1, segIndex1) {\n\t\tif (!this.findAllIntersections && this.hasIntersection()) return null;\n\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\tif (this.isCheckEndSegmentsOnly) {\n\t\t\tvar isEndSegPresent = this.isEndSegment(e0, segIndex0) || this.isEndSegment(e1, segIndex1);\n\t\t\tif (!isEndSegPresent) return null;\n\t\t}\n\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\tthis.li.computeIntersection(p00, p01, p10, p11);\n\t\tif (this.li.hasIntersection()) {\n\t\t\tif (this.li.isInteriorIntersection()) {\n\t\t\t\tthis.intSegments = new Array(4).fill(null);\n\t\t\t\tthis.intSegments[0] = p00;\n\t\t\t\tthis.intSegments[1] = p01;\n\t\t\t\tthis.intSegments[2] = p10;\n\t\t\t\tthis.intSegments[3] = p11;\n\t\t\t\tthis.interiorIntersection = this.li.getIntersection(0);\n\t\t\t\tif (this.keepIntersections) this.intersections.add(this.interiorIntersection);\n\t\t\t\tthis.intersectionCount++;\n\t\t\t}\n\t\t}\n\t},\n\tisEndSegment: function isEndSegment(segStr, index) {\n\t\tif (index === 0) return true;\n\t\tif (index >= segStr.size() - 2) return true;\n\t\treturn false;\n\t},\n\thasIntersection: function hasIntersection() {\n\t\treturn this.interiorIntersection !== null;\n\t},\n\tisDone: function isDone() {\n\t\tif (this.findAllIntersections) return false;\n\t\treturn this.interiorIntersection !== null;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [SegmentIntersector];\n\t},\n\tgetClass: function getClass() {\n\t\treturn InteriorIntersectionFinder;\n\t}\n});\nInteriorIntersectionFinder.createAllIntersectionsFinder = function (li) {\n\tvar finder = new InteriorIntersectionFinder(li);\n\tfinder.setFindAllIntersections(true);\n\treturn finder;\n};\nInteriorIntersectionFinder.createAnyIntersectionFinder = function (li) {\n\treturn new InteriorIntersectionFinder(li);\n};\nInteriorIntersectionFinder.createIntersectionCounter = function (li) {\n\tvar finder = new InteriorIntersectionFinder(li);\n\tfinder.setFindAllIntersections(true);\n\tfinder.setKeepIntersections(false);\n\treturn finder;\n};\n\nfunction FastNodingValidator() {\n\tthis.li = new RobustLineIntersector();\n\tthis.segStrings = null;\n\tthis.findAllIntersections = false;\n\tthis.segInt = null;\n\tthis._isValid = true;\n\tvar segStrings = arguments[0];\n\tthis.segStrings = segStrings;\n}\nextend(FastNodingValidator.prototype, {\n\texecute: function execute() {\n\t\tif (this.segInt !== null) return null;\n\t\tthis.checkInteriorIntersections();\n\t},\n\tgetIntersections: function getIntersections() {\n\t\treturn this.segInt.getIntersections();\n\t},\n\tisValid: function isValid() {\n\t\tthis.execute();\n\t\treturn this._isValid;\n\t},\n\tsetFindAllIntersections: function setFindAllIntersections(findAllIntersections) {\n\t\tthis.findAllIntersections = findAllIntersections;\n\t},\n\tcheckInteriorIntersections: function checkInteriorIntersections() {\n\t\tthis._isValid = true;\n\t\tthis.segInt = new InteriorIntersectionFinder(this.li);\n\t\tthis.segInt.setFindAllIntersections(this.findAllIntersections);\n\t\tvar noder = new MCIndexNoder();\n\t\tnoder.setSegmentIntersector(this.segInt);\n\t\tnoder.computeNodes(this.segStrings);\n\t\tif (this.segInt.hasIntersection()) {\n\t\t\tthis._isValid = false;\n\t\t\treturn null;\n\t\t}\n\t},\n\tcheckValid: function checkValid() {\n\t\tthis.execute();\n\t\tif (!this._isValid) throw new TopologyException(this.getErrorMessage(), this.segInt.getInteriorIntersection());\n\t},\n\tgetErrorMessage: function getErrorMessage() {\n\t\tif (this._isValid) return \"no intersections found\";\n\t\tvar intSegs = this.segInt.getIntersectionSegments();\n\t\treturn \"found non-noded intersection between \" + WKTWriter.toLineString(intSegs[0], intSegs[1]) + \" and \" + WKTWriter.toLineString(intSegs[2], intSegs[3]);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn FastNodingValidator;\n\t}\n});\nFastNodingValidator.computeIntersections = function (segStrings) {\n\tvar nv = new FastNodingValidator(segStrings);\n\tnv.setFindAllIntersections(true);\n\tnv.isValid();\n\treturn nv.getIntersections();\n};\n\nfunction EdgeNodingValidator() {\n\tthis.nv = null;\n\tvar edges = arguments[0];\n\tthis.nv = new FastNodingValidator(EdgeNodingValidator.toSegmentStrings(edges));\n}\nextend(EdgeNodingValidator.prototype, {\n\tcheckValid: function checkValid() {\n\t\tthis.nv.checkValid();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EdgeNodingValidator;\n\t}\n});\nEdgeNodingValidator.toSegmentStrings = function (edges) {\n\tvar segStrings = new ArrayList();\n\tfor (var i = edges.iterator(); i.hasNext();) {\n\t\tvar e = i.next();\n\t\tsegStrings.add(new BasicSegmentString(e.getCoordinates(), e));\n\t}\n\treturn segStrings;\n};\nEdgeNodingValidator.checkValid = function (edges) {\n\tvar validator = new EdgeNodingValidator(edges);\n\tvalidator.checkValid();\n};\n\nfunction GeometryCollectionMapper() {\n\tthis.mapOp = null;\n\tvar mapOp = arguments[0];\n\tthis.mapOp = mapOp;\n}\nextend(GeometryCollectionMapper.prototype, {\n\tmap: function map(gc) {\n\t\tvar mapped = new ArrayList();\n\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\tvar g = this.mapOp.map(gc.getGeometryN(i));\n\t\t\tif (!g.isEmpty()) mapped.add(g);\n\t\t}\n\t\treturn gc.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(mapped));\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryCollectionMapper;\n\t}\n});\nGeometryCollectionMapper.map = function (gc, op) {\n\tvar mapper = new GeometryCollectionMapper(op);\n\treturn mapper.map(gc);\n};\n\nfunction Position() {}\nextend(Position.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Position;\n\t}\n});\nPosition.opposite = function (position) {\n\tif (position === Position.LEFT) return Position.RIGHT;\n\tif (position === Position.RIGHT) return Position.LEFT;\n\treturn position;\n};\nPosition.ON = 0;\nPosition.LEFT = 1;\nPosition.RIGHT = 2;\n\nfunction TopologyLocation() {\n\tthis.location = null;\n\tif (arguments.length === 1) {\n\t\tif (arguments[0] instanceof Array) {\n\t\t\tvar location = arguments[0];\n\t\t\tthis.init(location.length);\n\t\t} else if (Number.isInteger(arguments[0])) {\n\t\t\tvar on = arguments[0];\n\t\t\tthis.init(1);\n\t\t\tthis.location[Position.ON] = on;\n\t\t} else if (arguments[0] instanceof TopologyLocation) {\n\t\t\tvar gl = arguments[0];\n\t\t\tthis.init(gl.location.length);\n\t\t\tif (gl !== null) {\n\t\t\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\t\t\tthis.location[i] = gl.location[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (arguments.length === 3) {\n\t\tvar _on = arguments[0],\n\t\t    left = arguments[1],\n\t\t    right = arguments[2];\n\t\tthis.init(3);\n\t\tthis.location[Position.ON] = _on;\n\t\tthis.location[Position.LEFT] = left;\n\t\tthis.location[Position.RIGHT] = right;\n\t}\n}\nextend(TopologyLocation.prototype, {\n\tsetAllLocations: function setAllLocations(locValue) {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tthis.location[i] = locValue;\n\t\t}\n\t},\n\tisNull: function isNull() {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] !== Location.NONE) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tsetAllLocationsIfNull: function setAllLocationsIfNull(locValue) {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] === Location.NONE) this.location[i] = locValue;\n\t\t}\n\t},\n\tisLine: function isLine() {\n\t\treturn this.location.length === 1;\n\t},\n\tmerge: function merge(gl) {\n\t\tif (gl.location.length > this.location.length) {\n\t\t\tvar newLoc = new Array(3).fill(null);\n\t\t\tnewLoc[Position.ON] = this.location[Position.ON];\n\t\t\tnewLoc[Position.LEFT] = Location.NONE;\n\t\t\tnewLoc[Position.RIGHT] = Location.NONE;\n\t\t\tthis.location = newLoc;\n\t\t}\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] === Location.NONE && i < gl.location.length) this.location[i] = gl.location[i];\n\t\t}\n\t},\n\tgetLocations: function getLocations() {\n\t\treturn this.location;\n\t},\n\tflip: function flip() {\n\t\tif (this.location.length <= 1) return null;\n\t\tvar temp = this.location[Position.LEFT];\n\t\tthis.location[Position.LEFT] = this.location[Position.RIGHT];\n\t\tthis.location[Position.RIGHT] = temp;\n\t},\n\ttoString: function toString() {\n\t\tvar buf = new StringBuffer();\n\t\tif (this.location.length > 1) buf.append(Location.toLocationSymbol(this.location[Position.LEFT]));\n\t\tbuf.append(Location.toLocationSymbol(this.location[Position.ON]));\n\t\tif (this.location.length > 1) buf.append(Location.toLocationSymbol(this.location[Position.RIGHT]));\n\t\treturn buf.toString();\n\t},\n\tsetLocations: function setLocations(on, left, right) {\n\t\tthis.location[Position.ON] = on;\n\t\tthis.location[Position.LEFT] = left;\n\t\tthis.location[Position.RIGHT] = right;\n\t},\n\tget: function get(posIndex) {\n\t\tif (posIndex < this.location.length) return this.location[posIndex];\n\t\treturn Location.NONE;\n\t},\n\tisArea: function isArea() {\n\t\treturn this.location.length > 1;\n\t},\n\tisAnyNull: function isAnyNull() {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] === Location.NONE) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tsetLocation: function setLocation() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar locValue = arguments[0];\n\t\t\tthis.setLocation(Position.ON, locValue);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar locIndex = arguments[0],\n\t\t\t    _locValue = arguments[1];\n\t\t\tthis.location[locIndex] = _locValue;\n\t\t}\n\t},\n\tinit: function init(size) {\n\t\tthis.location = new Array(size).fill(null);\n\t\tthis.setAllLocations(Location.NONE);\n\t},\n\tisEqualOnSide: function isEqualOnSide(le, locIndex) {\n\t\treturn this.location[locIndex] === le.location[locIndex];\n\t},\n\tallPositionsEqual: function allPositionsEqual(loc) {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] !== loc) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn TopologyLocation;\n\t}\n});\n\nfunction Label() {\n\tthis.elt = new Array(2).fill(null);\n\tif (arguments.length === 1) {\n\t\tif (Number.isInteger(arguments[0])) {\n\t\t\tvar onLoc = arguments[0];\n\t\t\tthis.elt[0] = new TopologyLocation(onLoc);\n\t\t\tthis.elt[1] = new TopologyLocation(onLoc);\n\t\t} else if (arguments[0] instanceof Label) {\n\t\t\tvar lbl = arguments[0];\n\t\t\tthis.elt[0] = new TopologyLocation(lbl.elt[0]);\n\t\t\tthis.elt[1] = new TopologyLocation(lbl.elt[1]);\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tvar geomIndex = arguments[0],\n\t\t    _onLoc = arguments[1];\n\t\tthis.elt[0] = new TopologyLocation(Location.NONE);\n\t\tthis.elt[1] = new TopologyLocation(Location.NONE);\n\t\tthis.elt[geomIndex].setLocation(_onLoc);\n\t} else if (arguments.length === 3) {\n\t\tvar _onLoc2 = arguments[0],\n\t\t    leftLoc = arguments[1],\n\t\t    rightLoc = arguments[2];\n\t\tthis.elt[0] = new TopologyLocation(_onLoc2, leftLoc, rightLoc);\n\t\tthis.elt[1] = new TopologyLocation(_onLoc2, leftLoc, rightLoc);\n\t} else if (arguments.length === 4) {\n\t\tvar _geomIndex = arguments[0],\n\t\t    _onLoc3 = arguments[1],\n\t\t    _leftLoc = arguments[2],\n\t\t    _rightLoc = arguments[3];\n\t\tthis.elt[0] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n\t\tthis.elt[1] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n\t\tthis.elt[_geomIndex].setLocations(_onLoc3, _leftLoc, _rightLoc);\n\t}\n}\nextend(Label.prototype, {\n\tgetGeometryCount: function getGeometryCount() {\n\t\tvar count = 0;\n\t\tif (!this.elt[0].isNull()) count++;\n\t\tif (!this.elt[1].isNull()) count++;\n\t\treturn count;\n\t},\n\tsetAllLocations: function setAllLocations(geomIndex, location) {\n\t\tthis.elt[geomIndex].setAllLocations(location);\n\t},\n\tisNull: function isNull(geomIndex) {\n\t\treturn this.elt[geomIndex].isNull();\n\t},\n\tsetAllLocationsIfNull: function setAllLocationsIfNull() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar location = arguments[0];\n\t\t\tthis.setAllLocationsIfNull(0, location);\n\t\t\tthis.setAllLocationsIfNull(1, location);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar geomIndex = arguments[0],\n\t\t\t    _location = arguments[1];\n\t\t\tthis.elt[geomIndex].setAllLocationsIfNull(_location);\n\t\t}\n\t},\n\tisLine: function isLine(geomIndex) {\n\t\treturn this.elt[geomIndex].isLine();\n\t},\n\tmerge: function merge(lbl) {\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this.elt[i] === null && lbl.elt[i] !== null) {\n\t\t\t\tthis.elt[i] = new TopologyLocation(lbl.elt[i]);\n\t\t\t} else {\n\t\t\t\tthis.elt[i].merge(lbl.elt[i]);\n\t\t\t}\n\t\t}\n\t},\n\tflip: function flip() {\n\t\tthis.elt[0].flip();\n\t\tthis.elt[1].flip();\n\t},\n\tgetLocation: function getLocation() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar geomIndex = arguments[0];\n\t\t\treturn this.elt[geomIndex].get(Position.ON);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar _geomIndex2 = arguments[0],\n\t\t\t    posIndex = arguments[1];\n\t\t\treturn this.elt[_geomIndex2].get(posIndex);\n\t\t}\n\t},\n\ttoString: function toString() {\n\t\tvar buf = new StringBuffer();\n\t\tif (this.elt[0] !== null) {\n\t\t\tbuf.append(\"A:\");\n\t\t\tbuf.append(this.elt[0].toString());\n\t\t}\n\t\tif (this.elt[1] !== null) {\n\t\t\tbuf.append(\" B:\");\n\t\t\tbuf.append(this.elt[1].toString());\n\t\t}\n\t\treturn buf.toString();\n\t},\n\tisArea: function isArea() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.elt[0].isArea() || this.elt[1].isArea();\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar geomIndex = arguments[0];\n\t\t\treturn this.elt[geomIndex].isArea();\n\t\t}\n\t},\n\tisAnyNull: function isAnyNull(geomIndex) {\n\t\treturn this.elt[geomIndex].isAnyNull();\n\t},\n\tsetLocation: function setLocation() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar geomIndex = arguments[0],\n\t\t\t    location = arguments[1];\n\t\t\tthis.elt[geomIndex].setLocation(Position.ON, location);\n\t\t} else if (arguments.length === 3) {\n\t\t\tvar _geomIndex3 = arguments[0],\n\t\t\t    posIndex = arguments[1],\n\t\t\t    _location2 = arguments[2];\n\t\t\tthis.elt[_geomIndex3].setLocation(posIndex, _location2);\n\t\t}\n\t},\n\tisEqualOnSide: function isEqualOnSide(lbl, side) {\n\t\treturn this.elt[0].isEqualOnSide(lbl.elt[0], side) && this.elt[1].isEqualOnSide(lbl.elt[1], side);\n\t},\n\tallPositionsEqual: function allPositionsEqual(geomIndex, loc) {\n\t\treturn this.elt[geomIndex].allPositionsEqual(loc);\n\t},\n\ttoLine: function toLine(geomIndex) {\n\t\tif (this.elt[geomIndex].isArea()) this.elt[geomIndex] = new TopologyLocation(this.elt[geomIndex].location[0]);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Label;\n\t}\n});\nLabel.toLineLabel = function (label) {\n\tvar lineLabel = new Label(Location.NONE);\n\tfor (var i = 0; i < 2; i++) {\n\t\tlineLabel.setLocation(i, label.getLocation(i));\n\t}\n\treturn lineLabel;\n};\n\nfunction EdgeRing() {\n\tthis.startDe = null;\n\tthis.maxNodeDegree = -1;\n\tthis.edges = new ArrayList();\n\tthis.pts = new ArrayList();\n\tthis.label = new Label(Location.NONE);\n\tthis.ring = null;\n\tthis._isHole = null;\n\tthis.shell = null;\n\tthis.holes = new ArrayList();\n\tthis.geometryFactory = null;\n\tvar start = arguments[0],\n\t    geometryFactory = arguments[1];\n\tthis.geometryFactory = geometryFactory;\n\tthis.computePoints(start);\n\tthis.computeRing();\n}\nextend(EdgeRing.prototype, {\n\tcomputeRing: function computeRing() {\n\t\tif (this.ring !== null) return null;\n\t\tvar coord = new Array(this.pts.size()).fill(null);\n\t\tfor (var i = 0; i < this.pts.size(); i++) {\n\t\t\tcoord[i] = this.pts.get(i);\n\t\t}\n\t\tthis.ring = this.geometryFactory.createLinearRing(coord);\n\t\tthis._isHole = CGAlgorithms.isCCW(this.ring.getCoordinates());\n\t},\n\tisIsolated: function isIsolated() {\n\t\treturn this.label.getGeometryCount() === 1;\n\t},\n\tcomputePoints: function computePoints(start) {\n\t\tthis.startDe = start;\n\t\tvar de = start;\n\t\tvar isFirstEdge = true;\n\t\tdo {\n\t\t\tif (de === null) throw new TopologyException(\"Found null DirectedEdge\");\n\t\t\tif (de.getEdgeRing() === this) throw new TopologyException(\"Directed Edge visited twice during ring-building at \" + de.getCoordinate());\n\t\t\tthis.edges.add(de);\n\t\t\tvar label = de.getLabel();\n\t\t\tAssert.isTrue(label.isArea());\n\t\t\tthis.mergeLabel(label);\n\t\t\tthis.addPoints(de.getEdge(), de.isForward(), isFirstEdge);\n\t\t\tisFirstEdge = false;\n\t\t\tthis.setEdgeRing(de, this);\n\t\t\tde = this.getNext(de);\n\t\t} while (de !== this.startDe);\n\t},\n\tgetLinearRing: function getLinearRing() {\n\t\treturn this.ring;\n\t},\n\tgetCoordinate: function getCoordinate(i) {\n\t\treturn this.pts.get(i);\n\t},\n\tcomputeMaxNodeDegree: function computeMaxNodeDegree() {\n\t\tthis.maxNodeDegree = 0;\n\t\tvar de = this.startDe;\n\t\tdo {\n\t\t\tvar node = de.getNode();\n\t\t\tvar degree = node.getEdges().getOutgoingDegree(this);\n\t\t\tif (degree > this.maxNodeDegree) this.maxNodeDegree = degree;\n\t\t\tde = this.getNext(de);\n\t\t} while (de !== this.startDe);\n\t\tthis.maxNodeDegree *= 2;\n\t},\n\taddPoints: function addPoints(edge, isForward, isFirstEdge) {\n\t\tvar edgePts = edge.getCoordinates();\n\t\tif (isForward) {\n\t\t\tvar startIndex = 1;\n\t\t\tif (isFirstEdge) startIndex = 0;\n\t\t\tfor (var i = startIndex; i < edgePts.length; i++) {\n\t\t\t\tthis.pts.add(edgePts[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tvar startIndex = edgePts.length - 2;\n\t\t\tif (isFirstEdge) startIndex = edgePts.length - 1;\n\t\t\tfor (var i = startIndex; i >= 0; i--) {\n\t\t\t\tthis.pts.add(edgePts[i]);\n\t\t\t}\n\t\t}\n\t},\n\tisHole: function isHole() {\n\t\treturn this._isHole;\n\t},\n\tsetInResult: function setInResult() {\n\t\tvar de = this.startDe;\n\t\tdo {\n\t\t\tde.getEdge().setInResult(true);\n\t\t\tde = de.getNext();\n\t\t} while (de !== this.startDe);\n\t},\n\tcontainsPoint: function containsPoint(p) {\n\t\tvar shell = this.getLinearRing();\n\t\tvar env = shell.getEnvelopeInternal();\n\t\tif (!env.contains(p)) return false;\n\t\tif (!CGAlgorithms.isPointInRing(p, shell.getCoordinates())) return false;\n\t\tfor (var i = this.holes.iterator(); i.hasNext();) {\n\t\t\tvar hole = i.next();\n\t\t\tif (hole.containsPoint(p)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\taddHole: function addHole(ring) {\n\t\tthis.holes.add(ring);\n\t},\n\tisShell: function isShell() {\n\t\treturn this.shell === null;\n\t},\n\tgetLabel: function getLabel() {\n\t\treturn this.label;\n\t},\n\tgetEdges: function getEdges() {\n\t\treturn this.edges;\n\t},\n\tgetMaxNodeDegree: function getMaxNodeDegree() {\n\t\tif (this.maxNodeDegree < 0) this.computeMaxNodeDegree();\n\t\treturn this.maxNodeDegree;\n\t},\n\tgetShell: function getShell() {\n\t\treturn this.shell;\n\t},\n\tmergeLabel: function mergeLabel() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar deLabel = arguments[0];\n\t\t\tthis.mergeLabel(deLabel, 0);\n\t\t\tthis.mergeLabel(deLabel, 1);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar _deLabel = arguments[0],\n\t\t\t    geomIndex = arguments[1];\n\t\t\tvar loc = _deLabel.getLocation(geomIndex, Position.RIGHT);\n\t\t\tif (loc === Location.NONE) return null;\n\t\t\tif (this.label.getLocation(geomIndex) === Location.NONE) {\n\t\t\t\tthis.label.setLocation(geomIndex, loc);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tsetShell: function setShell(shell) {\n\t\tthis.shell = shell;\n\t\tif (shell !== null) shell.addHole(this);\n\t},\n\ttoPolygon: function toPolygon(geometryFactory) {\n\t\tvar holeLR = new Array(this.holes.size()).fill(null);\n\t\tfor (var i = 0; i < this.holes.size(); i++) {\n\t\t\tholeLR[i] = this.holes.get(i).getLinearRing();\n\t\t}\n\t\tvar poly = geometryFactory.createPolygon(this.getLinearRing(), holeLR);\n\t\treturn poly;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EdgeRing;\n\t}\n});\n\nfunction MinimalEdgeRing() {\n\tvar start = arguments[0],\n\t    geometryFactory = arguments[1];\n\tEdgeRing.call(this, start, geometryFactory);\n}\ninherits(MinimalEdgeRing, EdgeRing);\nextend(MinimalEdgeRing.prototype, {\n\tsetEdgeRing: function setEdgeRing(de, er) {\n\t\tde.setMinEdgeRing(er);\n\t},\n\tgetNext: function getNext(de) {\n\t\treturn de.getNextMin();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MinimalEdgeRing;\n\t}\n});\n\nfunction MaximalEdgeRing() {\n\tvar start = arguments[0],\n\t    geometryFactory = arguments[1];\n\tEdgeRing.call(this, start, geometryFactory);\n}\ninherits(MaximalEdgeRing, EdgeRing);\nextend(MaximalEdgeRing.prototype, {\n\tbuildMinimalRings: function buildMinimalRings() {\n\t\tvar minEdgeRings = new ArrayList();\n\t\tvar de = this.startDe;\n\t\tdo {\n\t\t\tif (de.getMinEdgeRing() === null) {\n\t\t\t\tvar minEr = new MinimalEdgeRing(de, this.geometryFactory);\n\t\t\t\tminEdgeRings.add(minEr);\n\t\t\t}\n\t\t\tde = de.getNext();\n\t\t} while (de !== this.startDe);\n\t\treturn minEdgeRings;\n\t},\n\tsetEdgeRing: function setEdgeRing(de, er) {\n\t\tde.setEdgeRing(er);\n\t},\n\tlinkDirectedEdgesForMinimalEdgeRings: function linkDirectedEdgesForMinimalEdgeRings() {\n\t\tvar de = this.startDe;\n\t\tdo {\n\t\t\tvar node = de.getNode();\n\t\t\tnode.getEdges().linkMinimalDirectedEdges(this);\n\t\t\tde = de.getNext();\n\t\t} while (de !== this.startDe);\n\t},\n\tgetNext: function getNext(de) {\n\t\treturn de.getNext();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MaximalEdgeRing;\n\t}\n});\n\nfunction GraphComponent() {\n\tthis.label = null;\n\tthis._isInResult = false;\n\tthis._isCovered = false;\n\tthis._isCoveredSet = false;\n\tthis._isVisited = false;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tvar label = arguments[0];\n\t\tthis.label = label;\n\t}\n}\nextend(GraphComponent.prototype, {\n\tsetVisited: function setVisited(isVisited) {\n\t\tthis._isVisited = isVisited;\n\t},\n\tsetInResult: function setInResult(isInResult) {\n\t\tthis._isInResult = isInResult;\n\t},\n\tisCovered: function isCovered() {\n\t\treturn this._isCovered;\n\t},\n\tisCoveredSet: function isCoveredSet() {\n\t\treturn this._isCoveredSet;\n\t},\n\tsetLabel: function setLabel(label) {\n\t\tthis.label = label;\n\t},\n\tgetLabel: function getLabel() {\n\t\treturn this.label;\n\t},\n\tsetCovered: function setCovered(isCovered) {\n\t\tthis._isCovered = isCovered;\n\t\tthis._isCoveredSet = true;\n\t},\n\tupdateIM: function updateIM(im) {\n\t\tAssert.isTrue(this.label.getGeometryCount() >= 2, \"found partial label\");\n\t\tthis.computeIM(im);\n\t},\n\tisInResult: function isInResult() {\n\t\treturn this._isInResult;\n\t},\n\tisVisited: function isVisited() {\n\t\treturn this._isVisited;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GraphComponent;\n\t}\n});\n\nfunction Node() {\n\tGraphComponent.apply(this);\n\tthis.coord = null;\n\tthis.edges = null;\n\tvar coord = arguments[0],\n\t    edges = arguments[1];\n\tthis.coord = coord;\n\tthis.edges = edges;\n\tthis.label = new Label(0, Location.NONE);\n}\ninherits(Node, GraphComponent);\nextend(Node.prototype, {\n\tisIncidentEdgeInResult: function isIncidentEdgeInResult() {\n\t\tfor (var it = this.getEdges().getEdges().iterator(); it.hasNext();) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.getEdge().isInResult()) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tisIsolated: function isIsolated() {\n\t\treturn this.label.getGeometryCount() === 1;\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this.coord;\n\t},\n\tprint: function print(out) {\n\t\tout.println(\"node \" + this.coord + \" lbl: \" + this.label);\n\t},\n\tcomputeIM: function computeIM(im) {},\n\tcomputeMergedLocation: function computeMergedLocation(label2, eltIndex) {\n\t\tvar loc = Location.NONE;\n\t\tloc = this.label.getLocation(eltIndex);\n\t\tif (!label2.isNull(eltIndex)) {\n\t\t\tvar nLoc = label2.getLocation(eltIndex);\n\t\t\tif (loc !== Location.BOUNDARY) loc = nLoc;\n\t\t}\n\t\treturn loc;\n\t},\n\tsetLabel: function setLabel() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar argIndex = arguments[0],\n\t\t\t    onLocation = arguments[1];\n\t\t\tif (this.label === null) {\n\t\t\t\tthis.label = new Label(argIndex, onLocation);\n\t\t\t} else this.label.setLocation(argIndex, onLocation);\n\t\t} else return GraphComponent.prototype.setLabel.apply(this, arguments);\n\t},\n\tgetEdges: function getEdges() {\n\t\treturn this.edges;\n\t},\n\tmergeLabel: function mergeLabel() {\n\t\tif (arguments[0] instanceof Node) {\n\t\t\tvar n = arguments[0];\n\t\t\tthis.mergeLabel(n.label);\n\t\t} else if (arguments[0] instanceof Label) {\n\t\t\tvar label2 = arguments[0];\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tvar loc = this.computeMergedLocation(label2, i);\n\t\t\t\tvar thisLoc = this.label.getLocation(i);\n\t\t\t\tif (thisLoc === Location.NONE) this.label.setLocation(i, loc);\n\t\t\t}\n\t\t}\n\t},\n\tadd: function add(e) {\n\t\tthis.edges.insert(e);\n\t\te.setNode(this);\n\t},\n\tsetLabelBoundary: function setLabelBoundary(argIndex) {\n\t\tif (this.label === null) return null;\n\t\tvar loc = Location.NONE;\n\t\tif (this.label !== null) loc = this.label.getLocation(argIndex);\n\t\tvar newLoc = null;\n\t\tswitch (loc) {\n\t\t\tcase Location.BOUNDARY:\n\t\t\t\tnewLoc = Location.INTERIOR;\n\t\t\t\tbreak;\n\t\t\tcase Location.INTERIOR:\n\t\t\t\tnewLoc = Location.BOUNDARY;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tnewLoc = Location.BOUNDARY;\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.label.setLocation(argIndex, newLoc);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Node;\n\t}\n});\n\nfunction NodeMap() {\n\tthis.nodeMap = new TreeMap();\n\tthis.nodeFact = null;\n\tvar nodeFact = arguments[0];\n\tthis.nodeFact = nodeFact;\n}\nextend(NodeMap.prototype, {\n\tfind: function find(coord) {\n\t\treturn this.nodeMap.get(coord);\n\t},\n\taddNode: function addNode() {\n\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\tvar coord = arguments[0];\n\t\t\tvar node = this.nodeMap.get(coord);\n\t\t\tif (node === null) {\n\t\t\t\tnode = this.nodeFact.createNode(coord);\n\t\t\t\tthis.nodeMap.put(coord, node);\n\t\t\t}\n\t\t\treturn node;\n\t\t} else if (arguments[0] instanceof Node) {\n\t\t\tvar n = arguments[0];\n\t\t\tvar node = this.nodeMap.get(n.getCoordinate());\n\t\t\tif (node === null) {\n\t\t\t\tthis.nodeMap.put(n.getCoordinate(), n);\n\t\t\t\treturn n;\n\t\t\t}\n\t\t\tnode.mergeLabel(n);\n\t\t\treturn node;\n\t\t}\n\t},\n\tprint: function print(out) {\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar n = it.next();\n\t\t\tn.print(out);\n\t\t}\n\t},\n\titerator: function iterator() {\n\t\treturn this.nodeMap.values().iterator();\n\t},\n\tvalues: function values() {\n\t\treturn this.nodeMap.values();\n\t},\n\tgetBoundaryNodes: function getBoundaryNodes(geomIndex) {\n\t\tvar bdyNodes = new ArrayList();\n\t\tfor (var i = this.iterator(); i.hasNext();) {\n\t\t\tvar node = i.next();\n\t\t\tif (node.getLabel().getLocation(geomIndex) === Location.BOUNDARY) bdyNodes.add(node);\n\t\t}\n\t\treturn bdyNodes;\n\t},\n\tadd: function add(e) {\n\t\tvar p = e.getCoordinate();\n\t\tvar n = this.addNode(p);\n\t\tn.add(e);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn NodeMap;\n\t}\n});\n\nfunction EdgeEnd() {\n\tthis.edge = null;\n\tthis.label = null;\n\tthis.node = null;\n\tthis.p0 = null;\n\tthis.p1 = null;\n\tthis.dx = null;\n\tthis.dy = null;\n\tthis.quadrant = null;\n\tif (arguments.length === 1) {\n\t\tvar edge = arguments[0];\n\t\tthis.edge = edge;\n\t} else if (arguments.length === 3) {\n\t\tvar _edge = arguments[0],\n\t\t    p0 = arguments[1],\n\t\t    p1 = arguments[2];\n\t\tEdgeEnd.call(this, _edge, p0, p1, null);\n\t} else if (arguments.length === 4) {\n\t\tvar _edge2 = arguments[0],\n\t\t    _p = arguments[1],\n\t\t    _p2 = arguments[2],\n\t\t    label = arguments[3];\n\t\tEdgeEnd.call(this, _edge2);\n\t\tthis.init(_p, _p2);\n\t\tthis.label = label;\n\t}\n}\nextend(EdgeEnd.prototype, {\n\tcompareDirection: function compareDirection(e) {\n\t\tif (this.dx === e.dx && this.dy === e.dy) return 0;\n\t\tif (this.quadrant > e.quadrant) return 1;\n\t\tif (this.quadrant < e.quadrant) return -1;\n\t\treturn CGAlgorithms.computeOrientation(e.p0, e.p1, this.p1);\n\t},\n\tgetDy: function getDy() {\n\t\treturn this.dy;\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this.p0;\n\t},\n\tsetNode: function setNode(node) {\n\t\tthis.node = node;\n\t},\n\tprint: function print(out) {\n\t\tvar angle = Math.atan2(this.dy, this.dx);\n\t\tvar className = this.getClass().getName();\n\t\tvar lastDotPos = className.lastIndexOf('.');\n\t\tvar name = className.substring(lastDotPos + 1);\n\t\tout.print(\"  \" + name + \": \" + this.p0 + \" - \" + this.p1 + \" \" + this.quadrant + \":\" + angle + \"   \" + this.label);\n\t},\n\tcompareTo: function compareTo(obj) {\n\t\tvar e = obj;\n\t\treturn this.compareDirection(e);\n\t},\n\tgetDirectedCoordinate: function getDirectedCoordinate() {\n\t\treturn this.p1;\n\t},\n\tgetDx: function getDx() {\n\t\treturn this.dx;\n\t},\n\tgetLabel: function getLabel() {\n\t\treturn this.label;\n\t},\n\tgetEdge: function getEdge() {\n\t\treturn this.edge;\n\t},\n\tgetQuadrant: function getQuadrant() {\n\t\treturn this.quadrant;\n\t},\n\tgetNode: function getNode() {\n\t\treturn this.node;\n\t},\n\ttoString: function toString() {\n\t\tvar angle = Math.atan2(this.dy, this.dx);\n\t\tvar className = this.getClass().getName();\n\t\tvar lastDotPos = className.lastIndexOf('.');\n\t\tvar name = className.substring(lastDotPos + 1);\n\t\treturn \"  \" + name + \": \" + this.p0 + \" - \" + this.p1 + \" \" + this.quadrant + \":\" + angle + \"   \" + this.label;\n\t},\n\tcomputeLabel: function computeLabel(boundaryNodeRule) {},\n\tinit: function init(p0, p1) {\n\t\tthis.p0 = p0;\n\t\tthis.p1 = p1;\n\t\tthis.dx = p1.x - p0.x;\n\t\tthis.dy = p1.y - p0.y;\n\t\tthis.quadrant = Quadrant.quadrant(this.dx, this.dy);\n\t\tAssert.isTrue(!(this.dx === 0 && this.dy === 0), \"EdgeEnd with identical endpoints found\");\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EdgeEnd;\n\t}\n});\n\nfunction DirectedEdge() {\n\tthis._isForward = null;\n\tthis._isInResult = false;\n\tthis._isVisited = false;\n\tthis.sym = null;\n\tthis.next = null;\n\tthis.nextMin = null;\n\tthis.edgeRing = null;\n\tthis.minEdgeRing = null;\n\tthis.depth = [0, -999, -999];\n\tvar edge = arguments[0],\n\t    isForward = arguments[1];\n\tEdgeEnd.call(this, edge);\n\tthis._isForward = isForward;\n\tif (isForward) {\n\t\tthis.init(edge.getCoordinate(0), edge.getCoordinate(1));\n\t} else {\n\t\tvar n = edge.getNumPoints() - 1;\n\t\tthis.init(edge.getCoordinate(n), edge.getCoordinate(n - 1));\n\t}\n\tthis.computeDirectedLabel();\n}\ninherits(DirectedEdge, EdgeEnd);\nextend(DirectedEdge.prototype, {\n\tgetNextMin: function getNextMin() {\n\t\treturn this.nextMin;\n\t},\n\tgetDepth: function getDepth(position) {\n\t\treturn this.depth[position];\n\t},\n\tsetVisited: function setVisited(isVisited) {\n\t\tthis._isVisited = isVisited;\n\t},\n\tcomputeDirectedLabel: function computeDirectedLabel() {\n\t\tthis.label = new Label(this.edge.getLabel());\n\t\tif (!this._isForward) this.label.flip();\n\t},\n\tgetNext: function getNext() {\n\t\treturn this.next;\n\t},\n\tsetDepth: function setDepth(position, depthVal) {\n\t\tif (this.depth[position] !== -999) {\n\t\t\tif (this.depth[position] !== depthVal) throw new TopologyException(\"assigned depths do not match\", this.getCoordinate());\n\t\t}\n\t\tthis.depth[position] = depthVal;\n\t},\n\tisInteriorAreaEdge: function isInteriorAreaEdge() {\n\t\tvar isInteriorAreaEdge = true;\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (!(this.label.isArea(i) && this.label.getLocation(i, Position.LEFT) === Location.INTERIOR && this.label.getLocation(i, Position.RIGHT) === Location.INTERIOR)) {\n\t\t\t\tisInteriorAreaEdge = false;\n\t\t\t}\n\t\t}\n\t\treturn isInteriorAreaEdge;\n\t},\n\tsetNextMin: function setNextMin(nextMin) {\n\t\tthis.nextMin = nextMin;\n\t},\n\tprint: function print(out) {\n\t\tEdgeEnd.prototype.print.call(this, out);\n\t\tout.print(\" \" + this.depth[Position.LEFT] + \"/\" + this.depth[Position.RIGHT]);\n\t\tout.print(\" (\" + this.getDepthDelta() + \")\");\n\t\tif (this._isInResult) out.print(\" inResult\");\n\t},\n\tsetMinEdgeRing: function setMinEdgeRing(minEdgeRing) {\n\t\tthis.minEdgeRing = minEdgeRing;\n\t},\n\tisLineEdge: function isLineEdge() {\n\t\tvar isLine = this.label.isLine(0) || this.label.isLine(1);\n\t\tvar isExteriorIfArea0 = !this.label.isArea(0) || this.label.allPositionsEqual(0, Location.EXTERIOR);\n\t\tvar isExteriorIfArea1 = !this.label.isArea(1) || this.label.allPositionsEqual(1, Location.EXTERIOR);\n\t\treturn isLine && isExteriorIfArea0 && isExteriorIfArea1;\n\t},\n\tsetEdgeRing: function setEdgeRing(edgeRing) {\n\t\tthis.edgeRing = edgeRing;\n\t},\n\tgetMinEdgeRing: function getMinEdgeRing() {\n\t\treturn this.minEdgeRing;\n\t},\n\tgetDepthDelta: function getDepthDelta() {\n\t\tvar depthDelta = this.edge.getDepthDelta();\n\t\tif (!this._isForward) depthDelta = -depthDelta;\n\t\treturn depthDelta;\n\t},\n\tsetInResult: function setInResult(isInResult) {\n\t\tthis._isInResult = isInResult;\n\t},\n\tgetSym: function getSym() {\n\t\treturn this.sym;\n\t},\n\tisForward: function isForward() {\n\t\treturn this._isForward;\n\t},\n\tgetEdge: function getEdge() {\n\t\treturn this.edge;\n\t},\n\tprintEdge: function printEdge(out) {\n\t\tthis.print(out);\n\t\tout.print(\" \");\n\t\tif (this._isForward) this.edge.print(out);else this.edge.printReverse(out);\n\t},\n\tsetSym: function setSym(de) {\n\t\tthis.sym = de;\n\t},\n\tsetVisitedEdge: function setVisitedEdge(isVisited) {\n\t\tthis.setVisited(isVisited);\n\t\tthis.sym.setVisited(isVisited);\n\t},\n\tsetEdgeDepths: function setEdgeDepths(position, depth) {\n\t\tvar depthDelta = this.getEdge().getDepthDelta();\n\t\tif (!this._isForward) depthDelta = -depthDelta;\n\t\tvar directionFactor = 1;\n\t\tif (position === Position.LEFT) directionFactor = -1;\n\t\tvar oppositePos = Position.opposite(position);\n\t\tvar delta = depthDelta * directionFactor;\n\t\tvar oppositeDepth = depth + delta;\n\t\tthis.setDepth(position, depth);\n\t\tthis.setDepth(oppositePos, oppositeDepth);\n\t},\n\tgetEdgeRing: function getEdgeRing() {\n\t\treturn this.edgeRing;\n\t},\n\tisInResult: function isInResult() {\n\t\treturn this._isInResult;\n\t},\n\tsetNext: function setNext(next) {\n\t\tthis.next = next;\n\t},\n\tisVisited: function isVisited() {\n\t\treturn this._isVisited;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DirectedEdge;\n\t}\n});\nDirectedEdge.depthFactor = function (currLocation, nextLocation) {\n\tif (currLocation === Location.EXTERIOR && nextLocation === Location.INTERIOR) return 1;else if (currLocation === Location.INTERIOR && nextLocation === Location.EXTERIOR) return -1;\n\treturn 0;\n};\n\nfunction NodeFactory() {}\nextend(NodeFactory.prototype, {\n\tcreateNode: function createNode(coord) {\n\t\treturn new Node(coord, null);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn NodeFactory;\n\t}\n});\n\nfunction PlanarGraph() {\n\tthis.edges = new ArrayList();\n\tthis.nodes = null;\n\tthis.edgeEndList = new ArrayList();\n\tif (arguments.length === 0) {\n\t\tthis.nodes = new NodeMap(new NodeFactory());\n\t} else if (arguments.length === 1) {\n\t\tvar nodeFact = arguments[0];\n\t\tthis.nodes = new NodeMap(nodeFact);\n\t}\n}\nextend(PlanarGraph.prototype, {\n\tprintEdges: function printEdges(out) {\n\t\tout.println(\"Edges:\");\n\t\tfor (var i = 0; i < this.edges.size(); i++) {\n\t\t\tout.println(\"edge \" + i + \":\");\n\t\t\tvar e = this.edges.get(i);\n\t\t\te.print(out);\n\t\t\te.eiList.print(out);\n\t\t}\n\t},\n\tfind: function find(coord) {\n\t\treturn this.nodes.find(coord);\n\t},\n\taddNode: function addNode() {\n\t\tif (arguments[0] instanceof Node) {\n\t\t\tvar node = arguments[0];\n\t\t\treturn this.nodes.addNode(node);\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tvar coord = arguments[0];\n\t\t\treturn this.nodes.addNode(coord);\n\t\t}\n\t},\n\tgetNodeIterator: function getNodeIterator() {\n\t\treturn this.nodes.iterator();\n\t},\n\tlinkResultDirectedEdges: function linkResultDirectedEdges() {\n\t\tfor (var nodeit = this.nodes.iterator(); nodeit.hasNext();) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().linkResultDirectedEdges();\n\t\t}\n\t},\n\tdebugPrintln: function debugPrintln(o) {\n\t\tSystem.out.println(o);\n\t},\n\tisBoundaryNode: function isBoundaryNode(geomIndex, coord) {\n\t\tvar node = this.nodes.find(coord);\n\t\tif (node === null) return false;\n\t\tvar label = node.getLabel();\n\t\tif (label !== null && label.getLocation(geomIndex) === Location.BOUNDARY) return true;\n\t\treturn false;\n\t},\n\tlinkAllDirectedEdges: function linkAllDirectedEdges() {\n\t\tfor (var nodeit = this.nodes.iterator(); nodeit.hasNext();) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().linkAllDirectedEdges();\n\t\t}\n\t},\n\tmatchInSameDirection: function matchInSameDirection(p0, p1, ep0, ep1) {\n\t\tif (!p0.equals(ep0)) return false;\n\t\tif (CGAlgorithms.computeOrientation(p0, p1, ep1) === CGAlgorithms.COLLINEAR && Quadrant.quadrant(p0, p1) === Quadrant.quadrant(ep0, ep1)) return true;\n\t\treturn false;\n\t},\n\tgetEdgeEnds: function getEdgeEnds() {\n\t\treturn this.edgeEndList;\n\t},\n\tdebugPrint: function debugPrint(o) {\n\t\tSystem.out.print(o);\n\t},\n\tgetEdgeIterator: function getEdgeIterator() {\n\t\treturn this.edges.iterator();\n\t},\n\tfindEdgeInSameDirection: function findEdgeInSameDirection(p0, p1) {\n\t\tfor (var i = 0; i < this.edges.size(); i++) {\n\t\t\tvar e = this.edges.get(i);\n\t\t\tvar eCoord = e.getCoordinates();\n\t\t\tif (this.matchInSameDirection(p0, p1, eCoord[0], eCoord[1])) return e;\n\t\t\tif (this.matchInSameDirection(p0, p1, eCoord[eCoord.length - 1], eCoord[eCoord.length - 2])) return e;\n\t\t}\n\t\treturn null;\n\t},\n\tinsertEdge: function insertEdge(e) {\n\t\tthis.edges.add(e);\n\t},\n\tfindEdgeEnd: function findEdgeEnd(e) {\n\t\tfor (var i = this.getEdgeEnds().iterator(); i.hasNext();) {\n\t\t\tvar ee = i.next();\n\t\t\tif (ee.getEdge() === e) return ee;\n\t\t}\n\t\treturn null;\n\t},\n\taddEdges: function addEdges(edgesToAdd) {\n\t\tfor (var it = edgesToAdd.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\tthis.edges.add(e);\n\t\t\tvar de1 = new DirectedEdge(e, true);\n\t\t\tvar de2 = new DirectedEdge(e, false);\n\t\t\tde1.setSym(de2);\n\t\t\tde2.setSym(de1);\n\t\t\tthis.add(de1);\n\t\t\tthis.add(de2);\n\t\t}\n\t},\n\tadd: function add(e) {\n\t\tthis.nodes.add(e);\n\t\tthis.edgeEndList.add(e);\n\t},\n\tgetNodes: function getNodes() {\n\t\treturn this.nodes.values();\n\t},\n\tfindEdge: function findEdge(p0, p1) {\n\t\tfor (var i = 0; i < this.edges.size(); i++) {\n\t\t\tvar e = this.edges.get(i);\n\t\t\tvar eCoord = e.getCoordinates();\n\t\t\tif (p0.equals(eCoord[0]) && p1.equals(eCoord[1])) return e;\n\t\t}\n\t\treturn null;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PlanarGraph;\n\t}\n});\nPlanarGraph.linkResultDirectedEdges = function (nodes) {\n\tfor (var nodeit = nodes.iterator(); nodeit.hasNext();) {\n\t\tvar node = nodeit.next();\n\t\tnode.getEdges().linkResultDirectedEdges();\n\t}\n};\n\nfunction PolygonBuilder() {\n\tthis.geometryFactory = null;\n\tthis.shellList = new ArrayList();\n\tvar geometryFactory = arguments[0];\n\tthis.geometryFactory = geometryFactory;\n}\nextend(PolygonBuilder.prototype, {\n\tsortShellsAndHoles: function sortShellsAndHoles(edgeRings, shellList, freeHoleList) {\n\t\tfor (var it = edgeRings.iterator(); it.hasNext();) {\n\t\t\tvar er = it.next();\n\t\t\tif (er.isHole()) {\n\t\t\t\tfreeHoleList.add(er);\n\t\t\t} else {\n\t\t\t\tshellList.add(er);\n\t\t\t}\n\t\t}\n\t},\n\tcomputePolygons: function computePolygons(shellList) {\n\t\tvar resultPolyList = new ArrayList();\n\t\tfor (var it = shellList.iterator(); it.hasNext();) {\n\t\t\tvar er = it.next();\n\t\t\tvar poly = er.toPolygon(this.geometryFactory);\n\t\t\tresultPolyList.add(poly);\n\t\t}\n\t\treturn resultPolyList;\n\t},\n\tplaceFreeHoles: function placeFreeHoles(shellList, freeHoleList) {\n\t\tfor (var it = freeHoleList.iterator(); it.hasNext();) {\n\t\t\tvar hole = it.next();\n\t\t\tif (hole.getShell() === null) {\n\t\t\t\tvar shell = this.findEdgeRingContaining(hole, shellList);\n\t\t\t\tif (shell === null) throw new TopologyException(\"unable to assign hole to a shell\", hole.getCoordinate(0));\n\t\t\t\thole.setShell(shell);\n\t\t\t}\n\t\t}\n\t},\n\tbuildMinimalEdgeRings: function buildMinimalEdgeRings(maxEdgeRings, shellList, freeHoleList) {\n\t\tvar edgeRings = new ArrayList();\n\t\tfor (var it = maxEdgeRings.iterator(); it.hasNext();) {\n\t\t\tvar er = it.next();\n\t\t\tif (er.getMaxNodeDegree() > 2) {\n\t\t\t\ter.linkDirectedEdgesForMinimalEdgeRings();\n\t\t\t\tvar minEdgeRings = er.buildMinimalRings();\n\t\t\t\tvar shell = this.findShell(minEdgeRings);\n\t\t\t\tif (shell !== null) {\n\t\t\t\t\tthis.placePolygonHoles(shell, minEdgeRings);\n\t\t\t\t\tshellList.add(shell);\n\t\t\t\t} else {\n\t\t\t\t\tfreeHoleList.addAll(minEdgeRings);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tedgeRings.add(er);\n\t\t\t}\n\t\t}\n\t\treturn edgeRings;\n\t},\n\tcontainsPoint: function containsPoint(p) {\n\t\tfor (var it = this.shellList.iterator(); it.hasNext();) {\n\t\t\tvar er = it.next();\n\t\t\tif (er.containsPoint(p)) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tbuildMaximalEdgeRings: function buildMaximalEdgeRings(dirEdges) {\n\t\tvar maxEdgeRings = new ArrayList();\n\t\tfor (var it = dirEdges.iterator(); it.hasNext();) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.isInResult() && de.getLabel().isArea()) {\n\t\t\t\tif (de.getEdgeRing() === null) {\n\t\t\t\t\tvar er = new MaximalEdgeRing(de, this.geometryFactory);\n\t\t\t\t\tmaxEdgeRings.add(er);\n\t\t\t\t\ter.setInResult();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn maxEdgeRings;\n\t},\n\tplacePolygonHoles: function placePolygonHoles(shell, minEdgeRings) {\n\t\tfor (var it = minEdgeRings.iterator(); it.hasNext();) {\n\t\t\tvar er = it.next();\n\t\t\tif (er.isHole()) {\n\t\t\t\ter.setShell(shell);\n\t\t\t}\n\t\t}\n\t},\n\tgetPolygons: function getPolygons() {\n\t\tvar resultPolyList = this.computePolygons(this.shellList);\n\t\treturn resultPolyList;\n\t},\n\tfindEdgeRingContaining: function findEdgeRingContaining(testEr, shellList) {\n\t\tvar testRing = testEr.getLinearRing();\n\t\tvar testEnv = testRing.getEnvelopeInternal();\n\t\tvar testPt = testRing.getCoordinateN(0);\n\t\tvar minShell = null;\n\t\tvar minEnv = null;\n\t\tfor (var it = shellList.iterator(); it.hasNext();) {\n\t\t\tvar tryShell = it.next();\n\t\t\tvar tryRing = tryShell.getLinearRing();\n\t\t\tvar tryEnv = tryRing.getEnvelopeInternal();\n\t\t\tif (minShell !== null) minEnv = minShell.getLinearRing().getEnvelopeInternal();\n\t\t\tvar isContained = false;\n\t\t\tif (tryEnv.contains(testEnv) && CGAlgorithms.isPointInRing(testPt, tryRing.getCoordinates())) isContained = true;\n\t\t\tif (isContained) {\n\t\t\t\tif (minShell === null || minEnv.contains(tryEnv)) {\n\t\t\t\t\tminShell = tryShell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn minShell;\n\t},\n\tfindShell: function findShell(minEdgeRings) {\n\t\tvar shellCount = 0;\n\t\tvar shell = null;\n\t\tfor (var it = minEdgeRings.iterator(); it.hasNext();) {\n\t\t\tvar er = it.next();\n\t\t\tif (!er.isHole()) {\n\t\t\t\tshell = er;\n\t\t\t\tshellCount++;\n\t\t\t}\n\t\t}\n\t\tAssert.isTrue(shellCount <= 1, \"found two shells in MinimalEdgeRing list\");\n\t\treturn shell;\n\t},\n\tadd: function add() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar graph = arguments[0];\n\t\t\tthis.add(graph.getEdgeEnds(), graph.getNodes());\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar dirEdges = arguments[0],\n\t\t\t    nodes = arguments[1];\n\t\t\tPlanarGraph.linkResultDirectedEdges(nodes);\n\t\t\tvar maxEdgeRings = this.buildMaximalEdgeRings(dirEdges);\n\t\t\tvar freeHoleList = new ArrayList();\n\t\t\tvar edgeRings = this.buildMinimalEdgeRings(maxEdgeRings, this.shellList, freeHoleList);\n\t\t\tthis.sortShellsAndHoles(edgeRings, this.shellList, freeHoleList);\n\t\t\tthis.placeFreeHoles(this.shellList, freeHoleList);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PolygonBuilder;\n\t}\n});\n\nfunction LineBuilder() {\n\tthis.op = null;\n\tthis.geometryFactory = null;\n\tthis.ptLocator = null;\n\tthis.lineEdgesList = new ArrayList();\n\tthis.resultLineList = new ArrayList();\n\tvar op = arguments[0],\n\t    geometryFactory = arguments[1],\n\t    ptLocator = arguments[2];\n\tthis.op = op;\n\tthis.geometryFactory = geometryFactory;\n\tthis.ptLocator = ptLocator;\n}\nextend(LineBuilder.prototype, {\n\tcollectLines: function collectLines(opCode) {\n\t\tfor (var it = this.op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n\t\t\tvar de = it.next();\n\t\t\tthis.collectLineEdge(de, opCode, this.lineEdgesList);\n\t\t\tthis.collectBoundaryTouchEdge(de, opCode, this.lineEdgesList);\n\t\t}\n\t},\n\tlabelIsolatedLine: function labelIsolatedLine(e, targetIndex) {\n\t\tvar loc = this.ptLocator.locate(e.getCoordinate(), this.op.getArgGeometry(targetIndex));\n\t\te.getLabel().setLocation(targetIndex, loc);\n\t},\n\tbuild: function build(opCode) {\n\t\tthis.findCoveredLineEdges();\n\t\tthis.collectLines(opCode);\n\t\tthis.buildLines(opCode);\n\t\treturn this.resultLineList;\n\t},\n\tcollectLineEdge: function collectLineEdge(de, opCode, edges) {\n\t\tvar label = de.getLabel();\n\t\tvar e = de.getEdge();\n\t\tif (de.isLineEdge()) {\n\t\t\tif (!de.isVisited() && OverlayOp.isResultOfOp(label, opCode) && !e.isCovered()) {\n\t\t\t\tedges.add(e);\n\t\t\t\tde.setVisitedEdge(true);\n\t\t\t}\n\t\t}\n\t},\n\tfindCoveredLineEdges: function findCoveredLineEdges() {\n\t\tfor (var nodeit = this.op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().findCoveredLineEdges();\n\t\t}\n\t\tfor (var it = this.op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n\t\t\tvar de = it.next();\n\t\t\tvar e = de.getEdge();\n\t\t\tif (de.isLineEdge() && !e.isCoveredSet()) {\n\t\t\t\tvar isCovered = this.op.isCoveredByA(de.getCoordinate());\n\t\t\t\te.setCovered(isCovered);\n\t\t\t}\n\t\t}\n\t},\n\tlabelIsolatedLines: function labelIsolatedLines(edgesList) {\n\t\tfor (var it = edgesList.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tif (e.isIsolated()) {\n\t\t\t\tif (label.isNull(0)) this.labelIsolatedLine(e, 0);else this.labelIsolatedLine(e, 1);\n\t\t\t}\n\t\t}\n\t},\n\tbuildLines: function buildLines(opCode) {\n\t\tfor (var it = this.lineEdgesList.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tvar line = this.geometryFactory.createLineString(e.getCoordinates());\n\t\t\tthis.resultLineList.add(line);\n\t\t\te.setInResult(true);\n\t\t}\n\t},\n\tcollectBoundaryTouchEdge: function collectBoundaryTouchEdge(de, opCode, edges) {\n\t\tvar label = de.getLabel();\n\t\tif (de.isLineEdge()) return null;\n\t\tif (de.isVisited()) return null;\n\t\tif (de.isInteriorAreaEdge()) return null;\n\t\tif (de.getEdge().isInResult()) return null;\n\t\tAssert.isTrue(!(de.isInResult() || de.getSym().isInResult()) || !de.getEdge().isInResult());\n\t\tif (OverlayOp.isResultOfOp(label, opCode) && opCode === OverlayOp.INTERSECTION) {\n\t\t\tedges.add(de.getEdge());\n\t\t\tde.setVisitedEdge(true);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineBuilder;\n\t}\n});\n\nfunction PointBuilder() {\n\tthis.op = null;\n\tthis.geometryFactory = null;\n\tthis.resultPointList = new ArrayList();\n\tvar op = arguments[0],\n\t    geometryFactory = arguments[1],\n\t    ptLocator = arguments[2];\n\tthis.op = op;\n\tthis.geometryFactory = geometryFactory;\n}\nextend(PointBuilder.prototype, {\n\tfilterCoveredNodeToPoint: function filterCoveredNodeToPoint(n) {\n\t\tvar coord = n.getCoordinate();\n\t\tif (!this.op.isCoveredByLA(coord)) {\n\t\t\tvar pt = this.geometryFactory.createPoint(coord);\n\t\t\tthis.resultPointList.add(pt);\n\t\t}\n\t},\n\textractNonCoveredResultNodes: function extractNonCoveredResultNodes(opCode) {\n\t\tfor (var nodeit = this.op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n\t\t\tvar n = nodeit.next();\n\t\t\tif (n.isInResult()) continue;\n\t\t\tif (n.isIncidentEdgeInResult()) continue;\n\t\t\tif (n.getEdges().getDegree() === 0 || opCode === OverlayOp.INTERSECTION) {\n\t\t\t\tvar label = n.getLabel();\n\t\t\t\tif (OverlayOp.isResultOfOp(label, opCode)) {\n\t\t\t\t\tthis.filterCoveredNodeToPoint(n);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tbuild: function build(opCode) {\n\t\tthis.extractNonCoveredResultNodes(opCode);\n\t\treturn this.resultPointList;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PointBuilder;\n\t}\n});\n\nfunction PointOnGeometryLocator() {}\nextend(PointOnGeometryLocator.prototype, {\n\tlocate: function locate(p) {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PointOnGeometryLocator;\n\t}\n});\n\nfunction SimplePointInAreaLocator() {\n\tthis.geom = null;\n\tvar geom = arguments[0];\n\tthis.geom = geom;\n}\nextend(SimplePointInAreaLocator.prototype, {\n\tlocate: function locate(p) {\n\t\treturn SimplePointInAreaLocator.locate(p, this.geom);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [PointOnGeometryLocator];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SimplePointInAreaLocator;\n\t}\n});\nSimplePointInAreaLocator.isPointInRing = function (p, ring) {\n\tif (!ring.getEnvelopeInternal().intersects(p)) return false;\n\treturn CGAlgorithms.isPointInRing(p, ring.getCoordinates());\n};\nSimplePointInAreaLocator.containsPointInPolygon = function (p, poly) {\n\tif (poly.isEmpty()) return false;\n\tvar shell = poly.getExteriorRing();\n\tif (!SimplePointInAreaLocator.isPointInRing(p, shell)) return false;\n\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\tvar hole = poly.getInteriorRingN(i);\n\t\tif (SimplePointInAreaLocator.isPointInRing(p, hole)) return false;\n\t}\n\treturn true;\n};\nSimplePointInAreaLocator.containsPoint = function (p, geom) {\n\tif (geom instanceof Polygon) {\n\t\treturn SimplePointInAreaLocator.containsPointInPolygon(p, geom);\n\t} else if (geom instanceof GeometryCollection) {\n\t\tvar geomi = new GeometryCollectionIterator(geom);\n\t\twhile (geomi.hasNext()) {\n\t\t\tvar g2 = geomi.next();\n\t\t\tif (g2 !== geom) if (SimplePointInAreaLocator.containsPoint(p, g2)) return true;\n\t\t}\n\t}\n\treturn false;\n};\nSimplePointInAreaLocator.locate = function (p, geom) {\n\tif (geom.isEmpty()) return Location.EXTERIOR;\n\tif (SimplePointInAreaLocator.containsPoint(p, geom)) return Location.INTERIOR;\n\treturn Location.EXTERIOR;\n};\n\nfunction EdgeEndStar() {\n\tthis.edgeMap = new TreeMap();\n\tthis.edgeList = null;\n\tthis.ptInAreaLocation = [Location.NONE, Location.NONE];\n}\nextend(EdgeEndStar.prototype, {\n\tgetNextCW: function getNextCW(ee) {\n\t\tthis.getEdges();\n\t\tvar i = this.edgeList.indexOf(ee);\n\t\tvar iNextCW = i - 1;\n\t\tif (i === 0) iNextCW = this.edgeList.size() - 1;\n\t\treturn this.edgeList.get(iNextCW);\n\t},\n\tpropagateSideLabels: function propagateSideLabels(geomIndex) {\n\t\tvar startLoc = Location.NONE;\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tif (label.isArea(geomIndex) && label.getLocation(geomIndex, Position.LEFT) !== Location.NONE) startLoc = label.getLocation(geomIndex, Position.LEFT);\n\t\t}\n\t\tif (startLoc === Location.NONE) return null;\n\t\tvar currLoc = startLoc;\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tif (label.getLocation(geomIndex, Position.ON) === Location.NONE) label.setLocation(geomIndex, Position.ON, currLoc);\n\t\t\tif (label.isArea(geomIndex)) {\n\t\t\t\tvar leftLoc = label.getLocation(geomIndex, Position.LEFT);\n\t\t\t\tvar rightLoc = label.getLocation(geomIndex, Position.RIGHT);\n\t\t\t\tif (rightLoc !== Location.NONE) {\n\t\t\t\t\tif (rightLoc !== currLoc) throw new TopologyException(\"side location conflict\", e.getCoordinate());\n\t\t\t\t\tif (leftLoc === Location.NONE) {\n\t\t\t\t\t\tAssert.shouldNeverReachHere(\"found single null side (at \" + e.getCoordinate() + \")\");\n\t\t\t\t\t}\n\t\t\t\t\tcurrLoc = leftLoc;\n\t\t\t\t} else {\n\t\t\t\t\tAssert.isTrue(label.getLocation(geomIndex, Position.LEFT) === Location.NONE, \"found single null side\");\n\t\t\t\t\tlabel.setLocation(geomIndex, Position.RIGHT, currLoc);\n\t\t\t\t\tlabel.setLocation(geomIndex, Position.LEFT, currLoc);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\tvar it = this.iterator();\n\t\tif (!it.hasNext()) return null;\n\t\tvar e = it.next();\n\t\treturn e.getCoordinate();\n\t},\n\tprint: function print(out) {\n\t\tSystem.out.println(\"EdgeEndStar:   \" + this.getCoordinate());\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\te.print(out);\n\t\t}\n\t},\n\tisAreaLabelsConsistent: function isAreaLabelsConsistent(geomGraph) {\n\t\tthis.computeEdgeEndLabels(geomGraph.getBoundaryNodeRule());\n\t\treturn this.checkAreaLabelsConsistent(0);\n\t},\n\tcheckAreaLabelsConsistent: function checkAreaLabelsConsistent(geomIndex) {\n\t\tvar edges = this.getEdges();\n\t\tif (edges.size() <= 0) return true;\n\t\tvar lastEdgeIndex = edges.size() - 1;\n\t\tvar startLabel = edges.get(lastEdgeIndex).getLabel();\n\t\tvar startLoc = startLabel.getLocation(geomIndex, Position.LEFT);\n\t\tAssert.isTrue(startLoc !== Location.NONE, \"Found unlabelled area edge\");\n\t\tvar currLoc = startLoc;\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tAssert.isTrue(label.isArea(geomIndex), \"Found non-area edge\");\n\t\t\tvar leftLoc = label.getLocation(geomIndex, Position.LEFT);\n\t\t\tvar rightLoc = label.getLocation(geomIndex, Position.RIGHT);\n\t\t\tif (leftLoc === rightLoc) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (rightLoc !== currLoc) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tcurrLoc = leftLoc;\n\t\t}\n\t\treturn true;\n\t},\n\tfindIndex: function findIndex(eSearch) {\n\t\tthis.iterator();\n\t\tfor (var i = 0; i < this.edgeList.size(); i++) {\n\t\t\tvar e = this.edgeList.get(i);\n\t\t\tif (e === eSearch) return i;\n\t\t}\n\t\treturn -1;\n\t},\n\titerator: function iterator() {\n\t\treturn this.getEdges().iterator();\n\t},\n\tgetEdges: function getEdges() {\n\t\tif (this.edgeList === null) {\n\t\t\tthis.edgeList = new ArrayList(this.edgeMap.values());\n\t\t}\n\t\treturn this.edgeList;\n\t},\n\tgetLocation: function getLocation(geomIndex, p, geom) {\n\t\tif (this.ptInAreaLocation[geomIndex] === Location.NONE) {\n\t\t\tthis.ptInAreaLocation[geomIndex] = SimplePointInAreaLocator.locate(p, geom[geomIndex].getGeometry());\n\t\t}\n\t\treturn this.ptInAreaLocation[geomIndex];\n\t},\n\ttoString: function toString() {\n\t\tvar buf = new StringBuffer();\n\t\tbuf.append(\"EdgeEndStar:   \" + this.getCoordinate());\n\t\tbuf.append(\"\\n\");\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\tbuf.append(e);\n\t\t\tbuf.append(\"\\n\");\n\t\t}\n\t\treturn buf.toString();\n\t},\n\tcomputeEdgeEndLabels: function computeEdgeEndLabels(boundaryNodeRule) {\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar ee = it.next();\n\t\t\tee.computeLabel(boundaryNodeRule);\n\t\t}\n\t},\n\tcomputeLabelling: function computeLabelling(geomGraph) {\n\t\tthis.computeEdgeEndLabels(geomGraph[0].getBoundaryNodeRule());\n\t\tthis.propagateSideLabels(0);\n\t\tthis.propagateSideLabels(1);\n\t\tvar hasDimensionalCollapseEdge = [false, false];\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tfor (var geomi = 0; geomi < 2; geomi++) {\n\t\t\t\tif (label.isLine(geomi) && label.getLocation(geomi) === Location.BOUNDARY) hasDimensionalCollapseEdge[geomi] = true;\n\t\t\t}\n\t\t}\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tfor (var geomi = 0; geomi < 2; geomi++) {\n\t\t\t\tif (label.isAnyNull(geomi)) {\n\t\t\t\t\tvar loc = Location.NONE;\n\t\t\t\t\tif (hasDimensionalCollapseEdge[geomi]) {\n\t\t\t\t\t\tloc = Location.EXTERIOR;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar p = e.getCoordinate();\n\t\t\t\t\t\tloc = this.getLocation(geomi, p, geomGraph);\n\t\t\t\t\t}\n\t\t\t\t\tlabel.setAllLocationsIfNull(geomi, loc);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tgetDegree: function getDegree() {\n\t\treturn this.edgeMap.size();\n\t},\n\tinsertEdgeEnd: function insertEdgeEnd(e, obj) {\n\t\tthis.edgeMap.put(e, obj);\n\t\tthis.edgeList = null;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EdgeEndStar;\n\t}\n});\n\nfunction DirectedEdgeStar() {\n\tEdgeEndStar.apply(this);\n\tthis.resultAreaEdgeList = null;\n\tthis.label = null;\n\tthis.SCANNING_FOR_INCOMING = 1;\n\tthis.LINKING_TO_OUTGOING = 2;\n}\ninherits(DirectedEdgeStar, EdgeEndStar);\nextend(DirectedEdgeStar.prototype, {\n\tlinkResultDirectedEdges: function linkResultDirectedEdges() {\n\t\tthis.getResultAreaEdges();\n\t\tvar firstOut = null;\n\t\tvar incoming = null;\n\t\tvar state = this.SCANNING_FOR_INCOMING;\n\t\tfor (var i = 0; i < this.resultAreaEdgeList.size(); i++) {\n\t\t\tvar nextOut = this.resultAreaEdgeList.get(i);\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (!nextOut.getLabel().isArea()) continue;\n\t\t\tif (firstOut === null && nextOut.isInResult()) firstOut = nextOut;\n\t\t\tswitch (state) {\n\t\t\t\tcase this.SCANNING_FOR_INCOMING:\n\t\t\t\t\tif (!nextIn.isInResult()) continue;\n\t\t\t\t\tincoming = nextIn;\n\t\t\t\t\tstate = this.LINKING_TO_OUTGOING;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.LINKING_TO_OUTGOING:\n\t\t\t\t\tif (!nextOut.isInResult()) continue;\n\t\t\t\t\tincoming.setNext(nextOut);\n\t\t\t\t\tstate = this.SCANNING_FOR_INCOMING;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (state === this.LINKING_TO_OUTGOING) {\n\t\t\tif (firstOut === null) throw new TopologyException(\"no outgoing dirEdge found\", this.getCoordinate());\n\t\t\tAssert.isTrue(firstOut.isInResult(), \"unable to link last incoming dirEdge\");\n\t\t\tincoming.setNext(firstOut);\n\t\t}\n\t},\n\tinsert: function insert(ee) {\n\t\tvar de = ee;\n\t\tthis.insertEdgeEnd(de, de);\n\t},\n\tgetRightmostEdge: function getRightmostEdge() {\n\t\tvar edges = this.getEdges();\n\t\tvar size = edges.size();\n\t\tif (size < 1) return null;\n\t\tvar de0 = edges.get(0);\n\t\tif (size === 1) return de0;\n\t\tvar deLast = edges.get(size - 1);\n\t\tvar quad0 = de0.getQuadrant();\n\t\tvar quad1 = deLast.getQuadrant();\n\t\tif (Quadrant.isNorthern(quad0) && Quadrant.isNorthern(quad1)) return de0;else if (!Quadrant.isNorthern(quad0) && !Quadrant.isNorthern(quad1)) return deLast;else {\n\t\t\tvar nonHorizontalEdge = null;\n\t\t\tif (de0.getDy() !== 0) return de0;else if (deLast.getDy() !== 0) return deLast;\n\t\t}\n\t\tAssert.shouldNeverReachHere(\"found two horizontal edges incident on node\");\n\t\treturn null;\n\t},\n\tprint: function print(out) {\n\t\tSystem.out.println(\"DirectedEdgeStar: \" + this.getCoordinate());\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar de = it.next();\n\t\t\tout.print(\"out \");\n\t\t\tde.print(out);\n\t\t\tout.println();\n\t\t\tout.print(\"in \");\n\t\t\tde.getSym().print(out);\n\t\t\tout.println();\n\t\t}\n\t},\n\tgetResultAreaEdges: function getResultAreaEdges() {\n\t\tif (this.resultAreaEdgeList !== null) return this.resultAreaEdgeList;\n\t\tthis.resultAreaEdgeList = new ArrayList();\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.isInResult() || de.getSym().isInResult()) this.resultAreaEdgeList.add(de);\n\t\t}\n\t\treturn this.resultAreaEdgeList;\n\t},\n\tupdateLabelling: function updateLabelling(nodeLabel) {\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar de = it.next();\n\t\t\tvar label = de.getLabel();\n\t\t\tlabel.setAllLocationsIfNull(0, nodeLabel.getLocation(0));\n\t\t\tlabel.setAllLocationsIfNull(1, nodeLabel.getLocation(1));\n\t\t}\n\t},\n\tlinkAllDirectedEdges: function linkAllDirectedEdges() {\n\t\tthis.getEdges();\n\t\tvar prevOut = null;\n\t\tvar firstIn = null;\n\t\tfor (var i = this.edgeList.size() - 1; i >= 0; i--) {\n\t\t\tvar nextOut = this.edgeList.get(i);\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (firstIn === null) firstIn = nextIn;\n\t\t\tif (prevOut !== null) nextIn.setNext(prevOut);\n\t\t\tprevOut = nextOut;\n\t\t}\n\t\tfirstIn.setNext(prevOut);\n\t},\n\tcomputeDepths: function computeDepths() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar de = arguments[0];\n\t\t\tvar edgeIndex = this.findIndex(de);\n\t\t\tvar label = de.getLabel();\n\t\t\tvar startDepth = de.getDepth(Position.LEFT);\n\t\t\tvar targetLastDepth = de.getDepth(Position.RIGHT);\n\t\t\tvar nextDepth = this.computeDepths(edgeIndex + 1, this.edgeList.size(), startDepth);\n\t\t\tvar lastDepth = this.computeDepths(0, edgeIndex, nextDepth);\n\t\t\tif (lastDepth !== targetLastDepth) throw new TopologyException(\"depth mismatch at \" + de.getCoordinate());\n\t\t} else if (arguments.length === 3) {\n\t\t\tvar startIndex = arguments[0],\n\t\t\t    endIndex = arguments[1],\n\t\t\t    _startDepth = arguments[2];\n\t\t\tvar currDepth = _startDepth;\n\t\t\tfor (var i = startIndex; i < endIndex; i++) {\n\t\t\t\tvar nextDe = this.edgeList.get(i);\n\t\t\t\tvar label = nextDe.getLabel();\n\t\t\t\tnextDe.setEdgeDepths(Position.RIGHT, currDepth);\n\t\t\t\tcurrDepth = nextDe.getDepth(Position.LEFT);\n\t\t\t}\n\t\t\treturn currDepth;\n\t\t}\n\t},\n\tmergeSymLabels: function mergeSymLabels() {\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar de = it.next();\n\t\t\tvar label = de.getLabel();\n\t\t\tlabel.merge(de.getSym().getLabel());\n\t\t}\n\t},\n\tlinkMinimalDirectedEdges: function linkMinimalDirectedEdges(er) {\n\t\tvar firstOut = null;\n\t\tvar incoming = null;\n\t\tvar state = this.SCANNING_FOR_INCOMING;\n\t\tfor (var i = this.resultAreaEdgeList.size() - 1; i >= 0; i--) {\n\t\t\tvar nextOut = this.resultAreaEdgeList.get(i);\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (firstOut === null && nextOut.getEdgeRing() === er) firstOut = nextOut;\n\t\t\tswitch (state) {\n\t\t\t\tcase this.SCANNING_FOR_INCOMING:\n\t\t\t\t\tif (nextIn.getEdgeRing() !== er) continue;\n\t\t\t\t\tincoming = nextIn;\n\t\t\t\t\tstate = this.LINKING_TO_OUTGOING;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.LINKING_TO_OUTGOING:\n\t\t\t\t\tif (nextOut.getEdgeRing() !== er) continue;\n\t\t\t\t\tincoming.setNextMin(nextOut);\n\t\t\t\t\tstate = this.SCANNING_FOR_INCOMING;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (state === this.LINKING_TO_OUTGOING) {\n\t\t\tAssert.isTrue(firstOut !== null, \"found null for first outgoing dirEdge\");\n\t\t\tAssert.isTrue(firstOut.getEdgeRing() === er, \"unable to link last incoming dirEdge\");\n\t\t\tincoming.setNextMin(firstOut);\n\t\t}\n\t},\n\tgetOutgoingDegree: function getOutgoingDegree() {\n\t\tif (arguments.length === 0) {\n\t\t\tvar degree = 0;\n\t\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\t\tvar de = it.next();\n\t\t\t\tif (de.isInResult()) degree++;\n\t\t\t}\n\t\t\treturn degree;\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar er = arguments[0];\n\t\t\tvar degree = 0;\n\t\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\t\tvar de = it.next();\n\t\t\t\tif (de.getEdgeRing() === er) degree++;\n\t\t\t}\n\t\t\treturn degree;\n\t\t}\n\t},\n\tgetLabel: function getLabel() {\n\t\treturn this.label;\n\t},\n\tfindCoveredLineEdges: function findCoveredLineEdges() {\n\t\tvar startLoc = Location.NONE;\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar nextOut = it.next();\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (!nextOut.isLineEdge()) {\n\t\t\t\tif (nextOut.isInResult()) {\n\t\t\t\t\tstartLoc = Location.INTERIOR;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (nextIn.isInResult()) {\n\t\t\t\t\tstartLoc = Location.EXTERIOR;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (startLoc === Location.NONE) return null;\n\t\tvar currLoc = startLoc;\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar nextOut = it.next();\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (nextOut.isLineEdge()) {\n\t\t\t\tnextOut.getEdge().setCovered(currLoc === Location.INTERIOR);\n\t\t\t} else {\n\t\t\t\tif (nextOut.isInResult()) currLoc = Location.EXTERIOR;\n\t\t\t\tif (nextIn.isInResult()) currLoc = Location.INTERIOR;\n\t\t\t}\n\t\t}\n\t},\n\tcomputeLabelling: function computeLabelling(geom) {\n\t\tEdgeEndStar.prototype.computeLabelling.call(this, geom);\n\t\tthis.label = new Label(Location.NONE);\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar ee = it.next();\n\t\t\tvar e = ee.getEdge();\n\t\t\tvar eLabel = e.getLabel();\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tvar eLoc = eLabel.getLocation(i);\n\t\t\t\tif (eLoc === Location.INTERIOR || eLoc === Location.BOUNDARY) this.label.setLocation(i, Location.INTERIOR);\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DirectedEdgeStar;\n\t}\n});\n\nfunction OverlayNodeFactory() {\n\tNodeFactory.apply(this);\n}\ninherits(OverlayNodeFactory, NodeFactory);\nextend(OverlayNodeFactory.prototype, {\n\tcreateNode: function createNode(coord) {\n\t\treturn new Node(coord, new DirectedEdgeStar());\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn OverlayNodeFactory;\n\t}\n});\n\nfunction MonotoneChain$1() {\n\tthis.mce = null;\n\tthis.chainIndex = null;\n\tvar mce = arguments[0],\n\t    chainIndex = arguments[1];\n\tthis.mce = mce;\n\tthis.chainIndex = chainIndex;\n}\nextend(MonotoneChain$1.prototype, {\n\tcomputeIntersections: function computeIntersections(mc, si) {\n\t\tthis.mce.computeIntersectsForChain(this.chainIndex, mc.mce, mc.chainIndex, si);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MonotoneChain$1;\n\t}\n});\n\nfunction SweepLineEvent() {\n\tthis.label = null;\n\tthis.xValue = null;\n\tthis.eventType = null;\n\tthis.insertEvent = null;\n\tthis.deleteEventIndex = null;\n\tthis.obj = null;\n\tif (arguments.length === 2) {\n\t\tvar x = arguments[0],\n\t\t    insertEvent = arguments[1];\n\t\tthis.eventType = SweepLineEvent.DELETE;\n\t\tthis.xValue = x;\n\t\tthis.insertEvent = insertEvent;\n\t} else if (arguments.length === 3) {\n\t\tvar label = arguments[0],\n\t\t    _x = arguments[1],\n\t\t    obj = arguments[2];\n\t\tthis.eventType = SweepLineEvent.INSERT;\n\t\tthis.label = label;\n\t\tthis.xValue = _x;\n\t\tthis.obj = obj;\n\t}\n}\nextend(SweepLineEvent.prototype, {\n\tisDelete: function isDelete() {\n\t\treturn this.eventType === SweepLineEvent.DELETE;\n\t},\n\tsetDeleteEventIndex: function setDeleteEventIndex(deleteEventIndex) {\n\t\tthis.deleteEventIndex = deleteEventIndex;\n\t},\n\tgetObject: function getObject() {\n\t\treturn this.obj;\n\t},\n\tcompareTo: function compareTo(o) {\n\t\tvar pe = o;\n\t\tif (this.xValue < pe.xValue) return -1;\n\t\tif (this.xValue > pe.xValue) return 1;\n\t\tif (this.eventType < pe.eventType) return -1;\n\t\tif (this.eventType > pe.eventType) return 1;\n\t\treturn 0;\n\t},\n\tgetInsertEvent: function getInsertEvent() {\n\t\treturn this.insertEvent;\n\t},\n\tisInsert: function isInsert() {\n\t\treturn this.eventType === SweepLineEvent.INSERT;\n\t},\n\tisSameLabel: function isSameLabel(ev) {\n\t\tif (this.label === null) return false;\n\t\treturn this.label === ev.label;\n\t},\n\tgetDeleteEventIndex: function getDeleteEventIndex() {\n\t\treturn this.deleteEventIndex;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SweepLineEvent;\n\t}\n});\nSweepLineEvent.INSERT = 1;\nSweepLineEvent.DELETE = 2;\n\nfunction EdgeSetIntersector() {}\nextend(EdgeSetIntersector.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EdgeSetIntersector;\n\t}\n});\n\nfunction SegmentIntersector$1() {\n\tthis._hasIntersection = false;\n\tthis.hasProper = false;\n\tthis.hasProperInterior = false;\n\tthis.properIntersectionPoint = null;\n\tthis.li = null;\n\tthis.includeProper = null;\n\tthis.recordIsolated = null;\n\tthis.isSelfIntersection = null;\n\tthis.numIntersections = 0;\n\tthis.numTests = 0;\n\tthis.bdyNodes = null;\n\tthis._isDone = false;\n\tthis.isDoneWhenProperInt = false;\n\tvar li = arguments[0],\n\t    includeProper = arguments[1],\n\t    recordIsolated = arguments[2];\n\tthis.li = li;\n\tthis.includeProper = includeProper;\n\tthis.recordIsolated = recordIsolated;\n}\nextend(SegmentIntersector$1.prototype, {\n\tisTrivialIntersection: function isTrivialIntersection(e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1) {\n\t\t\tif (this.li.getIntersectionNum() === 1) {\n\t\t\t\tif (SegmentIntersector$1.isAdjacentSegments(segIndex0, segIndex1)) return true;\n\t\t\t\tif (e0.isClosed()) {\n\t\t\t\t\tvar maxSegIndex = e0.getNumPoints() - 1;\n\t\t\t\t\tif (segIndex0 === 0 && segIndex1 === maxSegIndex || segIndex1 === 0 && segIndex0 === maxSegIndex) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetProperIntersectionPoint: function getProperIntersectionPoint() {\n\t\treturn this.properIntersectionPoint;\n\t},\n\tsetIsDoneIfProperInt: function setIsDoneIfProperInt(isDoneWhenProperInt) {\n\t\tthis.isDoneWhenProperInt = isDoneWhenProperInt;\n\t},\n\thasProperInteriorIntersection: function hasProperInteriorIntersection() {\n\t\treturn this.hasProperInterior;\n\t},\n\tisBoundaryPointInternal: function isBoundaryPointInternal(li, bdyNodes) {\n\t\tfor (var i = bdyNodes.iterator(); i.hasNext();) {\n\t\t\tvar node = i.next();\n\t\t\tvar pt = node.getCoordinate();\n\t\t\tif (li.isIntersection(pt)) return true;\n\t\t}\n\t\treturn false;\n\t},\n\thasProperIntersection: function hasProperIntersection() {\n\t\treturn this.hasProper;\n\t},\n\thasIntersection: function hasIntersection() {\n\t\treturn this._hasIntersection;\n\t},\n\tisDone: function isDone() {\n\t\treturn this._isDone;\n\t},\n\tisBoundaryPoint: function isBoundaryPoint(li, bdyNodes) {\n\t\tif (bdyNodes === null) return false;\n\t\tif (this.isBoundaryPointInternal(li, bdyNodes[0])) return true;\n\t\tif (this.isBoundaryPointInternal(li, bdyNodes[1])) return true;\n\t\treturn false;\n\t},\n\tsetBoundaryNodes: function setBoundaryNodes(bdyNodes0, bdyNodes1) {\n\t\tthis.bdyNodes = new Array(2).fill(null);\n\t\tthis.bdyNodes[0] = bdyNodes0;\n\t\tthis.bdyNodes[1] = bdyNodes1;\n\t},\n\taddIntersections: function addIntersections(e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\tthis.numTests++;\n\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\tthis.li.computeIntersection(p00, p01, p10, p11);\n\t\tif (this.li.hasIntersection()) {\n\t\t\tif (this.recordIsolated) {\n\t\t\t\te0.setIsolated(false);\n\t\t\t\te1.setIsolated(false);\n\t\t\t}\n\t\t\tthis.numIntersections++;\n\t\t\tif (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n\t\t\t\tthis._hasIntersection = true;\n\t\t\t\tif (this.includeProper || !this.li.isProper()) {\n\t\t\t\t\te0.addIntersections(this.li, segIndex0, 0);\n\t\t\t\t\te1.addIntersections(this.li, segIndex1, 1);\n\t\t\t\t}\n\t\t\t\tif (this.li.isProper()) {\n\t\t\t\t\tthis.properIntersectionPoint = this.li.getIntersection(0).copy();\n\t\t\t\t\tthis.hasProper = true;\n\t\t\t\t\tif (this.isDoneWhenProperInt) {\n\t\t\t\t\t\tthis._isDone = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!this.isBoundaryPoint(this.li, this.bdyNodes)) this.hasProperInterior = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SegmentIntersector$1;\n\t}\n});\nSegmentIntersector$1.isAdjacentSegments = function (i1, i2) {\n\treturn Math.abs(i1 - i2) === 1;\n};\n\nfunction SimpleMCSweepLineIntersector() {\n\tEdgeSetIntersector.apply(this);\n\tthis.events = new ArrayList();\n\tthis.nOverlaps = null;\n}\ninherits(SimpleMCSweepLineIntersector, EdgeSetIntersector);\nextend(SimpleMCSweepLineIntersector.prototype, {\n\tprepareEvents: function prepareEvents() {\n\t\tCollections.sort(this.events);\n\t\tfor (var i = 0; i < this.events.size(); i++) {\n\t\t\tvar ev = this.events.get(i);\n\t\t\tif (ev.isDelete()) {\n\t\t\t\tev.getInsertEvent().setDeleteEventIndex(i);\n\t\t\t}\n\t\t}\n\t},\n\tcomputeIntersections: function computeIntersections() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar si = arguments[0];\n\t\t\tthis.nOverlaps = 0;\n\t\t\tthis.prepareEvents();\n\t\t\tfor (var i = 0; i < this.events.size(); i++) {\n\t\t\t\tvar ev = this.events.get(i);\n\t\t\t\tif (ev.isInsert()) {\n\t\t\t\t\tthis.processOverlaps(i, ev.getDeleteEventIndex(), ev, si);\n\t\t\t\t}\n\t\t\t\tif (si.isDone()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (arguments[2] instanceof SegmentIntersector$1 && hasInterface(arguments[0], List) && hasInterface(arguments[1], List)) {\n\t\t\t\tvar edges0 = arguments[0],\n\t\t\t\t    edges1 = arguments[1],\n\t\t\t\t    _si = arguments[2];\n\t\t\t\tthis.addEdges(edges0, edges0);\n\t\t\t\tthis.addEdges(edges1, edges1);\n\t\t\t\tthis.computeIntersections(_si);\n\t\t\t} else if (typeof arguments[2] === \"boolean\" && hasInterface(arguments[0], List) && arguments[1] instanceof SegmentIntersector$1) {\n\t\t\t\tvar edges = arguments[0],\n\t\t\t\t    _si2 = arguments[1],\n\t\t\t\t    testAllSegments = arguments[2];\n\t\t\t\tif (testAllSegments) this.addEdges(edges, null);else this.addEdges(edges);\n\t\t\t\tthis.computeIntersections(_si2);\n\t\t\t}\n\t\t}\n\t},\n\taddEdge: function addEdge(edge, edgeSet) {\n\t\tvar mce = edge.getMonotoneChainEdge();\n\t\tvar startIndex = mce.getStartIndexes();\n\t\tfor (var i = 0; i < startIndex.length - 1; i++) {\n\t\t\tvar mc = new MonotoneChain$1(mce, i);\n\t\t\tvar insertEvent = new SweepLineEvent(edgeSet, mce.getMinX(i), mc);\n\t\t\tthis.events.add(insertEvent);\n\t\t\tthis.events.add(new SweepLineEvent(mce.getMaxX(i), insertEvent));\n\t\t}\n\t},\n\tprocessOverlaps: function processOverlaps(start, end, ev0, si) {\n\t\tvar mc0 = ev0.getObject();\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tvar ev1 = this.events.get(i);\n\t\t\tif (ev1.isInsert()) {\n\t\t\t\tvar mc1 = ev1.getObject();\n\t\t\t\tif (!ev0.isSameLabel(ev1)) {\n\t\t\t\t\tmc0.computeIntersections(mc1, si);\n\t\t\t\t\tthis.nOverlaps++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\taddEdges: function addEdges() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar edges = arguments[0];\n\t\t\tfor (var i = edges.iterator(); i.hasNext();) {\n\t\t\t\tvar edge = i.next();\n\t\t\t\tthis.addEdge(edge, edge);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar _edges = arguments[0],\n\t\t\t    edgeSet = arguments[1];\n\t\t\tfor (var i = _edges.iterator(); i.hasNext();) {\n\t\t\t\tvar edge = i.next();\n\t\t\t\tthis.addEdge(edge, edgeSet);\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SimpleMCSweepLineIntersector;\n\t}\n});\n\nfunction IntervalRTreeNode$1() {\n\tthis.min = Double.POSITIVE_INFINITY;\n\tthis.max = Double.NEGATIVE_INFINITY;\n}\nextend(IntervalRTreeNode$1.prototype, {\n\tgetMin: function getMin() {\n\t\treturn this.min;\n\t},\n\tintersects: function intersects(queryMin, queryMax) {\n\t\tif (this.min > queryMax || this.max < queryMin) return false;\n\t\treturn true;\n\t},\n\tgetMax: function getMax() {\n\t\treturn this.max;\n\t},\n\ttoString: function toString() {\n\t\treturn WKTWriter.toLineString(new Coordinate(this.min, 0), new Coordinate(this.max, 0));\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn IntervalRTreeNode$1;\n\t}\n});\nfunction NodeComparator() {}\nextend(NodeComparator.prototype, {\n\tcompare: function compare(o1, o2) {\n\t\tvar n1 = o1;\n\t\tvar n2 = o2;\n\t\tvar mid1 = (n1.min + n1.max) / 2;\n\t\tvar mid2 = (n2.min + n2.max) / 2;\n\t\tif (mid1 < mid2) return -1;\n\t\tif (mid1 > mid2) return 1;\n\t\treturn 0;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function getClass() {\n\t\treturn NodeComparator;\n\t}\n});\nIntervalRTreeNode$1.NodeComparator = NodeComparator;\n\nfunction IntervalRTreeLeafNode() {\n\tIntervalRTreeNode$1.apply(this);\n\tthis.item = null;\n\tvar min = arguments[0],\n\t    max = arguments[1],\n\t    item = arguments[2];\n\tthis.min = min;\n\tthis.max = max;\n\tthis.item = item;\n}\ninherits(IntervalRTreeLeafNode, IntervalRTreeNode$1);\nextend(IntervalRTreeLeafNode.prototype, {\n\tquery: function query(queryMin, queryMax, visitor) {\n\t\tif (!this.intersects(queryMin, queryMax)) return null;\n\t\tvisitor.visitItem(this.item);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn IntervalRTreeLeafNode;\n\t}\n});\n\nfunction IntervalRTreeBranchNode() {\n\tIntervalRTreeNode$1.apply(this);\n\tthis.node1 = null;\n\tthis.node2 = null;\n\tvar n1 = arguments[0],\n\t    n2 = arguments[1];\n\tthis.node1 = n1;\n\tthis.node2 = n2;\n\tthis.buildExtent(this.node1, this.node2);\n}\ninherits(IntervalRTreeBranchNode, IntervalRTreeNode$1);\nextend(IntervalRTreeBranchNode.prototype, {\n\tbuildExtent: function buildExtent(n1, n2) {\n\t\tthis.min = Math.min(n1.min, n2.min);\n\t\tthis.max = Math.max(n1.max, n2.max);\n\t},\n\tquery: function query(queryMin, queryMax, visitor) {\n\t\tif (!this.intersects(queryMin, queryMax)) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this.node1 !== null) this.node1.query(queryMin, queryMax, visitor);\n\t\tif (this.node2 !== null) this.node2.query(queryMin, queryMax, visitor);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn IntervalRTreeBranchNode;\n\t}\n});\n\nfunction SortedPackedIntervalRTree() {\n\tthis.leaves = new ArrayList();\n\tthis.root = null;\n\tthis.level = 0;\n}\nextend(SortedPackedIntervalRTree.prototype, {\n\tbuildTree: function buildTree() {\n\t\tCollections.sort(this.leaves, new IntervalRTreeNode.NodeComparator());\n\t\tvar src = this.leaves;\n\t\tvar temp = null;\n\t\tvar dest = new ArrayList();\n\t\twhile (true) {\n\t\t\tthis.buildLevel(src, dest);\n\t\t\tif (dest.size() === 1) return dest.get(0);\n\t\t\ttemp = src;\n\t\t\tsrc = dest;\n\t\t\tdest = temp;\n\t\t}\n\t},\n\tinsert: function insert(min, max, item) {\n\t\tif (this.root !== null) throw new IllegalStateException(\"Index cannot be added to once it has been queried\");\n\t\tthis.leaves.add(new IntervalRTreeLeafNode(min, max, item));\n\t},\n\tquery: function query(min, max, visitor) {\n\t\tthis.init();\n\t\tthis.root.query(min, max, visitor);\n\t},\n\tbuildRoot: function buildRoot() {\n\t\tif (this.root !== null) return null;\n\t\tthis.root = this.buildTree();\n\t},\n\tprintNode: function printNode(node) {\n\t\tSystem.out.println(WKTWriter.toLineString(new Coordinate(node.min, this.level), new Coordinate(node.max, this.level)));\n\t},\n\tinit: function init() {\n\t\tif (this.root !== null) return null;\n\t\tthis.buildRoot();\n\t},\n\tbuildLevel: function buildLevel(src, dest) {\n\t\tthis.level++;\n\t\tdest.clear();\n\t\tfor (var i = 0; i < src.size(); i += 2) {\n\t\t\tvar n1 = src.get(i);\n\t\t\tvar n2 = i + 1 < src.size() ? src.get(i) : null;\n\t\t\tif (n2 === null) {\n\t\t\t\tdest.add(n1);\n\t\t\t} else {\n\t\t\t\tvar node = new IntervalRTreeBranchNode(src.get(i), src.get(i + 1));\n\t\t\t\tdest.add(node);\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SortedPackedIntervalRTree;\n\t}\n});\n\nfunction LinearComponentExtracter() {\n\tthis.lines = null;\n\tthis.isForcedToLineString = false;\n\tif (arguments.length === 1) {\n\t\tvar lines = arguments[0];\n\t\tthis.lines = lines;\n\t} else if (arguments.length === 2) {\n\t\tvar _lines = arguments[0],\n\t\t    isForcedToLineString = arguments[1];\n\t\tthis.lines = _lines;\n\t\tthis.isForcedToLineString = isForcedToLineString;\n\t}\n}\nextend(LinearComponentExtracter.prototype, {\n\tfilter: function filter(geom) {\n\t\tif (this.isForcedToLineString && geom instanceof LinearRing) {\n\t\t\tvar line = geom.getFactory().createLineString(geom.getCoordinateSequence());\n\t\t\tthis.lines.add(line);\n\t\t\treturn null;\n\t\t}\n\t\tif (geom instanceof LineString) this.lines.add(geom);\n\t},\n\tsetForceToLineString: function setForceToLineString(isForcedToLineString) {\n\t\tthis.isForcedToLineString = isForcedToLineString;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [GeometryComponentFilter];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LinearComponentExtracter;\n\t}\n});\nLinearComponentExtracter.getGeometry = function () {\n\tif (arguments.length === 1) {\n\t\tvar geom = arguments[0];\n\t\treturn geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom));\n\t} else if (arguments.length === 2) {\n\t\tvar _geom = arguments[0],\n\t\t    forceToLineString = arguments[1];\n\t\treturn _geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(_geom, forceToLineString));\n\t}\n};\nLinearComponentExtracter.getLines = function () {\n\tif (arguments.length === 1) {\n\t\tvar geom = arguments[0];\n\t\treturn LinearComponentExtracter.getLines(geom, false);\n\t} else if (arguments.length === 2) {\n\t\tif (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection)) {\n\t\t\tvar geoms = arguments[0],\n\t\t\t    _lines2 = arguments[1];\n\t\t\tfor (var i = geoms.iterator(); i.hasNext();) {\n\t\t\t\tvar g = i.next();\n\t\t\t\tLinearComponentExtracter.getLines(g, _lines2);\n\t\t\t}\n\t\t\treturn _lines2;\n\t\t} else if (arguments[0] instanceof Geometry && typeof arguments[1] === \"boolean\") {\n\t\t\tvar _geom2 = arguments[0],\n\t\t\t    forceToLineString = arguments[1];\n\t\t\tvar lines = new ArrayList();\n\t\t\t_geom2.apply(new LinearComponentExtracter(lines, forceToLineString));\n\t\t\treturn lines;\n\t\t} else if (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection)) {\n\t\t\tvar _geom3 = arguments[0],\n\t\t\t    _lines3 = arguments[1];\n\t\t\tif (_geom3 instanceof LineString) {\n\t\t\t\t_lines3.add(_geom3);\n\t\t\t} else {\n\t\t\t\t_geom3.apply(new LinearComponentExtracter(_lines3));\n\t\t\t}\n\t\t\treturn _lines3;\n\t\t}\n\t} else if (arguments.length === 3) {\n\t\tif (typeof arguments[2] === \"boolean\" && hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection)) {\n\t\t\tvar _geoms = arguments[0],\n\t\t\t    _lines4 = arguments[1],\n\t\t\t    _forceToLineString = arguments[2];\n\t\t\tfor (var i = _geoms.iterator(); i.hasNext();) {\n\t\t\t\tvar g = i.next();\n\t\t\t\tLinearComponentExtracter.getLines(g, _lines4, _forceToLineString);\n\t\t\t}\n\t\t\treturn _lines4;\n\t\t} else if (typeof arguments[2] === \"boolean\" && arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection)) {\n\t\t\tvar _geom4 = arguments[0],\n\t\t\t    _lines5 = arguments[1],\n\t\t\t    _forceToLineString2 = arguments[2];\n\t\t\t_geom4.apply(new LinearComponentExtracter(_lines5, _forceToLineString2));\n\t\t\treturn _lines5;\n\t\t}\n\t}\n};\n\nfunction ArrayListVisitor() {\n\tthis.items = new ArrayList();\n}\nextend(ArrayListVisitor.prototype, {\n\tvisitItem: function visitItem(item) {\n\t\tthis.items.add(item);\n\t},\n\tgetItems: function getItems() {\n\t\treturn this.items;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [ItemVisitor];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ArrayListVisitor;\n\t}\n});\n\nfunction IndexedPointInAreaLocator() {\n\tthis.index = null;\n\tvar g = arguments[0];\n\tif (!hasInterface(g, Polygonal)) throw new IllegalArgumentException(\"Argument must be Polygonal\");\n\tthis.index = new IntervalIndexedGeometry(g);\n}\nextend(IndexedPointInAreaLocator.prototype, {\n\tlocate: function locate(p) {\n\t\tvar rcc = new RayCrossingCounter(p);\n\t\tvar visitor = new SegmentVisitor(rcc);\n\t\tthis.index.query(p.y, p.y, visitor);\n\t\treturn rcc.getLocation();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [PointOnGeometryLocator];\n\t},\n\tgetClass: function getClass() {\n\t\treturn IndexedPointInAreaLocator;\n\t}\n});\nfunction SegmentVisitor() {\n\tthis.counter = null;\n\tvar counter = arguments[0];\n\tthis.counter = counter;\n}\nextend(SegmentVisitor.prototype, {\n\tvisitItem: function visitItem(item) {\n\t\tvar seg = item;\n\t\tthis.counter.countSegment(seg.getCoordinate(0), seg.getCoordinate(1));\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [ItemVisitor];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SegmentVisitor;\n\t}\n});\nfunction IntervalIndexedGeometry() {\n\tthis.index = new SortedPackedIntervalRTree();\n\tvar geom = arguments[0];\n\tthis.init(geom);\n}\nextend(IntervalIndexedGeometry.prototype, {\n\tinit: function init(geom) {\n\t\tvar lines = LinearComponentExtracter.getLines(geom);\n\t\tfor (var i = lines.iterator(); i.hasNext();) {\n\t\t\tvar line = i.next();\n\t\t\tvar pts = line.getCoordinates();\n\t\t\tthis.addLine(pts);\n\t\t}\n\t},\n\taddLine: function addLine(pts) {\n\t\tfor (var i = 1; i < pts.length; i++) {\n\t\t\tvar seg = new LineSegment(pts[i - 1], pts[i]);\n\t\t\tvar min = Math.min(seg.p0.y, seg.p1.y);\n\t\t\tvar max = Math.max(seg.p0.y, seg.p1.y);\n\t\t\tthis.index.insert(min, max, seg);\n\t\t}\n\t},\n\tquery: function query() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar min = arguments[0],\n\t\t\t    max = arguments[1];\n\t\t\tvar visitor = new ArrayListVisitor();\n\t\t\tthis.index.query(min, max, visitor);\n\t\t\treturn visitor.getItems();\n\t\t} else if (arguments.length === 3) {\n\t\t\tvar _min = arguments[0],\n\t\t\t    _max = arguments[1],\n\t\t\t    _visitor = arguments[2];\n\t\t\tthis.index.query(_min, _max, _visitor);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn IntervalIndexedGeometry;\n\t}\n});\nIndexedPointInAreaLocator.SegmentVisitor = SegmentVisitor;\nIndexedPointInAreaLocator.IntervalIndexedGeometry = IntervalIndexedGeometry;\n\nfunction EdgeIntersection() {\n\tthis.coord = null;\n\tthis.segmentIndex = null;\n\tthis.dist = null;\n\tvar coord = arguments[0],\n\t    segmentIndex = arguments[1],\n\t    dist = arguments[2];\n\tthis.coord = new Coordinate(coord);\n\tthis.segmentIndex = segmentIndex;\n\tthis.dist = dist;\n}\nextend(EdgeIntersection.prototype, {\n\tgetSegmentIndex: function getSegmentIndex() {\n\t\treturn this.segmentIndex;\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this.coord;\n\t},\n\tprint: function print(out) {\n\t\tout.print(this.coord);\n\t\tout.print(\" seg # = \" + this.segmentIndex);\n\t\tout.println(\" dist = \" + this.dist);\n\t},\n\tcompareTo: function compareTo(obj) {\n\t\tvar other = obj;\n\t\treturn this.compare(other.segmentIndex, other.dist);\n\t},\n\tisEndPoint: function isEndPoint(maxSegmentIndex) {\n\t\tif (this.segmentIndex === 0 && this.dist === 0.0) return true;\n\t\tif (this.segmentIndex === maxSegmentIndex) return true;\n\t\treturn false;\n\t},\n\ttoString: function toString() {\n\t\treturn this.coord + \" seg # = \" + this.segmentIndex + \" dist = \" + this.dist;\n\t},\n\tgetDistance: function getDistance() {\n\t\treturn this.dist;\n\t},\n\tcompare: function compare(segmentIndex, dist) {\n\t\tif (this.segmentIndex < segmentIndex) return -1;\n\t\tif (this.segmentIndex > segmentIndex) return 1;\n\t\tif (this.dist < dist) return -1;\n\t\tif (this.dist > dist) return 1;\n\t\treturn 0;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EdgeIntersection;\n\t}\n});\n\nfunction EdgeIntersectionList() {\n\tthis.nodeMap = new TreeMap();\n\tthis.edge = null;\n\tvar edge = arguments[0];\n\tthis.edge = edge;\n}\nextend(EdgeIntersectionList.prototype, {\n\tprint: function print(out) {\n\t\tout.println(\"Intersections:\");\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar ei = it.next();\n\t\t\tei.print(out);\n\t\t}\n\t},\n\titerator: function iterator() {\n\t\treturn this.nodeMap.values().iterator();\n\t},\n\taddSplitEdges: function addSplitEdges(edgeList) {\n\t\tthis.addEndpoints();\n\t\tvar it = this.iterator();\n\t\tvar eiPrev = it.next();\n\t\twhile (it.hasNext()) {\n\t\t\tvar ei = it.next();\n\t\t\tvar newEdge = this.createSplitEdge(eiPrev, ei);\n\t\t\tedgeList.add(newEdge);\n\t\t\teiPrev = ei;\n\t\t}\n\t},\n\taddEndpoints: function addEndpoints() {\n\t\tvar maxSegIndex = this.edge.pts.length - 1;\n\t\tthis.add(this.edge.pts[0], 0, 0.0);\n\t\tthis.add(this.edge.pts[maxSegIndex], maxSegIndex, 0.0);\n\t},\n\tcreateSplitEdge: function createSplitEdge(ei0, ei1) {\n\t\tvar npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n\t\tvar lastSegStartPt = this.edge.pts[ei1.segmentIndex];\n\t\tvar useIntPt1 = ei1.dist > 0.0 || !ei1.coord.equals2D(lastSegStartPt);\n\t\tif (!useIntPt1) {\n\t\t\tnpts--;\n\t\t}\n\t\tvar pts = new Array(npts).fill(null);\n\t\tvar ipt = 0;\n\t\tpts[ipt++] = new Coordinate(ei0.coord);\n\t\tfor (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n\t\t\tpts[ipt++] = this.edge.pts[i];\n\t\t}\n\t\tif (useIntPt1) pts[ipt] = ei1.coord;\n\t\treturn new Edge(pts, new Label(this.edge.label));\n\t},\n\tadd: function add(intPt, segmentIndex, dist) {\n\t\tvar eiNew = new EdgeIntersection(intPt, segmentIndex, dist);\n\t\tvar ei = this.nodeMap.get(eiNew);\n\t\tif (ei !== null) {\n\t\t\treturn ei;\n\t\t}\n\t\tthis.nodeMap.put(eiNew, eiNew);\n\t\treturn eiNew;\n\t},\n\tisIntersection: function isIntersection(pt) {\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar ei = it.next();\n\t\t\tif (ei.coord.equals(pt)) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EdgeIntersectionList;\n\t}\n});\n\nfunction MonotoneChainIndexer() {}\nextend(MonotoneChainIndexer.prototype, {\n\tgetChainStartIndices: function getChainStartIndices(pts) {\n\t\tvar start = 0;\n\t\tvar startIndexList = new ArrayList();\n\t\tstartIndexList.add(new Integer(start));\n\t\tdo {\n\t\t\tvar last = this.findChainEnd(pts, start);\n\t\t\tstartIndexList.add(new Integer(last));\n\t\t\tstart = last;\n\t\t} while (start < pts.length - 1);\n\t\tvar startIndex = MonotoneChainIndexer.toIntArray(startIndexList);\n\t\treturn startIndex;\n\t},\n\tfindChainEnd: function findChainEnd(pts, start) {\n\t\tvar chainQuad = Quadrant.quadrant(pts[start], pts[start + 1]);\n\t\tvar last = start + 1;\n\t\twhile (last < pts.length) {\n\t\t\tvar quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n\t\t\tif (quad !== chainQuad) break;\n\t\t\tlast++;\n\t\t}\n\t\treturn last - 1;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MonotoneChainIndexer;\n\t}\n});\nMonotoneChainIndexer.toIntArray = function (list) {\n\tvar array = new Array(list.size()).fill(null);\n\tfor (var i = 0; i < array.length; i++) {\n\t\tarray[i] = list.get(i).intValue();\n\t}\n\treturn array;\n};\n\nfunction MonotoneChainEdge() {\n\tthis.e = null;\n\tthis.pts = null;\n\tthis.startIndex = null;\n\tthis.env1 = new Envelope();\n\tthis.env2 = new Envelope();\n\tvar e = arguments[0];\n\tthis.e = e;\n\tthis.pts = e.getCoordinates();\n\tvar mcb = new MonotoneChainIndexer();\n\tthis.startIndex = mcb.getChainStartIndices(this.pts);\n}\nextend(MonotoneChainEdge.prototype, {\n\tgetCoordinates: function getCoordinates() {\n\t\treturn this.pts;\n\t},\n\tgetMaxX: function getMaxX(chainIndex) {\n\t\tvar x1 = this.pts[this.startIndex[chainIndex]].x;\n\t\tvar x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n\t\treturn x1 > x2 ? x1 : x2;\n\t},\n\tgetMinX: function getMinX(chainIndex) {\n\t\tvar x1 = this.pts[this.startIndex[chainIndex]].x;\n\t\tvar x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n\t\treturn x1 < x2 ? x1 : x2;\n\t},\n\tcomputeIntersectsForChain: function computeIntersectsForChain() {\n\t\tif (arguments.length === 4) {\n\t\t\tvar chainIndex0 = arguments[0],\n\t\t\t    mce = arguments[1],\n\t\t\t    chainIndex1 = arguments[2],\n\t\t\t    si = arguments[3];\n\t\t\tthis.computeIntersectsForChain(this.startIndex[chainIndex0], this.startIndex[chainIndex0 + 1], mce, mce.startIndex[chainIndex1], mce.startIndex[chainIndex1 + 1], si);\n\t\t} else if (arguments.length === 6) {\n\t\t\tvar start0 = arguments[0],\n\t\t\t    end0 = arguments[1],\n\t\t\t    _mce = arguments[2],\n\t\t\t    start1 = arguments[3],\n\t\t\t    end1 = arguments[4],\n\t\t\t    ei = arguments[5];\n\t\t\tvar p00 = this.pts[start0];\n\t\t\tvar p01 = this.pts[end0];\n\t\t\tvar p10 = _mce.pts[start1];\n\t\t\tvar p11 = _mce.pts[end1];\n\t\t\tif (end0 - start0 === 1 && end1 - start1 === 1) {\n\t\t\t\tei.addIntersections(this.e, start0, _mce.e, start1);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthis.env1.init(p00, p01);\n\t\t\tthis.env2.init(p10, p11);\n\t\t\tif (!this.env1.intersects(this.env2)) return null;\n\t\t\tvar mid0 = Math.trunc((start0 + end0) / 2);\n\t\t\tvar mid1 = Math.trunc((start1 + end1) / 2);\n\t\t\tif (start0 < mid0) {\n\t\t\t\tif (start1 < mid1) this.computeIntersectsForChain(start0, mid0, _mce, start1, mid1, ei);\n\t\t\t\tif (mid1 < end1) this.computeIntersectsForChain(start0, mid0, _mce, mid1, end1, ei);\n\t\t\t}\n\t\t\tif (mid0 < end0) {\n\t\t\t\tif (start1 < mid1) this.computeIntersectsForChain(mid0, end0, _mce, start1, mid1, ei);\n\t\t\t\tif (mid1 < end1) this.computeIntersectsForChain(mid0, end0, _mce, mid1, end1, ei);\n\t\t\t}\n\t\t}\n\t},\n\tgetStartIndexes: function getStartIndexes() {\n\t\treturn this.startIndex;\n\t},\n\tcomputeIntersects: function computeIntersects(mce, si) {\n\t\tfor (var i = 0; i < this.startIndex.length - 1; i++) {\n\t\t\tfor (var j = 0; j < mce.startIndex.length - 1; j++) {\n\t\t\t\tthis.computeIntersectsForChain(i, mce, j, si);\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MonotoneChainEdge;\n\t}\n});\n\nfunction Depth() {\n\tthis.depth = Array(2).fill().map(function () {\n\t\treturn Array(3);\n\t});\n\tfor (var i = 0; i < 2; i++) {\n\t\tfor (var j = 0; j < 3; j++) {\n\t\t\tthis.depth[i][j] = Depth.NULL_VALUE;\n\t\t}\n\t}\n}\nextend(Depth.prototype, {\n\tgetDepth: function getDepth(geomIndex, posIndex) {\n\t\treturn this.depth[geomIndex][posIndex];\n\t},\n\tsetDepth: function setDepth(geomIndex, posIndex, depthValue) {\n\t\tthis.depth[geomIndex][posIndex] = depthValue;\n\t},\n\tisNull: function isNull() {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\t\tif (this.depth[i][j] !== Depth.NULL_VALUE) return false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar geomIndex = arguments[0];\n\t\t\treturn this.depth[geomIndex][1] === Depth.NULL_VALUE;\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar _geomIndex = arguments[0],\n\t\t\t    posIndex = arguments[1];\n\t\t\treturn this.depth[_geomIndex][posIndex] === Depth.NULL_VALUE;\n\t\t}\n\t},\n\tnormalize: function normalize() {\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (!this.isNull(i)) {\n\t\t\t\tvar minDepth = this.depth[i][1];\n\t\t\t\tif (this.depth[i][2] < minDepth) minDepth = this.depth[i][2];\n\t\t\t\tif (minDepth < 0) minDepth = 0;\n\t\t\t\tfor (var j = 1; j < 3; j++) {\n\t\t\t\t\tvar newValue = 0;\n\t\t\t\t\tif (this.depth[i][j] > minDepth) newValue = 1;\n\t\t\t\t\tthis.depth[i][j] = newValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tgetDelta: function getDelta(geomIndex) {\n\t\treturn this.depth[geomIndex][Position.RIGHT] - this.depth[geomIndex][Position.LEFT];\n\t},\n\tgetLocation: function getLocation(geomIndex, posIndex) {\n\t\tif (this.depth[geomIndex][posIndex] <= 0) return Location.EXTERIOR;\n\t\treturn Location.INTERIOR;\n\t},\n\ttoString: function toString() {\n\t\treturn \"A: \" + this.depth[0][1] + \",\" + this.depth[0][2] + \" B: \" + this.depth[1][1] + \",\" + this.depth[1][2];\n\t},\n\tadd: function add() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar lbl = arguments[0];\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tfor (var j = 1; j < 3; j++) {\n\t\t\t\t\tvar loc = lbl.getLocation(i, j);\n\t\t\t\t\tif (loc === Location.EXTERIOR || loc === Location.INTERIOR) {\n\t\t\t\t\t\tif (this.isNull(i, j)) {\n\t\t\t\t\t\t\tthis.depth[i][j] = Depth.depthAtLocation(loc);\n\t\t\t\t\t\t} else this.depth[i][j] += Depth.depthAtLocation(loc);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tvar geomIndex = arguments[0],\n\t\t\t    posIndex = arguments[1],\n\t\t\t    location = arguments[2];\n\t\t\tif (location === Location.INTERIOR) this.depth[geomIndex][posIndex]++;\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Depth;\n\t}\n});\nDepth.depthAtLocation = function (location) {\n\tif (location === Location.EXTERIOR) return 0;\n\tif (location === Location.INTERIOR) return 1;\n\treturn Depth.NULL_VALUE;\n};\nDepth.NULL_VALUE = -1;\n\nfunction Edge() {\n\tGraphComponent.apply(this);\n\tthis.pts = null;\n\tthis.env = null;\n\tthis.eiList = new EdgeIntersectionList(this);\n\tthis.name = null;\n\tthis.mce = null;\n\tthis._isIsolated = true;\n\tthis.depth = new Depth();\n\tthis.depthDelta = 0;\n\tif (arguments.length === 1) {\n\t\tvar pts = arguments[0];\n\t\tEdge.call(this, pts, null);\n\t} else if (arguments.length === 2) {\n\t\tvar _pts = arguments[0],\n\t\t    label = arguments[1];\n\t\tthis.pts = _pts;\n\t\tthis.label = label;\n\t}\n}\ninherits(Edge, GraphComponent);\nextend(Edge.prototype, {\n\tgetDepth: function getDepth() {\n\t\treturn this.depth;\n\t},\n\tgetCollapsedEdge: function getCollapsedEdge() {\n\t\tvar newPts = new Array(2).fill(null);\n\t\tnewPts[0] = this.pts[0];\n\t\tnewPts[1] = this.pts[1];\n\t\tvar newe = new Edge(newPts, Label.toLineLabel(this.label));\n\t\treturn newe;\n\t},\n\tisIsolated: function isIsolated() {\n\t\treturn this._isIsolated;\n\t},\n\tgetCoordinates: function getCoordinates() {\n\t\treturn this.pts;\n\t},\n\tsetIsolated: function setIsolated(isIsolated) {\n\t\tthis._isIsolated = isIsolated;\n\t},\n\tsetName: function setName(name) {\n\t\tthis.name = name;\n\t},\n\tequals: function equals(o) {\n\t\tif (!(o instanceof Edge)) return false;\n\t\tvar e = o;\n\t\tif (this.pts.length !== e.pts.length) return false;\n\t\tvar isEqualForward = true;\n\t\tvar isEqualReverse = true;\n\t\tvar iRev = this.pts.length;\n\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\tif (!this.pts[i].equals2D(e.pts[i])) {\n\t\t\t\tisEqualForward = false;\n\t\t\t}\n\t\t\tif (!this.pts[i].equals2D(e.pts[--iRev])) {\n\t\t\t\tisEqualReverse = false;\n\t\t\t}\n\t\t\tif (!isEqualForward && !isEqualReverse) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this.pts.length > 0) return this.pts[0];\n\t\t\treturn null;\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar i = arguments[0];\n\t\t\treturn this.pts[i];\n\t\t}\n\t},\n\tprint: function print(out) {\n\t\tout.print(\"edge \" + this.name + \": \");\n\t\tout.print(\"LINESTRING (\");\n\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\tif (i > 0) out.print(\",\");\n\t\t\tout.print(this.pts[i].x + \" \" + this.pts[i].y);\n\t\t}\n\t\tout.print(\")  \" + this.label + \" \" + this.depthDelta);\n\t},\n\tcomputeIM: function computeIM(im) {\n\t\tEdge.updateIM(this.label, im);\n\t},\n\tisCollapsed: function isCollapsed() {\n\t\tif (!this.label.isArea()) return false;\n\t\tif (this.pts.length !== 3) return false;\n\t\tif (this.pts[0].equals(this.pts[2])) return true;\n\t\treturn false;\n\t},\n\tisClosed: function isClosed() {\n\t\treturn this.pts[0].equals(this.pts[this.pts.length - 1]);\n\t},\n\tgetMaximumSegmentIndex: function getMaximumSegmentIndex() {\n\t\treturn this.pts.length - 1;\n\t},\n\tgetDepthDelta: function getDepthDelta() {\n\t\treturn this.depthDelta;\n\t},\n\tgetNumPoints: function getNumPoints() {\n\t\treturn this.pts.length;\n\t},\n\tprintReverse: function printReverse(out) {\n\t\tout.print(\"edge \" + this.name + \": \");\n\t\tfor (var i = this.pts.length - 1; i >= 0; i--) {\n\t\t\tout.print(this.pts[i] + \" \");\n\t\t}\n\t\tout.println(\"\");\n\t},\n\tgetMonotoneChainEdge: function getMonotoneChainEdge() {\n\t\tif (this.mce === null) this.mce = new MonotoneChainEdge(this);\n\t\treturn this.mce;\n\t},\n\tgetEnvelope: function getEnvelope() {\n\t\tif (this.env === null) {\n\t\t\tthis.env = new Envelope();\n\t\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\t\tthis.env.expandToInclude(this.pts[i]);\n\t\t\t}\n\t\t}\n\t\treturn this.env;\n\t},\n\taddIntersection: function addIntersection(li, segmentIndex, geomIndex, intIndex) {\n\t\tvar intPt = new Coordinate(li.getIntersection(intIndex));\n\t\tvar normalizedSegmentIndex = segmentIndex;\n\t\tvar dist = li.getEdgeDistance(geomIndex, intIndex);\n\t\tvar nextSegIndex = normalizedSegmentIndex + 1;\n\t\tif (nextSegIndex < this.pts.length) {\n\t\t\tvar nextPt = this.pts[nextSegIndex];\n\t\t\tif (intPt.equals2D(nextPt)) {\n\t\t\t\tnormalizedSegmentIndex = nextSegIndex;\n\t\t\t\tdist = 0.0;\n\t\t\t}\n\t\t}\n\t\tvar ei = this.eiList.add(intPt, normalizedSegmentIndex, dist);\n\t},\n\ttoString: function toString() {\n\t\tvar buf = new StringBuffer();\n\t\tbuf.append(\"edge \" + this.name + \": \");\n\t\tbuf.append(\"LINESTRING (\");\n\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\tif (i > 0) buf.append(\",\");\n\t\t\tbuf.append(this.pts[i].x + \" \" + this.pts[i].y);\n\t\t}\n\t\tbuf.append(\")  \" + this.label + \" \" + this.depthDelta);\n\t\treturn buf.toString();\n\t},\n\tisPointwiseEqual: function isPointwiseEqual(e) {\n\t\tif (this.pts.length !== e.pts.length) return false;\n\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\tif (!this.pts[i].equals2D(e.pts[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tsetDepthDelta: function setDepthDelta(depthDelta) {\n\t\tthis.depthDelta = depthDelta;\n\t},\n\tgetEdgeIntersectionList: function getEdgeIntersectionList() {\n\t\treturn this.eiList;\n\t},\n\taddIntersections: function addIntersections(li, segmentIndex, geomIndex) {\n\t\tfor (var i = 0; i < li.getIntersectionNum(); i++) {\n\t\t\tthis.addIntersection(li, segmentIndex, geomIndex, i);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Edge;\n\t}\n});\nEdge.updateIM = function () {\n\tif (arguments.length === 2) {\n\t\tvar label = arguments[0],\n\t\t    im = arguments[1];\n\t\tim.setAtLeastIfValid(label.getLocation(0, Position.ON), label.getLocation(1, Position.ON), 1);\n\t\tif (label.isArea()) {\n\t\t\tim.setAtLeastIfValid(label.getLocation(0, Position.LEFT), label.getLocation(1, Position.LEFT), 2);\n\t\t\tim.setAtLeastIfValid(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), 2);\n\t\t}\n\t} else return GraphComponent.prototype.updateIM.apply(this, arguments);\n};\n\nfunction GeometryGraph() {\n\tPlanarGraph.apply(this);\n\tthis.parentGeom = null;\n\tthis.lineEdgeMap = new HashMap();\n\tthis.boundaryNodeRule = null;\n\tthis.useBoundaryDeterminationRule = true;\n\tthis.argIndex = null;\n\tthis.boundaryNodes = null;\n\tthis._hasTooFewPoints = false;\n\tthis.invalidPoint = null;\n\tthis.areaPtLocator = null;\n\tthis.ptLocator = new PointLocator();\n\tif (arguments.length === 2) {\n\t\tvar argIndex = arguments[0],\n\t\t    parentGeom = arguments[1];\n\t\tGeometryGraph.call(this, argIndex, parentGeom, BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE);\n\t} else if (arguments.length === 3) {\n\t\tvar _argIndex = arguments[0],\n\t\t    _parentGeom = arguments[1],\n\t\t    boundaryNodeRule = arguments[2];\n\t\tthis.argIndex = _argIndex;\n\t\tthis.parentGeom = _parentGeom;\n\t\tthis.boundaryNodeRule = boundaryNodeRule;\n\t\tif (_parentGeom !== null) {\n\t\t\tthis.add(_parentGeom);\n\t\t}\n\t}\n}\ninherits(GeometryGraph, PlanarGraph);\nextend(GeometryGraph.prototype, {\n\tinsertBoundaryPoint: function insertBoundaryPoint(argIndex, coord) {\n\t\tvar n = this.nodes.addNode(coord);\n\t\tvar lbl = n.getLabel();\n\t\tvar boundaryCount = 1;\n\t\tvar loc = Location.NONE;\n\t\tloc = lbl.getLocation(argIndex, Position.ON);\n\t\tif (loc === Location.BOUNDARY) boundaryCount++;\n\t\tvar newLoc = GeometryGraph.determineBoundary(this.boundaryNodeRule, boundaryCount);\n\t\tlbl.setLocation(argIndex, newLoc);\n\t},\n\tcomputeSelfNodes: function computeSelfNodes() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar li = arguments[0],\n\t\t\t    computeRingSelfNodes = arguments[1];\n\t\t\treturn this.computeSelfNodes(li, computeRingSelfNodes, false);\n\t\t} else if (arguments.length === 3) {\n\t\t\tvar _li = arguments[0],\n\t\t\t    _computeRingSelfNodes = arguments[1],\n\t\t\t    isDoneIfProperInt = arguments[2];\n\t\t\tvar si = new SegmentIntersector$1(_li, true, false);\n\t\t\tsi.setIsDoneIfProperInt(isDoneIfProperInt);\n\t\t\tvar esi = this.createEdgeSetIntersector();\n\t\t\tvar isRings = this.parentGeom instanceof LinearRing || this.parentGeom instanceof Polygon || this.parentGeom instanceof MultiPolygon;\n\t\t\tvar computeAllSegments = _computeRingSelfNodes || !isRings;\n\t\t\tesi.computeIntersections(this.edges, si, computeAllSegments);\n\t\t\tthis.addSelfIntersectionNodes(this.argIndex);\n\t\t\treturn si;\n\t\t}\n\t},\n\tcomputeSplitEdges: function computeSplitEdges(edgelist) {\n\t\tfor (var i = this.edges.iterator(); i.hasNext();) {\n\t\t\tvar e = i.next();\n\t\t\te.eiList.addSplitEdges(edgelist);\n\t\t}\n\t},\n\tcomputeEdgeIntersections: function computeEdgeIntersections(g, li, includeProper) {\n\t\tvar si = new SegmentIntersector$1(li, includeProper, true);\n\t\tsi.setBoundaryNodes(this.getBoundaryNodes(), g.getBoundaryNodes());\n\t\tvar esi = this.createEdgeSetIntersector();\n\t\tesi.computeIntersections(this.edges, g.edges, si);\n\t\treturn si;\n\t},\n\tgetGeometry: function getGeometry() {\n\t\treturn this.parentGeom;\n\t},\n\tgetBoundaryNodeRule: function getBoundaryNodeRule() {\n\t\treturn this.boundaryNodeRule;\n\t},\n\thasTooFewPoints: function hasTooFewPoints() {\n\t\treturn this._hasTooFewPoints;\n\t},\n\taddPoint: function addPoint() {\n\t\tif (arguments[0] instanceof Point) {\n\t\t\tvar p = arguments[0];\n\t\t\tvar coord = p.getCoordinate();\n\t\t\tthis.insertPoint(this.argIndex, coord, Location.INTERIOR);\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tvar pt = arguments[0];\n\t\t\tthis.insertPoint(this.argIndex, pt, Location.INTERIOR);\n\t\t}\n\t},\n\taddPolygon: function addPolygon(p) {\n\t\tthis.addPolygonRing(p.getExteriorRing(), Location.EXTERIOR, Location.INTERIOR);\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar hole = p.getInteriorRingN(i);\n\t\t\tthis.addPolygonRing(hole, Location.INTERIOR, Location.EXTERIOR);\n\t\t}\n\t},\n\taddEdge: function addEdge(e) {\n\t\tthis.insertEdge(e);\n\t\tvar coord = e.getCoordinates();\n\t\tthis.insertPoint(this.argIndex, coord[0], Location.BOUNDARY);\n\t\tthis.insertPoint(this.argIndex, coord[coord.length - 1], Location.BOUNDARY);\n\t},\n\taddLineString: function addLineString(line) {\n\t\tvar coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n\t\tif (coord.length < 2) {\n\t\t\tthis._hasTooFewPoints = true;\n\t\t\tthis.invalidPoint = coord[0];\n\t\t\treturn null;\n\t\t}\n\t\tvar e = new Edge(coord, new Label(this.argIndex, Location.INTERIOR));\n\t\tthis.lineEdgeMap.put(line, e);\n\t\tthis.insertEdge(e);\n\t\tAssert.isTrue(coord.length >= 2, \"found LineString with single point\");\n\t\tthis.insertBoundaryPoint(this.argIndex, coord[0]);\n\t\tthis.insertBoundaryPoint(this.argIndex, coord[coord.length - 1]);\n\t},\n\tgetInvalidPoint: function getInvalidPoint() {\n\t\treturn this.invalidPoint;\n\t},\n\tgetBoundaryPoints: function getBoundaryPoints() {\n\t\tvar coll = this.getBoundaryNodes();\n\t\tvar pts = new Array(coll.size()).fill(null);\n\t\tvar i = 0;\n\t\tfor (var it = coll.iterator(); it.hasNext();) {\n\t\t\tvar node = it.next();\n\t\t\tpts[i++] = node.getCoordinate().copy();\n\t\t}\n\t\treturn pts;\n\t},\n\tgetBoundaryNodes: function getBoundaryNodes() {\n\t\tif (this.boundaryNodes === null) this.boundaryNodes = this.nodes.getBoundaryNodes(this.argIndex);\n\t\treturn this.boundaryNodes;\n\t},\n\taddSelfIntersectionNode: function addSelfIntersectionNode(argIndex, coord, loc) {\n\t\tif (this.isBoundaryNode(argIndex, coord)) return null;\n\t\tif (loc === Location.BOUNDARY && this.useBoundaryDeterminationRule) this.insertBoundaryPoint(argIndex, coord);else this.insertPoint(argIndex, coord, loc);\n\t},\n\taddPolygonRing: function addPolygonRing(lr, cwLeft, cwRight) {\n\t\tif (lr.isEmpty()) return null;\n\t\tvar coord = CoordinateArrays.removeRepeatedPoints(lr.getCoordinates());\n\t\tif (coord.length < 4) {\n\t\t\tthis._hasTooFewPoints = true;\n\t\t\tthis.invalidPoint = coord[0];\n\t\t\treturn null;\n\t\t}\n\t\tvar left = cwLeft;\n\t\tvar right = cwRight;\n\t\tif (CGAlgorithms.isCCW(coord)) {\n\t\t\tleft = cwRight;\n\t\t\tright = cwLeft;\n\t\t}\n\t\tvar e = new Edge(coord, new Label(this.argIndex, Location.BOUNDARY, left, right));\n\t\tthis.lineEdgeMap.put(lr, e);\n\t\tthis.insertEdge(e);\n\t\tthis.insertPoint(this.argIndex, coord[0], Location.BOUNDARY);\n\t},\n\tinsertPoint: function insertPoint(argIndex, coord, onLocation) {\n\t\tvar n = this.nodes.addNode(coord);\n\t\tvar lbl = n.getLabel();\n\t\tif (lbl === null) {\n\t\t\tn.label = new Label(argIndex, onLocation);\n\t\t} else lbl.setLocation(argIndex, onLocation);\n\t},\n\tcreateEdgeSetIntersector: function createEdgeSetIntersector() {\n\t\treturn new SimpleMCSweepLineIntersector();\n\t},\n\taddSelfIntersectionNodes: function addSelfIntersectionNodes(argIndex) {\n\t\tfor (var i = this.edges.iterator(); i.hasNext();) {\n\t\t\tvar e = i.next();\n\t\t\tvar eLoc = e.getLabel().getLocation(argIndex);\n\t\t\tfor (var eiIt = e.eiList.iterator(); eiIt.hasNext();) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tthis.addSelfIntersectionNode(argIndex, ei.coord, eLoc);\n\t\t\t}\n\t\t}\n\t},\n\tadd: function add() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar g = arguments[0];\n\t\t\tif (g.isEmpty()) return null;\n\t\t\tif (g instanceof MultiPolygon) this.useBoundaryDeterminationRule = false;\n\t\t\tif (g instanceof Polygon) this.addPolygon(g);else if (g instanceof LineString) this.addLineString(g);else if (g instanceof Point) this.addPoint(g);else if (g instanceof MultiPoint) this.addCollection(g);else if (g instanceof MultiLineString) this.addCollection(g);else if (g instanceof MultiPolygon) this.addCollection(g);else if (g instanceof GeometryCollection) this.addCollection(g);else throw new UnsupportedOperationException(g.getClass().getName());\n\t\t} else return PlanarGraph.prototype.add.apply(this, arguments);\n\t},\n\taddCollection: function addCollection(gc) {\n\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\tvar g = gc.getGeometryN(i);\n\t\t\tthis.add(g);\n\t\t}\n\t},\n\tlocate: function locate(pt) {\n\t\tif (hasInterface(this.parentGeom, Polygonal) && this.parentGeom.getNumGeometries() > 50) {\n\t\t\tif (this.areaPtLocator === null) {\n\t\t\t\tthis.areaPtLocator = new IndexedPointInAreaLocator(this.parentGeom);\n\t\t\t}\n\t\t\treturn this.areaPtLocator.locate(pt);\n\t\t}\n\t\treturn this.ptLocator.locate(pt, this.parentGeom);\n\t},\n\tfindEdge: function findEdge() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar line = arguments[0];\n\t\t\treturn this.lineEdgeMap.get(line);\n\t\t} else return PlanarGraph.prototype.findEdge.apply(this, arguments);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryGraph;\n\t}\n});\nGeometryGraph.determineBoundary = function (boundaryNodeRule, boundaryCount) {\n\treturn boundaryNodeRule.isInBoundary(boundaryCount) ? Location.BOUNDARY : Location.INTERIOR;\n};\n\nfunction GeometryGraphOperation() {\n\tthis.li = new RobustLineIntersector();\n\tthis.resultPrecisionModel = null;\n\tthis.arg = null;\n\tif (arguments.length === 1) {\n\t\tvar g0 = arguments[0];\n\t\tthis.setComputationPrecision(g0.getPrecisionModel());\n\t\tthis.arg = new Array(1).fill(null);\n\t\tthis.arg[0] = new GeometryGraph(0, g0);\n\t\t\n\t} else if (arguments.length === 2) {\n\t\tvar _g = arguments[0],\n\t\t    g1 = arguments[1];\n\t\tGeometryGraphOperation.call(this, _g, g1, BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE);\n\t} else if (arguments.length === 3) {\n\t\tvar _g2 = arguments[0],\n\t\t    _g3 = arguments[1],\n\t\t    boundaryNodeRule = arguments[2];\n\t\tif (_g2.getPrecisionModel().compareTo(_g3.getPrecisionModel()) >= 0) this.setComputationPrecision(_g2.getPrecisionModel());else this.setComputationPrecision(_g3.getPrecisionModel());\n\t\tthis.arg = new Array(2).fill(null);\n\t\tthis.arg[0] = new GeometryGraph(0, _g2, boundaryNodeRule);\n\t\tthis.arg[1] = new GeometryGraph(1, _g3, boundaryNodeRule);\n\t}\n}\nextend(GeometryGraphOperation.prototype, {\n\tgetArgGeometry: function getArgGeometry(i) {\n\t\treturn this.arg[i].getGeometry();\n\t},\n\tsetComputationPrecision: function setComputationPrecision(pm) {\n\t\tthis.resultPrecisionModel = pm;\n\t\tthis.li.setPrecisionModel(this.resultPrecisionModel);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryGraphOperation;\n\t}\n});\n\nfunction OrientedCoordinateArray() {\n\tthis.pts = null;\n\tthis._orientation = null;\n\tvar pts = arguments[0];\n\tthis.pts = pts;\n\tthis._orientation = OrientedCoordinateArray.orientation(pts);\n}\nextend(OrientedCoordinateArray.prototype, {\n\tcompareTo: function compareTo(o1) {\n\t\tvar oca = o1;\n\t\tvar comp = OrientedCoordinateArray.compareOriented(this.pts, this._orientation, oca.pts, oca._orientation);\n\t\treturn comp;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn OrientedCoordinateArray;\n\t}\n});\nOrientedCoordinateArray.orientation = function (pts) {\n\treturn CoordinateArrays.increasingDirection(pts) === 1;\n};\nOrientedCoordinateArray.compareOriented = function (pts1, orientation1, pts2, orientation2) {\n\tvar dir1 = orientation1 ? 1 : -1;\n\tvar dir2 = orientation2 ? 1 : -1;\n\tvar limit1 = orientation1 ? pts1.length : -1;\n\tvar limit2 = orientation2 ? pts2.length : -1;\n\tvar i1 = orientation1 ? 0 : pts1.length - 1;\n\tvar i2 = orientation2 ? 0 : pts2.length - 1;\n\tvar comp = 0;\n\twhile (true) {\n\t\tvar compPt = pts1[i1].compareTo(pts2[i2]);\n\t\tif (compPt !== 0) return compPt;\n\t\ti1 += dir1;\n\t\ti2 += dir2;\n\t\tvar done1 = i1 === limit1;\n\t\tvar done2 = i2 === limit2;\n\t\tif (done1 && !done2) return -1;\n\t\tif (!done1 && done2) return 1;\n\t\tif (done1 && done2) return 0;\n\t}\n};\n\nfunction EdgeList() {\n\tthis.edges = new ArrayList();\n\tthis.ocaMap = new TreeMap();\n}\nextend(EdgeList.prototype, {\n\tprint: function print(out) {\n\t\tout.print(\"MULTILINESTRING ( \");\n\t\tfor (var j = 0; j < this.edges.size(); j++) {\n\t\t\tvar e = this.edges.get(j);\n\t\t\tif (j > 0) out.print(\",\");\n\t\t\tout.print(\"(\");\n\t\t\tvar pts = e.getCoordinates();\n\t\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\t\tif (i > 0) out.print(\",\");\n\t\t\t\tout.print(pts[i].x + \" \" + pts[i].y);\n\t\t\t}\n\t\t\tout.println(\")\");\n\t\t}\n\t\tout.print(\")  \");\n\t},\n\taddAll: function addAll(edgeColl) {\n\t\tfor (var i = edgeColl.iterator(); i.hasNext();) {\n\t\t\tthis.add(i.next());\n\t\t}\n\t},\n\tfindEdgeIndex: function findEdgeIndex(e) {\n\t\tfor (var i = 0; i < this.edges.size(); i++) {\n\t\t\tif (this.edges.get(i).equals(e)) return i;\n\t\t}\n\t\treturn -1;\n\t},\n\titerator: function iterator() {\n\t\treturn this.edges.iterator();\n\t},\n\tgetEdges: function getEdges() {\n\t\treturn this.edges;\n\t},\n\tget: function get(i) {\n\t\treturn this.edges.get(i);\n\t},\n\tfindEqualEdge: function findEqualEdge(e) {\n\t\tvar oca = new OrientedCoordinateArray(e.getCoordinates());\n\t\tvar matchEdge = this.ocaMap.get(oca);\n\t\treturn matchEdge;\n\t},\n\tadd: function add(e) {\n\t\tthis.edges.add(e);\n\t\tvar oca = new OrientedCoordinateArray(e.getCoordinates());\n\t\tthis.ocaMap.put(oca, e);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EdgeList;\n\t}\n});\n\nfunction OverlayOp() {\n\tthis.ptLocator = new PointLocator();\n\tthis.geomFact = null;\n\tthis.resultGeom = null;\n\tthis.graph = null;\n\tthis.edgeList = new EdgeList();\n\tthis.resultPolyList = new ArrayList();\n\tthis.resultLineList = new ArrayList();\n\tthis.resultPointList = new ArrayList();\n\tvar g0 = arguments[0],\n\t    g1 = arguments[1];\n\tGeometryGraphOperation.call(this, g0, g1);\n\tthis.graph = new PlanarGraph(new OverlayNodeFactory());\n\tthis.geomFact = g0.getFactory();\n}\ninherits(OverlayOp, GeometryGraphOperation);\nextend(OverlayOp.prototype, {\n\tinsertUniqueEdge: function insertUniqueEdge(e) {\n\t\tvar existingEdge = this.edgeList.findEqualEdge(e);\n\t\tif (existingEdge !== null) {\n\t\t\tvar existingLabel = existingEdge.getLabel();\n\t\t\tvar labelToMerge = e.getLabel();\n\t\t\tif (!existingEdge.isPointwiseEqual(e)) {\n\t\t\t\tlabelToMerge = new Label(e.getLabel());\n\t\t\t\tlabelToMerge.flip();\n\t\t\t}\n\t\t\tvar depth = existingEdge.getDepth();\n\t\t\tif (depth.isNull()) {\n\t\t\t\tdepth.add(existingLabel);\n\t\t\t}\n\t\t\tdepth.add(labelToMerge);\n\t\t\texistingLabel.merge(labelToMerge);\n\t\t} else {\n\t\t\tthis.edgeList.add(e);\n\t\t}\n\t},\n\tgetGraph: function getGraph() {\n\t\treturn this.graph;\n\t},\n\tcancelDuplicateResultEdges: function cancelDuplicateResultEdges() {\n\t\tfor (var it = this.graph.getEdgeEnds().iterator(); it.hasNext();) {\n\t\t\tvar de = it.next();\n\t\t\tvar sym = de.getSym();\n\t\t\tif (de.isInResult() && sym.isInResult()) {\n\t\t\t\tde.setInResult(false);\n\t\t\t\tsym.setInResult(false);\n\t\t\t}\n\t\t}\n\t},\n\tisCoveredByLA: function isCoveredByLA(coord) {\n\t\tif (this.isCovered(coord, this.resultLineList)) return true;\n\t\tif (this.isCovered(coord, this.resultPolyList)) return true;\n\t\treturn false;\n\t},\n\tcomputeGeometry: function computeGeometry(resultPointList, resultLineList, resultPolyList, opcode) {\n\t\tvar geomList = new ArrayList();\n\t\tgeomList.addAll(resultPointList);\n\t\tgeomList.addAll(resultLineList);\n\t\tgeomList.addAll(resultPolyList);\n\t\tif (geomList.isEmpty()) return OverlayOp.createEmptyResult(opcode, this.arg[0].getGeometry(), this.arg[1].getGeometry(), this.geomFact);\n\t\treturn this.geomFact.buildGeometry(geomList);\n\t},\n\tmergeSymLabels: function mergeSymLabels() {\n\t\tfor (var nodeit = this.graph.getNodes().iterator(); nodeit.hasNext();) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().mergeSymLabels();\n\t\t}\n\t},\n\tisCovered: function isCovered(coord, geomList) {\n\t\tfor (var it = geomList.iterator(); it.hasNext();) {\n\t\t\tvar geom = it.next();\n\t\t\tvar loc = this.ptLocator.locate(coord, geom);\n\t\t\tif (loc !== Location.EXTERIOR) return true;\n\t\t}\n\t\treturn false;\n\t},\n\treplaceCollapsedEdges: function replaceCollapsedEdges() {\n\t\tvar newEdges = new ArrayList();\n\t\tfor (var it = this.edgeList.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\tif (e.isCollapsed()) {\n\t\t\t\tit.remove();\n\t\t\t\tnewEdges.add(e.getCollapsedEdge());\n\t\t\t}\n\t\t}\n\t\tthis.edgeList.addAll(newEdges);\n\t},\n\tupdateNodeLabelling: function updateNodeLabelling() {\n\t\tfor (var nodeit = this.graph.getNodes().iterator(); nodeit.hasNext();) {\n\t\t\tvar node = nodeit.next();\n\t\t\tvar lbl = node.getEdges().getLabel();\n\t\t\tnode.getLabel().merge(lbl);\n\t\t}\n\t},\n\tgetResultGeometry: function getResultGeometry(overlayOpCode) {\n\t\tthis.computeOverlay(overlayOpCode);\n\t\treturn this.resultGeom;\n\t},\n\tinsertUniqueEdges: function insertUniqueEdges(edges) {\n\t\tfor (var i = edges.iterator(); i.hasNext();) {\n\t\t\tvar e = i.next();\n\t\t\tthis.insertUniqueEdge(e);\n\t\t}\n\t},\n\tcomputeOverlay: function computeOverlay(opCode) {\n\t\tthis.copyPoints(0);\n\t\tthis.copyPoints(1);\n\t\tthis.arg[0].computeSelfNodes(this.li, false);\n\t\tthis.arg[1].computeSelfNodes(this.li, false);\n\t\tthis.arg[0].computeEdgeIntersections(this.arg[1], this.li, true);\n\t\tvar baseSplitEdges = new ArrayList();\n\t\tthis.arg[0].computeSplitEdges(baseSplitEdges);\n\t\tthis.arg[1].computeSplitEdges(baseSplitEdges);\n\t\tvar splitEdges = baseSplitEdges;\n\t\tthis.insertUniqueEdges(baseSplitEdges);\n\t\tthis.computeLabelsFromDepths();\n\t\tthis.replaceCollapsedEdges();\n\t\tEdgeNodingValidator.checkValid(this.edgeList.getEdges());\n\t\tthis.graph.addEdges(this.edgeList.getEdges());\n\t\tthis.computeLabelling();\n\t\tthis.labelIncompleteNodes();\n\t\tthis.findResultAreaEdges(opCode);\n\t\tthis.cancelDuplicateResultEdges();\n\t\tvar polyBuilder = new PolygonBuilder(this.geomFact);\n\t\tpolyBuilder.add(this.graph);\n\t\tthis.resultPolyList = polyBuilder.getPolygons();\n\t\tvar lineBuilder = new LineBuilder(this, this.geomFact, this.ptLocator);\n\t\tthis.resultLineList = lineBuilder.build(opCode);\n\t\tvar pointBuilder = new PointBuilder(this, this.geomFact, this.ptLocator);\n\t\tthis.resultPointList = pointBuilder.build(opCode);\n\t\tthis.resultGeom = this.computeGeometry(this.resultPointList, this.resultLineList, this.resultPolyList, opCode);\n\t},\n\tlabelIncompleteNode: function labelIncompleteNode(n, targetIndex) {\n\t\tvar loc = this.ptLocator.locate(n.getCoordinate(), this.arg[targetIndex].getGeometry());\n\t\tn.getLabel().setLocation(targetIndex, loc);\n\t},\n\tcopyPoints: function copyPoints(argIndex) {\n\t\tfor (var i = this.arg[argIndex].getNodeIterator(); i.hasNext();) {\n\t\t\tvar graphNode = i.next();\n\t\t\tvar newNode = this.graph.addNode(graphNode.getCoordinate());\n\t\t\tnewNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n\t\t}\n\t},\n\tfindResultAreaEdges: function findResultAreaEdges(opCode) {\n\t\tfor (var it = this.graph.getEdgeEnds().iterator(); it.hasNext();) {\n\t\t\tvar de = it.next();\n\t\t\tvar label = de.getLabel();\n\t\t\tif (label.isArea() && !de.isInteriorAreaEdge() && OverlayOp.isResultOfOp(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), opCode)) {\n\t\t\t\tde.setInResult(true);\n\t\t\t}\n\t\t}\n\t},\n\tcomputeLabelsFromDepths: function computeLabelsFromDepths() {\n\t\tfor (var it = this.edgeList.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\tvar lbl = e.getLabel();\n\t\t\tvar depth = e.getDepth();\n\t\t\tif (!depth.isNull()) {\n\t\t\t\tdepth.normalize();\n\t\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\t\tif (!lbl.isNull(i) && lbl.isArea() && !depth.isNull(i)) {\n\t\t\t\t\t\tif (depth.getDelta(i) === 0) {\n\t\t\t\t\t\t\tlbl.toLine(i);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tAssert.isTrue(!depth.isNull(i, Position.LEFT), \"depth of LEFT side has not been initialized\");\n\t\t\t\t\t\t\tlbl.setLocation(i, Position.LEFT, depth.getLocation(i, Position.LEFT));\n\t\t\t\t\t\t\tAssert.isTrue(!depth.isNull(i, Position.RIGHT), \"depth of RIGHT side has not been initialized\");\n\t\t\t\t\t\t\tlbl.setLocation(i, Position.RIGHT, depth.getLocation(i, Position.RIGHT));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcomputeLabelling: function computeLabelling() {\n\t\tfor (var nodeit = this.graph.getNodes().iterator(); nodeit.hasNext();) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().computeLabelling(this.arg);\n\t\t}\n\t\tthis.mergeSymLabels();\n\t\tthis.updateNodeLabelling();\n\t},\n\tlabelIncompleteNodes: function labelIncompleteNodes() {\n\t\tvar nodeCount = 0;\n\t\tfor (var ni = this.graph.getNodes().iterator(); ni.hasNext();) {\n\t\t\tvar n = ni.next();\n\t\t\tvar label = n.getLabel();\n\t\t\tif (n.isIsolated()) {\n\t\t\t\tnodeCount++;\n\t\t\t\tif (label.isNull(0)) this.labelIncompleteNode(n, 0);else this.labelIncompleteNode(n, 1);\n\t\t\t}\n\t\t\tn.getEdges().updateLabelling(label);\n\t\t}\n\t},\n\tisCoveredByA: function isCoveredByA(coord) {\n\t\tif (this.isCovered(coord, this.resultPolyList)) return true;\n\t\treturn false;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn OverlayOp;\n\t}\n});\nOverlayOp.overlayOp = function (geom0, geom1, opCode) {\n\tvar gov = new OverlayOp(geom0, geom1);\n\tvar geomOv = gov.getResultGeometry(opCode);\n\treturn geomOv;\n};\nOverlayOp.intersection = function (g, other) {\n\tif (g.isEmpty() || other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, g, other, g.getFactory());\n\tif (g.isGeometryCollection()) {\n\t\tvar g2 = other;\n\t\treturn GeometryCollectionMapper.map(g, {\n\t\t\tinterfaces_: function interfaces_() {\n\t\t\t\treturn [MapOp];\n\t\t\t},\n\t\t\tmap: function map(g) {\n\t\t\t\treturn g.intersection(g2);\n\t\t\t}\n\t\t});\n\t}\n\tg.checkNotGeometryCollection(g);\n\tg.checkNotGeometryCollection(other);\n\treturn SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.INTERSECTION);\n};\nOverlayOp.symDifference = function (g, other) {\n\tif (g.isEmpty() || other.isEmpty()) {\n\t\tif (g.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, g, other, g.getFactory());\n\t\tif (g.isEmpty()) return other.copy();\n\t\tif (other.isEmpty()) return g.copy();\n\t}\n\tg.checkNotGeometryCollection(g);\n\tg.checkNotGeometryCollection(other);\n\treturn SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.SYMDIFFERENCE);\n};\nOverlayOp.resultDimension = function (opCode, g0, g1) {\n\tvar dim0 = g0.getDimension();\n\tvar dim1 = g1.getDimension();\n\tvar resultDimension = -1;\n\tswitch (opCode) {\n\t\tcase OverlayOp.INTERSECTION:\n\t\t\tresultDimension = Math.min(dim0, dim1);\n\t\t\tbreak;\n\t\tcase OverlayOp.UNION:\n\t\t\tresultDimension = Math.max(dim0, dim1);\n\t\t\tbreak;\n\t\tcase OverlayOp.DIFFERENCE:\n\t\t\tresultDimension = dim0;\n\t\t\tbreak;\n\t\tcase OverlayOp.SYMDIFFERENCE:\n\t\t\tresultDimension = Math.max(dim0, dim1);\n\t\t\tbreak;\n\t}\n\treturn resultDimension;\n};\nOverlayOp.createEmptyResult = function (overlayOpCode, a, b, geomFact) {\n\tvar result = null;\n\tswitch (OverlayOp.resultDimension(overlayOpCode, a, b)) {\n\t\tcase -1:\n\t\t\tresult = geomFact.createGeometryCollection(new Array(0).fill(null));\n\t\t\tbreak;\n\t\tcase 0:\n\t\t\tresult = geomFact.createPoint();\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tresult = geomFact.createLineString();\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tresult = geomFact.createPolygon();\n\t\t\tbreak;\n\t}\n\treturn result;\n};\nOverlayOp.difference = function (g, other) {\n\tif (g.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, g, other, g.getFactory());\n\tif (other.isEmpty()) return g.copy();\n\tg.checkNotGeometryCollection(g);\n\tg.checkNotGeometryCollection(other);\n\treturn SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.DIFFERENCE);\n};\nOverlayOp.isResultOfOp = function () {\n\tif (arguments.length === 2) {\n\t\tvar label = arguments[0],\n\t\t    opCode = arguments[1];\n\t\tvar loc0 = label.getLocation(0);\n\t\tvar loc1 = label.getLocation(1);\n\t\treturn OverlayOp.isResultOfOp(loc0, loc1, opCode);\n\t} else if (arguments.length === 3) {\n\t\tvar _loc = arguments[0],\n\t\t    _loc2 = arguments[1],\n\t\t    overlayOpCode = arguments[2];\n\t\tif (_loc === Location.BOUNDARY) _loc = Location.INTERIOR;\n\t\tif (_loc2 === Location.BOUNDARY) _loc2 = Location.INTERIOR;\n\t\tswitch (overlayOpCode) {\n\t\t\tcase OverlayOp.INTERSECTION:\n\t\t\t\treturn _loc === Location.INTERIOR && _loc2 === Location.INTERIOR;\n\t\t\tcase OverlayOp.UNION:\n\t\t\t\treturn _loc === Location.INTERIOR || _loc2 === Location.INTERIOR;\n\t\t\tcase OverlayOp.DIFFERENCE:\n\t\t\t\treturn _loc === Location.INTERIOR && _loc2 !== Location.INTERIOR;\n\t\t\tcase OverlayOp.SYMDIFFERENCE:\n\t\t\t\treturn _loc === Location.INTERIOR && _loc2 !== Location.INTERIOR || _loc !== Location.INTERIOR && _loc2 === Location.INTERIOR;\n\t\t}\n\t\treturn false;\n\t}\n};\nOverlayOp.INTERSECTION = 1;\nOverlayOp.UNION = 2;\nOverlayOp.DIFFERENCE = 3;\nOverlayOp.SYMDIFFERENCE = 4;\n\nfunction SnapOverlayOp() {\n\tthis.geom = new Array(2).fill(null);\n\tthis.snapTolerance = null;\n\tthis.cbr = null;\n\tvar g1 = arguments[0],\n\t    g2 = arguments[1];\n\tthis.geom[0] = g1;\n\tthis.geom[1] = g2;\n\tthis.computeSnapTolerance();\n}\nextend(SnapOverlayOp.prototype, {\n\tselfSnap: function selfSnap(geom) {\n\t\tvar snapper0 = new GeometrySnapper(geom);\n\t\tvar snapGeom = snapper0.snapTo(geom, this.snapTolerance);\n\t\treturn snapGeom;\n\t},\n\tremoveCommonBits: function removeCommonBits(geom) {\n\t\tthis.cbr = new CommonBitsRemover();\n\t\tthis.cbr.add(geom[0]);\n\t\tthis.cbr.add(geom[1]);\n\t\tvar remGeom = new Array(2).fill(null);\n\t\tremGeom[0] = this.cbr.removeCommonBits(geom[0].copy());\n\t\tremGeom[1] = this.cbr.removeCommonBits(geom[1].copy());\n\t\treturn remGeom;\n\t},\n\tprepareResult: function prepareResult(geom) {\n\t\tthis.cbr.addCommonBits(geom);\n\t\treturn geom;\n\t},\n\tgetResultGeometry: function getResultGeometry(opCode) {\n\t\tvar prepGeom = this.snap(this.geom);\n\t\tvar result = OverlayOp.overlayOp(prepGeom[0], prepGeom[1], opCode);\n\t\treturn this.prepareResult(result);\n\t},\n\tcheckValid: function checkValid(g) {\n\t\tif (!g.isValid()) {\n\t\t\tSystem.out.println(\"Snapped geometry is invalid\");\n\t\t}\n\t},\n\tcomputeSnapTolerance: function computeSnapTolerance() {\n\t\tthis.snapTolerance = GeometrySnapper.computeOverlaySnapTolerance(this.geom[0], this.geom[1]);\n\t},\n\tsnap: function snap(geom) {\n\t\tvar remGeom = this.removeCommonBits(geom);\n\t\tvar snapGeom = GeometrySnapper.snap(remGeom[0], remGeom[1], this.snapTolerance);\n\t\treturn snapGeom;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SnapOverlayOp;\n\t}\n});\nSnapOverlayOp.overlayOp = function (g0, g1, opCode) {\n\tvar op = new SnapOverlayOp(g0, g1);\n\treturn op.getResultGeometry(opCode);\n};\nSnapOverlayOp.union = function (g0, g1) {\n\treturn SnapOverlayOp.overlayOp(g0, g1, OverlayOp.UNION);\n};\nSnapOverlayOp.intersection = function (g0, g1) {\n\treturn SnapOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION);\n};\nSnapOverlayOp.symDifference = function (g0, g1) {\n\treturn SnapOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE);\n};\nSnapOverlayOp.difference = function (g0, g1) {\n\treturn SnapOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE);\n};\n\nfunction SnapIfNeededOverlayOp() {\n\tthis.geom = new Array(2).fill(null);\n\tvar g1 = arguments[0],\n\t    g2 = arguments[1];\n\tthis.geom[0] = g1;\n\tthis.geom[1] = g2;\n}\nextend(SnapIfNeededOverlayOp.prototype, {\n\tgetResultGeometry: function getResultGeometry(opCode) {\n\t\tvar result = null;\n\t\tvar isSuccess = false;\n\t\tvar savedException = null;\n\t\ttry {\n\t\t\tresult = OverlayOp.overlayOp(this.geom[0], this.geom[1], opCode);\n\t\t\tvar isValid = true;\n\t\t\tif (isValid) isSuccess = true;\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof RuntimeException) {\n\t\t\t\tsavedException = ex;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t\tif (!isSuccess) {\n\t\t\ttry {\n\t\t\t\tresult = SnapOverlayOp.overlayOp(this.geom[0], this.geom[1], opCode);\n\t\t\t} catch (ex) {\n\t\t\t\tif (ex instanceof RuntimeException) {\n\t\t\t\t\tthrow savedException;\n\t\t\t\t} else throw ex;\n\t\t\t} finally {}\n\t\t}\n\t\treturn result;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SnapIfNeededOverlayOp;\n\t}\n});\nSnapIfNeededOverlayOp.overlayOp = function (g0, g1, opCode) {\n\tvar op = new SnapIfNeededOverlayOp(g0, g1);\n\treturn op.getResultGeometry(opCode);\n};\nSnapIfNeededOverlayOp.union = function (g0, g1) {\n\treturn SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.UNION);\n};\nSnapIfNeededOverlayOp.intersection = function (g0, g1) {\n\treturn SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION);\n};\nSnapIfNeededOverlayOp.symDifference = function (g0, g1) {\n\treturn SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE);\n};\nSnapIfNeededOverlayOp.difference = function (g0, g1) {\n\treturn SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE);\n};\n\nfunction InteriorPointArea() {\n\tthis.factory = null;\n\tthis.interiorPoint = null;\n\tthis.maxWidth = 0.0;\n\tvar g = arguments[0];\n\tthis.factory = g.getFactory();\n\tthis.add(g);\n}\nextend(InteriorPointArea.prototype, {\n\taddPolygon: function addPolygon(geometry) {\n\t\tif (geometry.isEmpty()) return null;\n\t\tvar intPt = null;\n\t\tvar width = 0;\n\t\tvar bisector = this.horizontalBisector(geometry);\n\t\tif (bisector.getLength() === 0.0) {\n\t\t\twidth = 0;\n\t\t\tintPt = bisector.getCoordinate();\n\t\t} else {\n\t\t\tvar intersections = SnapIfNeededOverlayOp.overlayOp(bisector, geometry, OverlayOp.INTERSECTION);\n\t\t\tvar widestIntersection = this.widestGeometry(intersections);\n\t\t\twidth = widestIntersection.getEnvelopeInternal().getWidth();\n\t\t\tintPt = InteriorPointArea.centre(widestIntersection.getEnvelopeInternal());\n\t\t}\n\t\tif (this.interiorPoint === null || width > this.maxWidth) {\n\t\t\tthis.interiorPoint = intPt;\n\t\t\tthis.maxWidth = width;\n\t\t}\n\t},\n\tgetInteriorPoint: function getInteriorPoint() {\n\t\treturn this.interiorPoint;\n\t},\n\twidestGeometry: function widestGeometry() {\n\t\tif (arguments[0] instanceof GeometryCollection) {\n\t\t\tvar gc = arguments[0];\n\t\t\tif (gc.isEmpty()) {\n\t\t\t\treturn gc;\n\t\t\t}\n\t\t\tvar widestGeometry = gc.getGeometryN(0);\n\t\t\tfor (var i = 1; i < gc.getNumGeometries(); i++) {\n\t\t\t\tif (gc.getGeometryN(i).getEnvelopeInternal().getWidth() > widestGeometry.getEnvelopeInternal().getWidth()) {\n\t\t\t\t\twidestGeometry = gc.getGeometryN(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn widestGeometry;\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tvar geometry = arguments[0];\n\t\t\tif (!(geometry instanceof GeometryCollection)) {\n\t\t\t\treturn geometry;\n\t\t\t}\n\t\t\treturn this.widestGeometry(geometry);\n\t\t}\n\t},\n\thorizontalBisector: function horizontalBisector(geometry) {\n\t\tvar envelope = geometry.getEnvelopeInternal();\n\t\tvar bisectY = SafeBisectorFinder.getBisectorY(geometry);\n\t\treturn this.factory.createLineString([new Coordinate(envelope.getMinX(), bisectY), new Coordinate(envelope.getMaxX(), bisectY)]);\n\t},\n\tadd: function add(geom) {\n\t\tif (geom instanceof Polygon) {\n\t\t\tthis.addPolygon(geom);\n\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\tvar gc = geom;\n\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\tthis.add(gc.getGeometryN(i));\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn InteriorPointArea;\n\t}\n});\nInteriorPointArea.centre = function (envelope) {\n\treturn new Coordinate(InteriorPointArea.avg(envelope.getMinX(), envelope.getMaxX()), InteriorPointArea.avg(envelope.getMinY(), envelope.getMaxY()));\n};\nInteriorPointArea.avg = function (a, b) {\n\treturn (a + b) / 2.0;\n};\nfunction SafeBisectorFinder() {\n\tthis.poly = null;\n\tthis.centreY = null;\n\tthis.hiY = Double.MAX_VALUE;\n\tthis.loY = -Double.MAX_VALUE;\n\tvar poly = arguments[0];\n\tthis.poly = poly;\n\tthis.hiY = poly.getEnvelopeInternal().getMaxY();\n\tthis.loY = poly.getEnvelopeInternal().getMinY();\n\tthis.centreY = InteriorPointArea.avg(this.loY, this.hiY);\n}\nextend(SafeBisectorFinder.prototype, {\n\tupdateInterval: function updateInterval(y) {\n\t\tif (y <= this.centreY) {\n\t\t\tif (y > this.loY) this.loY = y;\n\t\t} else if (y > this.centreY) {\n\t\t\tif (y < this.hiY) {\n\t\t\t\tthis.hiY = y;\n\t\t\t}\n\t\t}\n\t},\n\tgetBisectorY: function getBisectorY() {\n\t\tthis.process(this.poly.getExteriorRing());\n\t\tfor (var i = 0; i < this.poly.getNumInteriorRing(); i++) {\n\t\t\tthis.process(this.poly.getInteriorRingN(i));\n\t\t}\n\t\tvar bisectY = InteriorPointArea.avg(this.hiY, this.loY);\n\t\treturn bisectY;\n\t},\n\tprocess: function process(line) {\n\t\tvar seq = line.getCoordinateSequence();\n\t\tfor (var i = 0; i < seq.size(); i++) {\n\t\t\tvar y = seq.getY(i);\n\t\t\tthis.updateInterval(y);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SafeBisectorFinder;\n\t}\n});\nSafeBisectorFinder.getBisectorY = function (poly) {\n\tvar finder = new SafeBisectorFinder(poly);\n\treturn finder.getBisectorY();\n};\nInteriorPointArea.SafeBisectorFinder = SafeBisectorFinder;\n\nfunction InteriorPointLine() {\n\tthis.centroid = null;\n\tthis.minDistance = Double.MAX_VALUE;\n\tthis.interiorPoint = null;\n\tvar g = arguments[0];\n\tthis.centroid = g.getCentroid().getCoordinate();\n\tthis.addInterior(g);\n\tif (this.interiorPoint === null) this.addEndpoints(g);\n}\nextend(InteriorPointLine.prototype, {\n\taddEndpoints: function addEndpoints() {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tvar geom = arguments[0];\n\t\t\tif (geom instanceof LineString) {\n\t\t\t\tthis.addEndpoints(geom.getCoordinates());\n\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\tvar gc = geom;\n\t\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\t\tthis.addEndpoints(gc.getGeometryN(i));\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Array) {\n\t\t\tvar pts = arguments[0];\n\t\t\tthis.add(pts[0]);\n\t\t\tthis.add(pts[pts.length - 1]);\n\t\t}\n\t},\n\tgetInteriorPoint: function getInteriorPoint() {\n\t\treturn this.interiorPoint;\n\t},\n\taddInterior: function addInterior() {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tvar geom = arguments[0];\n\t\t\tif (geom instanceof LineString) {\n\t\t\t\tthis.addInterior(geom.getCoordinates());\n\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\tvar gc = geom;\n\t\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\t\tthis.addInterior(gc.getGeometryN(i));\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Array) {\n\t\t\tvar pts = arguments[0];\n\t\t\tfor (var i = 1; i < pts.length - 1; i++) {\n\t\t\t\tthis.add(pts[i]);\n\t\t\t}\n\t\t}\n\t},\n\tadd: function add(point) {\n\t\tvar dist = point.distance(this.centroid);\n\t\tif (dist < this.minDistance) {\n\t\t\tthis.interiorPoint = new Coordinate(point);\n\t\t\tthis.minDistance = dist;\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn InteriorPointLine;\n\t}\n});\n\nfunction InteriorPointPoint() {\n\tthis.centroid = null;\n\tthis.minDistance = Double.MAX_VALUE;\n\tthis.interiorPoint = null;\n\tvar g = arguments[0];\n\tthis.centroid = g.getCentroid().getCoordinate();\n\tthis.add(g);\n}\nextend(InteriorPointPoint.prototype, {\n\tgetInteriorPoint: function getInteriorPoint() {\n\t\treturn this.interiorPoint;\n\t},\n\tadd: function add() {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tvar geom = arguments[0];\n\t\t\tif (geom instanceof Point) {\n\t\t\t\tthis.add(geom.getCoordinate());\n\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\tvar gc = geom;\n\t\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\t\tthis.add(gc.getGeometryN(i));\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tvar point = arguments[0];\n\t\t\tvar dist = point.distance(this.centroid);\n\t\t\tif (dist < this.minDistance) {\n\t\t\t\tthis.interiorPoint = new Coordinate(point);\n\t\t\t\tthis.minDistance = dist;\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn InteriorPointPoint;\n\t}\n});\n\nfunction MonotoneChainSelectAction() {\n\tthis.tempEnv1 = new Envelope();\n\tthis.selectedSegment = new LineSegment();\n}\nextend(MonotoneChainSelectAction.prototype, {\n\tselect: function select() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar seg = arguments[0];\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar mc = arguments[0],\n\t\t\t    startIndex = arguments[1];\n\t\t\tmc.getLineSegment(startIndex, this.selectedSegment);\n\t\t\tthis.select(this.selectedSegment);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MonotoneChainSelectAction;\n\t}\n});\n\nfunction NodeBase() {\n\tthis.items = new ArrayList();\n\tthis.subnode = [null, null];\n}\nextend(NodeBase.prototype, {\n\thasChildren: function hasChildren() {\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this.subnode[i] !== null) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tisPrunable: function isPrunable() {\n\t\treturn !(this.hasChildren() || this.hasItems());\n\t},\n\taddAllItems: function addAllItems(items) {\n\t\titems.addAll(this.items);\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this.subnode[i] !== null) {\n\t\t\t\tthis.subnode[i].addAllItems(items);\n\t\t\t}\n\t\t}\n\t\treturn items;\n\t},\n\tsize: function size() {\n\t\tvar subSize = 0;\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this.subnode[i] !== null) {\n\t\t\t\tsubSize += this.subnode[i].size();\n\t\t\t}\n\t\t}\n\t\treturn subSize + this.items.size();\n\t},\n\taddAllItemsFromOverlapping: function addAllItemsFromOverlapping(interval, resultItems) {\n\t\tif (interval !== null && !this.isSearchMatch(interval)) return null;\n\t\tresultItems.addAll(this.items);\n\t\tif (this.subnode[0] !== null) this.subnode[0].addAllItemsFromOverlapping(interval, resultItems);\n\t\tif (this.subnode[1] !== null) this.subnode[1].addAllItemsFromOverlapping(interval, resultItems);\n\t},\n\thasItems: function hasItems() {\n\t\treturn !this.items.isEmpty();\n\t},\n\tremove: function remove(itemInterval, item) {\n\t\tif (!this.isSearchMatch(itemInterval)) return false;\n\t\tvar found = false;\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this.subnode[i] !== null) {\n\t\t\t\tfound = this.subnode[i].remove(itemInterval, item);\n\t\t\t\tif (found) {\n\t\t\t\t\tif (this.subnode[i].isPrunable()) this.subnode[i] = null;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (found) return found;\n\t\tfound = this.items.remove(item);\n\t\treturn found;\n\t},\n\tgetItems: function getItems() {\n\t\treturn this.items;\n\t},\n\tdepth: function depth() {\n\t\tvar maxSubDepth = 0;\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this.subnode[i] !== null) {\n\t\t\t\tvar sqd = this.subnode[i].depth();\n\t\t\t\tif (sqd > maxSubDepth) maxSubDepth = sqd;\n\t\t\t}\n\t\t}\n\t\treturn maxSubDepth + 1;\n\t},\n\tnodeSize: function nodeSize() {\n\t\tvar subSize = 0;\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this.subnode[i] !== null) {\n\t\t\t\tsubSize += this.subnode[i].nodeSize();\n\t\t\t}\n\t\t}\n\t\treturn subSize + 1;\n\t},\n\tadd: function add(item) {\n\t\tthis.items.add(item);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn NodeBase;\n\t}\n});\nNodeBase.getSubnodeIndex = function (interval, centre) {\n\tvar subnodeIndex = -1;\n\tif (interval.min >= centre) subnodeIndex = 1;\n\tif (interval.max <= centre) subnodeIndex = 0;\n\treturn subnodeIndex;\n};\n\nfunction Interval() {\n\tthis.min = null;\n\tthis.max = null;\n\tif (arguments.length === 0) {\n\t\tthis.min = 0.0;\n\t\tthis.max = 0.0;\n\t} else if (arguments.length === 1) {\n\t\tvar interval = arguments[0];\n\t\tthis.init(interval.min, interval.max);\n\t} else if (arguments.length === 2) {\n\t\tvar min = arguments[0],\n\t\t    max = arguments[1];\n\t\tthis.init(min, max);\n\t}\n}\nextend(Interval.prototype, {\n\texpandToInclude: function expandToInclude(interval) {\n\t\tif (interval.max > this.max) this.max = interval.max;\n\t\tif (interval.min < this.min) this.min = interval.min;\n\t},\n\tgetWidth: function getWidth() {\n\t\treturn this.max - this.min;\n\t},\n\toverlaps: function overlaps() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar interval = arguments[0];\n\t\t\treturn this.overlaps(interval.min, interval.max);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar min = arguments[0],\n\t\t\t    max = arguments[1];\n\t\t\tif (this.min > max || this.max < min) return false;\n\t\t\treturn true;\n\t\t}\n\t},\n\tgetMin: function getMin() {\n\t\treturn this.min;\n\t},\n\ttoString: function toString() {\n\t\treturn \"[\" + this.min + \", \" + this.max + \"]\";\n\t},\n\tcontains: function contains() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Interval) {\n\t\t\t\tvar interval = arguments[0];\n\t\t\t\treturn this.contains(interval.min, interval.max);\n\t\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\t\tvar p = arguments[0];\n\t\t\t\treturn p >= this.min && p <= this.max;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar min = arguments[0],\n\t\t\t    max = arguments[1];\n\t\t\treturn min >= this.min && max <= this.max;\n\t\t}\n\t},\n\tinit: function init(min, max) {\n\t\tthis.min = min;\n\t\tthis.max = max;\n\t\tif (min > max) {\n\t\t\tthis.min = max;\n\t\t\tthis.max = min;\n\t\t}\n\t},\n\tgetMax: function getMax() {\n\t\treturn this.max;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Interval;\n\t}\n});\n\nfunction DoubleBits() {}\nDoubleBits.exponent = function (d) {\n  return CVTFWD(64, d) - 1023;\n};\nDoubleBits.powerOf2 = function (exp) {\n  return Math.pow(2, exp);\n};\n\n/**\n * Calculates the exponent of the bit-pattern for a number. Uses code from:\n * http://www.merlyn.demon.co.uk/js-exact.htm\n *\n * @param {Number}\n *          NumW 32 or 64 to denote the number of bits.\n * @param {Number}\n *          Qty the number to calculate the bit pattern for.\n * @return {Number} The integer value of the exponent.\n */\nfunction CVTFWD(NumW, Qty) {\n  var Sign;\n  var Expo;\n  var Mant;\n  var Bin;\n  var Inf = {\n    32: {\n      d: 0x7F,\n      c: 0x80,\n      b: 0,\n      a: 0\n    },\n    64: {\n      d: 0x7FF0,\n      c: 0,\n      b: 0,\n      a: 0\n    }\n  };\n  var ExW = {\n    32: 8,\n    64: 11\n  }[NumW];\n\n  if (!Bin) {\n    Sign = Qty < 0 || 1 / Qty < 0; // OK for +-0\n    if (!isFinite(Qty)) {\n      Bin = Inf[NumW];\n      if (Sign) {\n        Bin.d += 1 << NumW / 4 - 1;\n      }\n      Expo = Math.pow(2, ExW) - 1;\n      Mant = 0;\n    }\n  }\n\n  if (!Bin) {\n    Expo = {\n      32: 127,\n      64: 1023\n    }[NumW];\n    Mant = Math.abs(Qty);\n    while (Mant >= 2) {\n      Expo++;\n      Mant /= 2;\n    }\n    while (Mant < 1 && Expo > 0) {\n      Expo--;\n      Mant *= 2;\n    }\n    if (Expo <= 0) {\n      Mant /= 2;\n    }\n    if (NumW === 32 && Expo > 254) {\n      Bin = {\n        d: Sign ? 0xFF : 0x7F,\n        c: 0x80,\n        b: 0,\n        a: 0\n      };\n      Expo = Math.pow(2, ExW) - 1;\n      Mant = 0;\n    }\n  }\n\n  return Expo;\n}\n\nfunction Key() {\n\tthis.pt = 0.0;\n\tthis.level = 0;\n\tthis.interval = null;\n\tvar interval = arguments[0];\n\tthis.computeKey(interval);\n}\nextend(Key.prototype, {\n\tgetInterval: function getInterval() {\n\t\treturn this.interval;\n\t},\n\tgetLevel: function getLevel() {\n\t\treturn this.level;\n\t},\n\tcomputeKey: function computeKey(itemInterval) {\n\t\tthis.level = Key.computeLevel(itemInterval);\n\t\tthis.interval = new Interval();\n\t\tthis.computeInterval(this.level, itemInterval);\n\t\twhile (!this.interval.contains(itemInterval)) {\n\t\t\tthis.level += 1;\n\t\t\tthis.computeInterval(this.level, itemInterval);\n\t\t}\n\t},\n\tcomputeInterval: function computeInterval(level, itemInterval) {\n\t\tvar size = DoubleBits.powerOf2(level);\n\t\tthis.pt = Math.floor(itemInterval.getMin() / size) * size;\n\t\tthis.interval.init(this.pt, this.pt + size);\n\t},\n\tgetPoint: function getPoint() {\n\t\treturn this.pt;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Key;\n\t}\n});\nKey.computeLevel = function (interval) {\n\tvar dx = interval.getWidth();\n\tvar level = DoubleBits.exponent(dx) + 1;\n\treturn level;\n};\n\nfunction Node$1() {\n\tNodeBase.apply(this);\n\tthis.interval = null;\n\tthis.centre = null;\n\tthis.level = null;\n\tvar interval = arguments[0],\n\t    level = arguments[1];\n\tthis.interval = interval;\n\tthis.level = level;\n\tthis.centre = (interval.getMin() + interval.getMax()) / 2;\n}\ninherits(Node$1, NodeBase);\nextend(Node$1.prototype, {\n\tgetInterval: function getInterval() {\n\t\treturn this.interval;\n\t},\n\tfind: function find(searchInterval) {\n\t\tvar subnodeIndex = NodeBase.getSubnodeIndex(searchInterval, this.centre);\n\t\tif (subnodeIndex === -1) return this;\n\t\tif (this.subnode[subnodeIndex] !== null) {\n\t\t\tvar node = this.subnode[subnodeIndex];\n\t\t\treturn node.find(searchInterval);\n\t\t}\n\t\treturn this;\n\t},\n\tinsert: function insert(node) {\n\t\tAssert.isTrue(this.interval === null || this.interval.contains(node.interval));\n\t\tvar index = NodeBase.getSubnodeIndex(node.interval, this.centre);\n\t\tif (node.level === this.level - 1) {\n\t\t\tthis.subnode[index] = node;\n\t\t} else {\n\t\t\tvar childNode = this.createSubnode(index);\n\t\t\tchildNode.insert(node);\n\t\t\tthis.subnode[index] = childNode;\n\t\t}\n\t},\n\tisSearchMatch: function isSearchMatch(itemInterval) {\n\t\treturn itemInterval.overlaps(this.interval);\n\t},\n\tgetSubnode: function getSubnode(index) {\n\t\tif (this.subnode[index] === null) {\n\t\t\tthis.subnode[index] = this.createSubnode(index);\n\t\t}\n\t\treturn this.subnode[index];\n\t},\n\tgetNode: function getNode(searchInterval) {\n\t\tvar subnodeIndex = NodeBase.getSubnodeIndex(searchInterval, this.centre);\n\t\tif (subnodeIndex !== -1) {\n\t\t\tvar node = this.getSubnode(subnodeIndex);\n\t\t\treturn node.getNode(searchInterval);\n\t\t} else {\n\t\t\treturn this;\n\t\t}\n\t},\n\tcreateSubnode: function createSubnode(index) {\n\t\tvar min = 0.0;\n\t\tvar max = 0.0;\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\tmin = this.interval.getMin();\n\t\t\t\tmax = this.centre;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tmin = this.centre;\n\t\t\t\tmax = this.interval.getMax();\n\t\t\t\tbreak;\n\t\t}\n\t\tvar subInt = new Interval(min, max);\n\t\tvar node = new Node$1(subInt, this.level - 1);\n\t\treturn node;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Node$1;\n\t}\n});\nNode$1.createNode = function (itemInterval) {\n\tvar key = new Key(itemInterval);\n\tvar node = new Node$1(key.getInterval(), key.getLevel());\n\treturn node;\n};\nNode$1.createExpanded = function (node, addInterval) {\n\tvar expandInt = new Interval(addInterval);\n\tif (node !== null) expandInt.expandToInclude(node.interval);\n\tvar largerNode = Node$1.createNode(expandInt);\n\tif (node !== null) largerNode.insert(node);\n\treturn largerNode;\n};\n\nfunction IntervalSize() {}\nextend(IntervalSize.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn IntervalSize;\n\t}\n});\nIntervalSize.isZeroWidth = function (min, max) {\n\tvar width = max - min;\n\tif (width === 0.0) return true;\n\tvar maxAbs = Math.max(Math.abs(min), Math.abs(max));\n\tvar scaledInterval = width / maxAbs;\n\tvar level = DoubleBits.exponent(scaledInterval);\n\treturn level <= IntervalSize.MIN_BINARY_EXPONENT;\n};\nIntervalSize.MIN_BINARY_EXPONENT = -50;\n\nfunction Root() {\n\tNodeBase.apply(this);\n}\ninherits(Root, NodeBase);\nextend(Root.prototype, {\n\tinsert: function insert(itemInterval, item) {\n\t\tvar index = NodeBase.getSubnodeIndex(itemInterval, Root.origin);\n\t\tif (index === -1) {\n\t\t\tthis.add(item);\n\t\t\treturn null;\n\t\t}\n\t\tvar node = this.subnode[index];\n\t\tif (node === null || !node.getInterval().contains(itemInterval)) {\n\t\t\tvar largerNode = Node$1.createExpanded(node, itemInterval);\n\t\t\tthis.subnode[index] = largerNode;\n\t\t}\n\t\tthis.insertContained(this.subnode[index], itemInterval, item);\n\t},\n\tisSearchMatch: function isSearchMatch(interval) {\n\t\treturn true;\n\t},\n\tinsertContained: function insertContained(tree, itemInterval, item) {\n\t\tAssert.isTrue(tree.getInterval().contains(itemInterval));\n\t\tvar isZeroArea = IntervalSize.isZeroWidth(itemInterval.getMin(), itemInterval.getMax());\n\t\tvar node = null;\n\t\tif (isZeroArea) node = tree.find(itemInterval);else node = tree.getNode(itemInterval);\n\t\tnode.add(item);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Root;\n\t}\n});\nRoot.origin = 0.0;\n\nfunction Bintree() {\n\tthis.root = null;\n\tthis.minExtent = 1.0;\n\tthis.root = new Root();\n}\nextend(Bintree.prototype, {\n\tsize: function size() {\n\t\tif (this.root !== null) return this.root.size();\n\t\treturn 0;\n\t},\n\tinsert: function insert(itemInterval, item) {\n\t\tthis.collectStats(itemInterval);\n\t\tvar insertInterval = Bintree.ensureExtent(itemInterval, this.minExtent);\n\t\tthis.root.insert(insertInterval, item);\n\t},\n\tquery: function query() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (typeof arguments[0] === \"number\") {\n\t\t\t\tvar x = arguments[0];\n\t\t\t\treturn this.query(new Interval(x, x));\n\t\t\t} else if (arguments[0] instanceof Interval) {\n\t\t\t\tvar interval = arguments[0];\n\t\t\t\tvar foundItems = new ArrayList();\n\t\t\t\tthis.query(interval, foundItems);\n\t\t\t\treturn foundItems;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar _interval = arguments[0],\n\t\t\t    _foundItems = arguments[1];\n\t\t\tthis.root.addAllItemsFromOverlapping(_interval, _foundItems);\n\t\t}\n\t},\n\titerator: function iterator() {\n\t\tvar foundItems = new ArrayList();\n\t\tthis.root.addAllItems(foundItems);\n\t\treturn foundItems.iterator();\n\t},\n\tremove: function remove(itemInterval, item) {\n\t\tvar insertInterval = Bintree.ensureExtent(itemInterval, this.minExtent);\n\t\treturn this.root.remove(insertInterval, item);\n\t},\n\tcollectStats: function collectStats(interval) {\n\t\tvar del = interval.getWidth();\n\t\tif (del < this.minExtent && del > 0.0) this.minExtent = del;\n\t},\n\tdepth: function depth() {\n\t\tif (this.root !== null) return this.root.depth();\n\t\treturn 0;\n\t},\n\tnodeSize: function nodeSize() {\n\t\tif (this.root !== null) return this.root.nodeSize();\n\t\treturn 0;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Bintree;\n\t}\n});\nBintree.ensureExtent = function (itemInterval, minExtent) {\n\tvar min = itemInterval.getMin();\n\tvar max = itemInterval.getMax();\n\tif (min !== max) return itemInterval;\n\tif (min === max) {\n\t\tmin = min - minExtent / 2.0;\n\t\tmax = min + minExtent / 2.0;\n\t}\n\treturn new Interval(min, max);\n};\n\nfunction PointInRing() {}\nextend(PointInRing.prototype, {\n\tisInside: function isInside(pt) {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PointInRing;\n\t}\n});\n\nfunction MCPointInRing() {\n\tthis.ring = null;\n\tthis.tree = null;\n\tthis.crossings = 0;\n\tthis.interval = new Interval();\n\tvar ring = arguments[0];\n\tthis.ring = ring;\n\tthis.buildIndex();\n}\nextend(MCPointInRing.prototype, {\n\ttestLineSegment: function testLineSegment(p, seg) {\n\t\tvar xInt = null;\n\t\tvar x1 = null;\n\t\tvar y1 = null;\n\t\tvar x2 = null;\n\t\tvar y2 = null;\n\t\tvar p1 = seg.p0;\n\t\tvar p2 = seg.p1;\n\t\tx1 = p1.x - p.x;\n\t\ty1 = p1.y - p.y;\n\t\tx2 = p2.x - p.x;\n\t\ty2 = p2.y - p.y;\n\t\tif (y1 > 0 && y2 <= 0 || y2 > 0 && y1 <= 0) {\n\t\t\txInt = RobustDeterminant.signOfDet2x2(x1, y1, x2, y2) / (y2 - y1);\n\t\t\tif (0.0 < xInt) {\n\t\t\t\tthis.crossings++;\n\t\t\t}\n\t\t}\n\t},\n\tbuildIndex: function buildIndex() {\n\t\tthis.tree = new Bintree();\n\t\tvar pts = CoordinateArrays.removeRepeatedPoints(this.ring.getCoordinates());\n\t\tvar mcList = MonotoneChainBuilder.getChains(pts);\n\t\tfor (var i = 0; i < mcList.size(); i++) {\n\t\t\tvar mc = mcList.get(i);\n\t\t\tvar mcEnv = mc.getEnvelope();\n\t\t\tthis.interval.min = mcEnv.getMinY();\n\t\t\tthis.interval.max = mcEnv.getMaxY();\n\t\t\tthis.tree.insert(this.interval, mc);\n\t\t}\n\t},\n\ttestMonotoneChain: function testMonotoneChain(rayEnv, mcSelecter, mc) {\n\t\tmc.select(rayEnv, mcSelecter);\n\t},\n\tisInside: function isInside(pt) {\n\t\tthis.crossings = 0;\n\t\tvar rayEnv = new Envelope(Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY, pt.y, pt.y);\n\t\tthis.interval.min = pt.y;\n\t\tthis.interval.max = pt.y;\n\t\tvar segs = this.tree.query(this.interval);\n\t\tvar mcSelecter = new MCSelecter(this, pt);\n\t\tfor (var i = segs.iterator(); i.hasNext();) {\n\t\t\tvar mc = i.next();\n\t\t\tthis.testMonotoneChain(rayEnv, mcSelecter, mc);\n\t\t}\n\t\tif (this.crossings % 2 === 1) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [PointInRing];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MCPointInRing;\n\t}\n});\nfunction MCSelecter() {\n\tMonotoneChainSelectAction.apply(this);\n\tthis.mcp = null;\n\tthis.p = null;\n\tvar mcp = arguments[0],\n\t    p = arguments[1];\n\tthis.mcp = mcp;\n\tthis.p = p;\n}\ninherits(MCSelecter, MonotoneChainSelectAction);\nextend(MCSelecter.prototype, {\n\tselect: function select() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar ls = arguments[0];\n\t\t\tthis.mcp.testLineSegment(this.p, ls);\n\t\t} else return MonotoneChainSelectAction.prototype.select.apply(this, arguments);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MCSelecter;\n\t}\n});\nMCPointInRing.MCSelecter = MCSelecter;\n\nfunction Angle() {}\nextend(Angle.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Angle;\n\t}\n});\nAngle.toDegrees = function (radians) {\n\treturn radians * 180 / Math.PI;\n};\nAngle.normalize = function (angle) {\n\twhile (angle > Math.PI) {\n\t\tangle -= Angle.PI_TIMES_2;\n\t}while (angle <= -Math.PI) {\n\t\tangle += Angle.PI_TIMES_2;\n\t}return angle;\n};\nAngle.angle = function () {\n\tif (arguments.length === 1) {\n\t\tvar p = arguments[0];\n\t\treturn Math.atan2(p.y, p.x);\n\t} else if (arguments.length === 2) {\n\t\tvar p0 = arguments[0],\n\t\t    p1 = arguments[1];\n\t\tvar dx = p1.x - p0.x;\n\t\tvar dy = p1.y - p0.y;\n\t\treturn Math.atan2(dy, dx);\n\t}\n};\nAngle.isAcute = function (p0, p1, p2) {\n\tvar dx0 = p0.x - p1.x;\n\tvar dy0 = p0.y - p1.y;\n\tvar dx1 = p2.x - p1.x;\n\tvar dy1 = p2.y - p1.y;\n\tvar dotprod = dx0 * dx1 + dy0 * dy1;\n\treturn dotprod > 0;\n};\nAngle.isObtuse = function (p0, p1, p2) {\n\tvar dx0 = p0.x - p1.x;\n\tvar dy0 = p0.y - p1.y;\n\tvar dx1 = p2.x - p1.x;\n\tvar dy1 = p2.y - p1.y;\n\tvar dotprod = dx0 * dx1 + dy0 * dy1;\n\treturn dotprod < 0;\n};\nAngle.interiorAngle = function (p0, p1, p2) {\n\tvar anglePrev = Angle.angle(p1, p0);\n\tvar angleNext = Angle.angle(p1, p2);\n\treturn Math.abs(angleNext - anglePrev);\n};\nAngle.normalizePositive = function (angle) {\n\tif (angle < 0.0) {\n\t\twhile (angle < 0.0) {\n\t\t\tangle += Angle.PI_TIMES_2;\n\t\t}if (angle >= Angle.PI_TIMES_2) angle = 0.0;\n\t} else {\n\t\twhile (angle >= Angle.PI_TIMES_2) {\n\t\t\tangle -= Angle.PI_TIMES_2;\n\t\t}if (angle < 0.0) angle = 0.0;\n\t}\n\treturn angle;\n};\nAngle.angleBetween = function (tip1, tail, tip2) {\n\tvar a1 = Angle.angle(tail, tip1);\n\tvar a2 = Angle.angle(tail, tip2);\n\treturn Angle.diff(a1, a2);\n};\nAngle.diff = function (ang1, ang2) {\n\tvar delAngle = null;\n\tif (ang1 < ang2) {\n\t\tdelAngle = ang2 - ang1;\n\t} else {\n\t\tdelAngle = ang1 - ang2;\n\t}\n\tif (delAngle > Math.PI) {\n\t\tdelAngle = 2 * Math.PI - delAngle;\n\t}\n\treturn delAngle;\n};\nAngle.toRadians = function (angleDegrees) {\n\treturn angleDegrees * Math.PI / 180.0;\n};\nAngle.getTurn = function (ang1, ang2) {\n\tvar crossproduct = Math.sin(ang2 - ang1);\n\tif (crossproduct > 0) {\n\t\treturn Angle.COUNTERCLOCKWISE;\n\t}\n\tif (crossproduct < 0) {\n\t\treturn Angle.CLOCKWISE;\n\t}\n\treturn Angle.NONE;\n};\nAngle.angleBetweenOriented = function (tip1, tail, tip2) {\n\tvar a1 = Angle.angle(tail, tip1);\n\tvar a2 = Angle.angle(tail, tip2);\n\tvar angDel = a2 - a1;\n\tif (angDel <= -Math.PI) return angDel + Angle.PI_TIMES_2;\n\tif (angDel > Math.PI) return angDel - Angle.PI_TIMES_2;\n\treturn angDel;\n};\nAngle.PI_TIMES_2 = 2.0 * Math.PI;\nAngle.PI_OVER_2 = Math.PI / 2.0;\nAngle.PI_OVER_4 = Math.PI / 4.0;\nAngle.COUNTERCLOCKWISE = CGAlgorithms.COUNTERCLOCKWISE;\nAngle.CLOCKWISE = CGAlgorithms.CLOCKWISE;\nAngle.NONE = CGAlgorithms.COLLINEAR;\n\nfunction Triangle() {\n\tthis.p0 = null;\n\tthis.p1 = null;\n\tthis.p2 = null;\n\tvar p0 = arguments[0],\n\t    p1 = arguments[1],\n\t    p2 = arguments[2];\n\tthis.p0 = p0;\n\tthis.p1 = p1;\n\tthis.p2 = p2;\n}\nextend(Triangle.prototype, {\n\tarea: function area() {\n\t\treturn Triangle.area(this.p0, this.p1, this.p2);\n\t},\n\tsignedArea: function signedArea() {\n\t\treturn Triangle.signedArea(this.p0, this.p1, this.p2);\n\t},\n\tinterpolateZ: function interpolateZ(p) {\n\t\tif (p === null) throw new IllegalArgumentException(\"Supplied point is null.\");\n\t\treturn Triangle.interpolateZ(p, this.p0, this.p1, this.p2);\n\t},\n\tlongestSideLength: function longestSideLength() {\n\t\treturn Triangle.longestSideLength(this.p0, this.p1, this.p2);\n\t},\n\tisAcute: function isAcute() {\n\t\treturn Triangle.isAcute(this.p0, this.p1, this.p2);\n\t},\n\tcircumcentre: function circumcentre() {\n\t\treturn Triangle.circumcentre(this.p0, this.p1, this.p2);\n\t},\n\tarea3D: function area3D() {\n\t\treturn Triangle.area3D(this.p0, this.p1, this.p2);\n\t},\n\tcentroid: function centroid() {\n\t\treturn Triangle.centroid(this.p0, this.p1, this.p2);\n\t},\n\tinCentre: function inCentre() {\n\t\treturn Triangle.inCentre(this.p0, this.p1, this.p2);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Triangle;\n\t}\n});\nTriangle.area = function (a, b, c) {\n\treturn Math.abs(((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2);\n};\nTriangle.signedArea = function (a, b, c) {\n\treturn ((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2;\n};\nTriangle.det = function (m00, m01, m10, m11) {\n\treturn m00 * m11 - m01 * m10;\n};\nTriangle.interpolateZ = function (p, v0, v1, v2) {\n\tvar x0 = v0.x;\n\tvar y0 = v0.y;\n\tvar a = v1.x - x0;\n\tvar b = v2.x - x0;\n\tvar c = v1.y - y0;\n\tvar d = v2.y - y0;\n\tvar det = a * d - b * c;\n\tvar dx = p.x - x0;\n\tvar dy = p.y - y0;\n\tvar t = (d * dx - b * dy) / det;\n\tvar u = (-c * dx + a * dy) / det;\n\tvar z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\n\treturn z;\n};\nTriangle.longestSideLength = function (a, b, c) {\n\tvar lenAB = a.distance(b);\n\tvar lenBC = b.distance(c);\n\tvar lenCA = c.distance(a);\n\tvar maxLen = lenAB;\n\tif (lenBC > maxLen) maxLen = lenBC;\n\tif (lenCA > maxLen) maxLen = lenCA;\n\treturn maxLen;\n};\nTriangle.isAcute = function (a, b, c) {\n\tif (!Angle.isAcute(a, b, c)) return false;\n\tif (!Angle.isAcute(b, c, a)) return false;\n\tif (!Angle.isAcute(c, a, b)) return false;\n\treturn true;\n};\nTriangle.circumcentre = function (a, b, c) {\n\tvar cx = c.x;\n\tvar cy = c.y;\n\tvar ax = a.x - cx;\n\tvar ay = a.y - cy;\n\tvar bx = b.x - cx;\n\tvar by = b.y - cy;\n\tvar denom = 2 * Triangle.det(ax, ay, bx, by);\n\tvar numx = Triangle.det(ay, ax * ax + ay * ay, by, bx * bx + by * by);\n\tvar numy = Triangle.det(ax, ax * ax + ay * ay, bx, bx * bx + by * by);\n\tvar ccx = cx - numx / denom;\n\tvar ccy = cy + numy / denom;\n\treturn new Coordinate(ccx, ccy);\n};\nTriangle.perpendicularBisector = function (a, b) {\n\tvar dx = b.x - a.x;\n\tvar dy = b.y - a.y;\n\tvar l1 = new HCoordinate(a.x + dx / 2.0, a.y + dy / 2.0, 1.0);\n\tvar l2 = new HCoordinate(a.x - dy + dx / 2.0, a.y + dx + dy / 2.0, 1.0);\n\treturn new HCoordinate(l1, l2);\n};\nTriangle.angleBisector = function (a, b, c) {\n\tvar len0 = b.distance(a);\n\tvar len2 = b.distance(c);\n\tvar frac = len0 / (len0 + len2);\n\tvar dx = c.x - a.x;\n\tvar dy = c.y - a.y;\n\tvar splitPt = new Coordinate(a.x + frac * dx, a.y + frac * dy);\n\treturn splitPt;\n};\nTriangle.area3D = function (a, b, c) {\n\tvar ux = b.x - a.x;\n\tvar uy = b.y - a.y;\n\tvar uz = b.z - a.z;\n\tvar vx = c.x - a.x;\n\tvar vy = c.y - a.y;\n\tvar vz = c.z - a.z;\n\tvar crossx = uy * vz - uz * vy;\n\tvar crossy = uz * vx - ux * vz;\n\tvar crossz = ux * vy - uy * vx;\n\tvar absSq = crossx * crossx + crossy * crossy + crossz * crossz;\n\tvar area3D = Math.sqrt(absSq) / 2;\n\treturn area3D;\n};\nTriangle.centroid = function (a, b, c) {\n\tvar x = (a.x + b.x + c.x) / 3;\n\tvar y = (a.y + b.y + c.y) / 3;\n\treturn new Coordinate(x, y);\n};\nTriangle.inCentre = function (a, b, c) {\n\tvar len0 = b.distance(c);\n\tvar len1 = a.distance(c);\n\tvar len2 = a.distance(b);\n\tvar circum = len0 + len1 + len2;\n\tvar inCentreX = (len0 * a.x + len1 * b.x + len2 * c.x) / circum;\n\tvar inCentreY = (len0 * a.y + len1 * b.y + len2 * c.y) / circum;\n\treturn new Coordinate(inCentreX, inCentreY);\n};\n\nfunction MinimumBoundingCircle() {\n\tthis.input = null;\n\tthis.extremalPts = null;\n\tthis.centre = null;\n\tthis.radius = 0.0;\n\tvar geom = arguments[0];\n\tthis.input = geom;\n}\nextend(MinimumBoundingCircle.prototype, {\n\tgetRadius: function getRadius() {\n\t\tthis.compute();\n\t\treturn this.radius;\n\t},\n\tgetDiameter: function getDiameter() {\n\t\tthis.compute();\n\t\tswitch (this.extremalPts.length) {\n\t\t\tcase 0:\n\t\t\t\treturn this.input.getFactory().createLineString();\n\t\t\tcase 1:\n\t\t\t\treturn this.input.getFactory().createPoint(this.centre);\n\t\t}\n\t\tvar p0 = this.extremalPts[0];\n\t\tvar p1 = this.extremalPts[1];\n\t\treturn this.input.getFactory().createLineString([p0, p1]);\n\t},\n\tgetExtremalPoints: function getExtremalPoints() {\n\t\tthis.compute();\n\t\treturn this.extremalPts;\n\t},\n\tcomputeCirclePoints: function computeCirclePoints() {\n\t\tif (this.input.isEmpty()) {\n\t\t\tthis.extremalPts = new Array(0).fill(null);\n\t\t\treturn null;\n\t\t}\n\t\tif (this.input.getNumPoints() === 1) {\n\t\t\tvar pts = this.input.getCoordinates();\n\t\t\tthis.extremalPts = [new Coordinate(pts[0])];\n\t\t\treturn null;\n\t\t}\n\t\tvar convexHull = this.input.convexHull();\n\t\tvar hullPts = convexHull.getCoordinates();\n\t\tvar pts = hullPts;\n\t\tif (hullPts[0].equals2D(hullPts[hullPts.length - 1])) {\n\t\t\tpts = new Array(hullPts.length - 1).fill(null);\n\t\t\tCoordinateArrays.copyDeep(hullPts, 0, pts, 0, hullPts.length - 1);\n\t\t}\n\t\tif (pts.length <= 2) {\n\t\t\tthis.extremalPts = CoordinateArrays.copyDeep(pts);\n\t\t\treturn null;\n\t\t}\n\t\tvar P = MinimumBoundingCircle.lowestPoint(pts);\n\t\tvar Q = MinimumBoundingCircle.pointWitMinAngleWithX(pts, P);\n\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\tvar R = MinimumBoundingCircle.pointWithMinAngleWithSegment(pts, P, Q);\n\t\t\tif (Angle.isObtuse(P, R, Q)) {\n\t\t\t\tthis.extremalPts = [new Coordinate(P), new Coordinate(Q)];\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (Angle.isObtuse(R, P, Q)) {\n\t\t\t\tP = R;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (Angle.isObtuse(R, Q, P)) {\n\t\t\t\tQ = R;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.extremalPts = [new Coordinate(P), new Coordinate(Q), new Coordinate(R)];\n\t\t\treturn null;\n\t\t}\n\t\tAssert.shouldNeverReachHere(\"Logic failure in Minimum Bounding Circle algorithm!\");\n\t},\n\tcompute: function compute() {\n\t\tif (this.extremalPts !== null) return null;\n\t\tthis.computeCirclePoints();\n\t\tthis.computeCentre();\n\t\tif (this.centre !== null) this.radius = this.centre.distance(this.extremalPts[0]);\n\t},\n\tgetFarthestPoints: function getFarthestPoints() {\n\t\tthis.compute();\n\t\tswitch (this.extremalPts.length) {\n\t\t\tcase 0:\n\t\t\t\treturn this.input.getFactory().createLineString();\n\t\t\tcase 1:\n\t\t\t\treturn this.input.getFactory().createPoint(this.centre);\n\t\t}\n\t\tvar p0 = this.extremalPts[0];\n\t\tvar p1 = this.extremalPts[this.extremalPts.length - 1];\n\t\treturn this.input.getFactory().createLineString([p0, p1]);\n\t},\n\tgetCircle: function getCircle() {\n\t\tthis.compute();\n\t\tif (this.centre === null) return this.input.getFactory().createPolygon();\n\t\tvar centrePoint = this.input.getFactory().createPoint(this.centre);\n\t\tif (this.radius === 0.0) return centrePoint;\n\t\treturn centrePoint.buffer(this.radius);\n\t},\n\tgetCentre: function getCentre() {\n\t\tthis.compute();\n\t\treturn this.centre;\n\t},\n\tcomputeCentre: function computeCentre() {\n\t\tswitch (this.extremalPts.length) {\n\t\t\tcase 0:\n\t\t\t\tthis.centre = null;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.centre = this.extremalPts[0];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.centre = new Coordinate((this.extremalPts[0].x + this.extremalPts[1].x) / 2.0, (this.extremalPts[0].y + this.extremalPts[1].y) / 2.0);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.centre = Triangle.circumcentre(this.extremalPts[0], this.extremalPts[1], this.extremalPts[2]);\n\t\t\t\tbreak;\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MinimumBoundingCircle;\n\t}\n});\nMinimumBoundingCircle.pointWitMinAngleWithX = function (pts, P) {\n\tvar minSin = Double.MAX_VALUE;\n\tvar minAngPt = null;\n\tfor (var i = 0; i < pts.length; i++) {\n\t\tvar p = pts[i];\n\t\tif (p === P) continue;\n\t\tvar dx = p.x - P.x;\n\t\tvar dy = p.y - P.y;\n\t\tif (dy < 0) dy = -dy;\n\t\tvar len = Math.sqrt(dx * dx + dy * dy);\n\t\tvar sin = dy / len;\n\t\tif (sin < minSin) {\n\t\t\tminSin = sin;\n\t\t\tminAngPt = p;\n\t\t}\n\t}\n\treturn minAngPt;\n};\nMinimumBoundingCircle.lowestPoint = function (pts) {\n\tvar min = pts[0];\n\tfor (var i = 1; i < pts.length; i++) {\n\t\tif (pts[i].y < min.y) min = pts[i];\n\t}\n\treturn min;\n};\nMinimumBoundingCircle.pointWithMinAngleWithSegment = function (pts, P, Q) {\n\tvar minAng = Double.MAX_VALUE;\n\tvar minAngPt = null;\n\tfor (var i = 0; i < pts.length; i++) {\n\t\tvar p = pts[i];\n\t\tif (p === P) continue;\n\t\tif (p === Q) continue;\n\t\tvar ang = Angle.angleBetween(P, p, Q);\n\t\tif (ang < minAng) {\n\t\t\tminAng = ang;\n\t\t\tminAngPt = p;\n\t\t}\n\t}\n\treturn minAngPt;\n};\n\nfunction MinimumDiameter() {\n\tthis.inputGeom = null;\n\tthis.isConvex = null;\n\tthis.convexHullPts = null;\n\tthis.minBaseSeg = new LineSegment();\n\tthis.minWidthPt = null;\n\tthis.minPtIndex = null;\n\tthis.minWidth = 0.0;\n\tif (arguments.length === 1) {\n\t\tvar inputGeom = arguments[0];\n\t\tMinimumDiameter.call(this, inputGeom, false);\n\t} else if (arguments.length === 2) {\n\t\tvar _inputGeom = arguments[0],\n\t\t    isConvex = arguments[1];\n\t\tthis.inputGeom = _inputGeom;\n\t\tthis.isConvex = isConvex;\n\t}\n}\nextend(MinimumDiameter.prototype, {\n\tgetWidthCoordinate: function getWidthCoordinate() {\n\t\tthis.computeMinimumDiameter();\n\t\treturn this.minWidthPt;\n\t},\n\tgetSupportingSegment: function getSupportingSegment() {\n\t\tthis.computeMinimumDiameter();\n\t\treturn this.inputGeom.getFactory().createLineString([this.minBaseSeg.p0, this.minBaseSeg.p1]);\n\t},\n\tgetDiameter: function getDiameter() {\n\t\tthis.computeMinimumDiameter();\n\t\tif (this.minWidthPt === null) return this.inputGeom.getFactory().createLineString(null);\n\t\tvar basePt = this.minBaseSeg.project(this.minWidthPt);\n\t\treturn this.inputGeom.getFactory().createLineString([basePt, this.minWidthPt]);\n\t},\n\tcomputeWidthConvex: function computeWidthConvex(convexGeom) {\n\t\tif (convexGeom instanceof Polygon) this.convexHullPts = convexGeom.getExteriorRing().getCoordinates();else this.convexHullPts = convexGeom.getCoordinates();\n\t\tif (this.convexHullPts.length === 0) {\n\t\t\tthis.minWidth = 0.0;\n\t\t\tthis.minWidthPt = null;\n\t\t\tthis.minBaseSeg = null;\n\t\t} else if (this.convexHullPts.length === 1) {\n\t\t\tthis.minWidth = 0.0;\n\t\t\tthis.minWidthPt = this.convexHullPts[0];\n\t\t\tthis.minBaseSeg.p0 = this.convexHullPts[0];\n\t\t\tthis.minBaseSeg.p1 = this.convexHullPts[0];\n\t\t} else if (this.convexHullPts.length === 2 || this.convexHullPts.length === 3) {\n\t\t\tthis.minWidth = 0.0;\n\t\t\tthis.minWidthPt = this.convexHullPts[0];\n\t\t\tthis.minBaseSeg.p0 = this.convexHullPts[0];\n\t\t\tthis.minBaseSeg.p1 = this.convexHullPts[1];\n\t\t} else this.computeConvexRingMinDiameter(this.convexHullPts);\n\t},\n\tcomputeConvexRingMinDiameter: function computeConvexRingMinDiameter(pts) {\n\t\tthis.minWidth = Double.MAX_VALUE;\n\t\tvar currMaxIndex = 1;\n\t\tvar seg = new LineSegment();\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tseg.p0 = pts[i];\n\t\t\tseg.p1 = pts[i + 1];\n\t\t\tcurrMaxIndex = this.findMaxPerpDistance(pts, seg, currMaxIndex);\n\t\t}\n\t},\n\tcomputeMinimumDiameter: function computeMinimumDiameter() {\n\t\tif (this.minWidthPt !== null) return null;\n\t\tif (this.isConvex) this.computeWidthConvex(this.inputGeom);else {\n\t\t\tvar convexGeom = new ConvexHull(this.inputGeom).getConvexHull();\n\t\t\tthis.computeWidthConvex(convexGeom);\n\t\t}\n\t},\n\tgetLength: function getLength() {\n\t\tthis.computeMinimumDiameter();\n\t\treturn this.minWidth;\n\t},\n\tfindMaxPerpDistance: function findMaxPerpDistance(pts, seg, startIndex) {\n\t\tvar maxPerpDistance = seg.distancePerpendicular(pts[startIndex]);\n\t\tvar nextPerpDistance = maxPerpDistance;\n\t\tvar maxIndex = startIndex;\n\t\tvar nextIndex = maxIndex;\n\t\twhile (nextPerpDistance >= maxPerpDistance) {\n\t\t\tmaxPerpDistance = nextPerpDistance;\n\t\t\tmaxIndex = nextIndex;\n\t\t\tnextIndex = MinimumDiameter.nextIndex(pts, maxIndex);\n\t\t\tnextPerpDistance = seg.distancePerpendicular(pts[nextIndex]);\n\t\t}\n\t\tif (maxPerpDistance < this.minWidth) {\n\t\t\tthis.minPtIndex = maxIndex;\n\t\t\tthis.minWidth = maxPerpDistance;\n\t\t\tthis.minWidthPt = pts[this.minPtIndex];\n\t\t\tthis.minBaseSeg = new LineSegment(seg);\n\t\t}\n\t\treturn maxIndex;\n\t},\n\tgetMinimumRectangle: function getMinimumRectangle() {\n\t\tthis.computeMinimumDiameter();\n\t\tif (this.minWidth === 0.0) {\n\t\t\tif (this.minBaseSeg.p0.equals2D(this.minBaseSeg.p1)) {\n\t\t\t\treturn this.inputGeom.getFactory().createPoint(this.minBaseSeg.p0);\n\t\t\t}\n\t\t\treturn this.minBaseSeg.toGeometry(this.inputGeom.getFactory());\n\t\t}\n\t\tvar dx = this.minBaseSeg.p1.x - this.minBaseSeg.p0.x;\n\t\tvar dy = this.minBaseSeg.p1.y - this.minBaseSeg.p0.y;\n\t\tvar minPara = Double.MAX_VALUE;\n\t\tvar maxPara = -Double.MAX_VALUE;\n\t\tvar minPerp = Double.MAX_VALUE;\n\t\tvar maxPerp = -Double.MAX_VALUE;\n\t\tfor (var i = 0; i < this.convexHullPts.length; i++) {\n\t\t\tvar paraC = MinimumDiameter.computeC(dx, dy, this.convexHullPts[i]);\n\t\t\tif (paraC > maxPara) maxPara = paraC;\n\t\t\tif (paraC < minPara) minPara = paraC;\n\t\t\tvar perpC = MinimumDiameter.computeC(-dy, dx, this.convexHullPts[i]);\n\t\t\tif (perpC > maxPerp) maxPerp = perpC;\n\t\t\tif (perpC < minPerp) minPerp = perpC;\n\t\t}\n\t\tvar maxPerpLine = MinimumDiameter.computeSegmentForLine(-dx, -dy, maxPerp);\n\t\tvar minPerpLine = MinimumDiameter.computeSegmentForLine(-dx, -dy, minPerp);\n\t\tvar maxParaLine = MinimumDiameter.computeSegmentForLine(-dy, dx, maxPara);\n\t\tvar minParaLine = MinimumDiameter.computeSegmentForLine(-dy, dx, minPara);\n\t\tvar p0 = maxParaLine.lineIntersection(maxPerpLine);\n\t\tvar p1 = minParaLine.lineIntersection(maxPerpLine);\n\t\tvar p2 = minParaLine.lineIntersection(minPerpLine);\n\t\tvar p3 = maxParaLine.lineIntersection(minPerpLine);\n\t\tvar shell = this.inputGeom.getFactory().createLinearRing([p0, p1, p2, p3, p0]);\n\t\treturn this.inputGeom.getFactory().createPolygon(shell, null);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MinimumDiameter;\n\t}\n});\nMinimumDiameter.nextIndex = function (pts, index) {\n\tindex++;\n\tif (index >= pts.length) index = 0;\n\treturn index;\n};\nMinimumDiameter.computeC = function (a, b, p) {\n\treturn a * p.y - b * p.x;\n};\nMinimumDiameter.getMinimumDiameter = function (geom) {\n\treturn new MinimumDiameter(geom).getDiameter();\n};\nMinimumDiameter.getMinimumRectangle = function (geom) {\n\treturn new MinimumDiameter(geom).getMinimumRectangle();\n};\nMinimumDiameter.computeSegmentForLine = function (a, b, c) {\n\tvar p0 = null;\n\tvar p1 = null;\n\tif (Math.abs(b) > Math.abs(a)) {\n\t\tp0 = new Coordinate(0.0, c / b);\n\t\tp1 = new Coordinate(1.0, c / b - a / b);\n\t} else {\n\t\tp0 = new Coordinate(c / a, 0.0);\n\t\tp1 = new Coordinate(c / a - b / a, 1.0);\n\t}\n\treturn new LineSegment(p0, p1);\n};\n\n\n\nvar algorithm = Object.freeze({\n\tCentroid: Centroid,\n\tCGAlgorithms: CGAlgorithms,\n\tConvexHull: ConvexHull,\n\tInteriorPointArea: InteriorPointArea,\n\tInteriorPointLine: InteriorPointLine,\n\tInteriorPointPoint: InteriorPointPoint,\n\tRobustLineIntersector: RobustLineIntersector,\n\tMCPointInRing: MCPointInRing,\n\tMinimumBoundingCircle: MinimumBoundingCircle,\n\tMinimumDiameter: MinimumDiameter\n});\n\nfunction Densifier() {\n\tthis.inputGeom = null;\n\tthis.distanceTolerance = null;\n\tvar inputGeom = arguments[0];\n\tthis.inputGeom = inputGeom;\n}\nextend(Densifier.prototype, {\n\tgetResultGeometry: function getResultGeometry() {\n\t\treturn new DensifyTransformer(this.distanceTolerance).transform(this.inputGeom);\n\t},\n\tsetDistanceTolerance: function setDistanceTolerance(distanceTolerance) {\n\t\tif (distanceTolerance <= 0.0) throw new IllegalArgumentException(\"Tolerance must be positive\");\n\t\tthis.distanceTolerance = distanceTolerance;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Densifier;\n\t}\n});\nDensifier.densifyPoints = function (pts, distanceTolerance, precModel) {\n\tvar seg = new LineSegment();\n\tvar coordList = new CoordinateList();\n\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\tseg.p0 = pts[i];\n\t\tseg.p1 = pts[i + 1];\n\t\tcoordList.add(seg.p0, false);\n\t\tvar len = seg.getLength();\n\t\tvar densifiedSegCount = Math.trunc(len / distanceTolerance) + 1;\n\t\tif (densifiedSegCount > 1) {\n\t\t\tvar densifiedSegLen = len / densifiedSegCount;\n\t\t\tfor (var j = 1; j < densifiedSegCount; j++) {\n\t\t\t\tvar segFract = j * densifiedSegLen / len;\n\t\t\t\tvar p = seg.pointAlong(segFract);\n\t\t\t\tprecModel.makePrecise(p);\n\t\t\t\tcoordList.add(p, false);\n\t\t\t}\n\t\t}\n\t}\n\tcoordList.add(pts[pts.length - 1], false);\n\treturn coordList.toCoordinateArray();\n};\nDensifier.densify = function (geom, distanceTolerance) {\n\tvar densifier = new Densifier(geom);\n\tdensifier.setDistanceTolerance(distanceTolerance);\n\treturn densifier.getResultGeometry();\n};\nfunction DensifyTransformer() {\n\tGeometryTransformer.apply(this);\n\tthis.distanceTolerance = null;\n\tvar distanceTolerance = arguments[0];\n\tthis.distanceTolerance = distanceTolerance;\n}\ninherits(DensifyTransformer, GeometryTransformer);\nextend(DensifyTransformer.prototype, {\n\ttransformMultiPolygon: function transformMultiPolygon(geom, parent) {\n\t\tvar roughGeom = GeometryTransformer.prototype.transformMultiPolygon.call(this, geom, parent);\n\t\treturn this.createValidArea(roughGeom);\n\t},\n\ttransformPolygon: function transformPolygon(geom, parent) {\n\t\tvar roughGeom = GeometryTransformer.prototype.transformPolygon.call(this, geom, parent);\n\t\tif (parent instanceof MultiPolygon) {\n\t\t\treturn roughGeom;\n\t\t}\n\t\treturn this.createValidArea(roughGeom);\n\t},\n\ttransformCoordinates: function transformCoordinates(coords, parent) {\n\t\tvar inputPts = coords.toCoordinateArray();\n\t\tvar newPts = Densifier.densifyPoints(inputPts, this.distanceTolerance, parent.getPrecisionModel());\n\t\tif (parent instanceof LineString && newPts.length === 1) {\n\t\t\tnewPts = new Array(0).fill(null);\n\t\t}\n\t\treturn this.factory.getCoordinateSequenceFactory().create(newPts);\n\t},\n\tcreateValidArea: function createValidArea(roughAreaGeom) {\n\t\treturn roughAreaGeom.buffer(0.0);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DensifyTransformer;\n\t}\n});\nDensifier.DensifyTransformer = DensifyTransformer;\n\n\n\nvar densify = Object.freeze({\n\tDensifier: Densifier\n});\n\nfunction HalfEdge() {\n\tthis._orig = null;\n\tthis._sym = null;\n\tthis._next = null;\n\tvar orig = arguments[0];\n\tthis._orig = orig;\n}\nextend(HalfEdge.prototype, {\n\tfind: function find(dest) {\n\t\tvar oNext = this;\n\t\tdo {\n\t\t\tif (oNext === null) return null;\n\t\t\tif (oNext.dest().equals2D(dest)) return oNext;\n\t\t\toNext = oNext.oNext();\n\t\t} while (oNext !== this);\n\t\treturn null;\n\t},\n\tdest: function dest() {\n\t\treturn this._sym._orig;\n\t},\n\toNext: function oNext() {\n\t\treturn this._sym._next;\n\t},\n\tinsert: function insert(e) {\n\t\tif (this.oNext() === this) {\n\t\t\tthis.insertAfter(e);\n\t\t\treturn null;\n\t\t}\n\t\tvar ecmp = this.compareTo(e);\n\t\tvar ePrev = this;\n\t\tdo {\n\t\t\tvar oNext = ePrev.oNext();\n\t\t\tvar cmp = oNext.compareTo(e);\n\t\t\tif (cmp !== ecmp || oNext === this) {\n\t\t\t\tePrev.insertAfter(e);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tePrev = oNext;\n\t\t} while (ePrev !== this);\n\t\tAssert.shouldNeverReachHere();\n\t},\n\tinsertAfter: function insertAfter(e) {\n\t\tAssert.equals(this._orig, e.orig());\n\t\tvar save = this.oNext();\n\t\tthis._sym.setNext(e);\n\t\te.sym().setNext(save);\n\t},\n\tdegree: function degree() {\n\t\tvar degree = 0;\n\t\tvar e = this;\n\t\tdo {\n\t\t\tdegree++;\n\t\t\te = e.oNext();\n\t\t} while (e !== this);\n\t\treturn degree;\n\t},\n\tequals: function equals() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar p0 = arguments[0],\n\t\t\t    p1 = arguments[1];\n\t\t\treturn this._orig.equals2D(p0) && this._sym._orig.equals(p1);\n\t\t}\n\t},\n\tdeltaY: function deltaY() {\n\t\treturn this._sym._orig.y - this._orig.y;\n\t},\n\tsym: function sym() {\n\t\treturn this._sym;\n\t},\n\tprev: function prev() {\n\t\treturn this._sym.next()._sym;\n\t},\n\tcompareAngularDirection: function compareAngularDirection(e) {\n\t\tvar dx = this.deltaX();\n\t\tvar dy = this.deltaY();\n\t\tvar dx2 = e.deltaX();\n\t\tvar dy2 = e.deltaY();\n\t\tif (dx === dx2 && dy === dy2) return 0;\n\t\tvar quadrant = Quadrant.quadrant(dx, dy);\n\t\tvar quadrant2 = Quadrant.quadrant(dx2, dy2);\n\t\tif (quadrant > quadrant2) return 1;\n\t\tif (quadrant < quadrant2) return -1;\n\t\treturn CGAlgorithms.computeOrientation(e._orig, e.dest(), this.dest());\n\t},\n\tprevNode: function prevNode() {\n\t\tvar e = this;\n\t\twhile (e.degree() === 2) {\n\t\t\te = e.prev();\n\t\t\tif (e === this) return null;\n\t\t}\n\t\treturn e;\n\t},\n\tcompareTo: function compareTo(obj) {\n\t\tvar e = obj;\n\t\tvar comp = this.compareAngularDirection(e);\n\t\treturn comp;\n\t},\n\tnext: function next() {\n\t\treturn this._next;\n\t},\n\tsetSym: function setSym(e) {\n\t\tthis._sym = e;\n\t},\n\torig: function orig() {\n\t\treturn this._orig;\n\t},\n\ttoString: function toString() {\n\t\treturn \"HE(\" + this._orig.x + \" \" + this._orig.y + \", \" + this._sym._orig.x + \" \" + this._sym._orig.y + \")\";\n\t},\n\tsetNext: function setNext(e) {\n\t\tthis._next = e;\n\t},\n\tinit: function init(e) {\n\t\tthis.setSym(e);\n\t\te.setSym(this);\n\t\tthis.setNext(e);\n\t\te.setNext(this);\n\t},\n\tdeltaX: function deltaX() {\n\t\treturn this._sym._orig.x - this._orig.x;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn HalfEdge;\n\t}\n});\nHalfEdge.init = function (e0, e1) {\n\tif (e0._sym !== null || e1._sym !== null || e0._next !== null || e1._next !== null) throw new IllegalStateException(\"Edges are already initialized\");\n\te0.init(e1);\n\treturn e0;\n};\nHalfEdge.create = function (p0, p1) {\n\tvar e0 = new HalfEdge(p0);\n\tvar e1 = new HalfEdge(p1);\n\te0.init(e1);\n\treturn e0;\n};\n\nfunction MarkHalfEdge() {\n\tthis._isMarked = false;\n\tvar orig = arguments[0];\n\tHalfEdge.call(this, orig);\n}\ninherits(MarkHalfEdge, HalfEdge);\nextend(MarkHalfEdge.prototype, {\n\tmark: function mark() {\n\t\tthis._isMarked = true;\n\t},\n\tsetMark: function setMark(isMarked) {\n\t\tthis._isMarked = isMarked;\n\t},\n\tisMarked: function isMarked() {\n\t\treturn this._isMarked;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MarkHalfEdge;\n\t}\n});\nMarkHalfEdge.setMarkBoth = function (e, isMarked) {\n\te.setMark(isMarked);\n\te.sym().setMark(isMarked);\n};\nMarkHalfEdge.isMarked = function (e) {\n\treturn e.isMarked();\n};\nMarkHalfEdge.setMark = function (e, isMarked) {\n\te.setMark(isMarked);\n};\nMarkHalfEdge.markBoth = function (e) {\n\te.mark();\n\te.sym().mark();\n};\nMarkHalfEdge.mark = function (e) {\n\te.mark();\n};\n\nfunction EdgeGraph() {\n\tthis.vertexMap = new HashMap();\n}\nextend(EdgeGraph.prototype, {\n\tinsert: function insert(orig, dest, eAdj) {\n\t\tvar e = this.create(orig, dest);\n\t\tif (eAdj !== null) {\n\t\t\teAdj.insert(e);\n\t\t} else {\n\t\t\tthis.vertexMap.put(orig, e);\n\t\t}\n\t\tvar eAdjDest = this.vertexMap.get(dest);\n\t\tif (eAdjDest !== null) {\n\t\t\teAdjDest.insert(e.sym());\n\t\t} else {\n\t\t\tthis.vertexMap.put(dest, e.sym());\n\t\t}\n\t\treturn e;\n\t},\n\tcreate: function create(p0, p1) {\n\t\tvar e0 = this.createEdge(p0);\n\t\tvar e1 = this.createEdge(p1);\n\t\tHalfEdge.init(e0, e1);\n\t\treturn e0;\n\t},\n\tcreateEdge: function createEdge(orig) {\n\t\treturn new HalfEdge(orig);\n\t},\n\taddEdge: function addEdge(orig, dest) {\n\t\tif (!EdgeGraph.isValidEdge(orig, dest)) return null;\n\t\tvar eAdj = this.vertexMap.get(orig);\n\t\tvar eSame = null;\n\t\tif (eAdj !== null) {\n\t\t\teSame = eAdj.find(dest);\n\t\t}\n\t\tif (eSame !== null) {\n\t\t\treturn eSame;\n\t\t}\n\t\tvar e = this.insert(orig, dest, eAdj);\n\t\treturn e;\n\t},\n\tgetVertexEdges: function getVertexEdges() {\n\t\treturn this.vertexMap.values();\n\t},\n\tfindEdge: function findEdge(orig, dest) {\n\t\tvar e = this.vertexMap.get(orig);\n\t\tif (e === null) return null;\n\t\treturn e.find(dest);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EdgeGraph;\n\t}\n});\nEdgeGraph.isValidEdge = function (orig, dest) {\n\tvar cmp = dest.compareTo(orig);\n\treturn cmp !== 0;\n};\n\nfunction DissolveHalfEdge() {\n\tthis._isStart = false;\n\tvar orig = arguments[0];\n\tMarkHalfEdge.call(this, orig);\n}\ninherits(DissolveHalfEdge, MarkHalfEdge);\nextend(DissolveHalfEdge.prototype, {\n\tsetStart: function setStart() {\n\t\tthis._isStart = true;\n\t},\n\tisStart: function isStart() {\n\t\treturn this._isStart;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DissolveHalfEdge;\n\t}\n});\n\nfunction DissolveEdgeGraph() {\n\tEdgeGraph.apply(this);\n}\ninherits(DissolveEdgeGraph, EdgeGraph);\nextend(DissolveEdgeGraph.prototype, {\n\tcreateEdge: function createEdge(p0) {\n\t\treturn new DissolveHalfEdge(p0);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DissolveEdgeGraph;\n\t}\n});\n\nfunction LineDissolver() {\n\tthis.result = null;\n\tthis.factory = null;\n\tthis.graph = null;\n\tthis.lines = new ArrayList();\n\tthis.nodeEdgeStack = new Stack();\n\tthis.ringStartEdge = null;\n\tthis.graph = new DissolveEdgeGraph();\n}\nextend(LineDissolver.prototype, {\n\taddLine: function addLine(line) {\n\t\tthis.lines.add(this.factory.createLineString(line.toCoordinateArray()));\n\t},\n\tupdateRingStartEdge: function updateRingStartEdge(e) {\n\t\tif (!e.isStart()) {\n\t\t\te = e.sym();\n\t\t\tif (!e.isStart()) return null;\n\t\t}\n\t\tif (this.ringStartEdge === null) {\n\t\t\tthis.ringStartEdge = e;\n\t\t\treturn null;\n\t\t}\n\t\tif (e.orig().compareTo(this.ringStartEdge.orig()) < 0) {\n\t\t\tthis.ringStartEdge = e;\n\t\t}\n\t},\n\tgetResult: function getResult() {\n\t\tif (this.result === null) this.computeResult();\n\t\treturn this.result;\n\t},\n\tprocess: function process(e) {\n\t\tvar eNode = e.prevNode();\n\t\tif (eNode === null) eNode = e;\n\t\tthis.stackEdges(eNode);\n\t\tthis.buildLines();\n\t},\n\tbuildRing: function buildRing(eStartRing) {\n\t\tvar line = new CoordinateList();\n\t\tvar e = eStartRing;\n\t\tline.add(e.orig().copy(), false);\n\t\twhile (e.sym().degree() === 2) {\n\t\t\tvar eNext = e.next();\n\t\t\tif (eNext === eStartRing) break;\n\t\t\tline.add(eNext.orig().copy(), false);\n\t\t\te = eNext;\n\t\t}\n\t\tline.add(e.dest().copy(), false);\n\t\tthis.addLine(line);\n\t},\n\tbuildLine: function buildLine(eStart) {\n\t\tvar line = new CoordinateList();\n\t\tvar e = eStart;\n\t\tthis.ringStartEdge = null;\n\t\tMarkHalfEdge.markBoth(e);\n\t\tline.add(e.orig().copy(), false);\n\t\twhile (e.sym().degree() === 2) {\n\t\t\tthis.updateRingStartEdge(e);\n\t\t\tvar eNext = e.next();\n\t\t\tif (eNext === eStart) {\n\t\t\t\tthis.buildRing(this.ringStartEdge);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tline.add(eNext.orig().copy(), false);\n\t\t\te = eNext;\n\t\t\tMarkHalfEdge.markBoth(e);\n\t\t}\n\t\tline.add(e.dest().copy(), false);\n\t\tthis.stackEdges(e.sym());\n\t\tthis.addLine(line);\n\t},\n\tstackEdges: function stackEdges(node) {\n\t\tvar e = node;\n\t\tdo {\n\t\t\tif (!MarkHalfEdge.isMarked(e)) this.nodeEdgeStack.add(e);\n\t\t\te = e.oNext();\n\t\t} while (e !== node);\n\t},\n\tcomputeResult: function computeResult() {\n\t\tvar edges = this.graph.getVertexEdges();\n\t\tfor (var i = edges.iterator(); i.hasNext();) {\n\t\t\tvar e = i.next();\n\t\t\tif (MarkHalfEdge.isMarked(e)) continue;\n\t\t\tthis.process(e);\n\t\t}\n\t\tthis.result = this.factory.buildGeometry(this.lines);\n\t},\n\tbuildLines: function buildLines() {\n\t\twhile (!this.nodeEdgeStack.empty()) {\n\t\t\tvar e = this.nodeEdgeStack.pop();\n\t\t\tif (MarkHalfEdge.isMarked(e)) continue;\n\t\t\tthis.buildLine(e);\n\t\t}\n\t},\n\tadd: function add() {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tvar _geometry = arguments[0];\n\t\t\t_geometry.apply({\n\t\t\t\tinterfaces_: function interfaces_() {\n\t\t\t\t\treturn [GeometryComponentFilter];\n\t\t\t\t},\n\t\t\t\tfilter: function filter(component) {\n\t\t\t\t\tif (component instanceof LineString) {\n\t\t\t\t\t\tthis.add(component);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (hasInterface(arguments[0], Collection)) {\n\t\t\tvar geometries = arguments[0];\n\t\t\tfor (var i = geometries.iterator(); i.hasNext();) {\n\t\t\t\tvar geometry = i.next();\n\t\t\t\tthis.add(geometry);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof LineString) {\n\t\t\tvar lineString = arguments[0];\n\t\t\tif (this.factory === null) {\n\t\t\t\tthis.factory = lineString.getFactory();\n\t\t\t}\n\t\t\tvar seq = lineString.getCoordinateSequence();\n\t\t\tvar doneStart = false;\n\t\t\tfor (var i = 1; i < seq.size(); i++) {\n\t\t\t\tvar e = this.graph.addEdge(seq.getCoordinate(i - 1), seq.getCoordinate(i));\n\t\t\t\tif (e === null) continue;\n\t\t\t\tif (!doneStart) {\n\t\t\t\t\te.setStart();\n\t\t\t\t\tdoneStart = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineDissolver;\n\t}\n});\nLineDissolver.dissolve = function (g) {\n\tvar d = new LineDissolver();\n\td.add(g);\n\treturn d.getResult();\n};\n\n\n\nvar dissolve = Object.freeze({\n\tLineDissolver: LineDissolver\n});\n\n\n\nvar geomgraph = Object.freeze({\n\tGeometryGraph: GeometryGraph\n});\n\nfunction NodeBase$1() {\n\tthis.items = new ArrayList();\n\tthis.subnode = new Array(4).fill(null);\n}\nextend(NodeBase$1.prototype, {\n\thasChildren: function hasChildren() {\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this.subnode[i] !== null) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tisPrunable: function isPrunable() {\n\t\treturn !(this.hasChildren() || this.hasItems());\n\t},\n\taddAllItems: function addAllItems(resultItems) {\n\t\tresultItems.addAll(this.items);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this.subnode[i] !== null) {\n\t\t\t\tthis.subnode[i].addAllItems(resultItems);\n\t\t\t}\n\t\t}\n\t\treturn resultItems;\n\t},\n\tgetNodeCount: function getNodeCount() {\n\t\tvar subSize = 0;\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this.subnode[i] !== null) {\n\t\t\t\tsubSize += this.subnode[i].size();\n\t\t\t}\n\t\t}\n\t\treturn subSize + 1;\n\t},\n\tsize: function size() {\n\t\tvar subSize = 0;\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this.subnode[i] !== null) {\n\t\t\t\tsubSize += this.subnode[i].size();\n\t\t\t}\n\t\t}\n\t\treturn subSize + this.items.size();\n\t},\n\taddAllItemsFromOverlapping: function addAllItemsFromOverlapping(searchEnv, resultItems) {\n\t\tif (!this.isSearchMatch(searchEnv)) return null;\n\t\tresultItems.addAll(this.items);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this.subnode[i] !== null) {\n\t\t\t\tthis.subnode[i].addAllItemsFromOverlapping(searchEnv, resultItems);\n\t\t\t}\n\t\t}\n\t},\n\tvisitItems: function visitItems(searchEnv, visitor) {\n\t\tfor (var i = this.items.iterator(); i.hasNext();) {\n\t\t\tvisitor.visitItem(i.next());\n\t\t}\n\t},\n\thasItems: function hasItems() {\n\t\treturn !this.items.isEmpty();\n\t},\n\tremove: function remove(itemEnv, item) {\n\t\tif (!this.isSearchMatch(itemEnv)) return false;\n\t\tvar found = false;\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this.subnode[i] !== null) {\n\t\t\t\tfound = this.subnode[i].remove(itemEnv, item);\n\t\t\t\tif (found) {\n\t\t\t\t\tif (this.subnode[i].isPrunable()) this.subnode[i] = null;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (found) return found;\n\t\tfound = this.items.remove(item);\n\t\treturn found;\n\t},\n\tvisit: function visit(searchEnv, visitor) {\n\t\tif (!this.isSearchMatch(searchEnv)) return null;\n\t\tthis.visitItems(searchEnv, visitor);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this.subnode[i] !== null) {\n\t\t\t\tthis.subnode[i].visit(searchEnv, visitor);\n\t\t\t}\n\t\t}\n\t},\n\tgetItems: function getItems() {\n\t\treturn this.items;\n\t},\n\tdepth: function depth() {\n\t\tvar maxSubDepth = 0;\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this.subnode[i] !== null) {\n\t\t\t\tvar sqd = this.subnode[i].depth();\n\t\t\t\tif (sqd > maxSubDepth) maxSubDepth = sqd;\n\t\t\t}\n\t\t}\n\t\treturn maxSubDepth + 1;\n\t},\n\tisEmpty: function isEmpty() {\n\t\tvar isEmpty = true;\n\t\tif (!this.items.isEmpty()) isEmpty = false;\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this.subnode[i] !== null) {\n\t\t\t\tif (!this.subnode[i].isEmpty()) isEmpty = false;\n\t\t\t}\n\t\t}\n\t\treturn isEmpty;\n\t},\n\tadd: function add(item) {\n\t\tthis.items.add(item);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Serializable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn NodeBase$1;\n\t}\n});\nNodeBase$1.getSubnodeIndex = function (env, centrex, centrey) {\n\tvar subnodeIndex = -1;\n\tif (env.getMinX() >= centrex) {\n\t\tif (env.getMinY() >= centrey) subnodeIndex = 3;\n\t\tif (env.getMaxY() <= centrey) subnodeIndex = 1;\n\t}\n\tif (env.getMaxX() <= centrex) {\n\t\tif (env.getMinY() >= centrey) subnodeIndex = 2;\n\t\tif (env.getMaxY() <= centrey) subnodeIndex = 0;\n\t}\n\treturn subnodeIndex;\n};\n\nfunction Key$1() {\n\tthis.pt = new Coordinate();\n\tthis.level = 0;\n\tthis.env = null;\n\tvar itemEnv = arguments[0];\n\tthis.computeKey(itemEnv);\n}\nextend(Key$1.prototype, {\n\tgetLevel: function getLevel() {\n\t\treturn this.level;\n\t},\n\tcomputeKey: function computeKey() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar itemEnv = arguments[0];\n\t\t\tthis.level = Key$1.computeQuadLevel(itemEnv);\n\t\t\tthis.env = new Envelope();\n\t\t\tthis.computeKey(this.level, itemEnv);\n\t\t\twhile (!this.env.contains(itemEnv)) {\n\t\t\t\tthis.level += 1;\n\t\t\t\tthis.computeKey(this.level, itemEnv);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar level = arguments[0],\n\t\t\t    _itemEnv = arguments[1];\n\t\t\tvar quadSize = DoubleBits.powerOf2(level);\n\t\t\tthis.pt.x = Math.floor(_itemEnv.getMinX() / quadSize) * quadSize;\n\t\t\tthis.pt.y = Math.floor(_itemEnv.getMinY() / quadSize) * quadSize;\n\t\t\tthis.env.init(this.pt.x, this.pt.x + quadSize, this.pt.y, this.pt.y + quadSize);\n\t\t}\n\t},\n\tgetEnvelope: function getEnvelope() {\n\t\treturn this.env;\n\t},\n\tgetCentre: function getCentre() {\n\t\treturn new Coordinate((this.env.getMinX() + this.env.getMaxX()) / 2, (this.env.getMinY() + this.env.getMaxY()) / 2);\n\t},\n\tgetPoint: function getPoint() {\n\t\treturn this.pt;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Key$1;\n\t}\n});\nKey$1.computeQuadLevel = function (env) {\n\tvar dx = env.getWidth();\n\tvar dy = env.getHeight();\n\tvar dMax = dx > dy ? dx : dy;\n\tvar level = DoubleBits.exponent(dMax) + 1;\n\treturn level;\n};\n\nfunction Node$2() {\n\tNodeBase$1.apply(this);\n\tthis.env = null;\n\tthis.centrex = null;\n\tthis.centrey = null;\n\tthis.level = null;\n\tvar env = arguments[0],\n\t    level = arguments[1];\n\tthis.env = env;\n\tthis.level = level;\n\tthis.centrex = (env.getMinX() + env.getMaxX()) / 2;\n\tthis.centrey = (env.getMinY() + env.getMaxY()) / 2;\n}\ninherits(Node$2, NodeBase$1);\nextend(Node$2.prototype, {\n\tfind: function find(searchEnv) {\n\t\tvar subnodeIndex = NodeBase$1.getSubnodeIndex(searchEnv, this.centrex, this.centrey);\n\t\tif (subnodeIndex === -1) return this;\n\t\tif (this.subnode[subnodeIndex] !== null) {\n\t\t\tvar node = this.subnode[subnodeIndex];\n\t\t\treturn node.find(searchEnv);\n\t\t}\n\t\treturn this;\n\t},\n\tisSearchMatch: function isSearchMatch(searchEnv) {\n\t\treturn this.env.intersects(searchEnv);\n\t},\n\tgetSubnode: function getSubnode(index) {\n\t\tif (this.subnode[index] === null) {\n\t\t\tthis.subnode[index] = this.createSubnode(index);\n\t\t}\n\t\treturn this.subnode[index];\n\t},\n\tgetEnvelope: function getEnvelope() {\n\t\treturn this.env;\n\t},\n\tgetNode: function getNode(searchEnv) {\n\t\tvar subnodeIndex = NodeBase$1.getSubnodeIndex(searchEnv, this.centrex, this.centrey);\n\t\tif (subnodeIndex !== -1) {\n\t\t\tvar node = this.getSubnode(subnodeIndex);\n\t\t\treturn node.getNode(searchEnv);\n\t\t} else {\n\t\t\treturn this;\n\t\t}\n\t},\n\tcreateSubnode: function createSubnode(index) {\n\t\tvar minx = 0.0;\n\t\tvar maxx = 0.0;\n\t\tvar miny = 0.0;\n\t\tvar maxy = 0.0;\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\tminx = this.env.getMinX();\n\t\t\t\tmaxx = this.centrex;\n\t\t\t\tminy = this.env.getMinY();\n\t\t\t\tmaxy = this.centrey;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tminx = this.centrex;\n\t\t\t\tmaxx = this.env.getMaxX();\n\t\t\t\tminy = this.env.getMinY();\n\t\t\t\tmaxy = this.centrey;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tminx = this.env.getMinX();\n\t\t\t\tmaxx = this.centrex;\n\t\t\t\tminy = this.centrey;\n\t\t\t\tmaxy = this.env.getMaxY();\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tminx = this.centrex;\n\t\t\t\tmaxx = this.env.getMaxX();\n\t\t\t\tminy = this.centrey;\n\t\t\t\tmaxy = this.env.getMaxY();\n\t\t\t\tbreak;\n\t\t}\n\t\tvar sqEnv = new Envelope(minx, maxx, miny, maxy);\n\t\tvar node = new Node$2(sqEnv, this.level - 1);\n\t\treturn node;\n\t},\n\tinsertNode: function insertNode(node) {\n\t\tAssert.isTrue(this.env === null || this.env.contains(node.env));\n\t\tvar index = NodeBase$1.getSubnodeIndex(node.env, this.centrex, this.centrey);\n\t\tif (node.level === this.level - 1) {\n\t\t\tthis.subnode[index] = node;\n\t\t} else {\n\t\t\tvar childNode = this.createSubnode(index);\n\t\t\tchildNode.insertNode(node);\n\t\t\tthis.subnode[index] = childNode;\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Node$2;\n\t}\n});\nNode$2.createNode = function (env) {\n\tvar key = new Key$1(env);\n\tvar node = new Node$2(key.getEnvelope(), key.getLevel());\n\treturn node;\n};\nNode$2.createExpanded = function (node, addEnv) {\n\tvar expandEnv = new Envelope(addEnv);\n\tif (node !== null) expandEnv.expandToInclude(node.env);\n\tvar largerNode = Node$2.createNode(expandEnv);\n\tif (node !== null) largerNode.insertNode(node);\n\treturn largerNode;\n};\n\nfunction Root$1() {\n\tNodeBase$1.apply(this);\n}\ninherits(Root$1, NodeBase$1);\nextend(Root$1.prototype, {\n\tinsert: function insert(itemEnv, item) {\n\t\tvar index = NodeBase$1.getSubnodeIndex(itemEnv, Root$1.origin.x, Root$1.origin.y);\n\t\tif (index === -1) {\n\t\t\tthis.add(item);\n\t\t\treturn null;\n\t\t}\n\t\tvar node = this.subnode[index];\n\t\tif (node === null || !node.getEnvelope().contains(itemEnv)) {\n\t\t\tvar largerNode = Node$2.createExpanded(node, itemEnv);\n\t\t\tthis.subnode[index] = largerNode;\n\t\t}\n\t\tthis.insertContained(this.subnode[index], itemEnv, item);\n\t},\n\tisSearchMatch: function isSearchMatch(searchEnv) {\n\t\treturn true;\n\t},\n\tinsertContained: function insertContained(tree, itemEnv, item) {\n\t\tAssert.isTrue(tree.getEnvelope().contains(itemEnv));\n\t\tvar isZeroX = IntervalSize.isZeroWidth(itemEnv.getMinX(), itemEnv.getMaxX());\n\t\tvar isZeroY = IntervalSize.isZeroWidth(itemEnv.getMinY(), itemEnv.getMaxY());\n\t\tvar node = null;\n\t\tif (isZeroX || isZeroY) node = tree.find(itemEnv);else node = tree.getNode(itemEnv);\n\t\tnode.add(item);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Root$1;\n\t}\n});\nRoot$1.origin = new Coordinate(0.0, 0.0);\n\nfunction Quadtree() {\n\tthis.root = null;\n\tthis.minExtent = 1.0;\n\tthis.root = new Root$1();\n}\nextend(Quadtree.prototype, {\n\tsize: function size() {\n\t\tif (this.root !== null) return this.root.size();\n\t\treturn 0;\n\t},\n\tinsert: function insert(itemEnv, item) {\n\t\tthis.collectStats(itemEnv);\n\t\tvar insertEnv = Quadtree.ensureExtent(itemEnv, this.minExtent);\n\t\tthis.root.insert(insertEnv, item);\n\t},\n\tquery: function query() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar searchEnv = arguments[0];\n\t\t\tvar visitor = new ArrayListVisitor();\n\t\t\tthis.query(searchEnv, visitor);\n\t\t\treturn visitor.getItems();\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar _searchEnv = arguments[0],\n\t\t\t    _visitor = arguments[1];\n\t\t\tthis.root.visit(_searchEnv, _visitor);\n\t\t}\n\t},\n\tqueryAll: function queryAll() {\n\t\tvar foundItems = new ArrayList();\n\t\tthis.root.addAllItems(foundItems);\n\t\treturn foundItems;\n\t},\n\tremove: function remove(itemEnv, item) {\n\t\tvar posEnv = Quadtree.ensureExtent(itemEnv, this.minExtent);\n\t\treturn this.root.remove(posEnv, item);\n\t},\n\tcollectStats: function collectStats(itemEnv) {\n\t\tvar delX = itemEnv.getWidth();\n\t\tif (delX < this.minExtent && delX > 0.0) this.minExtent = delX;\n\t\tvar delY = itemEnv.getHeight();\n\t\tif (delY < this.minExtent && delY > 0.0) this.minExtent = delY;\n\t},\n\tdepth: function depth() {\n\t\tif (this.root !== null) return this.root.depth();\n\t\treturn 0;\n\t},\n\tisEmpty: function isEmpty() {\n\t\tif (this.root === null) return true;\n\t\treturn false;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [SpatialIndex, Serializable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Quadtree;\n\t}\n});\nQuadtree.ensureExtent = function (itemEnv, minExtent) {\n\tvar minx = itemEnv.getMinX();\n\tvar maxx = itemEnv.getMaxX();\n\tvar miny = itemEnv.getMinY();\n\tvar maxy = itemEnv.getMaxY();\n\tif (minx !== maxx && miny !== maxy) return itemEnv;\n\tif (minx === maxx) {\n\t\tminx = minx - minExtent / 2.0;\n\t\tmaxx = minx + minExtent / 2.0;\n\t}\n\tif (miny === maxy) {\n\t\tminy = miny - minExtent / 2.0;\n\t\tmaxy = miny + minExtent / 2.0;\n\t}\n\treturn new Envelope(minx, maxx, miny, maxy);\n};\nQuadtree.serialVersionUID = -7461163625812743604;\n\n\n\nvar quadtree = Object.freeze({\n\tQuadtree: Quadtree\n});\n\n\n\nvar strtree = Object.freeze({\n\tSTRtree: STRtree\n});\n\n\n\nvar index = Object.freeze({\n\tquadtree: quadtree,\n\tstrtree: strtree\n});\n\nvar geometryTypes = ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon'];\n\n/**\n * Class for reading and writing Well-Known Text.Create a new parser for GeoJSON\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/**\n * Create a new parser for GeoJSON\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of GeoJsonParser.\n * @constructor\n * @private\n */\nfunction GeoJSONParser(geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n}\n\nextend(GeoJSONParser.prototype, {\n  /**\n   * Deserialize a GeoJSON object and return the Geometry or Feature(Collection) with JSTS Geometries\n   *\n   * @param {}\n   *          A GeoJSON object.\n   * @return {} A Geometry instance or object representing a Feature(Collection) with Geometry instances.\n   * @private\n   */\n  read: function read(json) {\n    var obj = void 0;\n    if (typeof json === 'string') {\n      obj = JSON.parse(json);\n    } else {\n      obj = json;\n    }\n\n    var type = obj.type;\n\n    if (!parse$1[type]) {\n      throw new Error('Unknown GeoJSON type: ' + obj.type);\n    }\n\n    if (geometryTypes.indexOf(type) !== -1) {\n      return parse$1[type].apply(this, [obj.coordinates]);\n    } else if (type === 'GeometryCollection') {\n      return parse$1[type].apply(this, [obj.geometries]);\n    }\n\n    // feature or feature collection\n    return parse$1[type].apply(this, [obj]);\n  },\n\n\n  /**\n   * Serialize a Geometry object into GeoJSON\n   *\n   * @param {Geometry}\n   *          geometry A Geometry or array of Geometries.\n   * @return {Object} A GeoJSON object represting the input Geometry/Geometries.\n   * @private\n   */\n  write: function write(geometry) {\n    var type = geometry.getGeometryType();\n\n    if (!extract$1[type]) {\n      throw new Error('Geometry is not supported');\n    }\n\n    return extract$1[type].apply(this, [geometry]);\n  }\n});\n\nvar parse$1 = {\n  /**\n   * Parse a GeoJSON Feature object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} Feature with geometry/bbox converted to JSTS Geometries.\n   */\n  Feature: function Feature(obj) {\n    var feature = {};\n\n    // copy features\n    for (var key in obj) {\n      feature[key] = obj[key];\n    }\n\n    // parse geometry\n    if (obj.geometry) {\n      var type = obj.geometry.type;\n      if (!parse$1[type]) {\n        throw new Error('Unknown GeoJSON type: ' + obj.type);\n      }\n      feature.geometry = this.read(obj.geometry);\n    }\n\n    // bbox\n    if (obj.bbox) {\n      feature.bbox = parse$1.bbox.apply(this, [obj.bbox]);\n    }\n\n    return feature;\n  },\n\n  /**\n   * Parse a GeoJSON FeatureCollection object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} FeatureCollection with geometry/bbox converted to JSTS Geometries.\n   */\n  FeatureCollection: function FeatureCollection(obj) {\n    var featureCollection = {};\n\n    if (obj.features) {\n      featureCollection.features = [];\n\n      for (var i = 0; i < obj.features.length; ++i) {\n        featureCollection.features.push(this.read(obj.features[i]));\n      }\n    }\n\n    if (obj.bbox) {\n      featureCollection.bbox = this.parse.bbox.apply(this, [obj.bbox]);\n    }\n\n    return featureCollection;\n  },\n\n  /**\n   * Convert the ordinates in an array to an array of Coordinates\n   *\n   * @param {Array}\n   *          array Array with {Number}s.\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  coordinates: function coordinates(array) {\n    var coordinates = [];\n    for (var i = 0; i < array.length; ++i) {\n      var sub = array[i];\n      coordinates.push(new Coordinate(sub[0], sub[1]));\n    }\n    return coordinates;\n  },\n\n  /**\n   * Convert the bbox to a LinearRing\n   *\n   * @param {Array}\n   *          array Array with [xMin, yMin, xMax, yMax].\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  bbox: function bbox(array) {\n    return this.geometryFactory.createLinearRing([new Coordinate(array[0], array[1]), new Coordinate(array[2], array[1]), new Coordinate(array[2], array[3]), new Coordinate(array[0], array[3]), new Coordinate(array[0], array[1])]);\n  },\n\n  /**\n   * Convert an Array with ordinates to a Point\n   *\n   * @param {Array}\n   *          array Array with ordinates.\n   *\n   * @return {Point} Point.\n   */\n  Point: function Point(array) {\n    var coordinate = new Coordinate(array[0], array[1]);\n    return this.geometryFactory.createPoint(coordinate);\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiPoint\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiPoint} MultiPoint.\n   */\n  MultiPoint: function MultiPoint(array) {\n    var points = [];\n    for (var i = 0; i < array.length; ++i) {\n      points.push(parse$1.Point.apply(this, [array[i]]));\n    }\n    return this.geometryFactory.createMultiPoint(points);\n  },\n\n  /**\n   * Convert an Array with coordinates to a LineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {LineString} LineString.\n   */\n  LineString: function LineString(array) {\n    var coordinates = parse$1.coordinates.apply(this, [array]);\n    return this.geometryFactory.createLineString(coordinates);\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiLineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiLineString} MultiLineString.\n   */\n  MultiLineString: function MultiLineString(array) {\n    var lineStrings = [];\n    for (var i = 0; i < array.length; ++i) {\n      lineStrings.push(parse$1.LineString.apply(this, [array[i]]));\n    }\n    return this.geometryFactory.createMultiLineString(lineStrings);\n  },\n\n  /**\n   * Convert an Array to a Polygon\n   *\n   * @param {Array}\n   *          array Array with shell and holes.\n   *\n   * @return {Polygon} Polygon.\n   */\n  Polygon: function Polygon(array) {\n    var shellCoordinates = parse$1.coordinates.apply(this, [array[0]]);\n    var shell = this.geometryFactory.createLinearRing(shellCoordinates);\n    var holes = [];\n    for (var i = 1; i < array.length; ++i) {\n      var hole = array[i];\n      var coordinates = parse$1.coordinates.apply(this, [hole]);\n      var linearRing = this.geometryFactory.createLinearRing(coordinates);\n      holes.push(linearRing);\n    }\n    return this.geometryFactory.createPolygon(shell, holes);\n  },\n\n  /**\n   * Convert an Array to a MultiPolygon\n   *\n   * @param {Array}\n   *          array Array of arrays with shell and rings.\n   *\n   * @return {MultiPolygon} MultiPolygon.\n   */\n  MultiPolygon: function MultiPolygon(array) {\n    var polygons = [];\n    for (var i = 0; i < array.length; ++i) {\n      var polygon = array[i];\n      polygons.push(parse$1.Polygon.apply(this, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(polygons);\n  },\n\n  /**\n   * Convert an Array to a GeometryCollection\n   *\n   * @param {Array}\n   *          array Array of GeoJSON geometries.\n   *\n   * @return {GeometryCollection} GeometryCollection.\n   */\n  GeometryCollection: function GeometryCollection(array) {\n    var geometries = [];\n    for (var i = 0; i < array.length; ++i) {\n      var geometry = array[i];\n      geometries.push(this.read(geometry));\n    }\n    return this.geometryFactory.createGeometryCollection(geometries);\n  }\n};\n\nvar extract$1 = {\n  /**\n   * Convert a Coordinate to an Array\n   *\n   * @param {Coordinate}\n   *          coordinate Coordinate to convert.\n   *\n   * @return {Array} Array of ordinates.\n   */\n  coordinate: function coordinate(_coordinate) {\n    return [_coordinate.x, _coordinate.y];\n  },\n\n  /**\n   * Convert a Point to a GeoJSON object\n   *\n   * @param {Point}\n   *          point Point to convert.\n   *\n   * @return {Array} Array of 2 ordinates (paired to a coordinate).\n   */\n  Point: function Point(point) {\n    var array = extract$1.coordinate.apply(this, [point.getCoordinate()]);\n    return {\n      type: 'Point',\n      coordinates: array\n    };\n  },\n\n  /**\n   * Convert a MultiPoint to a GeoJSON object\n   *\n   * @param {MultiPoint}\n   *          multipoint MultiPoint to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  MultiPoint: function MultiPoint(multipoint) {\n    var array = [];\n    for (var i = 0; i < multipoint.geometries.length; ++i) {\n      var point = multipoint.geometries[i];\n      var geoJson = extract$1.Point.apply(this, [point]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPoint',\n      coordinates: array\n    };\n  },\n\n  /**\n   * Convert a LineString to a GeoJSON object\n   *\n   * @param {LineString}\n   *          linestring LineString to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  LineString: function LineString(linestring) {\n    var array = [];\n    var coordinates = linestring.getCoordinates();\n    for (var i = 0; i < coordinates.length; ++i) {\n      var coordinate = coordinates[i];\n      array.push(extract$1.coordinate.apply(this, [coordinate]));\n    }\n    return {\n      type: 'LineString',\n      coordinates: array\n    };\n  },\n\n  /**\n   * Convert a MultiLineString to a GeoJSON object\n   *\n   * @param {MultiLineString}\n   *          multilinestring MultiLineString to convert.\n   *\n   * @return {Array} Array of Array of coordinates.\n   */\n  MultiLineString: function MultiLineString(multilinestring) {\n    var array = [];\n    for (var i = 0; i < multilinestring.geometries.length; ++i) {\n      var linestring = multilinestring.geometries[i];\n      var geoJson = extract$1.LineString.apply(this, [linestring]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiLineString',\n      coordinates: array\n    };\n  },\n\n  /**\n   * Convert a Polygon to a GeoJSON object\n   *\n   * @param {Polygon}\n   *          polygon Polygon to convert.\n   *\n   * @return {Array} Array with shell, holes.\n   */\n  Polygon: function Polygon(polygon) {\n    var array = [];\n    var shellGeoJson = extract$1.LineString.apply(this, [polygon.shell]);\n    array.push(shellGeoJson.coordinates);\n    for (var i = 0; i < polygon.holes.length; ++i) {\n      var hole = polygon.holes[i];\n      var holeGeoJson = extract$1.LineString.apply(this, [hole]);\n      array.push(holeGeoJson.coordinates);\n    }\n    return {\n      type: 'Polygon',\n      coordinates: array\n    };\n  },\n\n  /**\n   * Convert a MultiPolygon to a GeoJSON object\n   *\n   * @param {MultiPolygon}\n   *          multipolygon MultiPolygon to convert.\n   *\n   * @return {Array} Array of polygons.\n   */\n  MultiPolygon: function MultiPolygon(multipolygon) {\n    var array = [];\n    for (var i = 0; i < multipolygon.geometries.length; ++i) {\n      var polygon = multipolygon.geometries[i];\n      var geoJson = extract$1.Polygon.apply(this, [polygon]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPolygon',\n      coordinates: array\n    };\n  },\n\n  /**\n   * Convert a GeometryCollection to a GeoJSON object\n   *\n   * @param {GeometryCollection}\n   *          collection GeometryCollection to convert.\n   *\n   * @return {Array} Array of geometries.\n   */\n  GeometryCollection: function GeometryCollection(collection) {\n    var array = [];\n    for (var i = 0; i < collection.geometries.length; ++i) {\n      var geometry = collection.geometries[i];\n      var type = geometry.getGeometryType();\n      array.push(extract$1[type].apply(this, [geometry]));\n    }\n    return {\n      type: 'GeometryCollection',\n      geometries: array\n    };\n  }\n};\n\n/**\n * Converts a geometry in GeoJSON to a {@link Geometry}.\n */\n\n/**\n * A <code>GeoJSONReader</code> is parameterized by a <code>GeometryFactory</code>,\n * to allow it to create <code>Geometry</code> objects of the appropriate\n * implementation. In particular, the <code>GeometryFactory</code> determines\n * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nfunction GeoJSONReader(geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n  this.precisionModel = this.geometryFactory.getPrecisionModel();\n  this.parser = new GeoJSONParser(this.geometryFactory);\n}\n\nextend(GeoJSONReader.prototype, {\n  /**\n   * Reads a GeoJSON representation of a {@link Geometry}\n   *\n   * Will also parse GeoJSON Features/FeatureCollections as custom objects.\n   *\n   * @param {Object|String} geoJson a GeoJSON Object or String.\n   * @return {Geometry|Object} a <code>Geometry or Feature/FeatureCollection representation.</code>\n   * @memberof GeoJSONReader\n   */\n  read: function read(geoJson) {\n    var geometry = this.parser.read(geoJson);\n\n    if (this.precisionModel.getType() === PrecisionModel.FIXED) {\n      this.reducePrecision(geometry);\n    }\n\n    return geometry;\n  },\n\n\n  // NOTE: this is a hack\n  reducePrecision: function reducePrecision(geometry) {\n    var i, len;\n\n    if (geometry.coordinate) {\n      this.precisionModel.makePrecise(geometry.coordinate);\n    } else if (geometry.points) {\n      for (i = 0, len = geometry.points.length; i < len; i++) {\n        this.precisionModel.makePrecise(geometry.points[i]);\n      }\n    } else if (geometry.geometries) {\n      for (i = 0, len = geometry.geometries.length; i < len; i++) {\n        this.reducePrecision(geometry.geometries[i]);\n      }\n    }\n  }\n});\n\n/**\n * @module GeoJSONWriter\n */\n\n/**\n * Writes the GeoJSON representation of a {@link Geometry}. The\n * The GeoJSON format is defined <A\n * HREF=\"http://geojson.org/geojson-spec.html\">here</A>.\n */\n\n/**\n * The <code>GeoJSONWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nfunction GeoJSONWriter() {\n  this.parser = new GeoJSONParser(this.geometryFactory);\n}\n\nextend(GeoJSONWriter.prototype, {\n  /**\n   * Converts a <code>Geometry</code> to its GeoJSON representation.\n   *\n   * @param {Geometry}\n   *          geometry a <code>Geometry</code> to process.\n   * @return {Object} The GeoJSON representation of the Geometry.\n   * @memberof GeoJSONWriter\n   */\n  write: function write(geometry) {\n    return this.parser.write(geometry);\n  }\n});\n\n/**\n * Converts a geometry in Well-Known Text format to a {@link Geometry}.\n * <p>\n * <code>WKTReader</code> supports extracting <code>Geometry</code> objects\n * from either {@link Reader}s or {@link String}s. This allows it to function\n * as a parser to read <code>Geometry</code> objects from text blocks embedded\n * in other data formats (e.g. XML).\n */\n\n/**\n * A <code>WKTReader</code> is parameterized by a <code>GeometryFactory</code>,\n * to allow it to create <code>Geometry</code> objects of the appropriate\n * implementation. In particular, the <code>GeometryFactory</code> determines\n * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nfunction WKTReader(geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n  this.precisionModel = this.geometryFactory.getPrecisionModel();\n  this.parser = new WKTParser(this.geometryFactory);\n}\n\nextend(WKTReader.prototype, {\n  /**\n   * Reads a Well-Known Text representation of a {@link Geometry}\n   *\n   * @param {string}\n   *          wkt a <Geometry Tagged Text> string (see the OpenGIS Simple Features\n   *          Specification).\n   * @return {Geometry} a <code>Geometry</code> read from\n   *         <code>string.</code>\n   * @memberof WKTReader\n   */\n  read: function read(wkt) {\n    var geometry = this.parser.read(wkt);\n\n    // TODO: port and use GeometryPrecisionReducer, this is a hack\n    if (this.precisionModel.getType() === PrecisionModel.FIXED) {\n      this.reducePrecision(geometry);\n    }\n\n    return geometry;\n  },\n  reducePrecision: function reducePrecision(geometry) {\n    if (geometry.coordinate) {\n      this.precisionModel.makePrecise(geometry.coordinate);\n    } else if (geometry.points) {\n      for (var i = 0, len = geometry.points.coordinates.length; i < len; i++) {\n        this.precisionModel.makePrecise(geometry.points.coordinates[i]);\n      }\n    } else if (geometry.geometries) {\n      for (var _i = 0, _len = geometry.geometries.length; _i < _len; _i++) {\n        this.reducePrecision(geometry.geometries[_i]);\n      }\n    }\n  }\n});\n\n/*eslint-disable no-undef */\n\nfunction p2c(p) {\n  return [p.x, p.y];\n}\n\n/**\n * OpenLayers 3 Geometry parser and writer\n * @param {GeometryFactory} geometryFactory\n * @param {ol} olReference\n * @constructor\n */\nfunction OL3Parser(geometryFactory, olReference) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n  this.ol = olReference || typeof ol !== 'undefined' && ol;\n}\n\nextend(OL3Parser.prototype, {\n  /**\n   * @param geometry {ol.geom.Geometry}\n   * @return {Geometry}\n   * @memberof OL3Parser\n   */\n  read: function read(geometry) {\n    var ol = this.ol;\n    if (geometry instanceof ol.geom.Point) {\n      return this.convertFromPoint(geometry);\n    } else if (geometry instanceof ol.geom.LineString) {\n      return this.convertFromLineString(geometry);\n    } else if (geometry instanceof ol.geom.LinearRing) {\n      return this.convertFromLinearRing(geometry);\n    } else if (geometry instanceof ol.geom.Polygon) {\n      return this.convertFromPolygon(geometry);\n    } else if (geometry instanceof ol.geom.MultiPoint) {\n      return this.convertFromMultiPoint(geometry);\n    } else if (geometry instanceof ol.geom.MultiLineString) {\n      return this.convertFromMultiLineString(geometry);\n    } else if (geometry instanceof ol.geom.MultiPolygon) {\n      return this.convertFromMultiPolygon(geometry);\n    } else if (geometry instanceof ol.geom.GeometryCollection) {\n      return this.convertFromCollection(geometry);\n    }\n  },\n  convertFromPoint: function convertFromPoint(point) {\n    var coordinates = point.getCoordinates();\n    return this.geometryFactory.createPoint(new Coordinate(coordinates[0], coordinates[1]));\n  },\n  convertFromLineString: function convertFromLineString(lineString) {\n    return this.geometryFactory.createLineString(lineString.getCoordinates().map(function (coordinates) {\n      return new Coordinate(coordinates[0], coordinates[1]);\n    }));\n  },\n  convertFromLinearRing: function convertFromLinearRing(linearRing) {\n    return this.geometryFactory.createLinearRing(linearRing.getCoordinates().map(function (coordinates) {\n      return new Coordinate(coordinates[0], coordinates[1]);\n    }));\n  },\n  convertFromPolygon: function convertFromPolygon(polygon) {\n    var linearRings = polygon.getLinearRings();\n    var shell = null;\n    var holes = [];\n    for (var i = 0; i < linearRings.length; i++) {\n      var linearRing = this.convertFromLinearRing(linearRings[i]);\n      if (i === 0) {\n        shell = linearRing;\n      } else {\n        holes.push(linearRing);\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes);\n  },\n  convertFromMultiPoint: function convertFromMultiPoint(multiPoint) {\n    var points = multiPoint.getPoints().map(function (point) {\n      return this.convertFromPoint(point);\n    }, this);\n    return this.geometryFactory.createMultiPoint(points);\n  },\n  convertFromMultiLineString: function convertFromMultiLineString(multiLineString) {\n    var lineStrings = multiLineString.getLineStrings().map(function (lineString) {\n      return this.convertFromLineString(lineString);\n    }, this);\n    return this.geometryFactory.createMultiLineString(lineStrings);\n  },\n  convertFromMultiPolygon: function convertFromMultiPolygon(multiPolygon) {\n    var polygons = multiPolygon.getPolygons().map(function (polygon) {\n      return this.convertFromPolygon(polygon);\n    }, this);\n    return this.geometryFactory.createMultiPolygon(polygons);\n  },\n  convertFromCollection: function convertFromCollection(collection) {\n    var geometries = collection.getGeometries().map(function (geometry) {\n      return this.read(geometry);\n    }, this);\n    return this.geometryFactory.createGeometryCollection(geometries);\n  },\n\n\n  /**\n   * @param geometry\n   *          {Geometry}\n   * @return {ol.geom.Geometry}\n   * @memberof! OL3Parser\n   */\n  write: function write(geometry) {\n    if (geometry.getGeometryType() === 'Point') {\n      return this.convertToPoint(geometry.getCoordinate());\n    } else if (geometry.getGeometryType() === 'LineString') {\n      return this.convertToLineString(geometry);\n    } else if (geometry.getGeometryType() === 'LinearRing') {\n      return this.convertToLinearRing(geometry);\n    } else if (geometry.getGeometryType() === 'Polygon') {\n      return this.convertToPolygon(geometry);\n    } else if (geometry.getGeometryType() === 'MultiPoint') {\n      return this.convertToMultiPoint(geometry);\n    } else if (geometry.getGeometryType() === 'MultiLineString') {\n      return this.convertToMultiLineString(geometry);\n    } else if (geometry.getGeometryType() === 'MultiPolygon') {\n      return this.convertToMultiPolygon(geometry);\n    } else if (geometry.getGeometryType() === 'GeometryCollection') {\n      return this.convertToCollection(geometry);\n    }\n  },\n  convertToPoint: function convertToPoint(coordinate) {\n    return new this.ol.geom.Point([coordinate.x, coordinate.y]);\n  },\n  convertToLineString: function convertToLineString(lineString) {\n    var points = lineString.points.coordinates.map(p2c);\n    return new this.ol.geom.LineString(points);\n  },\n  convertToLinearRing: function convertToLinearRing(linearRing) {\n    var points = linearRing.points.coordinates.map(p2c);\n    return new this.ol.geom.LinearRing(points);\n  },\n  convertToPolygon: function convertToPolygon(polygon) {\n    var rings = [polygon.shell.points.coordinates.map(p2c)];\n    for (var i = 0; i < polygon.holes.length; i++) {\n      rings.push(polygon.holes[i].points.coordinates.map(p2c));\n    }\n    return new this.ol.geom.Polygon(rings);\n  },\n  convertToMultiPoint: function convertToMultiPoint(multiPoint) {\n    return new this.ol.geom.MultiPoint(multiPoint.getCoordinates().map(p2c));\n  },\n  convertToMultiLineString: function convertToMultiLineString(multiLineString) {\n    var lineStrings = [];\n    for (var i = 0; i < multiLineString.geometries.length; i++) {\n      lineStrings.push(this.convertToLineString(multiLineString.geometries[i]).getCoordinates());\n    }\n    return new this.ol.geom.MultiLineString(lineStrings);\n  },\n  convertToMultiPolygon: function convertToMultiPolygon(multiPolygon) {\n    var polygons = [];\n    for (var i = 0; i < multiPolygon.geometries.length; i++) {\n      polygons.push(this.convertToPolygon(multiPolygon.geometries[i]).getCoordinates());\n    }\n    return new this.ol.geom.MultiPolygon(polygons);\n  },\n  convertToCollection: function convertToCollection(geometryCollection) {\n    var geometries = [];\n    for (var i = 0; i < geometryCollection.geometries.length; i++) {\n      var geometry = geometryCollection.geometries[i];\n      geometries.push(this.write(geometry));\n    }\n    return new this.ol.geom.GeometryCollection(geometries);\n  }\n});\n\n\n\nvar io = Object.freeze({\n\tGeoJSONReader: GeoJSONReader,\n\tGeoJSONWriter: GeoJSONWriter,\n\tOL3Parser: OL3Parser,\n\tWKTReader: WKTReader,\n\tWKTWriter: WKTWriter\n});\n\nfunction ScaledNoder() {\n\tthis.noder = null;\n\tthis.scaleFactor = null;\n\tthis.offsetX = null;\n\tthis.offsetY = null;\n\tthis.isScaled = false;\n\tif (arguments.length === 2) {\n\t\tvar noder = arguments[0],\n\t\t    scaleFactor = arguments[1];\n\t\tScaledNoder.call(this, noder, scaleFactor, 0, 0);\n\t} else if (arguments.length === 4) {\n\t\tvar _noder = arguments[0],\n\t\t    _scaleFactor = arguments[1],\n\t\t    offsetX = arguments[2],\n\t\t    offsetY = arguments[3];\n\t\tthis.noder = _noder;\n\t\tthis.scaleFactor = _scaleFactor;\n\t\tthis.isScaled = !this.isIntegerPrecision();\n\t}\n}\nextend(ScaledNoder.prototype, {\n\trescale: function rescale() {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tvar segStrings = arguments[0];\n\t\t\tfor (var i = segStrings.iterator(); i.hasNext();) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tthis.rescale(ss.getCoordinates());\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Array) {\n\t\t\tvar pts = arguments[0];\n\t\t\tvar p0 = null;\n\t\t\tvar p1 = null;\n\t\t\tif (pts.length === 2) {\n\t\t\t\tp0 = new Coordinate(pts[0]);\n\t\t\t\tp1 = new Coordinate(pts[1]);\n\t\t\t}\n\t\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\t\tpts[i].x = pts[i].x / this.scaleFactor + this.offsetX;\n\t\t\t\tpts[i].y = pts[i].y / this.scaleFactor + this.offsetY;\n\t\t\t}\n\t\t\tif (pts.length === 2 && pts[0].equals2D(pts[1])) {\n\t\t\t\tSystem.out.println(pts);\n\t\t\t}\n\t\t}\n\t},\n\tscale: function scale() {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tvar segStrings = arguments[0];\n\t\t\tvar nodedSegmentStrings = new ArrayList();\n\t\t\tfor (var i = segStrings.iterator(); i.hasNext();) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tnodedSegmentStrings.add(new NodedSegmentString(this.scale(ss.getCoordinates()), ss.getData()));\n\t\t\t}\n\t\t\treturn nodedSegmentStrings;\n\t\t} else if (arguments[0] instanceof Array) {\n\t\t\tvar pts = arguments[0];\n\t\t\tvar roundPts = new Array(pts.length).fill(null);\n\t\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\t\troundPts[i] = new Coordinate(Math.round((pts[i].x - this.offsetX) * this.scaleFactor), Math.round((pts[i].y - this.offsetY) * this.scaleFactor), pts[i].z);\n\t\t\t}\n\t\t\tvar roundPtsNoDup = CoordinateArrays.removeRepeatedPoints(roundPts);\n\t\t\treturn roundPtsNoDup;\n\t\t}\n\t},\n\tisIntegerPrecision: function isIntegerPrecision() {\n\t\treturn this.scaleFactor === 1.0;\n\t},\n\tgetNodedSubstrings: function getNodedSubstrings() {\n\t\tvar splitSS = this.noder.getNodedSubstrings();\n\t\tif (this.isScaled) this.rescale(splitSS);\n\t\treturn splitSS;\n\t},\n\tcomputeNodes: function computeNodes(inputSegStrings) {\n\t\tvar intSegStrings = inputSegStrings;\n\t\tif (this.isScaled) intSegStrings = this.scale(inputSegStrings);\n\t\tthis.noder.computeNodes(intSegStrings);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Noder];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ScaledNoder;\n\t}\n});\n\n\n\nvar noding = Object.freeze({\n\tMCIndexNoder: MCIndexNoder,\n\tScaledNoder: ScaledNoder,\n\tSegmentString: SegmentString\n});\n\nfunction IsSimpleOp() {\n\tthis.inputGeom = null;\n\tthis.isClosedEndpointsInInterior = true;\n\tthis.nonSimpleLocation = null;\n\tif (arguments.length === 1) {\n\t\tvar geom = arguments[0];\n\t\tthis.inputGeom = geom;\n\t} else if (arguments.length === 2) {\n\t\tvar _geom = arguments[0],\n\t\t    boundaryNodeRule = arguments[1];\n\t\tthis.inputGeom = _geom;\n\t\tthis.isClosedEndpointsInInterior = !boundaryNodeRule.isInBoundary(2);\n\t}\n}\nextend(IsSimpleOp.prototype, {\n\tisSimpleMultiPoint: function isSimpleMultiPoint(mp) {\n\t\tif (mp.isEmpty()) return true;\n\t\tvar points = new TreeSet();\n\t\tfor (var i = 0; i < mp.getNumGeometries(); i++) {\n\t\t\tvar pt = mp.getGeometryN(i);\n\t\t\tvar p = pt.getCoordinate();\n\t\t\tif (points.contains(p)) {\n\t\t\t\tthis.nonSimpleLocation = p;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tpoints.add(p);\n\t\t}\n\t\treturn true;\n\t},\n\tisSimplePolygonal: function isSimplePolygonal(geom) {\n\t\tvar rings = LinearComponentExtracter.getLines(geom);\n\t\tfor (var i = rings.iterator(); i.hasNext();) {\n\t\t\tvar ring = i.next();\n\t\t\tif (!this.isSimpleLinearGeometry(ring)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\thasClosedEndpointIntersection: function hasClosedEndpointIntersection(graph) {\n\t\tvar endPoints = new TreeMap();\n\t\tfor (var i = graph.getEdgeIterator(); i.hasNext();) {\n\t\t\tvar e = i.next();\n\t\t\tvar maxSegmentIndex = e.getMaximumSegmentIndex();\n\t\t\tvar isClosed = e.isClosed();\n\t\t\tvar p0 = e.getCoordinate(0);\n\t\t\tthis.addEndpoint(endPoints, p0, isClosed);\n\t\t\tvar p1 = e.getCoordinate(e.getNumPoints() - 1);\n\t\t\tthis.addEndpoint(endPoints, p1, isClosed);\n\t\t}\n\t\tfor (var i = endPoints.values().iterator(); i.hasNext();) {\n\t\t\tvar eiInfo = i.next();\n\t\t\tif (eiInfo.isClosed && eiInfo.degree !== 2) {\n\t\t\t\tthis.nonSimpleLocation = eiInfo.getCoordinate();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetNonSimpleLocation: function getNonSimpleLocation() {\n\t\treturn this.nonSimpleLocation;\n\t},\n\tisSimpleLinearGeometry: function isSimpleLinearGeometry(geom) {\n\t\tif (geom.isEmpty()) return true;\n\t\tvar graph = new GeometryGraph(0, geom);\n\t\tvar li = new RobustLineIntersector();\n\t\tvar si = graph.computeSelfNodes(li, true);\n\t\tif (!si.hasIntersection()) return true;\n\t\tif (si.hasProperIntersection()) {\n\t\t\tthis.nonSimpleLocation = si.getProperIntersectionPoint();\n\t\t\treturn false;\n\t\t}\n\t\tif (this.hasNonEndpointIntersection(graph)) return false;\n\t\tif (this.isClosedEndpointsInInterior) {\n\t\t\tif (this.hasClosedEndpointIntersection(graph)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\thasNonEndpointIntersection: function hasNonEndpointIntersection(graph) {\n\t\tfor (var i = graph.getEdgeIterator(); i.hasNext();) {\n\t\t\tvar e = i.next();\n\t\t\tvar maxSegmentIndex = e.getMaximumSegmentIndex();\n\t\t\tfor (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext();) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tif (!ei.isEndPoint(maxSegmentIndex)) {\n\t\t\t\t\tthis.nonSimpleLocation = ei.getCoordinate();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\taddEndpoint: function addEndpoint(endPoints, p, isClosed) {\n\t\tvar eiInfo = endPoints.get(p);\n\t\tif (eiInfo === null) {\n\t\t\teiInfo = new EndpointInfo(p);\n\t\t\tendPoints.put(p, eiInfo);\n\t\t}\n\t\teiInfo.addEndpoint(isClosed);\n\t},\n\tcomputeSimple: function computeSimple(geom) {\n\t\tthis.nonSimpleLocation = null;\n\t\tif (geom.isEmpty()) return true;\n\t\tif (geom instanceof LineString) return this.isSimpleLinearGeometry(geom);\n\t\tif (geom instanceof MultiLineString) return this.isSimpleLinearGeometry(geom);\n\t\tif (geom instanceof MultiPoint) return this.isSimpleMultiPoint(geom);\n\t\tif (hasInterface(geom, Polygonal)) return this.isSimplePolygonal(geom);\n\t\tif (geom instanceof GeometryCollection) return this.isSimpleGeometryCollection(geom);\n\t\treturn true;\n\t},\n\tisSimple: function isSimple() {\n\t\tthis.nonSimpleLocation = null;\n\t\treturn this.computeSimple(this.inputGeom);\n\t},\n\tisSimpleGeometryCollection: function isSimpleGeometryCollection(geom) {\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar comp = geom.getGeometryN(i);\n\t\t\tif (!this.computeSimple(comp)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn IsSimpleOp;\n\t}\n});\nfunction EndpointInfo() {\n\tthis.pt = null;\n\tthis.isClosed = null;\n\tthis.degree = null;\n\tvar pt = arguments[0];\n\tthis.pt = pt;\n\tthis.isClosed = false;\n\tthis.degree = 0;\n}\nextend(EndpointInfo.prototype, {\n\taddEndpoint: function addEndpoint(isClosed) {\n\t\tthis.degree++;\n\t\tthis.isClosed |= isClosed;\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this.pt;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EndpointInfo;\n\t}\n});\nIsSimpleOp.EndpointInfo = EndpointInfo;\n\nfunction BufferParameters() {\n\tthis.quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n\tthis.endCapStyle = BufferParameters.CAP_ROUND;\n\tthis.joinStyle = BufferParameters.JOIN_ROUND;\n\tthis.mitreLimit = BufferParameters.DEFAULT_MITRE_LIMIT;\n\tthis._isSingleSided = false;\n\tthis.simplifyFactor = BufferParameters.DEFAULT_SIMPLIFY_FACTOR;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tvar quadrantSegments = arguments[0];\n\t\tthis.setQuadrantSegments(quadrantSegments);\n\t} else if (arguments.length === 2) {\n\t\tvar _quadrantSegments = arguments[0],\n\t\t    endCapStyle = arguments[1];\n\t\tthis.setQuadrantSegments(_quadrantSegments);\n\t\tthis.setEndCapStyle(endCapStyle);\n\t} else if (arguments.length === 4) {\n\t\tvar _quadrantSegments2 = arguments[0],\n\t\t    _endCapStyle = arguments[1],\n\t\t    joinStyle = arguments[2],\n\t\t    mitreLimit = arguments[3];\n\t\tthis.setQuadrantSegments(_quadrantSegments2);\n\t\tthis.setEndCapStyle(_endCapStyle);\n\t\tthis.setJoinStyle(joinStyle);\n\t\tthis.setMitreLimit(mitreLimit);\n\t}\n}\nextend(BufferParameters.prototype, {\n\tgetEndCapStyle: function getEndCapStyle() {\n\t\treturn this.endCapStyle;\n\t},\n\tisSingleSided: function isSingleSided() {\n\t\treturn this._isSingleSided;\n\t},\n\tsetQuadrantSegments: function setQuadrantSegments(quadSegs) {\n\t\tthis.quadrantSegments = quadSegs;\n\t\tif (this.quadrantSegments === 0) this.joinStyle = BufferParameters.JOIN_BEVEL;\n\t\tif (this.quadrantSegments < 0) {\n\t\t\tthis.joinStyle = BufferParameters.JOIN_MITRE;\n\t\t\tthis.mitreLimit = Math.abs(this.quadrantSegments);\n\t\t}\n\t\tif (quadSegs <= 0) {\n\t\t\tthis.quadrantSegments = 1;\n\t\t}\n\t\tif (this.joinStyle !== BufferParameters.JOIN_ROUND) {\n\t\t\tthis.quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n\t\t}\n\t},\n\tgetJoinStyle: function getJoinStyle() {\n\t\treturn this.joinStyle;\n\t},\n\tsetJoinStyle: function setJoinStyle(joinStyle) {\n\t\tthis.joinStyle = joinStyle;\n\t},\n\tsetSimplifyFactor: function setSimplifyFactor(simplifyFactor) {\n\t\tthis.simplifyFactor = simplifyFactor < 0 ? 0 : simplifyFactor;\n\t},\n\tgetSimplifyFactor: function getSimplifyFactor() {\n\t\treturn this.simplifyFactor;\n\t},\n\tgetQuadrantSegments: function getQuadrantSegments() {\n\t\treturn this.quadrantSegments;\n\t},\n\tsetEndCapStyle: function setEndCapStyle(endCapStyle) {\n\t\tthis.endCapStyle = endCapStyle;\n\t},\n\tgetMitreLimit: function getMitreLimit() {\n\t\treturn this.mitreLimit;\n\t},\n\tsetMitreLimit: function setMitreLimit(mitreLimit) {\n\t\tthis.mitreLimit = mitreLimit;\n\t},\n\tsetSingleSided: function setSingleSided(isSingleSided) {\n\t\tthis._isSingleSided = isSingleSided;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn BufferParameters;\n\t}\n});\nBufferParameters.bufferDistanceError = function (quadSegs) {\n\tvar alpha = Math.PI / 2.0 / quadSegs;\n\treturn 1 - Math.cos(alpha / 2.0);\n};\nBufferParameters.CAP_ROUND = 1;\nBufferParameters.CAP_FLAT = 2;\nBufferParameters.CAP_SQUARE = 3;\nBufferParameters.JOIN_ROUND = 1;\nBufferParameters.JOIN_MITRE = 2;\nBufferParameters.JOIN_BEVEL = 3;\nBufferParameters.DEFAULT_QUADRANT_SEGMENTS = 8;\nBufferParameters.DEFAULT_MITRE_LIMIT = 5.0;\nBufferParameters.DEFAULT_SIMPLIFY_FACTOR = 0.01;\n\nfunction RightmostEdgeFinder() {\n\tthis.minIndex = -1;\n\tthis.minCoord = null;\n\tthis.minDe = null;\n\tthis.orientedDe = null;\n}\nextend(RightmostEdgeFinder.prototype, {\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this.minCoord;\n\t},\n\tgetRightmostSide: function getRightmostSide(de, index) {\n\t\tvar side = this.getRightmostSideOfSegment(de, index);\n\t\tif (side < 0) side = this.getRightmostSideOfSegment(de, index - 1);\n\t\tif (side < 0) {\n\t\t\tthis.minCoord = null;\n\t\t\tthis.checkForRightmostCoordinate(de);\n\t\t}\n\t\treturn side;\n\t},\n\tfindRightmostEdgeAtVertex: function findRightmostEdgeAtVertex() {\n\t\tvar pts = this.minDe.getEdge().getCoordinates();\n\t\tAssert.isTrue(this.minIndex > 0 && this.minIndex < pts.length, \"rightmost point expected to be interior vertex of edge\");\n\t\tvar pPrev = pts[this.minIndex - 1];\n\t\tvar pNext = pts[this.minIndex + 1];\n\t\tvar orientation = CGAlgorithms.computeOrientation(this.minCoord, pNext, pPrev);\n\t\tvar usePrev = false;\n\t\tif (pPrev.y < this.minCoord.y && pNext.y < this.minCoord.y && orientation === CGAlgorithms.COUNTERCLOCKWISE) {\n\t\t\tusePrev = true;\n\t\t} else if (pPrev.y > this.minCoord.y && pNext.y > this.minCoord.y && orientation === CGAlgorithms.CLOCKWISE) {\n\t\t\tusePrev = true;\n\t\t}\n\t\tif (usePrev) {\n\t\t\tthis.minIndex = this.minIndex - 1;\n\t\t}\n\t},\n\tgetRightmostSideOfSegment: function getRightmostSideOfSegment(de, i) {\n\t\tvar e = de.getEdge();\n\t\tvar coord = e.getCoordinates();\n\t\tif (i < 0 || i + 1 >= coord.length) return -1;\n\t\tif (coord[i].y === coord[i + 1].y) return -1;\n\t\tvar pos = Position.LEFT;\n\t\tif (coord[i].y < coord[i + 1].y) pos = Position.RIGHT;\n\t\treturn pos;\n\t},\n\tgetEdge: function getEdge() {\n\t\treturn this.orientedDe;\n\t},\n\tcheckForRightmostCoordinate: function checkForRightmostCoordinate(de) {\n\t\tvar coord = de.getEdge().getCoordinates();\n\t\tfor (var i = 0; i < coord.length - 1; i++) {\n\t\t\tif (this.minCoord === null || coord[i].x > this.minCoord.x) {\n\t\t\t\tthis.minDe = de;\n\t\t\t\tthis.minIndex = i;\n\t\t\t\tthis.minCoord = coord[i];\n\t\t\t}\n\t\t}\n\t},\n\tfindRightmostEdgeAtNode: function findRightmostEdgeAtNode() {\n\t\tvar node = this.minDe.getNode();\n\t\tvar star = node.getEdges();\n\t\tthis.minDe = star.getRightmostEdge();\n\t\tif (!this.minDe.isForward()) {\n\t\t\tthis.minDe = this.minDe.getSym();\n\t\t\tthis.minIndex = this.minDe.getEdge().getCoordinates().length - 1;\n\t\t}\n\t},\n\tfindEdge: function findEdge(dirEdgeList) {\n\t\tfor (var i = dirEdgeList.iterator(); i.hasNext();) {\n\t\t\tvar de = i.next();\n\t\t\tif (!de.isForward()) continue;\n\t\t\tthis.checkForRightmostCoordinate(de);\n\t\t}\n\t\tAssert.isTrue(this.minIndex !== 0 || this.minCoord.equals(this.minDe.getCoordinate()), \"inconsistency in rightmost processing\");\n\t\tif (this.minIndex === 0) {\n\t\t\tthis.findRightmostEdgeAtNode();\n\t\t} else {\n\t\t\tthis.findRightmostEdgeAtVertex();\n\t\t}\n\t\tthis.orientedDe = this.minDe;\n\t\tvar rightmostSide = this.getRightmostSide(this.minDe, this.minIndex);\n\t\tif (rightmostSide === Position.LEFT) {\n\t\t\tthis.orientedDe = this.minDe.getSym();\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn RightmostEdgeFinder;\n\t}\n});\n\nfunction LinkedList() {\n  this.array_ = [];\n}\nLinkedList.prototype.addLast = function (e) {\n  this.array_.push(e);\n};\nLinkedList.prototype.removeFirst = function () {\n  return this.array_.shift();\n};\nLinkedList.prototype.isEmpty = function () {\n  return this.array_.length === 0;\n};\n\nfunction BufferSubgraph() {\n\tthis.finder = null;\n\tthis.dirEdgeList = new ArrayList();\n\tthis.nodes = new ArrayList();\n\tthis.rightMostCoord = null;\n\tthis.env = null;\n\tthis.finder = new RightmostEdgeFinder();\n}\nextend(BufferSubgraph.prototype, {\n\tclearVisitedEdges: function clearVisitedEdges() {\n\t\tfor (var it = this.dirEdgeList.iterator(); it.hasNext();) {\n\t\t\tvar de = it.next();\n\t\t\tde.setVisited(false);\n\t\t}\n\t},\n\tgetRightmostCoordinate: function getRightmostCoordinate() {\n\t\treturn this.rightMostCoord;\n\t},\n\tcomputeNodeDepth: function computeNodeDepth(n) {\n\t\tvar startEdge = null;\n\t\tfor (var i = n.getEdges().iterator(); i.hasNext();) {\n\t\t\tvar de = i.next();\n\t\t\tif (de.isVisited() || de.getSym().isVisited()) {\n\t\t\t\tstartEdge = de;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (startEdge === null) throw new TopologyException(\"unable to find edge to compute depths at \" + n.getCoordinate());\n\t\tn.getEdges().computeDepths(startEdge);\n\t\tfor (var i = n.getEdges().iterator(); i.hasNext();) {\n\t\t\tvar de = i.next();\n\t\t\tde.setVisited(true);\n\t\t\tthis.copySymDepths(de);\n\t\t}\n\t},\n\tcomputeDepth: function computeDepth(outsideDepth) {\n\t\tthis.clearVisitedEdges();\n\t\tvar de = this.finder.getEdge();\n\t\tvar n = de.getNode();\n\t\tvar label = de.getLabel();\n\t\tde.setEdgeDepths(Position.RIGHT, outsideDepth);\n\t\tthis.copySymDepths(de);\n\t\tthis.computeDepths(de);\n\t},\n\tcreate: function create(node) {\n\t\tthis.addReachable(node);\n\t\tthis.finder.findEdge(this.dirEdgeList);\n\t\tthis.rightMostCoord = this.finder.getCoordinate();\n\t},\n\tfindResultEdges: function findResultEdges() {\n\t\tfor (var it = this.dirEdgeList.iterator(); it.hasNext();) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.getDepth(Position.RIGHT) >= 1 && de.getDepth(Position.LEFT) <= 0 && !de.isInteriorAreaEdge()) {\n\t\t\t\tde.setInResult(true);\n\t\t\t}\n\t\t}\n\t},\n\tcomputeDepths: function computeDepths(startEdge) {\n\t\tvar nodesVisited = new HashSet();\n\t\tvar nodeQueue = new LinkedList();\n\t\tvar startNode = startEdge.getNode();\n\t\tnodeQueue.addLast(startNode);\n\t\tnodesVisited.add(startNode);\n\t\tstartEdge.setVisited(true);\n\t\twhile (!nodeQueue.isEmpty()) {\n\t\t\tvar n = nodeQueue.removeFirst();\n\t\t\tnodesVisited.add(n);\n\t\t\tthis.computeNodeDepth(n);\n\t\t\tfor (var i = n.getEdges().iterator(); i.hasNext();) {\n\t\t\t\tvar de = i.next();\n\t\t\t\tvar sym = de.getSym();\n\t\t\t\tif (sym.isVisited()) continue;\n\t\t\t\tvar adjNode = sym.getNode();\n\t\t\t\tif (!nodesVisited.contains(adjNode)) {\n\t\t\t\t\tnodeQueue.addLast(adjNode);\n\t\t\t\t\tnodesVisited.add(adjNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcompareTo: function compareTo(o) {\n\t\tvar graph = o;\n\t\tif (this.rightMostCoord.x < graph.rightMostCoord.x) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.rightMostCoord.x > graph.rightMostCoord.x) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t},\n\tgetEnvelope: function getEnvelope() {\n\t\tif (this.env === null) {\n\t\t\tvar edgeEnv = new Envelope();\n\t\t\tfor (var it = this.dirEdgeList.iterator(); it.hasNext();) {\n\t\t\t\tvar dirEdge = it.next();\n\t\t\t\tvar pts = dirEdge.getEdge().getCoordinates();\n\t\t\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\t\t\tedgeEnv.expandToInclude(pts[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.env = edgeEnv;\n\t\t}\n\t\treturn this.env;\n\t},\n\taddReachable: function addReachable(startNode) {\n\t\tvar nodeStack = new Stack();\n\t\tnodeStack.add(startNode);\n\t\twhile (!nodeStack.empty()) {\n\t\t\tvar node = nodeStack.pop();\n\t\t\tthis.add(node, nodeStack);\n\t\t}\n\t},\n\tcopySymDepths: function copySymDepths(de) {\n\t\tvar sym = de.getSym();\n\t\tsym.setDepth(Position.LEFT, de.getDepth(Position.RIGHT));\n\t\tsym.setDepth(Position.RIGHT, de.getDepth(Position.LEFT));\n\t},\n\tadd: function add(node, nodeStack) {\n\t\tnode.setVisited(true);\n\t\tthis.nodes.add(node);\n\t\tfor (var i = node.getEdges().iterator(); i.hasNext();) {\n\t\t\tvar de = i.next();\n\t\t\tthis.dirEdgeList.add(de);\n\t\t\tvar sym = de.getSym();\n\t\t\tvar symNode = sym.getNode();\n\t\t\tif (!symNode.isVisited()) nodeStack.push(symNode);\n\t\t}\n\t},\n\tgetNodes: function getNodes() {\n\t\treturn this.nodes;\n\t},\n\tgetDirectedEdges: function getDirectedEdges() {\n\t\treturn this.dirEdgeList;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn BufferSubgraph;\n\t}\n});\n\nfunction BufferInputLineSimplifier() {\n\tthis.inputLine = null;\n\tthis.distanceTol = null;\n\tthis.isDeleted = null;\n\tthis.angleOrientation = CGAlgorithms.COUNTERCLOCKWISE;\n\tvar inputLine = arguments[0];\n\tthis.inputLine = inputLine;\n}\nextend(BufferInputLineSimplifier.prototype, {\n\tisDeletable: function isDeletable(i0, i1, i2, distanceTol) {\n\t\tvar p0 = this.inputLine[i0];\n\t\tvar p1 = this.inputLine[i1];\n\t\tvar p2 = this.inputLine[i2];\n\t\tif (!this.isConcave(p0, p1, p2)) return false;\n\t\tif (!this.isShallow(p0, p1, p2, distanceTol)) return false;\n\t\treturn this.isShallowSampled(p0, p1, i0, i2, distanceTol);\n\t},\n\tdeleteShallowConcavities: function deleteShallowConcavities() {\n\t\tvar index = 1;\n\t\tvar maxIndex = this.inputLine.length - 1;\n\t\tvar midIndex = this.findNextNonDeletedIndex(index);\n\t\tvar lastIndex = this.findNextNonDeletedIndex(midIndex);\n\t\tvar isChanged = false;\n\t\twhile (lastIndex < this.inputLine.length) {\n\t\t\tvar isMiddleVertexDeleted = false;\n\t\t\tif (this.isDeletable(index, midIndex, lastIndex, this.distanceTol)) {\n\t\t\t\tthis.isDeleted[midIndex] = BufferInputLineSimplifier.DELETE;\n\t\t\t\tisMiddleVertexDeleted = true;\n\t\t\t\tisChanged = true;\n\t\t\t}\n\t\t\tif (isMiddleVertexDeleted) index = lastIndex;else index = midIndex;\n\t\t\tmidIndex = this.findNextNonDeletedIndex(index);\n\t\t\tlastIndex = this.findNextNonDeletedIndex(midIndex);\n\t\t}\n\t\treturn isChanged;\n\t},\n\tisShallowConcavity: function isShallowConcavity(p0, p1, p2, distanceTol) {\n\t\tvar orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n\t\tvar isAngleToSimplify = orientation === this.angleOrientation;\n\t\tif (!isAngleToSimplify) return false;\n\t\tvar dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n\t\treturn dist < distanceTol;\n\t},\n\tisShallowSampled: function isShallowSampled(p0, p2, i0, i2, distanceTol) {\n\t\tvar inc = Math.trunc((i2 - i0) / BufferInputLineSimplifier.NUM_PTS_TO_CHECK);\n\t\tif (inc <= 0) inc = 1;\n\t\tfor (var i = i0; i < i2; i += inc) {\n\t\t\tif (!this.isShallow(p0, p2, this.inputLine[i], distanceTol)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tisConcave: function isConcave(p0, p1, p2) {\n\t\tvar orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n\t\tvar isConcave = orientation === this.angleOrientation;\n\t\treturn isConcave;\n\t},\n\tsimplify: function simplify(distanceTol) {\n\t\tthis.distanceTol = Math.abs(distanceTol);\n\t\tif (distanceTol < 0) this.angleOrientation = CGAlgorithms.CLOCKWISE;\n\t\tthis.isDeleted = new Array(this.inputLine.length).fill(null);\n\t\tvar isChanged = false;\n\t\tdo {\n\t\t\tisChanged = this.deleteShallowConcavities();\n\t\t} while (isChanged);\n\t\treturn this.collapseLine();\n\t},\n\tfindNextNonDeletedIndex: function findNextNonDeletedIndex(index) {\n\t\tvar next = index + 1;\n\t\twhile (next < this.inputLine.length && this.isDeleted[next] === BufferInputLineSimplifier.DELETE) {\n\t\t\tnext++;\n\t\t}return next;\n\t},\n\tisShallow: function isShallow(p0, p1, p2, distanceTol) {\n\t\tvar dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n\t\treturn dist < distanceTol;\n\t},\n\tcollapseLine: function collapseLine() {\n\t\tvar coordList = new CoordinateList();\n\t\tfor (var i = 0; i < this.inputLine.length; i++) {\n\t\t\tif (this.isDeleted[i] !== BufferInputLineSimplifier.DELETE) coordList.add(this.inputLine[i]);\n\t\t}\n\t\treturn coordList.toCoordinateArray();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn BufferInputLineSimplifier;\n\t}\n});\nBufferInputLineSimplifier.simplify = function (inputLine, distanceTol) {\n\tvar simp = new BufferInputLineSimplifier(inputLine);\n\treturn simp.simplify(distanceTol);\n};\nBufferInputLineSimplifier.INIT = 0;\nBufferInputLineSimplifier.DELETE = 1;\nBufferInputLineSimplifier.KEEP = 1;\nBufferInputLineSimplifier.NUM_PTS_TO_CHECK = 10;\n\nfunction OffsetSegmentString() {\n\tthis.ptList = null;\n\tthis.precisionModel = null;\n\tthis.minimimVertexDistance = 0.0;\n\tthis.ptList = new ArrayList();\n}\nextend(OffsetSegmentString.prototype, {\n\tgetCoordinates: function getCoordinates() {\n\t\tvar coord = this.ptList.toArray(OffsetSegmentString.COORDINATE_ARRAY_TYPE);\n\t\treturn coord;\n\t},\n\tsetPrecisionModel: function setPrecisionModel(precisionModel) {\n\t\tthis.precisionModel = precisionModel;\n\t},\n\taddPt: function addPt(pt) {\n\t\tvar bufPt = new Coordinate(pt);\n\t\tthis.precisionModel.makePrecise(bufPt);\n\t\tif (this.isRedundant(bufPt)) return null;\n\t\tthis.ptList.add(bufPt);\n\t},\n\treverse: function reverse() {},\n\taddPts: function addPts(pt, isForward) {\n\t\tif (isForward) {\n\t\t\tfor (var i = 0; i < pt.length; i++) {\n\t\t\t\tthis.addPt(pt[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var i = pt.length - 1; i >= 0; i--) {\n\t\t\t\tthis.addPt(pt[i]);\n\t\t\t}\n\t\t}\n\t},\n\tisRedundant: function isRedundant(pt) {\n\t\tif (this.ptList.size() < 1) return false;\n\t\tvar lastPt = this.ptList.get(this.ptList.size() - 1);\n\t\tvar ptDist = pt.distance(lastPt);\n\t\tif (ptDist < this.minimimVertexDistance) return true;\n\t\treturn false;\n\t},\n\ttoString: function toString() {\n\t\tvar fact = new GeometryFactory();\n\t\tvar line = fact.createLineString(this.getCoordinates());\n\t\treturn line.toString();\n\t},\n\tcloseRing: function closeRing() {\n\t\tif (this.ptList.size() < 1) return null;\n\t\tvar startPt = new Coordinate(this.ptList.get(0));\n\t\tvar lastPt = this.ptList.get(this.ptList.size() - 1);\n\t\tvar last2Pt = null;\n\t\tif (this.ptList.size() >= 2) last2Pt = this.ptList.get(this.ptList.size() - 2);\n\t\tif (startPt.equals(lastPt)) return null;\n\t\tthis.ptList.add(startPt);\n\t},\n\tsetMinimumVertexDistance: function setMinimumVertexDistance(minimimVertexDistance) {\n\t\tthis.minimimVertexDistance = minimimVertexDistance;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn OffsetSegmentString;\n\t}\n});\nOffsetSegmentString.COORDINATE_ARRAY_TYPE = new Array(0).fill(null);\n\nfunction OffsetSegmentGenerator() {\n\tthis.maxCurveSegmentError = 0.0;\n\tthis.filletAngleQuantum = null;\n\tthis.closingSegLengthFactor = 1;\n\tthis.segList = null;\n\tthis.distance = 0.0;\n\tthis.precisionModel = null;\n\tthis.bufParams = null;\n\tthis.li = null;\n\tthis.s0 = null;\n\tthis.s1 = null;\n\tthis.s2 = null;\n\tthis.seg0 = new LineSegment();\n\tthis.seg1 = new LineSegment();\n\tthis.offset0 = new LineSegment();\n\tthis.offset1 = new LineSegment();\n\tthis.side = 0;\n\tthis._hasNarrowConcaveAngle = false;\n\tvar precisionModel = arguments[0],\n\t    bufParams = arguments[1],\n\t    distance = arguments[2];\n\tthis.precisionModel = precisionModel;\n\tthis.bufParams = bufParams;\n\tthis.li = new RobustLineIntersector();\n\tthis.filletAngleQuantum = Math.PI / 2.0 / bufParams.getQuadrantSegments();\n\tif (bufParams.getQuadrantSegments() >= 8 && bufParams.getJoinStyle() === BufferParameters.JOIN_ROUND) this.closingSegLengthFactor = OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR;\n\tthis.init(distance);\n}\nextend(OffsetSegmentGenerator.prototype, {\n\taddNextSegment: function addNextSegment(p, addStartPoint) {\n\t\tthis.s0 = this.s1;\n\t\tthis.s1 = this.s2;\n\t\tthis.s2 = p;\n\t\tthis.seg0.setCoordinates(this.s0, this.s1);\n\t\tthis.computeOffsetSegment(this.seg0, this.side, this.distance, this.offset0);\n\t\tthis.seg1.setCoordinates(this.s1, this.s2);\n\t\tthis.computeOffsetSegment(this.seg1, this.side, this.distance, this.offset1);\n\t\tif (this.s1.equals(this.s2)) return null;\n\t\tvar orientation = CGAlgorithms.computeOrientation(this.s0, this.s1, this.s2);\n\t\tvar outsideTurn = orientation === CGAlgorithms.CLOCKWISE && this.side === Position.LEFT || orientation === CGAlgorithms.COUNTERCLOCKWISE && this.side === Position.RIGHT;\n\t\tif (orientation === 0) {\n\t\t\tthis.addCollinear(addStartPoint);\n\t\t} else if (outsideTurn) {\n\t\t\tthis.addOutsideTurn(orientation, addStartPoint);\n\t\t} else {\n\t\t\tthis.addInsideTurn(orientation, addStartPoint);\n\t\t}\n\t},\n\taddLineEndCap: function addLineEndCap(p0, p1) {\n\t\tvar seg = new LineSegment(p0, p1);\n\t\tvar offsetL = new LineSegment();\n\t\tthis.computeOffsetSegment(seg, Position.LEFT, this.distance, offsetL);\n\t\tvar offsetR = new LineSegment();\n\t\tthis.computeOffsetSegment(seg, Position.RIGHT, this.distance, offsetR);\n\t\tvar dx = p1.x - p0.x;\n\t\tvar dy = p1.y - p0.y;\n\t\tvar angle = Math.atan2(dy, dx);\n\t\tswitch (this.bufParams.getEndCapStyle()) {\n\t\t\tcase BufferParameters.CAP_ROUND:\n\t\t\t\tthis.segList.addPt(offsetL.p1);\n\t\t\t\tthis.addFilletArc(p1, angle + Math.PI / 2, angle - Math.PI / 2, CGAlgorithms.CLOCKWISE, this.distance);\n\t\t\t\tthis.segList.addPt(offsetR.p1);\n\t\t\t\tbreak;\n\t\t\tcase BufferParameters.CAP_FLAT:\n\t\t\t\tthis.segList.addPt(offsetL.p1);\n\t\t\t\tthis.segList.addPt(offsetR.p1);\n\t\t\t\tbreak;\n\t\t\tcase BufferParameters.CAP_SQUARE:\n\t\t\t\tvar squareCapSideOffset = new Coordinate();\n\t\t\t\tsquareCapSideOffset.x = Math.abs(this.distance) * Math.cos(angle);\n\t\t\t\tsquareCapSideOffset.y = Math.abs(this.distance) * Math.sin(angle);\n\t\t\t\tvar squareCapLOffset = new Coordinate(offsetL.p1.x + squareCapSideOffset.x, offsetL.p1.y + squareCapSideOffset.y);\n\t\t\t\tvar squareCapROffset = new Coordinate(offsetR.p1.x + squareCapSideOffset.x, offsetR.p1.y + squareCapSideOffset.y);\n\t\t\t\tthis.segList.addPt(squareCapLOffset);\n\t\t\t\tthis.segList.addPt(squareCapROffset);\n\t\t\t\tbreak;\n\t\t}\n\t},\n\tgetCoordinates: function getCoordinates() {\n\t\tvar pts = this.segList.getCoordinates();\n\t\treturn pts;\n\t},\n\taddMitreJoin: function addMitreJoin(p, offset0, offset1, distance) {\n\t\tvar isMitreWithinLimit = true;\n\t\tvar intPt = null;\n\t\ttry {\n\t\t\tintPt = HCoordinate.intersection(offset0.p0, offset0.p1, offset1.p0, offset1.p1);\n\t\t\tvar mitreRatio = distance <= 0.0 ? 1.0 : intPt.distance(p) / Math.abs(distance);\n\t\t\tif (mitreRatio > this.bufParams.getMitreLimit()) isMitreWithinLimit = false;\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof NotRepresentableException) {\n\t\t\t\tintPt = new Coordinate(0, 0);\n\t\t\t\tisMitreWithinLimit = false;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t\tif (isMitreWithinLimit) {\n\t\t\tthis.segList.addPt(intPt);\n\t\t} else {\n\t\t\tthis.addLimitedMitreJoin(offset0, offset1, distance, this.bufParams.getMitreLimit());\n\t\t}\n\t},\n\taddFilletCorner: function addFilletCorner(p, p0, p1, direction, radius) {\n\t\tvar dx0 = p0.x - p.x;\n\t\tvar dy0 = p0.y - p.y;\n\t\tvar startAngle = Math.atan2(dy0, dx0);\n\t\tvar dx1 = p1.x - p.x;\n\t\tvar dy1 = p1.y - p.y;\n\t\tvar endAngle = Math.atan2(dy1, dx1);\n\t\tif (direction === CGAlgorithms.CLOCKWISE) {\n\t\t\tif (startAngle <= endAngle) startAngle += 2.0 * Math.PI;\n\t\t} else {\n\t\t\tif (startAngle >= endAngle) startAngle -= 2.0 * Math.PI;\n\t\t}\n\t\tthis.segList.addPt(p0);\n\t\tthis.addFilletArc(p, startAngle, endAngle, direction, radius);\n\t\tthis.segList.addPt(p1);\n\t},\n\taddOutsideTurn: function addOutsideTurn(orientation, addStartPoint) {\n\t\tif (this.offset0.p1.distance(this.offset1.p0) < this.distance * OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR) {\n\t\t\tthis.segList.addPt(this.offset0.p1);\n\t\t\treturn null;\n\t\t}\n\t\tif (this.bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n\t\t\tthis.addMitreJoin(this.s1, this.offset0, this.offset1, this.distance);\n\t\t} else if (this.bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL) {\n\t\t\tthis.addBevelJoin(this.offset0, this.offset1);\n\t\t} else {\n\t\t\tif (addStartPoint) this.segList.addPt(this.offset0.p1);\n\t\t\tthis.addFilletCorner(this.s1, this.offset0.p1, this.offset1.p0, orientation, this.distance);\n\t\t\tthis.segList.addPt(this.offset1.p0);\n\t\t}\n\t},\n\tcreateSquare: function createSquare(p) {\n\t\tthis.segList.addPt(new Coordinate(p.x + this.distance, p.y + this.distance));\n\t\tthis.segList.addPt(new Coordinate(p.x + this.distance, p.y - this.distance));\n\t\tthis.segList.addPt(new Coordinate(p.x - this.distance, p.y - this.distance));\n\t\tthis.segList.addPt(new Coordinate(p.x - this.distance, p.y + this.distance));\n\t\tthis.segList.closeRing();\n\t},\n\taddSegments: function addSegments(pt, isForward) {\n\t\tthis.segList.addPts(pt, isForward);\n\t},\n\taddFirstSegment: function addFirstSegment() {\n\t\tthis.segList.addPt(this.offset1.p0);\n\t},\n\taddLastSegment: function addLastSegment() {\n\t\tthis.segList.addPt(this.offset1.p1);\n\t},\n\tinitSideSegments: function initSideSegments(s1, s2, side) {\n\t\tthis.s1 = s1;\n\t\tthis.s2 = s2;\n\t\tthis.side = side;\n\t\tthis.seg1.setCoordinates(s1, s2);\n\t\tthis.computeOffsetSegment(this.seg1, side, this.distance, this.offset1);\n\t},\n\taddLimitedMitreJoin: function addLimitedMitreJoin(offset0, offset1, distance, mitreLimit) {\n\t\tvar basePt = this.seg0.p1;\n\t\tvar ang0 = Angle.angle(basePt, this.seg0.p0);\n\t\tvar ang1 = Angle.angle(basePt, this.seg1.p1);\n\t\tvar angDiff = Angle.angleBetweenOriented(this.seg0.p0, basePt, this.seg1.p1);\n\t\tvar angDiffHalf = angDiff / 2;\n\t\tvar midAng = Angle.normalize(ang0 + angDiffHalf);\n\t\tvar mitreMidAng = Angle.normalize(midAng + Math.PI);\n\t\tvar mitreDist = mitreLimit * distance;\n\t\tvar bevelDelta = mitreDist * Math.abs(Math.sin(angDiffHalf));\n\t\tvar bevelHalfLen = distance - bevelDelta;\n\t\tvar bevelMidX = basePt.x + mitreDist * Math.cos(mitreMidAng);\n\t\tvar bevelMidY = basePt.y + mitreDist * Math.sin(mitreMidAng);\n\t\tvar bevelMidPt = new Coordinate(bevelMidX, bevelMidY);\n\t\tvar mitreMidLine = new LineSegment(basePt, bevelMidPt);\n\t\tvar bevelEndLeft = mitreMidLine.pointAlongOffset(1.0, bevelHalfLen);\n\t\tvar bevelEndRight = mitreMidLine.pointAlongOffset(1.0, -bevelHalfLen);\n\t\tif (this.side === Position.LEFT) {\n\t\t\tthis.segList.addPt(bevelEndLeft);\n\t\t\tthis.segList.addPt(bevelEndRight);\n\t\t} else {\n\t\t\tthis.segList.addPt(bevelEndRight);\n\t\t\tthis.segList.addPt(bevelEndLeft);\n\t\t}\n\t},\n\tcomputeOffsetSegment: function computeOffsetSegment(seg, side, distance, offset) {\n\t\tvar sideSign = side === Position.LEFT ? 1 : -1;\n\t\tvar dx = seg.p1.x - seg.p0.x;\n\t\tvar dy = seg.p1.y - seg.p0.y;\n\t\tvar len = Math.sqrt(dx * dx + dy * dy);\n\t\tvar ux = sideSign * distance * dx / len;\n\t\tvar uy = sideSign * distance * dy / len;\n\t\toffset.p0.x = seg.p0.x - uy;\n\t\toffset.p0.y = seg.p0.y + ux;\n\t\toffset.p1.x = seg.p1.x - uy;\n\t\toffset.p1.y = seg.p1.y + ux;\n\t},\n\taddFilletArc: function addFilletArc(p, startAngle, endAngle, direction, radius) {\n\t\tvar directionFactor = direction === CGAlgorithms.CLOCKWISE ? -1 : 1;\n\t\tvar totalAngle = Math.abs(startAngle - endAngle);\n\t\tvar nSegs = Math.trunc(totalAngle / this.filletAngleQuantum + 0.5);\n\t\tif (nSegs < 1) return null;\n\t\tvar initAngle = null,\n\t\t    currAngleInc = null;\n\t\tinitAngle = 0.0;\n\t\tcurrAngleInc = totalAngle / nSegs;\n\t\tvar currAngle = initAngle;\n\t\tvar pt = new Coordinate();\n\t\twhile (currAngle < totalAngle) {\n\t\t\tvar angle = startAngle + directionFactor * currAngle;\n\t\t\tpt.x = p.x + radius * Math.cos(angle);\n\t\t\tpt.y = p.y + radius * Math.sin(angle);\n\t\t\tthis.segList.addPt(pt);\n\t\t\tcurrAngle += currAngleInc;\n\t\t}\n\t},\n\taddInsideTurn: function addInsideTurn(orientation, addStartPoint) {\n\t\tthis.li.computeIntersection(this.offset0.p0, this.offset0.p1, this.offset1.p0, this.offset1.p1);\n\t\tif (this.li.hasIntersection()) {\n\t\t\tthis.segList.addPt(this.li.getIntersection(0));\n\t\t} else {\n\t\t\tthis._hasNarrowConcaveAngle = true;\n\t\t\tif (this.offset0.p1.distance(this.offset1.p0) < this.distance * OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR) {\n\t\t\t\tthis.segList.addPt(this.offset0.p1);\n\t\t\t} else {\n\t\t\t\tthis.segList.addPt(this.offset0.p1);\n\t\t\t\tif (this.closingSegLengthFactor > 0) {\n\t\t\t\t\tvar mid0 = new Coordinate((this.closingSegLengthFactor * this.offset0.p1.x + this.s1.x) / (this.closingSegLengthFactor + 1), (this.closingSegLengthFactor * this.offset0.p1.y + this.s1.y) / (this.closingSegLengthFactor + 1));\n\t\t\t\t\tthis.segList.addPt(mid0);\n\t\t\t\t\tvar mid1 = new Coordinate((this.closingSegLengthFactor * this.offset1.p0.x + this.s1.x) / (this.closingSegLengthFactor + 1), (this.closingSegLengthFactor * this.offset1.p0.y + this.s1.y) / (this.closingSegLengthFactor + 1));\n\t\t\t\t\tthis.segList.addPt(mid1);\n\t\t\t\t} else {\n\t\t\t\t\tthis.segList.addPt(this.s1);\n\t\t\t\t}\n\t\t\t\tthis.segList.addPt(this.offset1.p0);\n\t\t\t}\n\t\t}\n\t},\n\tcreateCircle: function createCircle(p) {\n\t\tvar pt = new Coordinate(p.x + this.distance, p.y);\n\t\tthis.segList.addPt(pt);\n\t\tthis.addFilletArc(p, 0.0, 2.0 * Math.PI, -1, this.distance);\n\t\tthis.segList.closeRing();\n\t},\n\taddBevelJoin: function addBevelJoin(offset0, offset1) {\n\t\tthis.segList.addPt(offset0.p1);\n\t\tthis.segList.addPt(offset1.p0);\n\t},\n\tinit: function init(distance) {\n\t\tthis.distance = distance;\n\t\tthis.maxCurveSegmentError = distance * (1 - Math.cos(this.filletAngleQuantum / 2.0));\n\t\tthis.segList = new OffsetSegmentString();\n\t\tthis.segList.setPrecisionModel(this.precisionModel);\n\t\tthis.segList.setMinimumVertexDistance(distance * OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR);\n\t},\n\taddCollinear: function addCollinear(addStartPoint) {\n\t\tthis.li.computeIntersection(this.s0, this.s1, this.s1, this.s2);\n\t\tvar numInt = this.li.getIntersectionNum();\n\t\tif (numInt >= 2) {\n\t\t\tif (this.bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL || this.bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n\t\t\t\tif (addStartPoint) this.segList.addPt(this.offset0.p1);\n\t\t\t\tthis.segList.addPt(this.offset1.p0);\n\t\t\t} else {\n\t\t\t\tthis.addFilletCorner(this.s1, this.offset0.p1, this.offset1.p0, CGAlgorithms.CLOCKWISE, this.distance);\n\t\t\t}\n\t\t}\n\t},\n\tcloseRing: function closeRing() {\n\t\tthis.segList.closeRing();\n\t},\n\thasNarrowConcaveAngle: function hasNarrowConcaveAngle() {\n\t\treturn this._hasNarrowConcaveAngle;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn OffsetSegmentGenerator;\n\t}\n});\nOffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR = 1.0E-3;\nOffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR = 1.0E-3;\nOffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR = 1.0E-6;\nOffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR = 80;\n\nfunction OffsetCurveBuilder() {\n\tthis.distance = 0.0;\n\tthis.precisionModel = null;\n\tthis.bufParams = null;\n\tvar precisionModel = arguments[0],\n\t    bufParams = arguments[1];\n\tthis.precisionModel = precisionModel;\n\tthis.bufParams = bufParams;\n}\nextend(OffsetCurveBuilder.prototype, {\n\tgetOffsetCurve: function getOffsetCurve(inputPts, distance) {\n\t\tthis.distance = distance;\n\t\tif (distance === 0.0) return null;\n\t\tvar isRightSide = distance < 0.0;\n\t\tvar posDistance = Math.abs(distance);\n\t\tvar segGen = this.getSegGen(posDistance);\n\t\tif (inputPts.length <= 1) {\n\t\t\tthis.computePointCurve(inputPts[0], segGen);\n\t\t} else {\n\t\t\tthis.computeOffsetCurve(inputPts, isRightSide, segGen);\n\t\t}\n\t\tvar curvePts = segGen.getCoordinates();\n\t\tif (isRightSide) CoordinateArrays.reverse(curvePts);\n\t\treturn curvePts;\n\t},\n\tcomputeSingleSidedBufferCurve: function computeSingleSidedBufferCurve(inputPts, isRightSide, segGen) {\n\t\tvar distTol = this.simplifyTolerance(this.distance);\n\t\tif (isRightSide) {\n\t\t\tsegGen.addSegments(inputPts, true);\n\t\t\tvar simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n\t\t\tvar n2 = simp2.length - 1;\n\t\t\tsegGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n\t\t\tsegGen.addFirstSegment();\n\t\t\tfor (var i = n2 - 2; i >= 0; i--) {\n\t\t\t\tsegGen.addNextSegment(simp2[i], true);\n\t\t\t}\n\t\t} else {\n\t\t\tsegGen.addSegments(inputPts, false);\n\t\t\tvar simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n\t\t\tvar n1 = simp1.length - 1;\n\t\t\tsegGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n\t\t\tsegGen.addFirstSegment();\n\t\t\tfor (var i = 2; i <= n1; i++) {\n\t\t\t\tsegGen.addNextSegment(simp1[i], true);\n\t\t\t}\n\t\t}\n\t\tsegGen.addLastSegment();\n\t\tsegGen.closeRing();\n\t},\n\tcomputeRingBufferCurve: function computeRingBufferCurve(inputPts, side, segGen) {\n\t\tvar distTol = this.simplifyTolerance(this.distance);\n\t\tif (side === Position.RIGHT) distTol = -distTol;\n\t\tvar simp = BufferInputLineSimplifier.simplify(inputPts, distTol);\n\t\tvar n = simp.length - 1;\n\t\tsegGen.initSideSegments(simp[n - 1], simp[0], side);\n\t\tfor (var i = 1; i <= n; i++) {\n\t\t\tvar addStartPoint = i !== 1;\n\t\t\tsegGen.addNextSegment(simp[i], addStartPoint);\n\t\t}\n\t\tsegGen.closeRing();\n\t},\n\tcomputeLineBufferCurve: function computeLineBufferCurve(inputPts, segGen) {\n\t\tvar distTol = this.simplifyTolerance(this.distance);\n\t\tvar simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n\t\tvar n1 = simp1.length - 1;\n\t\tsegGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n\t\tfor (var i = 2; i <= n1; i++) {\n\t\t\tsegGen.addNextSegment(simp1[i], true);\n\t\t}\n\t\tsegGen.addLastSegment();\n\t\tsegGen.addLineEndCap(simp1[n1 - 1], simp1[n1]);\n\t\tvar simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n\t\tvar n2 = simp2.length - 1;\n\t\tsegGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n\t\tfor (var i = n2 - 2; i >= 0; i--) {\n\t\t\tsegGen.addNextSegment(simp2[i], true);\n\t\t}\n\t\tsegGen.addLastSegment();\n\t\tsegGen.addLineEndCap(simp2[1], simp2[0]);\n\t\tsegGen.closeRing();\n\t},\n\tcomputePointCurve: function computePointCurve(pt, segGen) {\n\t\tswitch (this.bufParams.getEndCapStyle()) {\n\t\t\tcase BufferParameters.CAP_ROUND:\n\t\t\t\tsegGen.createCircle(pt);\n\t\t\t\tbreak;\n\t\t\tcase BufferParameters.CAP_SQUARE:\n\t\t\t\tsegGen.createSquare(pt);\n\t\t\t\tbreak;\n\t\t}\n\t},\n\tgetLineCurve: function getLineCurve(inputPts, distance) {\n\t\tthis.distance = distance;\n\t\tif (distance < 0.0 && !this.bufParams.isSingleSided()) return null;\n\t\tif (distance === 0.0) return null;\n\t\tvar posDistance = Math.abs(distance);\n\t\tvar segGen = this.getSegGen(posDistance);\n\t\tif (inputPts.length <= 1) {\n\t\t\tthis.computePointCurve(inputPts[0], segGen);\n\t\t} else {\n\t\t\tif (this.bufParams.isSingleSided()) {\n\t\t\t\tvar isRightSide = distance < 0.0;\n\t\t\t\tthis.computeSingleSidedBufferCurve(inputPts, isRightSide, segGen);\n\t\t\t} else this.computeLineBufferCurve(inputPts, segGen);\n\t\t}\n\t\tvar lineCoord = segGen.getCoordinates();\n\t\treturn lineCoord;\n\t},\n\tgetBufferParameters: function getBufferParameters() {\n\t\treturn this.bufParams;\n\t},\n\tsimplifyTolerance: function simplifyTolerance(bufDistance) {\n\t\treturn bufDistance * this.bufParams.getSimplifyFactor();\n\t},\n\tgetRingCurve: function getRingCurve(inputPts, side, distance) {\n\t\tthis.distance = distance;\n\t\tif (inputPts.length <= 2) return this.getLineCurve(inputPts, distance);\n\t\tif (distance === 0.0) {\n\t\t\treturn OffsetCurveBuilder.copyCoordinates(inputPts);\n\t\t}\n\t\tvar segGen = this.getSegGen(distance);\n\t\tthis.computeRingBufferCurve(inputPts, side, segGen);\n\t\treturn segGen.getCoordinates();\n\t},\n\tcomputeOffsetCurve: function computeOffsetCurve(inputPts, isRightSide, segGen) {\n\t\tvar distTol = this.simplifyTolerance(this.distance);\n\t\tif (isRightSide) {\n\t\t\tvar simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n\t\t\tvar n2 = simp2.length - 1;\n\t\t\tsegGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n\t\t\tsegGen.addFirstSegment();\n\t\t\tfor (var i = n2 - 2; i >= 0; i--) {\n\t\t\t\tsegGen.addNextSegment(simp2[i], true);\n\t\t\t}\n\t\t} else {\n\t\t\tvar simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n\t\t\tvar n1 = simp1.length - 1;\n\t\t\tsegGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n\t\t\tsegGen.addFirstSegment();\n\t\t\tfor (var i = 2; i <= n1; i++) {\n\t\t\t\tsegGen.addNextSegment(simp1[i], true);\n\t\t\t}\n\t\t}\n\t\tsegGen.addLastSegment();\n\t},\n\tgetSegGen: function getSegGen(distance) {\n\t\treturn new OffsetSegmentGenerator(this.precisionModel, this.bufParams, distance);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn OffsetCurveBuilder;\n\t}\n});\nOffsetCurveBuilder.copyCoordinates = function (pts) {\n\tvar copy = new Array(pts.length).fill(null);\n\tfor (var i = 0; i < copy.length; i++) {\n\t\tcopy[i] = new Coordinate(pts[i]);\n\t}\n\treturn copy;\n};\n\nfunction SubgraphDepthLocater() {\n\tthis.subgraphs = null;\n\tthis.seg = new LineSegment();\n\tthis.cga = new CGAlgorithms();\n\tvar subgraphs = arguments[0];\n\tthis.subgraphs = subgraphs;\n}\nextend(SubgraphDepthLocater.prototype, {\n\tfindStabbedSegments: function findStabbedSegments() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar stabbingRayLeftPt = arguments[0];\n\t\t\tvar stabbedSegments = new ArrayList();\n\t\t\tfor (var i = this.subgraphs.iterator(); i.hasNext();) {\n\t\t\t\tvar bsg = i.next();\n\t\t\t\tvar env = bsg.getEnvelope();\n\t\t\t\tif (stabbingRayLeftPt.y < env.getMinY() || stabbingRayLeftPt.y > env.getMaxY()) continue;\n\t\t\t\tthis.findStabbedSegments(stabbingRayLeftPt, bsg.getDirectedEdges(), stabbedSegments);\n\t\t\t}\n\t\t\treturn stabbedSegments;\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (hasInterface(arguments[2], List) && arguments[0] instanceof Coordinate && arguments[1] instanceof DirectedEdge) {\n\t\t\t\tvar _stabbingRayLeftPt = arguments[0],\n\t\t\t\t    dirEdge = arguments[1],\n\t\t\t\t    _stabbedSegments = arguments[2];\n\t\t\t\tvar pts = dirEdge.getEdge().getCoordinates();\n\t\t\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\t\t\tthis.seg.p0 = pts[i];\n\t\t\t\t\tthis.seg.p1 = pts[i + 1];\n\t\t\t\t\tif (this.seg.p0.y > this.seg.p1.y) this.seg.reverse();\n\t\t\t\t\tvar maxx = Math.max(this.seg.p0.x, this.seg.p1.x);\n\t\t\t\t\tif (maxx < _stabbingRayLeftPt.x) continue;\n\t\t\t\t\tif (this.seg.isHorizontal()) continue;\n\t\t\t\t\tif (_stabbingRayLeftPt.y < this.seg.p0.y || _stabbingRayLeftPt.y > this.seg.p1.y) continue;\n\t\t\t\t\tif (CGAlgorithms.computeOrientation(this.seg.p0, this.seg.p1, _stabbingRayLeftPt) === CGAlgorithms.RIGHT) continue;\n\t\t\t\t\tvar depth = dirEdge.getDepth(Position.LEFT);\n\t\t\t\t\tif (!this.seg.p0.equals(pts[i])) depth = dirEdge.getDepth(Position.RIGHT);\n\t\t\t\t\tvar ds = new DepthSegment(this.seg, depth);\n\t\t\t\t\t_stabbedSegments.add(ds);\n\t\t\t\t}\n\t\t\t} else if (hasInterface(arguments[2], List) && arguments[0] instanceof Coordinate && hasInterface(arguments[1], List)) {\n\t\t\t\tvar _stabbingRayLeftPt2 = arguments[0],\n\t\t\t\t    dirEdges = arguments[1],\n\t\t\t\t    _stabbedSegments2 = arguments[2];\n\t\t\t\tfor (var i = dirEdges.iterator(); i.hasNext();) {\n\t\t\t\t\tvar de = i.next();\n\t\t\t\t\tif (!de.isForward()) continue;\n\t\t\t\t\tthis.findStabbedSegments(_stabbingRayLeftPt2, de, _stabbedSegments2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tgetDepth: function getDepth(p) {\n\t\tvar stabbedSegments = this.findStabbedSegments(p);\n\t\tif (stabbedSegments.size() === 0) return 0;\n\t\tvar ds = Collections.min(stabbedSegments);\n\t\treturn ds.leftDepth;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SubgraphDepthLocater;\n\t}\n});\nfunction DepthSegment() {\n\tthis.upwardSeg = null;\n\tthis.leftDepth = null;\n\tvar seg = arguments[0],\n\t    depth = arguments[1];\n\tthis.upwardSeg = new LineSegment(seg);\n\tthis.leftDepth = depth;\n}\nextend(DepthSegment.prototype, {\n\tcompareTo: function compareTo(obj) {\n\t\tvar other = obj;\n\t\tif (this.upwardSeg.minX() >= other.upwardSeg.maxX()) return 1;\n\t\tif (this.upwardSeg.maxX() <= other.upwardSeg.minX()) return -1;\n\t\tvar orientIndex = this.upwardSeg.orientationIndex(other.upwardSeg);\n\t\tif (orientIndex !== 0) return orientIndex;\n\t\torientIndex = -1 * other.upwardSeg.orientationIndex(this.upwardSeg);\n\t\tif (orientIndex !== 0) return orientIndex;\n\t\treturn this.upwardSeg.compareTo(other.upwardSeg);\n\t},\n\tcompareX: function compareX(seg0, seg1) {\n\t\tvar compare0 = seg0.p0.compareTo(seg1.p0);\n\t\tif (compare0 !== 0) return compare0;\n\t\treturn seg0.p1.compareTo(seg1.p1);\n\t},\n\ttoString: function toString() {\n\t\treturn this.upwardSeg.toString();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DepthSegment;\n\t}\n});\nSubgraphDepthLocater.DepthSegment = DepthSegment;\n\nfunction OffsetCurveSetBuilder() {\n\tthis.inputGeom = null;\n\tthis.distance = null;\n\tthis.curveBuilder = null;\n\tthis.curveList = new ArrayList();\n\tvar inputGeom = arguments[0],\n\t    distance = arguments[1],\n\t    curveBuilder = arguments[2];\n\tthis.inputGeom = inputGeom;\n\tthis.distance = distance;\n\tthis.curveBuilder = curveBuilder;\n}\nextend(OffsetCurveSetBuilder.prototype, {\n\taddPoint: function addPoint(p) {\n\t\tif (this.distance <= 0.0) return null;\n\t\tvar coord = p.getCoordinates();\n\t\tvar curve = this.curveBuilder.getLineCurve(coord, this.distance);\n\t\tthis.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n\t},\n\taddPolygon: function addPolygon(p) {\n\t\tvar offsetDistance = this.distance;\n\t\tvar offsetSide = Position.LEFT;\n\t\tif (this.distance < 0.0) {\n\t\t\toffsetDistance = -this.distance;\n\t\t\toffsetSide = Position.RIGHT;\n\t\t}\n\t\tvar shell = p.getExteriorRing();\n\t\tvar shellCoord = CoordinateArrays.removeRepeatedPoints(shell.getCoordinates());\n\t\tif (this.distance < 0.0 && this.isErodedCompletely(shell, this.distance)) return null;\n\t\tif (this.distance <= 0.0 && shellCoord.length < 3) return null;\n\t\tthis.addPolygonRing(shellCoord, offsetDistance, offsetSide, Location.EXTERIOR, Location.INTERIOR);\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar hole = p.getInteriorRingN(i);\n\t\t\tvar holeCoord = CoordinateArrays.removeRepeatedPoints(hole.getCoordinates());\n\t\t\tif (this.distance > 0.0 && this.isErodedCompletely(hole, -this.distance)) continue;\n\t\t\tthis.addPolygonRing(holeCoord, offsetDistance, Position.opposite(offsetSide), Location.INTERIOR, Location.EXTERIOR);\n\t\t}\n\t},\n\tisTriangleErodedCompletely: function isTriangleErodedCompletely(triangleCoord, bufferDistance) {\n\t\tvar tri = new Triangle(triangleCoord[0], triangleCoord[1], triangleCoord[2]);\n\t\tvar inCentre = tri.inCentre();\n\t\tvar distToCentre = CGAlgorithms.distancePointLine(inCentre, tri.p0, tri.p1);\n\t\treturn distToCentre < Math.abs(bufferDistance);\n\t},\n\taddLineString: function addLineString(line) {\n\t\tif (this.distance <= 0.0 && !this.curveBuilder.getBufferParameters().isSingleSided()) return null;\n\t\tvar coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n\t\tvar curve = this.curveBuilder.getLineCurve(coord, this.distance);\n\t\tthis.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n\t},\n\taddCurve: function addCurve(coord, leftLoc, rightLoc) {\n\t\tif (coord === null || coord.length < 2) return null;\n\t\tvar e = new NodedSegmentString(coord, new Label(0, Location.BOUNDARY, leftLoc, rightLoc));\n\t\tthis.curveList.add(e);\n\t},\n\tgetCurves: function getCurves() {\n\t\tthis.add(this.inputGeom);\n\t\treturn this.curveList;\n\t},\n\taddPolygonRing: function addPolygonRing(coord, offsetDistance, side, cwLeftLoc, cwRightLoc) {\n\t\tif (offsetDistance === 0.0 && coord.length < LinearRing.MINIMUM_VALID_SIZE) return null;\n\t\tvar leftLoc = cwLeftLoc;\n\t\tvar rightLoc = cwRightLoc;\n\t\tif (coord.length >= LinearRing.MINIMUM_VALID_SIZE && CGAlgorithms.isCCW(coord)) {\n\t\t\tleftLoc = cwRightLoc;\n\t\t\trightLoc = cwLeftLoc;\n\t\t\tside = Position.opposite(side);\n\t\t}\n\t\tvar curve = this.curveBuilder.getRingCurve(coord, side, offsetDistance);\n\t\tthis.addCurve(curve, leftLoc, rightLoc);\n\t},\n\tadd: function add(g) {\n\t\tif (g.isEmpty()) return null;\n\t\tif (g instanceof Polygon) this.addPolygon(g);else if (g instanceof LineString) this.addLineString(g);else if (g instanceof Point) this.addPoint(g);else if (g instanceof MultiPoint) this.addCollection(g);else if (g instanceof MultiLineString) this.addCollection(g);else if (g instanceof MultiPolygon) this.addCollection(g);else if (g instanceof GeometryCollection) this.addCollection(g);else throw new UnsupportedOperationException(g.getClass().getName());\n\t},\n\tisErodedCompletely: function isErodedCompletely(ring, bufferDistance) {\n\t\tvar ringCoord = ring.getCoordinates();\n\t\tvar minDiam = 0.0;\n\t\tif (ringCoord.length < 4) return bufferDistance < 0;\n\t\tif (ringCoord.length === 4) return this.isTriangleErodedCompletely(ringCoord, bufferDistance);\n\t\tvar env = ring.getEnvelopeInternal();\n\t\tvar envMinDimension = Math.min(env.getHeight(), env.getWidth());\n\t\tif (bufferDistance < 0.0 && 2 * Math.abs(bufferDistance) > envMinDimension) return true;\n\t\treturn false;\n\t},\n\taddCollection: function addCollection(gc) {\n\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\tvar g = gc.getGeometryN(i);\n\t\t\tthis.add(g);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn OffsetCurveSetBuilder;\n\t}\n});\n\nfunction IntersectionAdder() {\n\tthis._hasIntersection = false;\n\tthis.hasProper = false;\n\tthis.hasProperInterior = false;\n\tthis.hasInterior = false;\n\tthis.properIntersectionPoint = null;\n\tthis.li = null;\n\tthis.isSelfIntersection = null;\n\tthis.numIntersections = 0;\n\tthis.numInteriorIntersections = 0;\n\tthis.numProperIntersections = 0;\n\tthis.numTests = 0;\n\tvar li = arguments[0];\n\tthis.li = li;\n}\nextend(IntersectionAdder.prototype, {\n\tisTrivialIntersection: function isTrivialIntersection(e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1) {\n\t\t\tif (this.li.getIntersectionNum() === 1) {\n\t\t\t\tif (IntersectionAdder.isAdjacentSegments(segIndex0, segIndex1)) return true;\n\t\t\t\tif (e0.isClosed()) {\n\t\t\t\t\tvar maxSegIndex = e0.size() - 1;\n\t\t\t\t\tif (segIndex0 === 0 && segIndex1 === maxSegIndex || segIndex1 === 0 && segIndex0 === maxSegIndex) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetProperIntersectionPoint: function getProperIntersectionPoint() {\n\t\treturn this.properIntersectionPoint;\n\t},\n\thasProperInteriorIntersection: function hasProperInteriorIntersection() {\n\t\treturn this.hasProperInterior;\n\t},\n\tgetLineIntersector: function getLineIntersector() {\n\t\treturn this.li;\n\t},\n\thasProperIntersection: function hasProperIntersection() {\n\t\treturn this.hasProper;\n\t},\n\tprocessIntersections: function processIntersections(e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\tthis.numTests++;\n\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\tthis.li.computeIntersection(p00, p01, p10, p11);\n\t\tif (this.li.hasIntersection()) {\n\t\t\tthis.numIntersections++;\n\t\t\tif (this.li.isInteriorIntersection()) {\n\t\t\t\tthis.numInteriorIntersections++;\n\t\t\t\tthis.hasInterior = true;\n\t\t\t}\n\t\t\tif (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n\t\t\t\tthis._hasIntersection = true;\n\t\t\t\te0.addIntersections(this.li, segIndex0, 0);\n\t\t\t\te1.addIntersections(this.li, segIndex1, 1);\n\t\t\t\tif (this.li.isProper()) {\n\t\t\t\t\tthis.numProperIntersections++;\n\t\t\t\t\tthis.hasProper = true;\n\t\t\t\t\tthis.hasProperInterior = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\thasIntersection: function hasIntersection() {\n\t\treturn this._hasIntersection;\n\t},\n\tisDone: function isDone() {\n\t\treturn false;\n\t},\n\thasInteriorIntersection: function hasInteriorIntersection() {\n\t\treturn this.hasInterior;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [SegmentIntersector];\n\t},\n\tgetClass: function getClass() {\n\t\treturn IntersectionAdder;\n\t}\n});\nIntersectionAdder.isAdjacentSegments = function (i1, i2) {\n\treturn Math.abs(i1 - i2) === 1;\n};\n\nfunction BufferBuilder() {\n\tthis.bufParams = null;\n\tthis.workingPrecisionModel = null;\n\tthis.workingNoder = null;\n\tthis.geomFact = null;\n\tthis.graph = null;\n\tthis.edgeList = new EdgeList();\n\tvar bufParams = arguments[0];\n\tthis.bufParams = bufParams;\n}\nextend(BufferBuilder.prototype, {\n\tsetWorkingPrecisionModel: function setWorkingPrecisionModel(pm) {\n\t\tthis.workingPrecisionModel = pm;\n\t},\n\tinsertUniqueEdge: function insertUniqueEdge(e) {\n\t\tvar existingEdge = this.edgeList.findEqualEdge(e);\n\t\tif (existingEdge !== null) {\n\t\t\tvar existingLabel = existingEdge.getLabel();\n\t\t\tvar labelToMerge = e.getLabel();\n\t\t\tif (!existingEdge.isPointwiseEqual(e)) {\n\t\t\t\tlabelToMerge = new Label(e.getLabel());\n\t\t\t\tlabelToMerge.flip();\n\t\t\t}\n\t\t\texistingLabel.merge(labelToMerge);\n\t\t\tvar mergeDelta = BufferBuilder.depthDelta(labelToMerge);\n\t\t\tvar existingDelta = existingEdge.getDepthDelta();\n\t\t\tvar newDelta = existingDelta + mergeDelta;\n\t\t\texistingEdge.setDepthDelta(newDelta);\n\t\t} else {\n\t\t\tthis.edgeList.add(e);\n\t\t\te.setDepthDelta(BufferBuilder.depthDelta(e.getLabel()));\n\t\t}\n\t},\n\tbuildSubgraphs: function buildSubgraphs(subgraphList, polyBuilder) {\n\t\tvar processedGraphs = new ArrayList();\n\t\tfor (var i = subgraphList.iterator(); i.hasNext();) {\n\t\t\tvar subgraph = i.next();\n\t\t\tvar p = subgraph.getRightmostCoordinate();\n\t\t\tvar locater = new SubgraphDepthLocater(processedGraphs);\n\t\t\tvar outsideDepth = locater.getDepth(p);\n\t\t\tsubgraph.computeDepth(outsideDepth);\n\t\t\tsubgraph.findResultEdges();\n\t\t\tprocessedGraphs.add(subgraph);\n\t\t\tpolyBuilder.add(subgraph.getDirectedEdges(), subgraph.getNodes());\n\t\t}\n\t},\n\tcreateSubgraphs: function createSubgraphs(graph) {\n\t\tvar subgraphList = new ArrayList();\n\t\tfor (var i = graph.getNodes().iterator(); i.hasNext();) {\n\t\t\tvar node = i.next();\n\t\t\tif (!node.isVisited()) {\n\t\t\t\tvar subgraph = new BufferSubgraph();\n\t\t\t\tsubgraph.create(node);\n\t\t\t\tsubgraphList.add(subgraph);\n\t\t\t}\n\t\t}\n\t\tCollections.sort(subgraphList, Collections.reverseOrder());\n\t\treturn subgraphList;\n\t},\n\tcreateEmptyResultGeometry: function createEmptyResultGeometry() {\n\t\tvar emptyGeom = this.geomFact.createPolygon();\n\t\treturn emptyGeom;\n\t},\n\tgetNoder: function getNoder(precisionModel) {\n\t\tif (this.workingNoder !== null) return this.workingNoder;\n\t\tvar noder = new MCIndexNoder();\n\t\tvar li = new RobustLineIntersector();\n\t\tli.setPrecisionModel(precisionModel);\n\t\tnoder.setSegmentIntersector(new IntersectionAdder(li));\n\t\treturn noder;\n\t},\n\tbuffer: function buffer(g, distance) {\n\t\tvar precisionModel = this.workingPrecisionModel;\n\t\tif (precisionModel === null) precisionModel = g.getPrecisionModel();\n\t\tthis.geomFact = g.getFactory();\n\t\tvar curveBuilder = new OffsetCurveBuilder(precisionModel, this.bufParams);\n\t\tvar curveSetBuilder = new OffsetCurveSetBuilder(g, distance, curveBuilder);\n\t\tvar bufferSegStrList = curveSetBuilder.getCurves();\n\t\tif (bufferSegStrList.size() <= 0) {\n\t\t\treturn this.createEmptyResultGeometry();\n\t\t}\n\t\tthis.computeNodedEdges(bufferSegStrList, precisionModel);\n\t\tthis.graph = new PlanarGraph(new OverlayNodeFactory());\n\t\tthis.graph.addEdges(this.edgeList.getEdges());\n\t\tvar subgraphList = this.createSubgraphs(this.graph);\n\t\tvar polyBuilder = new PolygonBuilder(this.geomFact);\n\t\tthis.buildSubgraphs(subgraphList, polyBuilder);\n\t\tvar resultPolyList = polyBuilder.getPolygons();\n\t\tif (resultPolyList.size() <= 0) {\n\t\t\treturn this.createEmptyResultGeometry();\n\t\t}\n\t\tvar resultGeom = this.geomFact.buildGeometry(resultPolyList);\n\t\treturn resultGeom;\n\t},\n\tcomputeNodedEdges: function computeNodedEdges(bufferSegStrList, precisionModel) {\n\t\tvar noder = this.getNoder(precisionModel);\n\t\tnoder.computeNodes(bufferSegStrList);\n\t\tvar nodedSegStrings = noder.getNodedSubstrings();\n\t\tfor (var i = nodedSegStrings.iterator(); i.hasNext();) {\n\t\t\tvar segStr = i.next();\n\t\t\tvar pts = segStr.getCoordinates();\n\t\t\tif (pts.length === 2 && pts[0].equals2D(pts[1])) continue;\n\t\t\tvar oldLabel = segStr.getData();\n\t\t\tvar edge = new Edge(segStr.getCoordinates(), new Label(oldLabel));\n\t\t\tthis.insertUniqueEdge(edge);\n\t\t}\n\t},\n\tsetNoder: function setNoder(noder) {\n\t\tthis.workingNoder = noder;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn BufferBuilder;\n\t}\n});\nBufferBuilder.depthDelta = function (label) {\n\tvar lLoc = label.getLocation(0, Position.LEFT);\n\tvar rLoc = label.getLocation(0, Position.RIGHT);\n\tif (lLoc === Location.INTERIOR && rLoc === Location.EXTERIOR) return 1;else if (lLoc === Location.EXTERIOR && rLoc === Location.INTERIOR) return -1;\n\treturn 0;\n};\nBufferBuilder.convertSegStrings = function (it) {\n\tvar fact = new GeometryFactory();\n\tvar lines = new ArrayList();\n\twhile (it.hasNext()) {\n\t\tvar ss = it.next();\n\t\tvar line = fact.createLineString(ss.getCoordinates());\n\t\tlines.add(line);\n\t}\n\treturn fact.buildGeometry(lines);\n};\n\nfunction NodingValidator() {\n\tthis.li = new RobustLineIntersector();\n\tthis.segStrings = null;\n\tvar segStrings = arguments[0];\n\tthis.segStrings = segStrings;\n}\nextend(NodingValidator.prototype, {\n\tcheckEndPtVertexIntersections: function checkEndPtVertexIntersections() {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var i = this.segStrings.iterator(); i.hasNext();) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tvar pts = ss.getCoordinates();\n\t\t\t\tthis.checkEndPtVertexIntersections(pts[0], this.segStrings);\n\t\t\t\tthis.checkEndPtVertexIntersections(pts[pts.length - 1], this.segStrings);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar testPt = arguments[0],\n\t\t\t    segStrings = arguments[1];\n\t\t\tfor (var i = segStrings.iterator(); i.hasNext();) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tvar pts = ss.getCoordinates();\n\t\t\t\tfor (var j = 1; j < pts.length - 1; j++) {\n\t\t\t\t\tif (pts[j].equals(testPt)) throw new RuntimeException(\"found endpt/interior pt intersection at index \" + j + \" :pt \" + testPt);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcheckInteriorIntersections: function checkInteriorIntersections() {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var i = this.segStrings.iterator(); i.hasNext();) {\n\t\t\t\tvar ss0 = i.next();\n\t\t\t\tfor (var j = this.segStrings.iterator(); j.hasNext();) {\n\t\t\t\t\tvar ss1 = j.next();\n\t\t\t\t\tthis.checkInteriorIntersections(ss0, ss1);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar _ss = arguments[0],\n\t\t\t    _ss2 = arguments[1];\n\t\t\tvar pts0 = _ss.getCoordinates();\n\t\t\tvar pts1 = _ss2.getCoordinates();\n\t\t\tfor (var i0 = 0; i0 < pts0.length - 1; i0++) {\n\t\t\t\tfor (var i1 = 0; i1 < pts1.length - 1; i1++) {\n\t\t\t\t\tthis.checkInteriorIntersections(_ss, i0, _ss2, i1);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 4) {\n\t\t\tvar e0 = arguments[0],\n\t\t\t    segIndex0 = arguments[1],\n\t\t\t    e1 = arguments[2],\n\t\t\t    segIndex1 = arguments[3];\n\t\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\t\tthis.li.computeIntersection(p00, p01, p10, p11);\n\t\t\tif (this.li.hasIntersection()) {\n\t\t\t\tif (this.li.isProper() || this.hasInteriorIntersection(this.li, p00, p01) || this.hasInteriorIntersection(this.li, p10, p11)) {\n\t\t\t\t\tthrow new RuntimeException(\"found non-noded intersection at \" + p00 + \"-\" + p01 + \" and \" + p10 + \"-\" + p11);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcheckValid: function checkValid() {\n\t\tthis.checkEndPtVertexIntersections();\n\t\tthis.checkInteriorIntersections();\n\t\tthis.checkCollapses();\n\t},\n\tcheckCollapses: function checkCollapses() {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var i = this.segStrings.iterator(); i.hasNext();) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tthis.checkCollapses(ss);\n\t\t\t}\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar _ss3 = arguments[0];\n\t\t\tvar pts = _ss3.getCoordinates();\n\t\t\tfor (var i = 0; i < pts.length - 2; i++) {\n\t\t\t\tthis.checkCollapse(pts[i], pts[i + 1], pts[i + 2]);\n\t\t\t}\n\t\t}\n\t},\n\thasInteriorIntersection: function hasInteriorIntersection(li, p0, p1) {\n\t\tfor (var i = 0; i < li.getIntersectionNum(); i++) {\n\t\t\tvar intPt = li.getIntersection(i);\n\t\t\tif (!(intPt.equals(p0) || intPt.equals(p1))) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tcheckCollapse: function checkCollapse(p0, p1, p2) {\n\t\tif (p0.equals(p2)) throw new RuntimeException(\"found non-noded collapse at \" + NodingValidator.fact.createLineString([p0, p1, p2]));\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn NodingValidator;\n\t}\n});\nNodingValidator.fact = new GeometryFactory();\n\nfunction HotPixel() {\n\tthis.li = null;\n\tthis.pt = null;\n\tthis.originalPt = null;\n\tthis.ptScaled = null;\n\tthis.p0Scaled = null;\n\tthis.p1Scaled = null;\n\tthis.scaleFactor = null;\n\tthis.minx = null;\n\tthis.maxx = null;\n\tthis.miny = null;\n\tthis.maxy = null;\n\tthis.corner = new Array(4).fill(null);\n\tthis.safeEnv = null;\n\tvar pt = arguments[0],\n\t    scaleFactor = arguments[1],\n\t    li = arguments[2];\n\tthis.originalPt = pt;\n\tthis.pt = pt;\n\tthis.scaleFactor = scaleFactor;\n\tthis.li = li;\n\tif (scaleFactor <= 0) throw new IllegalArgumentException(\"Scale factor must be non-zero\");\n\tif (scaleFactor !== 1.0) {\n\t\tthis.pt = new Coordinate(this.scale(pt.x), this.scale(pt.y));\n\t\tthis.p0Scaled = new Coordinate();\n\t\tthis.p1Scaled = new Coordinate();\n\t}\n\tthis.initCorners(this.pt);\n}\nextend(HotPixel.prototype, {\n\tintersectsScaled: function intersectsScaled(p0, p1) {\n\t\tvar segMinx = Math.min(p0.x, p1.x);\n\t\tvar segMaxx = Math.max(p0.x, p1.x);\n\t\tvar segMiny = Math.min(p0.y, p1.y);\n\t\tvar segMaxy = Math.max(p0.y, p1.y);\n\t\tvar isOutsidePixelEnv = this.maxx < segMinx || this.minx > segMaxx || this.maxy < segMiny || this.miny > segMaxy;\n\t\tif (isOutsidePixelEnv) return false;\n\t\tvar intersects = this.intersectsToleranceSquare(p0, p1);\n\t\tAssert.isTrue(!(isOutsidePixelEnv && intersects), \"Found bad envelope test\");\n\t\treturn intersects;\n\t},\n\tinitCorners: function initCorners(pt) {\n\t\tvar tolerance = 0.5;\n\t\tthis.minx = pt.x - tolerance;\n\t\tthis.maxx = pt.x + tolerance;\n\t\tthis.miny = pt.y - tolerance;\n\t\tthis.maxy = pt.y + tolerance;\n\t\tthis.corner[0] = new Coordinate(this.maxx, this.maxy);\n\t\tthis.corner[1] = new Coordinate(this.minx, this.maxy);\n\t\tthis.corner[2] = new Coordinate(this.minx, this.miny);\n\t\tthis.corner[3] = new Coordinate(this.maxx, this.miny);\n\t},\n\tintersects: function intersects(p0, p1) {\n\t\tif (this.scaleFactor === 1.0) return this.intersectsScaled(p0, p1);\n\t\tthis.copyScaled(p0, this.p0Scaled);\n\t\tthis.copyScaled(p1, this.p1Scaled);\n\t\treturn this.intersectsScaled(this.p0Scaled, this.p1Scaled);\n\t},\n\tscale: function scale(val) {\n\t\treturn Math.round(val * this.scaleFactor);\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this.originalPt;\n\t},\n\tcopyScaled: function copyScaled(p, pScaled) {\n\t\tpScaled.x = this.scale(p.x);\n\t\tpScaled.y = this.scale(p.y);\n\t},\n\tgetSafeEnvelope: function getSafeEnvelope() {\n\t\tif (this.safeEnv === null) {\n\t\t\tvar safeTolerance = HotPixel.SAFE_ENV_EXPANSION_FACTOR / this.scaleFactor;\n\t\t\tthis.safeEnv = new Envelope(this.originalPt.x - safeTolerance, this.originalPt.x + safeTolerance, this.originalPt.y - safeTolerance, this.originalPt.y + safeTolerance);\n\t\t}\n\t\treturn this.safeEnv;\n\t},\n\tintersectsPixelClosure: function intersectsPixelClosure(p0, p1) {\n\t\tthis.li.computeIntersection(p0, p1, this.corner[0], this.corner[1]);\n\t\tif (this.li.hasIntersection()) return true;\n\t\tthis.li.computeIntersection(p0, p1, this.corner[1], this.corner[2]);\n\t\tif (this.li.hasIntersection()) return true;\n\t\tthis.li.computeIntersection(p0, p1, this.corner[2], this.corner[3]);\n\t\tif (this.li.hasIntersection()) return true;\n\t\tthis.li.computeIntersection(p0, p1, this.corner[3], this.corner[0]);\n\t\tif (this.li.hasIntersection()) return true;\n\t\treturn false;\n\t},\n\tintersectsToleranceSquare: function intersectsToleranceSquare(p0, p1) {\n\t\tvar intersectsLeft = false;\n\t\tvar intersectsBottom = false;\n\t\tthis.li.computeIntersection(p0, p1, this.corner[0], this.corner[1]);\n\t\tif (this.li.isProper()) return true;\n\t\tthis.li.computeIntersection(p0, p1, this.corner[1], this.corner[2]);\n\t\tif (this.li.isProper()) return true;\n\t\tif (this.li.hasIntersection()) intersectsLeft = true;\n\t\tthis.li.computeIntersection(p0, p1, this.corner[2], this.corner[3]);\n\t\tif (this.li.isProper()) return true;\n\t\tif (this.li.hasIntersection()) intersectsBottom = true;\n\t\tthis.li.computeIntersection(p0, p1, this.corner[3], this.corner[0]);\n\t\tif (this.li.isProper()) return true;\n\t\tif (intersectsLeft && intersectsBottom) return true;\n\t\tif (p0.equals(this.pt)) return true;\n\t\tif (p1.equals(this.pt)) return true;\n\t\treturn false;\n\t},\n\taddSnappedNode: function addSnappedNode(segStr, segIndex) {\n\t\tvar p0 = segStr.getCoordinate(segIndex);\n\t\tvar p1 = segStr.getCoordinate(segIndex + 1);\n\t\tif (this.intersects(p0, p1)) {\n\t\t\tsegStr.addIntersection(this.getCoordinate(), segIndex);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn HotPixel;\n\t}\n});\nHotPixel.SAFE_ENV_EXPANSION_FACTOR = 0.75;\n\nfunction MCIndexPointSnapper() {\n\tthis.index = null;\n\tvar index = arguments[0];\n\tthis.index = index;\n}\nextend(MCIndexPointSnapper.prototype, {\n\tsnap: function snap() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar hotPixel = arguments[0];\n\t\t\treturn this.snap(hotPixel, null, -1);\n\t\t} else if (arguments.length === 3) {\n\t\t\tvar _hotPixel = arguments[0],\n\t\t\t    parentEdge = arguments[1],\n\t\t\t    hotPixelVertexIndex = arguments[2];\n\t\t\tvar pixelEnv = _hotPixel.getSafeEnvelope();\n\t\t\tvar hotPixelSnapAction = new HotPixelSnapAction(_hotPixel, parentEdge, hotPixelVertexIndex);\n\t\t\tthis.index.query(pixelEnv, {\n\t\t\t\tinterfaces_: function interfaces_() {\n\t\t\t\t\treturn [ItemVisitor];\n\t\t\t\t},\n\t\t\t\tvisitItem: function visitItem(item) {\n\t\t\t\t\tvar testChain = item;\n\t\t\t\t\ttestChain.select(pixelEnv, hotPixelSnapAction);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn hotPixelSnapAction.isNodeAdded();\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MCIndexPointSnapper;\n\t}\n});\nfunction HotPixelSnapAction() {\n\tMonotoneChainSelectAction.apply(this);\n\tthis.hotPixel = null;\n\tthis.parentEdge = null;\n\tthis.hotPixelVertexIndex = null;\n\tthis._isNodeAdded = false;\n\tvar hotPixel = arguments[0],\n\t    parentEdge = arguments[1],\n\t    hotPixelVertexIndex = arguments[2];\n\tthis.hotPixel = hotPixel;\n\tthis.parentEdge = parentEdge;\n\tthis.hotPixelVertexIndex = hotPixelVertexIndex;\n}\ninherits(HotPixelSnapAction, MonotoneChainSelectAction);\nextend(HotPixelSnapAction.prototype, {\n\tisNodeAdded: function isNodeAdded() {\n\t\treturn this._isNodeAdded;\n\t},\n\tselect: function select() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar mc = arguments[0],\n\t\t\t    startIndex = arguments[1];\n\t\t\tvar ss = mc.getContext();\n\t\t\tif (this.parentEdge !== null) {\n\t\t\t\tif (ss === this.parentEdge && startIndex === this.hotPixelVertexIndex) return null;\n\t\t\t}\n\t\t\tthis._isNodeAdded = this.hotPixel.addSnappedNode(ss, startIndex);\n\t\t} else return MonotoneChainSelectAction.prototype.select.apply(this, arguments);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn HotPixelSnapAction;\n\t}\n});\nMCIndexPointSnapper.HotPixelSnapAction = HotPixelSnapAction;\n\nfunction InteriorIntersectionFinderAdder() {\n\tthis.li = null;\n\tthis.interiorIntersections = null;\n\tvar li = arguments[0];\n\tthis.li = li;\n\tthis.interiorIntersections = new ArrayList();\n}\nextend(InteriorIntersectionFinderAdder.prototype, {\n\tprocessIntersections: function processIntersections(e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\tthis.li.computeIntersection(p00, p01, p10, p11);\n\t\tif (this.li.hasIntersection()) {\n\t\t\tif (this.li.isInteriorIntersection()) {\n\t\t\t\tfor (var intIndex = 0; intIndex < this.li.getIntersectionNum(); intIndex++) {\n\t\t\t\t\tthis.interiorIntersections.add(this.li.getIntersection(intIndex));\n\t\t\t\t}\n\t\t\t\te0.addIntersections(this.li, segIndex0, 0);\n\t\t\t\te1.addIntersections(this.li, segIndex1, 1);\n\t\t\t}\n\t\t}\n\t},\n\tisDone: function isDone() {\n\t\treturn false;\n\t},\n\tgetInteriorIntersections: function getInteriorIntersections() {\n\t\treturn this.interiorIntersections;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [SegmentIntersector];\n\t},\n\tgetClass: function getClass() {\n\t\treturn InteriorIntersectionFinderAdder;\n\t}\n});\n\nfunction MCIndexSnapRounder() {\n\tthis.pm = null;\n\tthis.li = null;\n\tthis.scaleFactor = null;\n\tthis.noder = null;\n\tthis.pointSnapper = null;\n\tthis.nodedSegStrings = null;\n\tvar pm = arguments[0];\n\tthis.pm = pm;\n\tthis.li = new RobustLineIntersector();\n\tthis.li.setPrecisionModel(pm);\n\tthis.scaleFactor = pm.getScale();\n}\nextend(MCIndexSnapRounder.prototype, {\n\tcheckCorrectness: function checkCorrectness(inputSegmentStrings) {\n\t\tvar resultSegStrings = NodedSegmentString.getNodedSubstrings(inputSegmentStrings);\n\t\tvar nv = new NodingValidator(resultSegStrings);\n\t\ttry {\n\t\t\tnv.checkValid();\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof Exception) {\n\t\t\t\tex.printStackTrace();\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t},\n\tgetNodedSubstrings: function getNodedSubstrings() {\n\t\treturn NodedSegmentString.getNodedSubstrings(this.nodedSegStrings);\n\t},\n\tsnapRound: function snapRound(segStrings, li) {\n\t\tvar intersections = this.findInteriorIntersections(segStrings, li);\n\t\tthis.computeIntersectionSnaps(intersections);\n\t\tthis.computeVertexSnaps(segStrings);\n\t},\n\tfindInteriorIntersections: function findInteriorIntersections(segStrings, li) {\n\t\tvar intFinderAdder = new InteriorIntersectionFinderAdder(li);\n\t\tthis.noder.setSegmentIntersector(intFinderAdder);\n\t\tthis.noder.computeNodes(segStrings);\n\t\treturn intFinderAdder.getInteriorIntersections();\n\t},\n\tcomputeVertexSnaps: function computeVertexSnaps() {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tvar edges = arguments[0];\n\t\t\tfor (var i0 = edges.iterator(); i0.hasNext();) {\n\t\t\t\tvar edge0 = i0.next();\n\t\t\t\tthis.computeVertexSnaps(edge0);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof NodedSegmentString) {\n\t\t\tvar e = arguments[0];\n\t\t\tvar pts0 = e.getCoordinates();\n\t\t\tfor (var i = 0; i < pts0.length; i++) {\n\t\t\t\tvar hotPixel = new HotPixel(pts0[i], this.scaleFactor, this.li);\n\t\t\t\tvar isNodeAdded = this.pointSnapper.snap(hotPixel, e, i);\n\t\t\t\tif (isNodeAdded) {\n\t\t\t\t\te.addIntersection(pts0[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcomputeNodes: function computeNodes(inputSegmentStrings) {\n\t\tthis.nodedSegStrings = inputSegmentStrings;\n\t\tthis.noder = new MCIndexNoder();\n\t\tthis.pointSnapper = new MCIndexPointSnapper(this.noder.getIndex());\n\t\tthis.snapRound(inputSegmentStrings, this.li);\n\t},\n\tcomputeIntersectionSnaps: function computeIntersectionSnaps(snapPts) {\n\t\tfor (var it = snapPts.iterator(); it.hasNext();) {\n\t\t\tvar snapPt = it.next();\n\t\t\tvar hotPixel = new HotPixel(snapPt, this.scaleFactor, this.li);\n\t\t\tthis.pointSnapper.snap(hotPixel);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Noder];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MCIndexSnapRounder;\n\t}\n});\n\nfunction BufferOp() {\n\tthis.argGeom = null;\n\tthis.distance = null;\n\tthis.bufParams = new BufferParameters();\n\tthis.resultGeometry = null;\n\tthis.saveException = null;\n\tif (arguments.length === 1) {\n\t\tvar g = arguments[0];\n\t\tthis.argGeom = g;\n\t} else if (arguments.length === 2) {\n\t\tvar _g = arguments[0],\n\t\t    bufParams = arguments[1];\n\t\tthis.argGeom = _g;\n\t\tthis.bufParams = bufParams;\n\t}\n}\nextend(BufferOp.prototype, {\n\tbufferFixedPrecision: function bufferFixedPrecision(fixedPM) {\n\t\tvar noder = new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1.0)), fixedPM.getScale());\n\t\tvar bufBuilder = new BufferBuilder(this.bufParams);\n\t\tbufBuilder.setWorkingPrecisionModel(fixedPM);\n\t\tbufBuilder.setNoder(noder);\n\t\tthis.resultGeometry = bufBuilder.buffer(this.argGeom, this.distance);\n\t},\n\tbufferReducedPrecision: function bufferReducedPrecision() {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var precDigits = BufferOp.MAX_PRECISION_DIGITS; precDigits >= 0; precDigits--) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.bufferReducedPrecision(precDigits);\n\t\t\t\t} catch (ex) {\n\t\t\t\t\tif (ex instanceof TopologyException) {\n\t\t\t\t\t\tthis.saveException = ex;\n\t\t\t\t\t} else throw ex;\n\t\t\t\t} finally {}\n\t\t\t\tif (this.resultGeometry !== null) return null;\n\t\t\t}\n\t\t\tthrow this.saveException;\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar precisionDigits = arguments[0];\n\t\t\tvar sizeBasedScaleFactor = BufferOp.precisionScaleFactor(this.argGeom, this.distance, precisionDigits);\n\t\t\tvar fixedPM = new PrecisionModel(sizeBasedScaleFactor);\n\t\t\tthis.bufferFixedPrecision(fixedPM);\n\t\t}\n\t},\n\tcomputeGeometry: function computeGeometry() {\n\t\tthis.bufferOriginalPrecision();\n\t\tif (this.resultGeometry !== null) return null;\n\t\tvar argPM = this.argGeom.getFactory().getPrecisionModel();\n\t\tif (argPM.getType() === PrecisionModel.FIXED) this.bufferFixedPrecision(argPM);else this.bufferReducedPrecision();\n\t},\n\tsetQuadrantSegments: function setQuadrantSegments(quadrantSegments) {\n\t\tthis.bufParams.setQuadrantSegments(quadrantSegments);\n\t},\n\tbufferOriginalPrecision: function bufferOriginalPrecision() {\n\t\ttry {\n\t\t\tvar bufBuilder = new BufferBuilder(this.bufParams);\n\t\t\tthis.resultGeometry = bufBuilder.buffer(this.argGeom, this.distance);\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof RuntimeException) {\n\t\t\t\tthis.saveException = ex;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t},\n\tgetResultGeometry: function getResultGeometry(distance) {\n\t\tthis.distance = distance;\n\t\tthis.computeGeometry();\n\t\treturn this.resultGeometry;\n\t},\n\tsetEndCapStyle: function setEndCapStyle(endCapStyle) {\n\t\tthis.bufParams.setEndCapStyle(endCapStyle);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn BufferOp;\n\t}\n});\nBufferOp.bufferOp = function () {\n\tif (arguments.length === 2) {\n\t\tvar g = arguments[0],\n\t\t    distance = arguments[1];\n\t\tvar gBuf = new BufferOp(g);\n\t\tvar geomBuf = gBuf.getResultGeometry(distance);\n\t\treturn geomBuf;\n\t} else if (arguments.length === 3) {\n\t\tif (Number.isInteger(arguments[2]) && arguments[0] instanceof Geometry && typeof arguments[1] === \"number\") {\n\t\t\tvar _g2 = arguments[0],\n\t\t\t    _distance = arguments[1],\n\t\t\t    quadrantSegments = arguments[2];\n\t\t\tvar bufOp = new BufferOp(_g2);\n\t\t\tbufOp.setQuadrantSegments(quadrantSegments);\n\t\t\tvar geomBuf = bufOp.getResultGeometry(_distance);\n\t\t\treturn geomBuf;\n\t\t} else if (arguments[2] instanceof BufferParameters && arguments[0] instanceof Geometry && typeof arguments[1] === \"number\") {\n\t\t\tvar _g3 = arguments[0],\n\t\t\t    _distance2 = arguments[1],\n\t\t\t    params = arguments[2];\n\t\t\tvar bufOp = new BufferOp(_g3, params);\n\t\t\tvar geomBuf = bufOp.getResultGeometry(_distance2);\n\t\t\treturn geomBuf;\n\t\t}\n\t} else if (arguments.length === 4) {\n\t\tvar _g4 = arguments[0],\n\t\t    _distance3 = arguments[1],\n\t\t    _quadrantSegments = arguments[2],\n\t\t    endCapStyle = arguments[3];\n\t\tvar bufOp = new BufferOp(_g4);\n\t\tbufOp.setQuadrantSegments(_quadrantSegments);\n\t\tbufOp.setEndCapStyle(endCapStyle);\n\t\tvar geomBuf = bufOp.getResultGeometry(_distance3);\n\t\treturn geomBuf;\n\t}\n};\nBufferOp.precisionScaleFactor = function (g, distance, maxPrecisionDigits) {\n\tvar env = g.getEnvelopeInternal();\n\tvar envMax = MathUtil.max(Math.abs(env.getMaxX()), Math.abs(env.getMaxY()), Math.abs(env.getMinX()), Math.abs(env.getMinY()));\n\tvar expandByDistance = distance > 0.0 ? distance : 0.0;\n\tvar bufEnvMax = envMax + 2 * expandByDistance;\n\tvar bufEnvPrecisionDigits = Math.trunc(Math.log(bufEnvMax) / Math.log(10) + 1.0);\n\tvar minUnitLog10 = maxPrecisionDigits - bufEnvPrecisionDigits;\n\tvar scaleFactor = Math.pow(10.0, minUnitLog10);\n\treturn scaleFactor;\n};\nBufferOp.CAP_ROUND = BufferParameters.CAP_ROUND;\nBufferOp.CAP_BUTT = BufferParameters.CAP_FLAT;\nBufferOp.CAP_FLAT = BufferParameters.CAP_FLAT;\nBufferOp.CAP_SQUARE = BufferParameters.CAP_SQUARE;\nBufferOp.MAX_PRECISION_DIGITS = 12;\n\n\n\nvar buffer = Object.freeze({\n\tBufferOp: BufferOp,\n\tBufferParameters: BufferParameters\n});\n\nfunction PolygonExtracter() {\n\tthis.comps = null;\n\tvar comps = arguments[0];\n\tthis.comps = comps;\n}\nextend(PolygonExtracter.prototype, {\n\tfilter: function filter(geom) {\n\t\tif (geom instanceof Polygon) this.comps.add(geom);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [GeometryFilter];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PolygonExtracter;\n\t}\n});\nPolygonExtracter.getPolygons = function () {\n\tif (arguments.length === 1) {\n\t\tvar geom = arguments[0];\n\t\treturn PolygonExtracter.getPolygons(geom, new ArrayList());\n\t} else if (arguments.length === 2) {\n\t\tvar _geom = arguments[0],\n\t\t    list = arguments[1];\n\t\tif (_geom instanceof Polygon) {\n\t\t\tlist.add(_geom);\n\t\t} else if (_geom instanceof GeometryCollection) {\n\t\t\t_geom.apply(new PolygonExtracter(list));\n\t\t}\n\t\treturn list;\n\t}\n};\n\nfunction GeometryLocation() {\n\tthis.component = null;\n\tthis.segIndex = null;\n\tthis.pt = null;\n\tif (arguments.length === 2) {\n\t\tvar component = arguments[0],\n\t\t    pt = arguments[1];\n\t\tGeometryLocation.call(this, component, GeometryLocation.INSIDE_AREA, pt);\n\t} else if (arguments.length === 3) {\n\t\tvar _component = arguments[0],\n\t\t    segIndex = arguments[1],\n\t\t    _pt = arguments[2];\n\t\tthis.component = _component;\n\t\tthis.segIndex = segIndex;\n\t\tthis.pt = _pt;\n\t}\n}\nextend(GeometryLocation.prototype, {\n\tisInsideArea: function isInsideArea() {\n\t\treturn this.segIndex === GeometryLocation.INSIDE_AREA;\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this.pt;\n\t},\n\tgetGeometryComponent: function getGeometryComponent() {\n\t\treturn this.component;\n\t},\n\tgetSegmentIndex: function getSegmentIndex() {\n\t\treturn this.segIndex;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryLocation;\n\t}\n});\nGeometryLocation.INSIDE_AREA = -1;\n\nfunction PointExtracter() {\n\tthis.pts = null;\n\tvar pts = arguments[0];\n\tthis.pts = pts;\n}\nextend(PointExtracter.prototype, {\n\tfilter: function filter(geom) {\n\t\tif (geom instanceof Point) this.pts.add(geom);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [GeometryFilter];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PointExtracter;\n\t}\n});\nPointExtracter.getPoints = function () {\n\tif (arguments.length === 1) {\n\t\tvar geom = arguments[0];\n\t\tif (geom instanceof Point) {\n\t\t\treturn Collections.singletonList(geom);\n\t\t}\n\t\treturn PointExtracter.getPoints(geom, new ArrayList());\n\t} else if (arguments.length === 2) {\n\t\tvar _geom = arguments[0],\n\t\t    list = arguments[1];\n\t\tif (_geom instanceof Point) {\n\t\t\tlist.add(_geom);\n\t\t} else if (_geom instanceof GeometryCollection) {\n\t\t\t_geom.apply(new PointExtracter(list));\n\t\t}\n\t\treturn list;\n\t}\n};\n\nfunction ConnectedElementLocationFilter() {\n\tthis.locations = null;\n\tvar locations = arguments[0];\n\tthis.locations = locations;\n}\nextend(ConnectedElementLocationFilter.prototype, {\n\tfilter: function filter(geom) {\n\t\tif (geom instanceof Point || geom instanceof LineString || geom instanceof Polygon) this.locations.add(new GeometryLocation(geom, 0, geom.getCoordinate()));\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [GeometryFilter];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ConnectedElementLocationFilter;\n\t}\n});\nConnectedElementLocationFilter.getLocations = function (geom) {\n\tvar locations = new ArrayList();\n\tgeom.apply(new ConnectedElementLocationFilter(locations));\n\treturn locations;\n};\n\nfunction DistanceOp() {\n\tthis.geom = null;\n\tthis.terminateDistance = 0.0;\n\tthis.ptLocator = new PointLocator();\n\tthis.minDistanceLocation = null;\n\tthis.minDistance = Double.MAX_VALUE;\n\tif (arguments.length === 2) {\n\t\tvar g0 = arguments[0],\n\t\t    g1 = arguments[1];\n\t\tDistanceOp.call(this, g0, g1, 0.0);\n\t} else if (arguments.length === 3) {\n\t\tvar _g = arguments[0],\n\t\t    _g2 = arguments[1],\n\t\t    terminateDistance = arguments[2];\n\t\tthis.geom = new Array(2).fill(null);\n\t\tthis.geom[0] = _g;\n\t\tthis.geom[1] = _g2;\n\t\tthis.terminateDistance = terminateDistance;\n\t}\n}\nextend(DistanceOp.prototype, {\n\tcomputeContainmentDistance: function computeContainmentDistance() {\n\t\tif (arguments.length === 0) {\n\t\t\tvar locPtPoly = new Array(2).fill(null);\n\t\t\tthis.computeContainmentDistance(0, locPtPoly);\n\t\t\tif (this.minDistance <= this.terminateDistance) return null;\n\t\t\tthis.computeContainmentDistance(1, locPtPoly);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar polyGeomIndex = arguments[0],\n\t\t\t    _locPtPoly = arguments[1];\n\t\t\tvar locationsIndex = 1 - polyGeomIndex;\n\t\t\tvar polys = PolygonExtracter.getPolygons(this.geom[polyGeomIndex]);\n\t\t\tif (polys.size() > 0) {\n\t\t\t\tvar insideLocs = ConnectedElementLocationFilter.getLocations(this.geom[locationsIndex]);\n\t\t\t\tthis.computeContainmentDistance(insideLocs, polys, _locPtPoly);\n\t\t\t\tif (this.minDistance <= this.terminateDistance) {\n\t\t\t\t\tthis.minDistanceLocation[locationsIndex] = _locPtPoly[0];\n\t\t\t\t\tthis.minDistanceLocation[polyGeomIndex] = _locPtPoly[1];\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (arguments[2] instanceof Array && hasInterface(arguments[0], List) && hasInterface(arguments[1], List)) {\n\t\t\t\tvar locs = arguments[0],\n\t\t\t\t    _polys = arguments[1],\n\t\t\t\t    _locPtPoly2 = arguments[2];\n\t\t\t\tfor (var i = 0; i < locs.size(); i++) {\n\t\t\t\t\tvar loc = locs.get(i);\n\t\t\t\t\tfor (var j = 0; j < _polys.size(); j++) {\n\t\t\t\t\t\tthis.computeContainmentDistance(loc, _polys.get(j), _locPtPoly2);\n\t\t\t\t\t\tif (this.minDistance <= this.terminateDistance) return null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (arguments[2] instanceof Array && arguments[0] instanceof GeometryLocation && arguments[1] instanceof Polygon) {\n\t\t\t\tvar ptLoc = arguments[0],\n\t\t\t\t    poly = arguments[1],\n\t\t\t\t    _locPtPoly3 = arguments[2];\n\t\t\t\tvar pt = ptLoc.getCoordinate();\n\t\t\t\tif (Location.EXTERIOR !== this.ptLocator.locate(pt, poly)) {\n\t\t\t\t\tthis.minDistance = 0.0;\n\t\t\t\t\t_locPtPoly3[0] = ptLoc;\n\t\t\t\t\t_locPtPoly3[1] = new GeometryLocation(poly, pt);\n\t\t\t\t\t\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcomputeMinDistanceLinesPoints: function computeMinDistanceLinesPoints(lines, points, locGeom) {\n\t\tfor (var i = 0; i < lines.size(); i++) {\n\t\t\tvar line = lines.get(i);\n\t\t\tfor (var j = 0; j < points.size(); j++) {\n\t\t\t\tvar pt = points.get(j);\n\t\t\t\tthis.computeMinDistance(line, pt, locGeom);\n\t\t\t\tif (this.minDistance <= this.terminateDistance) return null;\n\t\t\t}\n\t\t}\n\t},\n\tcomputeFacetDistance: function computeFacetDistance() {\n\t\tvar locGeom = new Array(2).fill(null);\n\t\tvar lines0 = LinearComponentExtracter.getLines(this.geom[0]);\n\t\tvar lines1 = LinearComponentExtracter.getLines(this.geom[1]);\n\t\tvar pts0 = PointExtracter.getPoints(this.geom[0]);\n\t\tvar pts1 = PointExtracter.getPoints(this.geom[1]);\n\t\tthis.computeMinDistanceLines(lines0, lines1, locGeom);\n\t\tthis.updateMinDistance(locGeom, false);\n\t\tif (this.minDistance <= this.terminateDistance) return null;\n\t\tlocGeom[0] = null;\n\t\tlocGeom[1] = null;\n\t\tthis.computeMinDistanceLinesPoints(lines0, pts1, locGeom);\n\t\tthis.updateMinDistance(locGeom, false);\n\t\tif (this.minDistance <= this.terminateDistance) return null;\n\t\tlocGeom[0] = null;\n\t\tlocGeom[1] = null;\n\t\tthis.computeMinDistanceLinesPoints(lines1, pts0, locGeom);\n\t\tthis.updateMinDistance(locGeom, true);\n\t\tif (this.minDistance <= this.terminateDistance) return null;\n\t\tlocGeom[0] = null;\n\t\tlocGeom[1] = null;\n\t\tthis.computeMinDistancePoints(pts0, pts1, locGeom);\n\t\tthis.updateMinDistance(locGeom, false);\n\t},\n\tnearestLocations: function nearestLocations() {\n\t\tthis.computeMinDistance();\n\t\treturn this.minDistanceLocation;\n\t},\n\tupdateMinDistance: function updateMinDistance(locGeom, flip) {\n\t\tif (locGeom[0] === null) return null;\n\t\tif (flip) {\n\t\t\tthis.minDistanceLocation[0] = locGeom[1];\n\t\t\tthis.minDistanceLocation[1] = locGeom[0];\n\t\t} else {\n\t\t\tthis.minDistanceLocation[0] = locGeom[0];\n\t\t\tthis.minDistanceLocation[1] = locGeom[1];\n\t\t}\n\t},\n\tnearestPoints: function nearestPoints() {\n\t\tthis.computeMinDistance();\n\t\tvar nearestPts = [this.minDistanceLocation[0].getCoordinate(), this.minDistanceLocation[1].getCoordinate()];\n\t\treturn nearestPts;\n\t},\n\tcomputeMinDistance: function computeMinDistance() {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this.minDistanceLocation !== null) return null;\n\t\t\tthis.minDistanceLocation = new Array(2).fill(null);\n\t\t\tthis.computeContainmentDistance();\n\t\t\tif (this.minDistance <= this.terminateDistance) return null;\n\t\t\tthis.computeFacetDistance();\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (arguments[2] instanceof Array && arguments[0] instanceof LineString && arguments[1] instanceof Point) {\n\t\t\t\tvar line = arguments[0],\n\t\t\t\t    pt = arguments[1],\n\t\t\t\t    locGeom = arguments[2];\n\t\t\t\tif (line.getEnvelopeInternal().distance(pt.getEnvelopeInternal()) > this.minDistance) return null;\n\t\t\t\tvar coord0 = line.getCoordinates();\n\t\t\t\tvar coord = pt.getCoordinate();\n\t\t\t\tfor (var i = 0; i < coord0.length - 1; i++) {\n\t\t\t\t\tvar dist = CGAlgorithms.distancePointLine(coord, coord0[i], coord0[i + 1]);\n\t\t\t\t\tif (dist < this.minDistance) {\n\t\t\t\t\t\tthis.minDistance = dist;\n\t\t\t\t\t\tvar seg = new LineSegment(coord0[i], coord0[i + 1]);\n\t\t\t\t\t\tvar segClosestPoint = seg.closestPoint(coord);\n\t\t\t\t\t\tlocGeom[0] = new GeometryLocation(line, i, segClosestPoint);\n\t\t\t\t\t\tlocGeom[1] = new GeometryLocation(pt, 0, coord);\n\t\t\t\t\t}\n\t\t\t\t\tif (this.minDistance <= this.terminateDistance) return null;\n\t\t\t\t}\n\t\t\t} else if (arguments[2] instanceof Array && arguments[0] instanceof LineString && arguments[1] instanceof LineString) {\n\t\t\t\tvar line0 = arguments[0],\n\t\t\t\t    line1 = arguments[1],\n\t\t\t\t    _locGeom = arguments[2];\n\t\t\t\tif (line0.getEnvelopeInternal().distance(line1.getEnvelopeInternal()) > this.minDistance) return null;\n\t\t\t\tvar coord0 = line0.getCoordinates();\n\t\t\t\tvar coord1 = line1.getCoordinates();\n\t\t\t\tfor (var i = 0; i < coord0.length - 1; i++) {\n\t\t\t\t\tfor (var j = 0; j < coord1.length - 1; j++) {\n\t\t\t\t\t\tvar dist = CGAlgorithms.distanceLineLine(coord0[i], coord0[i + 1], coord1[j], coord1[j + 1]);\n\t\t\t\t\t\tif (dist < this.minDistance) {\n\t\t\t\t\t\t\tthis.minDistance = dist;\n\t\t\t\t\t\t\tvar seg0 = new LineSegment(coord0[i], coord0[i + 1]);\n\t\t\t\t\t\t\tvar seg1 = new LineSegment(coord1[j], coord1[j + 1]);\n\t\t\t\t\t\t\tvar closestPt = seg0.closestPoints(seg1);\n\t\t\t\t\t\t\t_locGeom[0] = new GeometryLocation(line0, i, closestPt[0]);\n\t\t\t\t\t\t\t_locGeom[1] = new GeometryLocation(line1, j, closestPt[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.minDistance <= this.terminateDistance) return null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcomputeMinDistancePoints: function computeMinDistancePoints(points0, points1, locGeom) {\n\t\tfor (var i = 0; i < points0.size(); i++) {\n\t\t\tvar pt0 = points0.get(i);\n\t\t\tfor (var j = 0; j < points1.size(); j++) {\n\t\t\t\tvar pt1 = points1.get(j);\n\t\t\t\tvar dist = pt0.getCoordinate().distance(pt1.getCoordinate());\n\t\t\t\tif (dist < this.minDistance) {\n\t\t\t\t\tthis.minDistance = dist;\n\t\t\t\t\tlocGeom[0] = new GeometryLocation(pt0, 0, pt0.getCoordinate());\n\t\t\t\t\tlocGeom[1] = new GeometryLocation(pt1, 0, pt1.getCoordinate());\n\t\t\t\t}\n\t\t\t\tif (this.minDistance <= this.terminateDistance) return null;\n\t\t\t}\n\t\t}\n\t},\n\tdistance: function distance() {\n\t\tif (this.geom[0] === null || this.geom[1] === null) throw new IllegalArgumentException(\"null geometries are not supported\");\n\t\tif (this.geom[0].isEmpty() || this.geom[1].isEmpty()) return 0.0;\n\t\tthis.computeMinDistance();\n\t\treturn this.minDistance;\n\t},\n\tcomputeMinDistanceLines: function computeMinDistanceLines(lines0, lines1, locGeom) {\n\t\tfor (var i = 0; i < lines0.size(); i++) {\n\t\t\tvar line0 = lines0.get(i);\n\t\t\tfor (var j = 0; j < lines1.size(); j++) {\n\t\t\t\tvar line1 = lines1.get(j);\n\t\t\t\tthis.computeMinDistance(line0, line1, locGeom);\n\t\t\t\tif (this.minDistance <= this.terminateDistance) return null;\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DistanceOp;\n\t}\n});\nDistanceOp.distance = function (g0, g1) {\n\tvar distOp = new DistanceOp(g0, g1);\n\treturn distOp.distance();\n};\nDistanceOp.isWithinDistance = function (g0, g1, distance) {\n\tvar distOp = new DistanceOp(g0, g1, distance);\n\treturn distOp.distance() <= distance;\n};\nDistanceOp.nearestPoints = function (g0, g1) {\n\tvar distOp = new DistanceOp(g0, g1);\n\treturn distOp.nearestPoints();\n};\n\n\n\nvar distance = Object.freeze({\n\tDistanceOp: DistanceOp\n});\n\nfunction EdgeString() {\n\tthis.factory = null;\n\tthis.directedEdges = new ArrayList();\n\tthis.coordinates = null;\n\tvar factory = arguments[0];\n\tthis.factory = factory;\n}\nextend(EdgeString.prototype, {\n\tgetCoordinates: function getCoordinates() {\n\t\tif (this.coordinates === null) {\n\t\t\tvar forwardDirectedEdges = 0;\n\t\t\tvar reverseDirectedEdges = 0;\n\t\t\tvar coordinateList = new CoordinateList();\n\t\t\tfor (var i = this.directedEdges.iterator(); i.hasNext();) {\n\t\t\t\tvar directedEdge = i.next();\n\t\t\t\tif (directedEdge.getEdgeDirection()) {\n\t\t\t\t\tforwardDirectedEdges++;\n\t\t\t\t} else {\n\t\t\t\t\treverseDirectedEdges++;\n\t\t\t\t}\n\t\t\t\tcoordinateList.add(directedEdge.getEdge().getLine().getCoordinates(), false, directedEdge.getEdgeDirection());\n\t\t\t}\n\t\t\tthis.coordinates = coordinateList.toCoordinateArray();\n\t\t\tif (reverseDirectedEdges > forwardDirectedEdges) {\n\t\t\t\tCoordinateArrays.reverse(this.coordinates);\n\t\t\t}\n\t\t}\n\t\treturn this.coordinates;\n\t},\n\ttoLineString: function toLineString() {\n\t\treturn this.factory.createLineString(this.getCoordinates());\n\t},\n\tadd: function add(directedEdge) {\n\t\tthis.directedEdges.add(directedEdge);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EdgeString;\n\t}\n});\n\nfunction GraphComponent$1() {\n\tthis._isMarked = false;\n\tthis._isVisited = false;\n\tthis.data = null;\n}\nextend(GraphComponent$1.prototype, {\n\tsetVisited: function setVisited(isVisited) {\n\t\tthis._isVisited = isVisited;\n\t},\n\tisMarked: function isMarked() {\n\t\treturn this._isMarked;\n\t},\n\tsetData: function setData(data) {\n\t\tthis.data = data;\n\t},\n\tgetData: function getData() {\n\t\treturn this.data;\n\t},\n\tsetMarked: function setMarked(isMarked) {\n\t\tthis._isMarked = isMarked;\n\t},\n\tgetContext: function getContext() {\n\t\treturn this.data;\n\t},\n\tisVisited: function isVisited() {\n\t\treturn this._isVisited;\n\t},\n\tsetContext: function setContext(data) {\n\t\tthis.data = data;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GraphComponent$1;\n\t}\n});\nGraphComponent$1.getComponentWithVisitedState = function (i, visitedState) {\n\twhile (i.hasNext()) {\n\t\tvar comp = i.next();\n\t\tif (comp.isVisited() === visitedState) return comp;\n\t}\n\treturn null;\n};\nGraphComponent$1.setVisited = function (i, visited) {\n\twhile (i.hasNext()) {\n\t\tvar comp = i.next();\n\t\tcomp.setVisited(visited);\n\t}\n};\nGraphComponent$1.setMarked = function (i, marked) {\n\twhile (i.hasNext()) {\n\t\tvar comp = i.next();\n\t\tcomp.setMarked(marked);\n\t}\n};\n\nfunction DirectedEdge$1() {\n\tGraphComponent$1.apply(this);\n\tthis.parentEdge = null;\n\tthis.from = null;\n\tthis.to = null;\n\tthis.p0 = null;\n\tthis.p1 = null;\n\tthis.sym = null;\n\tthis.edgeDirection = null;\n\tthis.quadrant = null;\n\tthis.angle = null;\n\tvar from = arguments[0],\n\t    to = arguments[1],\n\t    directionPt = arguments[2],\n\t    edgeDirection = arguments[3];\n\tthis.from = from;\n\tthis.to = to;\n\tthis.edgeDirection = edgeDirection;\n\tthis.p0 = from.getCoordinate();\n\tthis.p1 = directionPt;\n\tvar dx = this.p1.x - this.p0.x;\n\tvar dy = this.p1.y - this.p0.y;\n\tthis.quadrant = Quadrant.quadrant(dx, dy);\n\tthis.angle = Math.atan2(dy, dx);\n}\ninherits(DirectedEdge$1, GraphComponent$1);\nextend(DirectedEdge$1.prototype, {\n\tisRemoved: function isRemoved() {\n\t\treturn this.parentEdge === null;\n\t},\n\tcompareDirection: function compareDirection(e) {\n\t\tif (this.quadrant > e.quadrant) return 1;\n\t\tif (this.quadrant < e.quadrant) return -1;\n\t\treturn CGAlgorithms.computeOrientation(e.p0, e.p1, this.p1);\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this.from.getCoordinate();\n\t},\n\tprint: function print(out) {\n\t\tvar className = this.getClass().getName();\n\t\tvar lastDotPos = className.lastIndexOf('.');\n\t\tvar name = className.substring(lastDotPos + 1);\n\t\tout.print(\"  \" + name + \": \" + this.p0 + \" - \" + this.p1 + \" \" + this.quadrant + \":\" + this.angle);\n\t},\n\tgetDirectionPt: function getDirectionPt() {\n\t\treturn this.p1;\n\t},\n\tgetAngle: function getAngle() {\n\t\treturn this.angle;\n\t},\n\tcompareTo: function compareTo(obj) {\n\t\tvar de = obj;\n\t\treturn this.compareDirection(de);\n\t},\n\tgetFromNode: function getFromNode() {\n\t\treturn this.from;\n\t},\n\tgetSym: function getSym() {\n\t\treturn this.sym;\n\t},\n\tsetEdge: function setEdge(parentEdge) {\n\t\tthis.parentEdge = parentEdge;\n\t},\n\tremove: function remove() {\n\t\tthis.sym = null;\n\t\tthis.parentEdge = null;\n\t},\n\tgetEdge: function getEdge() {\n\t\treturn this.parentEdge;\n\t},\n\tgetQuadrant: function getQuadrant() {\n\t\treturn this.quadrant;\n\t},\n\tsetSym: function setSym(sym) {\n\t\tthis.sym = sym;\n\t},\n\tgetToNode: function getToNode() {\n\t\treturn this.to;\n\t},\n\tgetEdgeDirection: function getEdgeDirection() {\n\t\treturn this.edgeDirection;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DirectedEdge$1;\n\t}\n});\nDirectedEdge$1.toEdges = function (dirEdges) {\n\tvar edges = new ArrayList();\n\tfor (var i = dirEdges.iterator(); i.hasNext();) {\n\t\tedges.add(i.next().parentEdge);\n\t}\n\treturn edges;\n};\n\nfunction LineMergeDirectedEdge() {\n\tvar from = arguments[0],\n\t    to = arguments[1],\n\t    directionPt = arguments[2],\n\t    edgeDirection = arguments[3];\n\tDirectedEdge$1.call(this, from, to, directionPt, edgeDirection);\n}\ninherits(LineMergeDirectedEdge, DirectedEdge$1);\nextend(LineMergeDirectedEdge.prototype, {\n\tgetNext: function getNext() {\n\t\tif (this.getToNode().getDegree() !== 2) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this.getToNode().getOutEdges().getEdges().get(0) === this.getSym()) {\n\t\t\treturn this.getToNode().getOutEdges().getEdges().get(1);\n\t\t}\n\t\tAssert.isTrue(this.getToNode().getOutEdges().getEdges().get(1) === this.getSym());\n\t\treturn this.getToNode().getOutEdges().getEdges().get(0);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineMergeDirectedEdge;\n\t}\n});\n\nfunction Edge$1() {\n\tGraphComponent$1.apply(this);\n\tthis.dirEdge = null;\n\tif (arguments.length === 0) {} else if (arguments.length === 2) {\n\t\tvar de0 = arguments[0],\n\t\t    de1 = arguments[1];\n\t\tthis.setDirectedEdges(de0, de1);\n\t}\n}\ninherits(Edge$1, GraphComponent$1);\nextend(Edge$1.prototype, {\n\tisRemoved: function isRemoved() {\n\t\treturn this.dirEdge === null;\n\t},\n\tsetDirectedEdges: function setDirectedEdges(de0, de1) {\n\t\tthis.dirEdge = [de0, de1];\n\t\tde0.setEdge(this);\n\t\tde1.setEdge(this);\n\t\tde0.setSym(de1);\n\t\tde1.setSym(de0);\n\t\tde0.getFromNode().addOutEdge(de0);\n\t\tde1.getFromNode().addOutEdge(de1);\n\t},\n\tgetDirEdge: function getDirEdge() {\n\t\tif (Number.isInteger(arguments[0])) {\n\t\t\tvar i = arguments[0];\n\t\t\treturn this.dirEdge[i];\n\t\t} else if (arguments[0] instanceof Node$3) {\n\t\t\tvar fromNode = arguments[0];\n\t\t\tif (this.dirEdge[0].getFromNode() === fromNode) return this.dirEdge[0];\n\t\t\tif (this.dirEdge[1].getFromNode() === fromNode) return this.dirEdge[1];\n\t\t\treturn null;\n\t\t}\n\t},\n\tremove: function remove() {\n\t\tthis.dirEdge = null;\n\t},\n\tgetOppositeNode: function getOppositeNode(node) {\n\t\tif (this.dirEdge[0].getFromNode() === node) return this.dirEdge[0].getToNode();\n\t\tif (this.dirEdge[1].getFromNode() === node) return this.dirEdge[1].getToNode();\n\t\treturn null;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Edge$1;\n\t}\n});\n\nfunction DirectedEdgeStar$1() {\n\tthis.outEdges = new ArrayList();\n\tthis.sorted = false;\n}\nextend(DirectedEdgeStar$1.prototype, {\n\tgetNextEdge: function getNextEdge(dirEdge) {\n\t\tvar i = this.getIndex(dirEdge);\n\t\treturn this.outEdges.get(this.getIndex(i + 1));\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\tvar it = this.iterator();\n\t\tif (!it.hasNext()) return null;\n\t\tvar e = it.next();\n\t\treturn e.getCoordinate();\n\t},\n\titerator: function iterator() {\n\t\tthis.sortEdges();\n\t\treturn this.outEdges.iterator();\n\t},\n\tsortEdges: function sortEdges() {\n\t\tif (!this.sorted) {\n\t\t\tCollections.sort(this.outEdges);\n\t\t\tthis.sorted = true;\n\t\t}\n\t},\n\tremove: function remove(de) {\n\t\tthis.outEdges.remove(de);\n\t},\n\tgetEdges: function getEdges() {\n\t\tthis.sortEdges();\n\t\treturn this.outEdges;\n\t},\n\tgetNextCWEdge: function getNextCWEdge(dirEdge) {\n\t\tvar i = this.getIndex(dirEdge);\n\t\treturn this.outEdges.get(this.getIndex(i - 1));\n\t},\n\tgetIndex: function getIndex() {\n\t\tif (arguments[0] instanceof Edge$1) {\n\t\t\tvar edge = arguments[0];\n\t\t\tthis.sortEdges();\n\t\t\tfor (var i = 0; i < this.outEdges.size(); i++) {\n\t\t\t\tvar de = this.outEdges.get(i);\n\t\t\t\tif (de.getEdge() === edge) return i;\n\t\t\t}\n\t\t\treturn -1;\n\t\t} else if (arguments[0] instanceof DirectedEdge$1) {\n\t\t\tvar dirEdge = arguments[0];\n\t\t\tthis.sortEdges();\n\t\t\tfor (var i = 0; i < this.outEdges.size(); i++) {\n\t\t\t\tvar de = this.outEdges.get(i);\n\t\t\t\tif (de === dirEdge) return i;\n\t\t\t}\n\t\t\treturn -1;\n\t\t} else if (Number.isInteger(arguments[0])) {\n\t\t\tvar _i = arguments[0];\n\t\t\tvar modi = _i % this.outEdges.size();\n\t\t\tif (modi < 0) modi += this.outEdges.size();\n\t\t\treturn modi;\n\t\t}\n\t},\n\tadd: function add(de) {\n\t\tthis.outEdges.add(de);\n\t\tthis.sorted = false;\n\t},\n\tgetDegree: function getDegree() {\n\t\treturn this.outEdges.size();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DirectedEdgeStar$1;\n\t}\n});\n\nfunction Node$3() {\n\tGraphComponent$1.apply(this);\n\tthis.pt = null;\n\tthis.deStar = null;\n\tif (arguments.length === 1) {\n\t\tvar pt = arguments[0];\n\t\tNode$3.call(this, pt, new DirectedEdgeStar$1());\n\t} else if (arguments.length === 2) {\n\t\tvar _pt = arguments[0],\n\t\t    deStar = arguments[1];\n\t\tthis.pt = _pt;\n\t\tthis.deStar = deStar;\n\t}\n}\ninherits(Node$3, GraphComponent$1);\nextend(Node$3.prototype, {\n\tisRemoved: function isRemoved() {\n\t\treturn this.pt === null;\n\t},\n\taddOutEdge: function addOutEdge(de) {\n\t\tthis.deStar.add(de);\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this.pt;\n\t},\n\tgetOutEdges: function getOutEdges() {\n\t\treturn this.deStar;\n\t},\n\tremove: function remove() {\n\t\tif (arguments.length === 0) {\n\t\t\tthis.pt = null;\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar de = arguments[0];\n\t\t\tthis.deStar.remove(de);\n\t\t}\n\t},\n\tgetIndex: function getIndex(edge) {\n\t\treturn this.deStar.getIndex(edge);\n\t},\n\tgetDegree: function getDegree() {\n\t\treturn this.deStar.getDegree();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Node$3;\n\t}\n});\nNode$3.getEdgesBetween = function (node0, node1) {\n\tvar edges0 = DirectedEdge$1.toEdges(node0.getOutEdges().getEdges());\n\tvar commonEdges = new HashSet(edges0);\n\tvar edges1 = DirectedEdge$1.toEdges(node1.getOutEdges().getEdges());\n\tcommonEdges.retainAll(edges1);\n\treturn commonEdges;\n};\n\nfunction LineMergeEdge() {\n\tEdge$1.apply(this);\n\tthis.line = null;\n\tvar line = arguments[0];\n\tthis.line = line;\n}\ninherits(LineMergeEdge, Edge$1);\nextend(LineMergeEdge.prototype, {\n\tgetLine: function getLine() {\n\t\treturn this.line;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineMergeEdge;\n\t}\n});\n\nfunction NodeMap$1() {\n\tthis.nodeMap = new TreeMap();\n}\nextend(NodeMap$1.prototype, {\n\tfind: function find(coord) {\n\t\treturn this.nodeMap.get(coord);\n\t},\n\titerator: function iterator() {\n\t\treturn this.nodeMap.values().iterator();\n\t},\n\tremove: function remove(pt) {\n\t\treturn this.nodeMap.remove(pt);\n\t},\n\tvalues: function values() {\n\t\treturn this.nodeMap.values();\n\t},\n\tadd: function add(n) {\n\t\tthis.nodeMap.put(n.getCoordinate(), n);\n\t\treturn n;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn NodeMap$1;\n\t}\n});\n\nfunction PlanarGraph$1() {\n\tthis.edges = new HashSet();\n\tthis.dirEdges = new HashSet();\n\tthis.nodeMap = new NodeMap$1();\n}\nextend(PlanarGraph$1.prototype, {\n\tfindNodesOfDegree: function findNodesOfDegree(degree) {\n\t\tvar nodesFound = new ArrayList();\n\t\tfor (var i = this.nodeIterator(); i.hasNext();) {\n\t\t\tvar node = i.next();\n\t\t\tif (node.getDegree() === degree) nodesFound.add(node);\n\t\t}\n\t\treturn nodesFound;\n\t},\n\tdirEdgeIterator: function dirEdgeIterator() {\n\t\treturn this.dirEdges.iterator();\n\t},\n\tedgeIterator: function edgeIterator() {\n\t\treturn this.edges.iterator();\n\t},\n\tremove: function remove() {\n\t\tif (arguments[0] instanceof Edge$1) {\n\t\t\tvar _edge = arguments[0];\n\t\t\tthis.remove(_edge.getDirEdge(0));\n\t\t\tthis.remove(_edge.getDirEdge(1));\n\t\t\tthis.edges.remove(_edge);\n\t\t\t_edge.remove();\n\t\t} else if (arguments[0] instanceof DirectedEdge$1) {\n\t\t\tvar _de = arguments[0];\n\t\t\tvar sym = _de.getSym();\n\t\t\tif (sym !== null) sym.setSym(null);\n\t\t\t_de.getFromNode().remove(_de);\n\t\t\t_de.remove();\n\t\t\tthis.dirEdges.remove(_de);\n\t\t} else if (arguments[0] instanceof Node$3) {\n\t\t\tvar node = arguments[0];\n\t\t\tvar outEdges = node.getOutEdges().getEdges();\n\t\t\tfor (var i = outEdges.iterator(); i.hasNext();) {\n\t\t\t\tvar de = i.next();\n\t\t\t\tvar sym = de.getSym();\n\t\t\t\tif (sym !== null) this.remove(sym);\n\t\t\t\tthis.dirEdges.remove(de);\n\t\t\t\tvar edge = de.getEdge();\n\t\t\t\tif (edge !== null) {\n\t\t\t\t\tthis.edges.remove(edge);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.nodeMap.remove(node.getCoordinate());\n\t\t\tnode.remove();\n\t\t}\n\t},\n\tfindNode: function findNode(pt) {\n\t\treturn this.nodeMap.find(pt);\n\t},\n\tgetEdges: function getEdges() {\n\t\treturn this.edges;\n\t},\n\tnodeIterator: function nodeIterator() {\n\t\treturn this.nodeMap.iterator();\n\t},\n\tcontains: function contains() {\n\t\tif (arguments[0] instanceof Edge$1) {\n\t\t\tvar e = arguments[0];\n\t\t\treturn this.edges.contains(e);\n\t\t} else if (arguments[0] instanceof DirectedEdge$1) {\n\t\t\tvar de = arguments[0];\n\t\t\treturn this.dirEdges.contains(de);\n\t\t}\n\t},\n\tadd: function add() {\n\t\tif (arguments[0] instanceof Node$3) {\n\t\t\tvar node = arguments[0];\n\t\t\tthis.nodeMap.add(node);\n\t\t} else if (arguments[0] instanceof Edge$1) {\n\t\t\tvar edge = arguments[0];\n\t\t\tthis.edges.add(edge);\n\t\t\tthis.add(edge.getDirEdge(0));\n\t\t\tthis.add(edge.getDirEdge(1));\n\t\t} else if (arguments[0] instanceof DirectedEdge$1) {\n\t\t\tvar dirEdge = arguments[0];\n\t\t\tthis.dirEdges.add(dirEdge);\n\t\t}\n\t},\n\tgetNodes: function getNodes() {\n\t\treturn this.nodeMap.values();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PlanarGraph$1;\n\t}\n});\n\nfunction LineMergeGraph() {\n\tPlanarGraph$1.apply(this);\n}\ninherits(LineMergeGraph, PlanarGraph$1);\nextend(LineMergeGraph.prototype, {\n\taddEdge: function addEdge(lineString) {\n\t\tif (lineString.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\tvar coordinates = CoordinateArrays.removeRepeatedPoints(lineString.getCoordinates());\n\t\tif (coordinates.length <= 1) return null;\n\t\tvar startCoordinate = coordinates[0];\n\t\tvar endCoordinate = coordinates[coordinates.length - 1];\n\t\tvar startNode = this.getNode(startCoordinate);\n\t\tvar endNode = this.getNode(endCoordinate);\n\t\tvar directedEdge0 = new LineMergeDirectedEdge(startNode, endNode, coordinates[1], true);\n\t\tvar directedEdge1 = new LineMergeDirectedEdge(endNode, startNode, coordinates[coordinates.length - 2], false);\n\t\tvar edge = new LineMergeEdge(lineString);\n\t\tedge.setDirectedEdges(directedEdge0, directedEdge1);\n\t\tthis.add(edge);\n\t},\n\tgetNode: function getNode(coordinate) {\n\t\tvar node = this.findNode(coordinate);\n\t\tif (node === null) {\n\t\t\tnode = new Node$3(coordinate);\n\t\t\tthis.add(node);\n\t\t}\n\t\treturn node;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineMergeGraph;\n\t}\n});\n\nfunction LineMerger() {\n\tthis.graph = new LineMergeGraph();\n\tthis.mergedLineStrings = null;\n\tthis.factory = null;\n\tthis.edgeStrings = null;\n}\nextend(LineMerger.prototype, {\n\tbuildEdgeStringsForUnprocessedNodes: function buildEdgeStringsForUnprocessedNodes() {\n\t\tfor (var i = this.graph.getNodes().iterator(); i.hasNext();) {\n\t\t\tvar node = i.next();\n\t\t\tif (!node.isMarked()) {\n\t\t\t\tAssert.isTrue(node.getDegree() === 2);\n\t\t\t\tthis.buildEdgeStringsStartingAt(node);\n\t\t\t\tnode.setMarked(true);\n\t\t\t}\n\t\t}\n\t},\n\tbuildEdgeStringsForNonDegree2Nodes: function buildEdgeStringsForNonDegree2Nodes() {\n\t\tfor (var i = this.graph.getNodes().iterator(); i.hasNext();) {\n\t\t\tvar node = i.next();\n\t\t\tif (node.getDegree() !== 2) {\n\t\t\t\tthis.buildEdgeStringsStartingAt(node);\n\t\t\t\tnode.setMarked(true);\n\t\t\t}\n\t\t}\n\t},\n\tbuildEdgeStringsForObviousStartNodes: function buildEdgeStringsForObviousStartNodes() {\n\t\tthis.buildEdgeStringsForNonDegree2Nodes();\n\t},\n\tgetMergedLineStrings: function getMergedLineStrings() {\n\t\tthis.merge();\n\t\treturn this.mergedLineStrings;\n\t},\n\tbuildEdgeStringsStartingAt: function buildEdgeStringsStartingAt(node) {\n\t\tfor (var i = node.getOutEdges().iterator(); i.hasNext();) {\n\t\t\tvar directedEdge = i.next();\n\t\t\tif (directedEdge.getEdge().isMarked()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.edgeStrings.add(this.buildEdgeStringStartingWith(directedEdge));\n\t\t}\n\t},\n\tmerge: function merge() {\n\t\tif (this.mergedLineStrings !== null) {\n\t\t\treturn null;\n\t\t}\n\t\tGraphComponent$1.setMarked(this.graph.nodeIterator(), false);\n\t\tGraphComponent$1.setMarked(this.graph.edgeIterator(), false);\n\t\tthis.edgeStrings = new ArrayList();\n\t\tthis.buildEdgeStringsForObviousStartNodes();\n\t\tthis.buildEdgeStringsForIsolatedLoops();\n\t\tthis.mergedLineStrings = new ArrayList();\n\t\tfor (var i = this.edgeStrings.iterator(); i.hasNext();) {\n\t\t\tvar edgeString = i.next();\n\t\t\tthis.mergedLineStrings.add(edgeString.toLineString());\n\t\t}\n\t},\n\tbuildEdgeStringStartingWith: function buildEdgeStringStartingWith(start) {\n\t\tvar edgeString = new EdgeString(this.factory);\n\t\tvar current = start;\n\t\tdo {\n\t\t\tedgeString.add(current);\n\t\t\tcurrent.getEdge().setMarked(true);\n\t\t\tcurrent = current.getNext();\n\t\t} while (current !== null && current !== start);\n\t\treturn edgeString;\n\t},\n\tadd: function add() {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tvar _geometry = arguments[0];\n\t\t\t_geometry.apply({\n\t\t\t\tinterfaces_: function interfaces_() {\n\t\t\t\t\treturn [GeometryComponentFilter];\n\t\t\t\t},\n\t\t\t\tfilter: function filter(component) {\n\t\t\t\t\tif (component instanceof LineString) {\n\t\t\t\t\t\tthis.add(component);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (hasInterface(arguments[0], Collection)) {\n\t\t\tvar geometries = arguments[0];\n\t\t\tthis.mergedLineStrings = null;\n\t\t\tfor (var i = geometries.iterator(); i.hasNext();) {\n\t\t\t\tvar geometry = i.next();\n\t\t\t\tthis.add(geometry);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof LineString) {\n\t\t\tvar lineString = arguments[0];\n\t\t\tif (this.factory === null) {\n\t\t\t\tthis.factory = lineString.getFactory();\n\t\t\t}\n\t\t\tthis.graph.addEdge(lineString);\n\t\t}\n\t},\n\tbuildEdgeStringsForIsolatedLoops: function buildEdgeStringsForIsolatedLoops() {\n\t\tthis.buildEdgeStringsForUnprocessedNodes();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineMerger;\n\t}\n});\n\n\n\nvar linemerge = Object.freeze({\n\tLineMerger: LineMerger\n});\n\n\n\nvar overlay = Object.freeze({\n\tOverlayOp: OverlayOp\n});\n\nfunction PolygonizeDirectedEdge() {\n\tthis.edgeRing = null;\n\tthis.next = null;\n\tthis.label = -1;\n\tvar from = arguments[0],\n\t    to = arguments[1],\n\t    directionPt = arguments[2],\n\t    edgeDirection = arguments[3];\n\tDirectedEdge$1.call(this, from, to, directionPt, edgeDirection);\n}\ninherits(PolygonizeDirectedEdge, DirectedEdge$1);\nextend(PolygonizeDirectedEdge.prototype, {\n\tgetNext: function getNext() {\n\t\treturn this.next;\n\t},\n\tisInRing: function isInRing() {\n\t\treturn this.edgeRing !== null;\n\t},\n\tsetRing: function setRing(edgeRing) {\n\t\tthis.edgeRing = edgeRing;\n\t},\n\tsetLabel: function setLabel(label) {\n\t\tthis.label = label;\n\t},\n\tgetLabel: function getLabel() {\n\t\treturn this.label;\n\t},\n\tsetNext: function setNext(next) {\n\t\tthis.next = next;\n\t},\n\tgetRing: function getRing() {\n\t\treturn this.edgeRing;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PolygonizeDirectedEdge;\n\t}\n});\n\nfunction PolygonizeEdge() {\n\tEdge$1.apply(this);\n\tthis.line = null;\n\tvar line = arguments[0];\n\tthis.line = line;\n}\ninherits(PolygonizeEdge, Edge$1);\nextend(PolygonizeEdge.prototype, {\n\tgetLine: function getLine() {\n\t\treturn this.line;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PolygonizeEdge;\n\t}\n});\n\nfunction ConnectedInteriorTester() {\n\tthis.geometryFactory = new GeometryFactory();\n\tthis.geomGraph = null;\n\tthis.disconnectedRingcoord = null;\n\tvar geomGraph = arguments[0];\n\tthis.geomGraph = geomGraph;\n}\nextend(ConnectedInteriorTester.prototype, {\n\tvisitInteriorRing: function visitInteriorRing(ring, graph) {\n\t\tvar pts = ring.getCoordinates();\n\t\tvar pt0 = pts[0];\n\t\tvar pt1 = ConnectedInteriorTester.findDifferentPoint(pts, pt0);\n\t\tvar e = graph.findEdgeInSameDirection(pt0, pt1);\n\t\tvar de = graph.findEdgeEnd(e);\n\t\tvar intDe = null;\n\t\tif (de.getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) {\n\t\t\tintDe = de;\n\t\t} else if (de.getSym().getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) {\n\t\t\tintDe = de.getSym();\n\t\t}\n\t\tAssert.isTrue(intDe !== null, \"unable to find dirEdge with Interior on RHS\");\n\t\tthis.visitLinkedDirectedEdges(intDe);\n\t},\n\tvisitShellInteriors: function visitShellInteriors(g, graph) {\n\t\tif (g instanceof Polygon) {\n\t\t\tvar p = g;\n\t\t\tthis.visitInteriorRing(p.getExteriorRing(), graph);\n\t\t}\n\t\tif (g instanceof MultiPolygon) {\n\t\t\tvar mp = g;\n\t\t\tfor (var i = 0; i < mp.getNumGeometries(); i++) {\n\t\t\t\tvar p = mp.getGeometryN(i);\n\t\t\t\tthis.visitInteriorRing(p.getExteriorRing(), graph);\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this.disconnectedRingcoord;\n\t},\n\tsetInteriorEdgesInResult: function setInteriorEdgesInResult(graph) {\n\t\tfor (var it = graph.getEdgeEnds().iterator(); it.hasNext();) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) {\n\t\t\t\tde.setInResult(true);\n\t\t\t}\n\t\t}\n\t},\n\tvisitLinkedDirectedEdges: function visitLinkedDirectedEdges(start) {\n\t\tvar startDe = start;\n\t\tvar de = start;\n\t\tdo {\n\t\t\tAssert.isTrue(de !== null, \"found null Directed Edge\");\n\t\t\tde.setVisited(true);\n\t\t\tde = de.getNext();\n\t\t} while (de !== startDe);\n\t},\n\tbuildEdgeRings: function buildEdgeRings(dirEdges) {\n\t\tvar edgeRings = new ArrayList();\n\t\tfor (var it = dirEdges.iterator(); it.hasNext();) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.isInResult() && de.getEdgeRing() === null) {\n\t\t\t\tvar er = new MaximalEdgeRing(de, this.geometryFactory);\n\t\t\t\ter.linkDirectedEdgesForMinimalEdgeRings();\n\t\t\t\tvar minEdgeRings = er.buildMinimalRings();\n\t\t\t\tedgeRings.addAll(minEdgeRings);\n\t\t\t}\n\t\t}\n\t\treturn edgeRings;\n\t},\n\thasUnvisitedShellEdge: function hasUnvisitedShellEdge(edgeRings) {\n\t\tfor (var i = 0; i < edgeRings.size(); i++) {\n\t\t\tvar er = edgeRings.get(i);\n\t\t\tif (er.isHole()) continue;\n\t\t\tvar edges = er.getEdges();\n\t\t\tvar de = edges.get(0);\n\t\t\tif (de.getLabel().getLocation(0, Position.RIGHT) !== Location.INTERIOR) continue;\n\t\t\tfor (var j = 0; j < edges.size(); j++) {\n\t\t\t\tde = edges.get(j);\n\t\t\t\tif (!de.isVisited()) {\n\t\t\t\t\tthis.disconnectedRingcoord = de.getCoordinate();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tisInteriorsConnected: function isInteriorsConnected() {\n\t\tvar splitEdges = new ArrayList();\n\t\tthis.geomGraph.computeSplitEdges(splitEdges);\n\t\tvar graph = new PlanarGraph(new OverlayNodeFactory());\n\t\tgraph.addEdges(splitEdges);\n\t\tthis.setInteriorEdgesInResult(graph);\n\t\tgraph.linkResultDirectedEdges();\n\t\tvar edgeRings = this.buildEdgeRings(graph.getEdgeEnds());\n\t\tthis.visitShellInteriors(this.geomGraph.getGeometry(), graph);\n\t\treturn !this.hasUnvisitedShellEdge(edgeRings);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ConnectedInteriorTester;\n\t}\n});\nConnectedInteriorTester.findDifferentPoint = function (coord, pt) {\n\tfor (var i = 0; i < coord.length; i++) {\n\t\tif (!coord[i].equals(pt)) return coord[i];\n\t}\n\treturn null;\n};\n\nfunction EdgeEndBuilder() {}\nextend(EdgeEndBuilder.prototype, {\n\tcreateEdgeEndForNext: function createEdgeEndForNext(edge, l, eiCurr, eiNext) {\n\t\tvar iNext = eiCurr.segmentIndex + 1;\n\t\tif (iNext >= edge.getNumPoints() && eiNext === null) return null;\n\t\tvar pNext = edge.getCoordinate(iNext);\n\t\tif (eiNext !== null && eiNext.segmentIndex === eiCurr.segmentIndex) pNext = eiNext.coord;\n\t\tvar e = new EdgeEnd(edge, eiCurr.coord, pNext, new Label(edge.getLabel()));\n\t\tl.add(e);\n\t},\n\tcreateEdgeEndForPrev: function createEdgeEndForPrev(edge, l, eiCurr, eiPrev) {\n\t\tvar iPrev = eiCurr.segmentIndex;\n\t\tif (eiCurr.dist === 0.0) {\n\t\t\tif (iPrev === 0) return null;\n\t\t\tiPrev--;\n\t\t}\n\t\tvar pPrev = edge.getCoordinate(iPrev);\n\t\tif (eiPrev !== null && eiPrev.segmentIndex >= iPrev) pPrev = eiPrev.coord;\n\t\tvar label = new Label(edge.getLabel());\n\t\tlabel.flip();\n\t\tvar e = new EdgeEnd(edge, eiCurr.coord, pPrev, label);\n\t\tl.add(e);\n\t},\n\tcomputeEdgeEnds: function computeEdgeEnds() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar edges = arguments[0];\n\t\t\tvar l = new ArrayList();\n\t\t\tfor (var i = edges; i.hasNext();) {\n\t\t\t\tvar e = i.next();\n\t\t\t\tthis.computeEdgeEnds(e, l);\n\t\t\t}\n\t\t\treturn l;\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar edge = arguments[0],\n\t\t\t    _l = arguments[1];\n\t\t\tvar eiList = edge.getEdgeIntersectionList();\n\t\t\teiList.addEndpoints();\n\t\t\tvar it = eiList.iterator();\n\t\t\tvar eiPrev = null;\n\t\t\tvar eiCurr = null;\n\t\t\tif (!it.hasNext()) return null;\n\t\t\tvar eiNext = it.next();\n\t\t\tdo {\n\t\t\t\teiPrev = eiCurr;\n\t\t\t\teiCurr = eiNext;\n\t\t\t\teiNext = null;\n\t\t\t\tif (it.hasNext()) eiNext = it.next();\n\t\t\t\tif (eiCurr !== null) {\n\t\t\t\t\tthis.createEdgeEndForPrev(edge, _l, eiCurr, eiPrev);\n\t\t\t\t\tthis.createEdgeEndForNext(edge, _l, eiCurr, eiNext);\n\t\t\t\t}\n\t\t\t} while (eiCurr !== null);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EdgeEndBuilder;\n\t}\n});\n\nfunction EdgeEndBundle() {\n\tthis.edgeEnds = new ArrayList();\n\tif (arguments.length === 1) {\n\t\tvar e = arguments[0];\n\t\tEdgeEndBundle.call(this, null, e);\n\t} else if (arguments.length === 2) {\n\t\tvar boundaryNodeRule = arguments[0],\n\t\t    _e = arguments[1];\n\t\tEdgeEnd.call(this, _e.getEdge(), _e.getCoordinate(), _e.getDirectedCoordinate(), new Label(_e.getLabel()));\n\t\tthis.insert(_e);\n\t}\n}\ninherits(EdgeEndBundle, EdgeEnd);\nextend(EdgeEndBundle.prototype, {\n\tinsert: function insert(e) {\n\t\tthis.edgeEnds.add(e);\n\t},\n\tprint: function print(out) {\n\t\tout.println(\"EdgeEndBundle--> Label: \" + this.label);\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar ee = it.next();\n\t\t\tee.print(out);\n\t\t\tout.println();\n\t\t}\n\t},\n\titerator: function iterator() {\n\t\treturn this.edgeEnds.iterator();\n\t},\n\tgetEdgeEnds: function getEdgeEnds() {\n\t\treturn this.edgeEnds;\n\t},\n\tcomputeLabelOn: function computeLabelOn(geomIndex, boundaryNodeRule) {\n\t\tvar boundaryCount = 0;\n\t\tvar foundInterior = false;\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\tvar loc = e.getLabel().getLocation(geomIndex);\n\t\t\tif (loc === Location.BOUNDARY) boundaryCount++;\n\t\t\tif (loc === Location.INTERIOR) foundInterior = true;\n\t\t}\n\t\tvar loc = Location.NONE;\n\t\tif (foundInterior) loc = Location.INTERIOR;\n\t\tif (boundaryCount > 0) {\n\t\t\tloc = GeometryGraph.determineBoundary(boundaryNodeRule, boundaryCount);\n\t\t}\n\t\tthis.label.setLocation(geomIndex, loc);\n\t},\n\tcomputeLabelSide: function computeLabelSide(geomIndex, side) {\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\tif (e.getLabel().isArea()) {\n\t\t\t\tvar loc = e.getLabel().getLocation(geomIndex, side);\n\t\t\t\tif (loc === Location.INTERIOR) {\n\t\t\t\t\tthis.label.setLocation(geomIndex, side, Location.INTERIOR);\n\t\t\t\t\treturn null;\n\t\t\t\t} else if (loc === Location.EXTERIOR) this.label.setLocation(geomIndex, side, Location.EXTERIOR);\n\t\t\t}\n\t\t}\n\t},\n\tgetLabel: function getLabel() {\n\t\treturn this.label;\n\t},\n\tcomputeLabelSides: function computeLabelSides(geomIndex) {\n\t\tthis.computeLabelSide(geomIndex, Position.LEFT);\n\t\tthis.computeLabelSide(geomIndex, Position.RIGHT);\n\t},\n\tupdateIM: function updateIM(im) {\n\t\tEdge.updateIM(this.label, im);\n\t},\n\tcomputeLabel: function computeLabel(boundaryNodeRule) {\n\t\tvar isArea = false;\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\tif (e.getLabel().isArea()) isArea = true;\n\t\t}\n\t\tif (isArea) this.label = new Label(Location.NONE, Location.NONE, Location.NONE);else this.label = new Label(Location.NONE);\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tthis.computeLabelOn(i, boundaryNodeRule);\n\t\t\tif (isArea) this.computeLabelSides(i);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EdgeEndBundle;\n\t}\n});\n\nfunction EdgeEndBundleStar() {\n\tEdgeEndStar.apply(this);\n}\ninherits(EdgeEndBundleStar, EdgeEndStar);\nextend(EdgeEndBundleStar.prototype, {\n\tupdateIM: function updateIM(im) {\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar esb = it.next();\n\t\t\tesb.updateIM(im);\n\t\t}\n\t},\n\tinsert: function insert(e) {\n\t\tvar eb = this.edgeMap.get(e);\n\t\tif (eb === null) {\n\t\t\teb = new EdgeEndBundle(e);\n\t\t\tthis.insertEdgeEnd(e, eb);\n\t\t} else {\n\t\t\teb.insert(e);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EdgeEndBundleStar;\n\t}\n});\n\nfunction RelateNode() {\n\tvar coord = arguments[0],\n\t    edges = arguments[1];\n\tNode.call(this, coord, edges);\n}\ninherits(RelateNode, Node);\nextend(RelateNode.prototype, {\n\tupdateIMFromEdges: function updateIMFromEdges(im) {\n\t\tthis.edges.updateIM(im);\n\t},\n\tcomputeIM: function computeIM(im) {\n\t\tim.setAtLeastIfValid(this.label.getLocation(0), this.label.getLocation(1), 0);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn RelateNode;\n\t}\n});\n\nfunction RelateNodeFactory() {\n\tNodeFactory.apply(this);\n}\ninherits(RelateNodeFactory, NodeFactory);\nextend(RelateNodeFactory.prototype, {\n\tcreateNode: function createNode(coord) {\n\t\treturn new RelateNode(coord, new EdgeEndBundleStar());\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn RelateNodeFactory;\n\t}\n});\n\nfunction RelateNodeGraph() {\n\tthis.nodes = new NodeMap(new RelateNodeFactory());\n}\nextend(RelateNodeGraph.prototype, {\n\tinsertEdgeEnds: function insertEdgeEnds(ee) {\n\t\tfor (var i = ee.iterator(); i.hasNext();) {\n\t\t\tvar e = i.next();\n\t\t\tthis.nodes.add(e);\n\t\t}\n\t},\n\tgetNodeIterator: function getNodeIterator() {\n\t\treturn this.nodes.iterator();\n\t},\n\tcopyNodesAndLabels: function copyNodesAndLabels(geomGraph, argIndex) {\n\t\tfor (var nodeIt = geomGraph.getNodeIterator(); nodeIt.hasNext();) {\n\t\t\tvar graphNode = nodeIt.next();\n\t\t\tvar newNode = this.nodes.addNode(graphNode.getCoordinate());\n\t\t\tnewNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n\t\t}\n\t},\n\tbuild: function build(geomGraph) {\n\t\tthis.computeIntersectionNodes(geomGraph, 0);\n\t\tthis.copyNodesAndLabels(geomGraph, 0);\n\t\tvar eeBuilder = new EdgeEndBuilder();\n\t\tvar eeList = eeBuilder.computeEdgeEnds(geomGraph.getEdgeIterator());\n\t\tthis.insertEdgeEnds(eeList);\n\t},\n\tcomputeIntersectionNodes: function computeIntersectionNodes(geomGraph, argIndex) {\n\t\tfor (var edgeIt = geomGraph.getEdgeIterator(); edgeIt.hasNext();) {\n\t\t\tvar e = edgeIt.next();\n\t\t\tvar eLoc = e.getLabel().getLocation(argIndex);\n\t\t\tfor (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext();) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tvar n = this.nodes.addNode(ei.coord);\n\t\t\t\tif (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex);else {\n\t\t\t\t\tif (n.getLabel().isNull(argIndex)) n.setLabel(argIndex, Location.INTERIOR);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn RelateNodeGraph;\n\t}\n});\n\nfunction ConsistentAreaTester() {\n\tthis.li = new RobustLineIntersector();\n\tthis.geomGraph = null;\n\tthis.nodeGraph = new RelateNodeGraph();\n\tthis.invalidPoint = null;\n\tvar geomGraph = arguments[0];\n\tthis.geomGraph = geomGraph;\n}\nextend(ConsistentAreaTester.prototype, {\n\tisNodeEdgeAreaLabelsConsistent: function isNodeEdgeAreaLabelsConsistent() {\n\t\tfor (var nodeIt = this.nodeGraph.getNodeIterator(); nodeIt.hasNext();) {\n\t\t\tvar node = nodeIt.next();\n\t\t\tif (!node.getEdges().isAreaLabelsConsistent(this.geomGraph)) {\n\t\t\t\tthis.invalidPoint = node.getCoordinate().copy();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tgetInvalidPoint: function getInvalidPoint() {\n\t\treturn this.invalidPoint;\n\t},\n\thasDuplicateRings: function hasDuplicateRings() {\n\t\tfor (var nodeIt = this.nodeGraph.getNodeIterator(); nodeIt.hasNext();) {\n\t\t\tvar node = nodeIt.next();\n\t\t\tfor (var i = node.getEdges().iterator(); i.hasNext();) {\n\t\t\t\tvar eeb = i.next();\n\t\t\t\tif (eeb.getEdgeEnds().size() > 1) {\n\t\t\t\t\tthis.invalidPoint = eeb.getEdge().getCoordinate(0);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tisNodeConsistentArea: function isNodeConsistentArea() {\n\t\tvar intersector = this.geomGraph.computeSelfNodes(this.li, true, true);\n\t\tif (intersector.hasProperIntersection()) {\n\t\t\tthis.invalidPoint = intersector.getProperIntersectionPoint();\n\t\t\treturn false;\n\t\t}\n\t\tthis.nodeGraph.build(this.geomGraph);\n\t\treturn this.isNodeEdgeAreaLabelsConsistent();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ConsistentAreaTester;\n\t}\n});\n\nfunction IndexedNestedRingTester() {\n\tthis.graph = null;\n\tthis.rings = new ArrayList();\n\tthis.totalEnv = new Envelope();\n\tthis.index = null;\n\tthis.nestedPt = null;\n\tvar graph = arguments[0];\n\tthis.graph = graph;\n}\nextend(IndexedNestedRingTester.prototype, {\n\tbuildIndex: function buildIndex() {\n\t\tthis.index = new STRtree();\n\t\tfor (var i = 0; i < this.rings.size(); i++) {\n\t\t\tvar ring = this.rings.get(i);\n\t\t\tvar env = ring.getEnvelopeInternal();\n\t\t\tthis.index.insert(env, ring);\n\t\t}\n\t},\n\tgetNestedPoint: function getNestedPoint() {\n\t\treturn this.nestedPt;\n\t},\n\tisNonNested: function isNonNested() {\n\t\tthis.buildIndex();\n\t\tfor (var i = 0; i < this.rings.size(); i++) {\n\t\t\tvar innerRing = this.rings.get(i);\n\t\t\tvar innerRingPts = innerRing.getCoordinates();\n\t\t\tvar results = this.index.query(innerRing.getEnvelopeInternal());\n\t\t\tfor (var j = 0; j < results.size(); j++) {\n\t\t\t\tvar searchRing = results.get(j);\n\t\t\t\tvar searchRingPts = searchRing.getCoordinates();\n\t\t\t\tif (innerRing === searchRing) continue;\n\t\t\t\tif (!innerRing.getEnvelopeInternal().intersects(searchRing.getEnvelopeInternal())) continue;\n\t\t\t\tvar innerRingPt = IsValidOp.findPtNotNode(innerRingPts, searchRing, this.graph);\n\t\t\t\tif (innerRingPt === null) continue;\n\t\t\t\tvar isInside = CGAlgorithms.isPointInRing(innerRingPt, searchRingPts);\n\t\t\t\tif (isInside) {\n\t\t\t\t\tthis.nestedPt = innerRingPt;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tadd: function add(ring) {\n\t\tthis.rings.add(ring);\n\t\tthis.totalEnv.expandToInclude(ring.getEnvelopeInternal());\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn IndexedNestedRingTester;\n\t}\n});\n\nfunction TopologyValidationError() {\n\tthis.errorType = null;\n\tthis.pt = null;\n\tif (arguments.length === 1) {\n\t\tvar errorType = arguments[0];\n\t\tTopologyValidationError.call(this, errorType, null);\n\t} else if (arguments.length === 2) {\n\t\tvar _errorType = arguments[0],\n\t\t    pt = arguments[1];\n\t\tthis.errorType = _errorType;\n\t\tif (pt !== null) this.pt = pt.copy();\n\t}\n}\nextend(TopologyValidationError.prototype, {\n\tgetErrorType: function getErrorType() {\n\t\treturn this.errorType;\n\t},\n\tgetMessage: function getMessage() {\n\t\treturn TopologyValidationError.errMsg[this.errorType];\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this.pt;\n\t},\n\ttoString: function toString() {\n\t\tvar locStr = \"\";\n\t\tif (this.pt !== null) locStr = \" at or near point \" + this.pt;\n\t\treturn this.getMessage() + locStr;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn TopologyValidationError;\n\t}\n});\nTopologyValidationError.ERROR = 0;\nTopologyValidationError.REPEATED_POINT = 1;\nTopologyValidationError.HOLE_OUTSIDE_SHELL = 2;\nTopologyValidationError.NESTED_HOLES = 3;\nTopologyValidationError.DISCONNECTED_INTERIOR = 4;\nTopologyValidationError.SELF_INTERSECTION = 5;\nTopologyValidationError.RING_SELF_INTERSECTION = 6;\nTopologyValidationError.NESTED_SHELLS = 7;\nTopologyValidationError.DUPLICATE_RINGS = 8;\nTopologyValidationError.TOO_FEW_POINTS = 9;\nTopologyValidationError.INVALID_COORDINATE = 10;\nTopologyValidationError.RING_NOT_CLOSED = 11;\nTopologyValidationError.errMsg = [\"Topology Validation Error\", \"Repeated Point\", \"Hole lies outside shell\", \"Holes are nested\", \"Interior is disconnected\", \"Self-intersection\", \"Ring Self-intersection\", \"Nested shells\", \"Duplicate Rings\", \"Too few distinct points in geometry component\", \"Invalid Coordinate\", \"Ring is not closed\"];\n\nfunction IsValidOp() {\n\tthis.parentGeometry = null;\n\tthis.isSelfTouchingRingFormingHoleValid = false;\n\tthis.validErr = null;\n\tvar parentGeometry = arguments[0];\n\tthis.parentGeometry = parentGeometry;\n}\nextend(IsValidOp.prototype, {\n\tcheckInvalidCoordinates: function checkInvalidCoordinates() {\n\t\tif (arguments[0] instanceof Array) {\n\t\t\tvar coords = arguments[0];\n\t\t\tfor (var i = 0; i < coords.length; i++) {\n\t\t\t\tif (!IsValidOp.isValid(coords[i])) {\n\t\t\t\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.INVALID_COORDINATE, coords[i]);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Polygon) {\n\t\t\tvar poly = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(poly.getExteriorRing().getCoordinates());\n\t\t\tif (this.validErr !== null) return null;\n\t\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\t\t\tthis.checkInvalidCoordinates(poly.getInteriorRingN(i).getCoordinates());\n\t\t\t\tif (this.validErr !== null) return null;\n\t\t\t}\n\t\t}\n\t},\n\tcheckHolesNotNested: function checkHolesNotNested(p, graph) {\n\t\tvar nestedTester = new IndexedNestedRingTester(graph);\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar innerHole = p.getInteriorRingN(i);\n\t\t\tnestedTester.add(innerHole);\n\t\t}\n\t\tvar isNonNested = nestedTester.isNonNested();\n\t\tif (!isNonNested) {\n\t\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.NESTED_HOLES, nestedTester.getNestedPoint());\n\t\t}\n\t},\n\tcheckConsistentArea: function checkConsistentArea(graph) {\n\t\tvar cat = new ConsistentAreaTester(graph);\n\t\tvar isValidArea = cat.isNodeConsistentArea();\n\t\tif (!isValidArea) {\n\t\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.SELF_INTERSECTION, cat.getInvalidPoint());\n\t\t\treturn null;\n\t\t}\n\t\tif (cat.hasDuplicateRings()) {\n\t\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.DUPLICATE_RINGS, cat.getInvalidPoint());\n\t\t}\n\t},\n\tisValid: function isValid() {\n\t\tthis.checkValid(this.parentGeometry);\n\t\treturn this.validErr === null;\n\t},\n\tcheckShellInsideHole: function checkShellInsideHole(shell, hole, graph) {\n\t\tvar shellPts = shell.getCoordinates();\n\t\tvar holePts = hole.getCoordinates();\n\t\tvar shellPt = IsValidOp.findPtNotNode(shellPts, hole, graph);\n\t\tif (shellPt !== null) {\n\t\t\tvar insideHole = CGAlgorithms.isPointInRing(shellPt, holePts);\n\t\t\tif (!insideHole) {\n\t\t\t\treturn shellPt;\n\t\t\t}\n\t\t}\n\t\tvar holePt = IsValidOp.findPtNotNode(holePts, shell, graph);\n\t\tif (holePt !== null) {\n\t\t\tvar insideShell = CGAlgorithms.isPointInRing(holePt, shellPts);\n\t\t\tif (insideShell) {\n\t\t\t\treturn holePt;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tAssert.shouldNeverReachHere(\"points in shell and hole appear to be equal\");\n\t\treturn null;\n\t},\n\tcheckNoSelfIntersectingRings: function checkNoSelfIntersectingRings(graph) {\n\t\tfor (var i = graph.getEdgeIterator(); i.hasNext();) {\n\t\t\tvar e = i.next();\n\t\t\tthis.checkNoSelfIntersectingRing(e.getEdgeIntersectionList());\n\t\t\tif (this.validErr !== null) return null;\n\t\t}\n\t},\n\tcheckConnectedInteriors: function checkConnectedInteriors(graph) {\n\t\tvar cit = new ConnectedInteriorTester(graph);\n\t\tif (!cit.isInteriorsConnected()) this.validErr = new TopologyValidationError(TopologyValidationError.DISCONNECTED_INTERIOR, cit.getCoordinate());\n\t},\n\tcheckNoSelfIntersectingRing: function checkNoSelfIntersectingRing(eiList) {\n\t\tvar nodeSet = new TreeSet();\n\t\tvar isFirst = true;\n\t\tfor (var i = eiList.iterator(); i.hasNext();) {\n\t\t\tvar ei = i.next();\n\t\t\tif (isFirst) {\n\t\t\t\tisFirst = false;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (nodeSet.contains(ei.coord)) {\n\t\t\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.RING_SELF_INTERSECTION, ei.coord);\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tnodeSet.add(ei.coord);\n\t\t\t}\n\t\t}\n\t},\n\tcheckHolesInShell: function checkHolesInShell(p, graph) {\n\t\tvar shell = p.getExteriorRing();\n\t\tvar pir = new MCPointInRing(shell);\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar hole = p.getInteriorRingN(i);\n\t\t\tvar holePt = IsValidOp.findPtNotNode(hole.getCoordinates(), shell, graph);\n\t\t\tif (holePt === null) return null;\n\t\t\tvar outside = !pir.isInside(holePt);\n\t\t\tif (outside) {\n\t\t\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.HOLE_OUTSIDE_SHELL, holePt);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tcheckTooFewPoints: function checkTooFewPoints(graph) {\n\t\tif (graph.hasTooFewPoints()) {\n\t\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.TOO_FEW_POINTS, graph.getInvalidPoint());\n\t\t\treturn null;\n\t\t}\n\t},\n\tgetValidationError: function getValidationError() {\n\t\tthis.checkValid(this.parentGeometry);\n\t\treturn this.validErr;\n\t},\n\tcheckValid: function checkValid() {\n\t\tif (arguments[0] instanceof Point) {\n\t\t\tvar _g = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(_g.getCoordinates());\n\t\t} else if (arguments[0] instanceof MultiPoint) {\n\t\t\tvar _g2 = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(_g2.getCoordinates());\n\t\t} else if (arguments[0] instanceof LinearRing) {\n\t\t\tvar _g3 = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(_g3.getCoordinates());\n\t\t\tif (this.validErr !== null) return null;\n\t\t\tthis.checkClosedRing(_g3);\n\t\t\tif (this.validErr !== null) return null;\n\t\t\tvar graph = new GeometryGraph(0, _g3);\n\t\t\tthis.checkTooFewPoints(graph);\n\t\t\tif (this.validErr !== null) return null;\n\t\t\tvar li = new RobustLineIntersector();\n\t\t\tgraph.computeSelfNodes(li, true, true);\n\t\t\tthis.checkNoSelfIntersectingRings(graph);\n\t\t} else if (arguments[0] instanceof LineString) {\n\t\t\tvar _g4 = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(_g4.getCoordinates());\n\t\t\tif (this.validErr !== null) return null;\n\t\t\tvar graph = new GeometryGraph(0, _g4);\n\t\t\tthis.checkTooFewPoints(graph);\n\t\t} else if (arguments[0] instanceof Polygon) {\n\t\t\tvar _g5 = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(_g5);\n\t\t\tif (this.validErr !== null) return null;\n\t\t\tthis.checkClosedRings(_g5);\n\t\t\tif (this.validErr !== null) return null;\n\t\t\tvar graph = new GeometryGraph(0, _g5);\n\t\t\tthis.checkTooFewPoints(graph);\n\t\t\tif (this.validErr !== null) return null;\n\t\t\tthis.checkConsistentArea(graph);\n\t\t\tif (this.validErr !== null) return null;\n\t\t\tif (!this.isSelfTouchingRingFormingHoleValid) {\n\t\t\t\tthis.checkNoSelfIntersectingRings(graph);\n\t\t\t\tif (this.validErr !== null) return null;\n\t\t\t}\n\t\t\tthis.checkHolesInShell(_g5, graph);\n\t\t\tif (this.validErr !== null) return null;\n\t\t\tthis.checkHolesNotNested(_g5, graph);\n\t\t\tif (this.validErr !== null) return null;\n\t\t\tthis.checkConnectedInteriors(graph);\n\t\t} else if (arguments[0] instanceof MultiPolygon) {\n\t\t\tvar _g6 = arguments[0];\n\t\t\tfor (var i = 0; i < _g6.getNumGeometries(); i++) {\n\t\t\t\tvar p = _g6.getGeometryN(i);\n\t\t\t\tthis.checkInvalidCoordinates(p);\n\t\t\t\tif (this.validErr !== null) return null;\n\t\t\t\tthis.checkClosedRings(p);\n\t\t\t\tif (this.validErr !== null) return null;\n\t\t\t}\n\t\t\tvar graph = new GeometryGraph(0, _g6);\n\t\t\tthis.checkTooFewPoints(graph);\n\t\t\tif (this.validErr !== null) return null;\n\t\t\tthis.checkConsistentArea(graph);\n\t\t\tif (this.validErr !== null) return null;\n\t\t\tif (!this.isSelfTouchingRingFormingHoleValid) {\n\t\t\t\tthis.checkNoSelfIntersectingRings(graph);\n\t\t\t\tif (this.validErr !== null) return null;\n\t\t\t}\n\t\t\tfor (var i = 0; i < _g6.getNumGeometries(); i++) {\n\t\t\t\tvar p = _g6.getGeometryN(i);\n\t\t\t\tthis.checkHolesInShell(p, graph);\n\t\t\t\tif (this.validErr !== null) return null;\n\t\t\t}\n\t\t\tfor (var i = 0; i < _g6.getNumGeometries(); i++) {\n\t\t\t\tvar p = _g6.getGeometryN(i);\n\t\t\t\tthis.checkHolesNotNested(p, graph);\n\t\t\t\tif (this.validErr !== null) return null;\n\t\t\t}\n\t\t\tthis.checkShellsNotNested(_g6, graph);\n\t\t\tif (this.validErr !== null) return null;\n\t\t\tthis.checkConnectedInteriors(graph);\n\t\t} else if (arguments[0] instanceof GeometryCollection) {\n\t\t\tvar gc = arguments[0];\n\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\tvar g = gc.getGeometryN(i);\n\t\t\t\tthis.checkValid(g);\n\t\t\t\tif (this.validErr !== null) return null;\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tvar _g7 = arguments[0];\n\t\t\tthis.validErr = null;\n\t\t\tif (_g7.isEmpty()) return null;\n\t\t\tif (_g7 instanceof Point) this.checkValid(_g7);else if (_g7 instanceof MultiPoint) this.checkValid(_g7);else if (_g7 instanceof LinearRing) this.checkValid(_g7);else if (_g7 instanceof LineString) this.checkValid(_g7);else if (_g7 instanceof Polygon) this.checkValid(_g7);else if (_g7 instanceof MultiPolygon) this.checkValid(_g7);else if (_g7 instanceof GeometryCollection) this.checkValid(_g7);else throw new UnsupportedOperationException(_g7.getClass().getName());\n\t\t}\n\t},\n\tsetSelfTouchingRingFormingHoleValid: function setSelfTouchingRingFormingHoleValid(isValid) {\n\t\tthis.isSelfTouchingRingFormingHoleValid = isValid;\n\t},\n\tcheckShellNotNested: function checkShellNotNested(shell, p, graph) {\n\t\tvar shellPts = shell.getCoordinates();\n\t\tvar polyShell = p.getExteriorRing();\n\t\tvar polyPts = polyShell.getCoordinates();\n\t\tvar shellPt = IsValidOp.findPtNotNode(shellPts, polyShell, graph);\n\t\tif (shellPt === null) return null;\n\t\tvar insidePolyShell = CGAlgorithms.isPointInRing(shellPt, polyPts);\n\t\tif (!insidePolyShell) return null;\n\t\tif (p.getNumInteriorRing() <= 0) {\n\t\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.NESTED_SHELLS, shellPt);\n\t\t\treturn null;\n\t\t}\n\t\tvar badNestedPt = null;\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar hole = p.getInteriorRingN(i);\n\t\t\tbadNestedPt = this.checkShellInsideHole(shell, hole, graph);\n\t\t\tif (badNestedPt === null) return null;\n\t\t}\n\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.NESTED_SHELLS, badNestedPt);\n\t},\n\tcheckClosedRings: function checkClosedRings(poly) {\n\t\tthis.checkClosedRing(poly.getExteriorRing());\n\t\tif (this.validErr !== null) return null;\n\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\t\tthis.checkClosedRing(poly.getInteriorRingN(i));\n\t\t\tif (this.validErr !== null) return null;\n\t\t}\n\t},\n\tcheckClosedRing: function checkClosedRing(ring) {\n\t\tif (!ring.isClosed()) {\n\t\t\tvar pt = null;\n\t\t\tif (ring.getNumPoints() >= 1) pt = ring.getCoordinateN(0);\n\t\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.RING_NOT_CLOSED, pt);\n\t\t}\n\t},\n\tcheckShellsNotNested: function checkShellsNotNested(mp, graph) {\n\t\tfor (var i = 0; i < mp.getNumGeometries(); i++) {\n\t\t\tvar p = mp.getGeometryN(i);\n\t\t\tvar shell = p.getExteriorRing();\n\t\t\tfor (var j = 0; j < mp.getNumGeometries(); j++) {\n\t\t\t\tif (i === j) continue;\n\t\t\t\tvar p2 = mp.getGeometryN(j);\n\t\t\t\tthis.checkShellNotNested(shell, p2, graph);\n\t\t\t\tif (this.validErr !== null) return null;\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn IsValidOp;\n\t}\n});\nIsValidOp.findPtNotNode = function (testCoords, searchRing, graph) {\n\tvar searchEdge = graph.findEdge(searchRing);\n\tvar eiList = searchEdge.getEdgeIntersectionList();\n\tfor (var i = 0; i < testCoords.length; i++) {\n\t\tvar pt = testCoords[i];\n\t\tif (!eiList.isIntersection(pt)) return pt;\n\t}\n\treturn null;\n};\nIsValidOp.isValid = function () {\n\tif (arguments[0] instanceof Geometry) {\n\t\tvar geom = arguments[0];\n\t\tvar isValidOp = new IsValidOp(geom);\n\t\treturn isValidOp.isValid();\n\t} else if (arguments[0] instanceof Coordinate) {\n\t\tvar coord = arguments[0];\n\t\tif (Double.isNaN(coord.x)) return false;\n\t\tif (Double.isInfinite(coord.x)) return false;\n\t\tif (Double.isNaN(coord.y)) return false;\n\t\tif (Double.isInfinite(coord.y)) return false;\n\t\treturn true;\n\t}\n};\n\nfunction EdgeRing$1() {\n\tthis.factory = null;\n\tthis.deList = new ArrayList();\n\tthis.lowestEdge = null;\n\tthis.ring = null;\n\tthis.ringPts = null;\n\tthis.holes = null;\n\tthis.shell = null;\n\tthis._isHole = null;\n\tthis._isProcessed = false;\n\tthis._isIncludedSet = false;\n\tthis._isIncluded = false;\n\tvar factory = arguments[0];\n\tthis.factory = factory;\n}\nextend(EdgeRing$1.prototype, {\n\tisIncluded: function isIncluded() {\n\t\treturn this._isIncluded;\n\t},\n\tgetCoordinates: function getCoordinates() {\n\t\tif (this.ringPts === null) {\n\t\t\tvar coordList = new CoordinateList();\n\t\t\tfor (var i = this.deList.iterator(); i.hasNext();) {\n\t\t\t\tvar de = i.next();\n\t\t\t\tvar edge = de.getEdge();\n\t\t\t\tEdgeRing$1.addEdge(edge.getLine().getCoordinates(), de.getEdgeDirection(), coordList);\n\t\t\t}\n\t\t\tthis.ringPts = coordList.toCoordinateArray();\n\t\t}\n\t\treturn this.ringPts;\n\t},\n\tisIncludedSet: function isIncludedSet() {\n\t\treturn this._isIncludedSet;\n\t},\n\tisValid: function isValid() {\n\t\tthis.getCoordinates();\n\t\tif (this.ringPts.length <= 3) return false;\n\t\tthis.getRing();\n\t\treturn IsValidOp.isValid(this.ring);\n\t},\n\tbuild: function build(startDE) {\n\t\tvar de = startDE;\n\t\tdo {\n\t\t\tthis.add(de);\n\t\t\tde.setRing(this);\n\t\t\tde = de.getNext();\n\t\t\tAssert.isTrue(de !== null, \"found null DE in ring\");\n\t\t\tAssert.isTrue(de === startDE || !de.isInRing(), \"found DE already in ring\");\n\t\t} while (de !== startDE);\n\t},\n\tisOuterHole: function isOuterHole() {\n\t\tif (!this._isHole) return false;\n\t\treturn !this.hasShell();\n\t},\n\tgetPolygon: function getPolygon() {\n\t\tvar holeLR = null;\n\t\tif (this.holes !== null) {\n\t\t\tholeLR = new Array(this.holes.size()).fill(null);\n\t\t\tfor (var i = 0; i < this.holes.size(); i++) {\n\t\t\t\tholeLR[i] = this.holes.get(i);\n\t\t\t}\n\t\t}\n\t\tvar poly = this.factory.createPolygon(this.ring, holeLR);\n\t\treturn poly;\n\t},\n\tisHole: function isHole() {\n\t\treturn this._isHole;\n\t},\n\tisProcessed: function isProcessed() {\n\t\treturn this._isProcessed;\n\t},\n\taddHole: function addHole() {\n\t\tif (arguments[0] instanceof LinearRing) {\n\t\t\tvar _hole = arguments[0];\n\t\t\tif (this.holes === null) this.holes = new ArrayList();\n\t\t\tthis.holes.add(_hole);\n\t\t} else if (arguments[0] instanceof EdgeRing$1) {\n\t\t\tvar holeER = arguments[0];\n\t\t\tholeER.setShell(this);\n\t\t\tvar hole = holeER.getRing();\n\t\t\tif (this.holes === null) this.holes = new ArrayList();\n\t\t\tthis.holes.add(hole);\n\t\t}\n\t},\n\tsetIncluded: function setIncluded(isIncluded) {\n\t\tthis._isIncluded = isIncluded;\n\t\tthis._isIncludedSet = true;\n\t},\n\tgetOuterHole: function getOuterHole() {\n\t\tif (this.isHole()) return null;\n\t\tfor (var i = 0; i < this.deList.size(); i++) {\n\t\t\tvar de = this.deList.get(i);\n\t\t\tvar adjRing = de.getSym().getRing();\n\t\t\tif (adjRing.isOuterHole()) return adjRing;\n\t\t}\n\t\treturn null;\n\t},\n\tcomputeHole: function computeHole() {\n\t\tvar ring = this.getRing();\n\t\tthis._isHole = CGAlgorithms.isCCW(ring.getCoordinates());\n\t},\n\thasShell: function hasShell() {\n\t\treturn this.shell !== null;\n\t},\n\tisOuterShell: function isOuterShell() {\n\t\treturn this.getOuterHole() !== null;\n\t},\n\tgetLineString: function getLineString() {\n\t\tthis.getCoordinates();\n\t\treturn this.factory.createLineString(this.ringPts);\n\t},\n\ttoString: function toString() {\n\t\treturn WKTWriter.toLineString(new CoordinateArraySequence(this.getCoordinates()));\n\t},\n\tgetShell: function getShell() {\n\t\tif (this.isHole()) return this.shell;\n\t\treturn this;\n\t},\n\tadd: function add(de) {\n\t\tthis.deList.add(de);\n\t},\n\tgetRing: function getRing() {\n\t\tif (this.ring !== null) return this.ring;\n\t\tthis.getCoordinates();\n\t\tif (this.ringPts.length < 3) System.out.println(this.ringPts);\n\t\ttry {\n\t\t\tthis.ring = this.factory.createLinearRing(this.ringPts);\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof Exception) {\n\t\t\t\tSystem.out.println(this.ringPts);\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t\treturn this.ring;\n\t},\n\tupdateIncluded: function updateIncluded() {\n\t\tif (this.isHole()) return null;\n\t\tfor (var i = 0; i < this.deList.size(); i++) {\n\t\t\tvar de = this.deList.get(i);\n\t\t\tvar adjShell = de.getSym().getRing().getShell();\n\t\t\tif (adjShell !== null && adjShell.isIncludedSet()) {\n\t\t\t\tthis.setIncluded(!adjShell.isIncluded());\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tsetShell: function setShell(shell) {\n\t\tthis.shell = shell;\n\t},\n\tsetProcessed: function setProcessed(isProcessed) {\n\t\tthis._isProcessed = isProcessed;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EdgeRing$1;\n\t}\n});\nEdgeRing$1.findDirEdgesInRing = function (startDE) {\n\tvar de = startDE;\n\tvar edges = new ArrayList();\n\tdo {\n\t\tedges.add(de);\n\t\tde = de.getNext();\n\t\tAssert.isTrue(de !== null, \"found null DE in ring\");\n\t\tAssert.isTrue(de === startDE || !de.isInRing(), \"found DE already in ring\");\n\t} while (de !== startDE);\n\treturn edges;\n};\nEdgeRing$1.addEdge = function (coords, isForward, coordList) {\n\tif (isForward) {\n\t\tfor (var i = 0; i < coords.length; i++) {\n\t\t\tcoordList.add(coords[i], false);\n\t\t}\n\t} else {\n\t\tfor (var i = coords.length - 1; i >= 0; i--) {\n\t\t\tcoordList.add(coords[i], false);\n\t\t}\n\t}\n};\nEdgeRing$1.findEdgeRingContaining = function (testEr, shellList) {\n\tvar testRing = testEr.getRing();\n\tvar testEnv = testRing.getEnvelopeInternal();\n\tvar testPt = testRing.getCoordinateN(0);\n\tvar minShell = null;\n\tvar minShellEnv = null;\n\tfor (var it = shellList.iterator(); it.hasNext();) {\n\t\tvar tryShell = it.next();\n\t\tvar tryShellRing = tryShell.getRing();\n\t\tvar tryShellEnv = tryShellRing.getEnvelopeInternal();\n\t\tif (tryShellEnv.equals(testEnv)) continue;\n\t\tif (!tryShellEnv.contains(testEnv)) continue;\n\t\ttestPt = CoordinateArrays.ptNotInList(testRing.getCoordinates(), tryShellRing.getCoordinates());\n\t\tvar isContained = false;\n\t\tif (CGAlgorithms.isPointInRing(testPt, tryShellRing.getCoordinates())) isContained = true;\n\t\tif (isContained) {\n\t\t\tif (minShell === null || minShellEnv.contains(tryShellEnv)) {\n\t\t\t\tminShell = tryShell;\n\t\t\t\tminShellEnv = minShell.getRing().getEnvelopeInternal();\n\t\t\t}\n\t\t}\n\t}\n\treturn minShell;\n};\nfunction EnvelopeComparator() {}\nextend(EnvelopeComparator.prototype, {\n\tcompare: function compare(obj0, obj1) {\n\t\tvar r0 = obj0;\n\t\tvar r1 = obj1;\n\t\treturn r0.getRing().getEnvelope().compareTo(r1.getRing().getEnvelope());\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EnvelopeComparator;\n\t}\n});\nEdgeRing$1.EnvelopeComparator = EnvelopeComparator;\n\nfunction PolygonizeGraph() {\n\tPlanarGraph$1.apply(this);\n\tthis.factory = null;\n\tvar factory = arguments[0];\n\tthis.factory = factory;\n}\ninherits(PolygonizeGraph, PlanarGraph$1);\nextend(PolygonizeGraph.prototype, {\n\tfindEdgeRing: function findEdgeRing(startDE) {\n\t\tvar er = new EdgeRing$1(this.factory);\n\t\ter.build(startDE);\n\t\treturn er;\n\t},\n\tcomputeDepthParity: function computeDepthParity() {\n\t\tif (arguments.length === 0) {\n\t\t\twhile (true) {\n\t\t\t\tvar de = null;\n\t\t\t\tif (de === null) return null;\n\t\t\t\tthis.computeDepthParity(de);\n\t\t\t}\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar _de = arguments[0];\n\t\t}\n\t},\n\tcomputeNextCWEdges: function computeNextCWEdges() {\n\t\tfor (var iNode = this.nodeIterator(); iNode.hasNext();) {\n\t\t\tvar node = iNode.next();\n\t\t\tPolygonizeGraph.computeNextCWEdges(node);\n\t\t}\n\t},\n\taddEdge: function addEdge(line) {\n\t\tif (line.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\tvar linePts = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n\t\tif (linePts.length < 2) {\n\t\t\treturn null;\n\t\t}\n\t\tvar startPt = linePts[0];\n\t\tvar endPt = linePts[linePts.length - 1];\n\t\tvar nStart = this.getNode(startPt);\n\t\tvar nEnd = this.getNode(endPt);\n\t\tvar de0 = new PolygonizeDirectedEdge(nStart, nEnd, linePts[1], true);\n\t\tvar de1 = new PolygonizeDirectedEdge(nEnd, nStart, linePts[linePts.length - 2], false);\n\t\tvar edge = new PolygonizeEdge(line);\n\t\tedge.setDirectedEdges(de0, de1);\n\t\tthis.add(edge);\n\t},\n\tdeleteCutEdges: function deleteCutEdges() {\n\t\tthis.computeNextCWEdges();\n\t\tPolygonizeGraph.findLabeledEdgeRings(this.dirEdges);\n\t\tvar cutLines = new ArrayList();\n\t\tfor (var i = this.dirEdges.iterator(); i.hasNext();) {\n\t\t\tvar de = i.next();\n\t\t\tif (de.isMarked()) continue;\n\t\t\tvar sym = de.getSym();\n\t\t\tif (de.getLabel() === sym.getLabel()) {\n\t\t\t\tde.setMarked(true);\n\t\t\t\tsym.setMarked(true);\n\t\t\t\tvar e = de.getEdge();\n\t\t\t\tcutLines.add(e.getLine());\n\t\t\t}\n\t\t}\n\t\treturn cutLines;\n\t},\n\tgetEdgeRings: function getEdgeRings() {\n\t\tthis.computeNextCWEdges();\n\t\tPolygonizeGraph.label(this.dirEdges, -1);\n\t\tvar maximalRings = PolygonizeGraph.findLabeledEdgeRings(this.dirEdges);\n\t\tthis.convertMaximalToMinimalEdgeRings(maximalRings);\n\t\tvar edgeRingList = new ArrayList();\n\t\tfor (var i = this.dirEdges.iterator(); i.hasNext();) {\n\t\t\tvar de = i.next();\n\t\t\tif (de.isMarked()) continue;\n\t\t\tif (de.isInRing()) continue;\n\t\t\tvar er = this.findEdgeRing(de);\n\t\t\tedgeRingList.add(er);\n\t\t}\n\t\treturn edgeRingList;\n\t},\n\tgetNode: function getNode(pt) {\n\t\tvar node = this.findNode(pt);\n\t\tif (node === null) {\n\t\t\tnode = new Node$3(pt);\n\t\t\tthis.add(node);\n\t\t}\n\t\treturn node;\n\t},\n\tconvertMaximalToMinimalEdgeRings: function convertMaximalToMinimalEdgeRings(ringEdges) {\n\t\tfor (var i = ringEdges.iterator(); i.hasNext();) {\n\t\t\tvar de = i.next();\n\t\t\tvar label = de.getLabel();\n\t\t\tvar intNodes = PolygonizeGraph.findIntersectionNodes(de, label);\n\t\t\tif (intNodes === null) continue;\n\t\t\tfor (var iNode = intNodes.iterator(); iNode.hasNext();) {\n\t\t\t\tvar node = iNode.next();\n\t\t\t\tPolygonizeGraph.computeNextCCWEdges(node, label);\n\t\t\t}\n\t\t}\n\t},\n\tdeleteDangles: function deleteDangles() {\n\t\tvar nodesToRemove = this.findNodesOfDegree(1);\n\t\tvar dangleLines = new HashSet();\n\t\tvar nodeStack = new Stack();\n\t\tfor (var i = nodesToRemove.iterator(); i.hasNext();) {\n\t\t\tnodeStack.push(i.next());\n\t\t}\n\t\twhile (!nodeStack.isEmpty()) {\n\t\t\tvar node = nodeStack.pop();\n\t\t\tPolygonizeGraph.deleteAllEdges(node);\n\t\t\tvar nodeOutEdges = node.getOutEdges().getEdges();\n\t\t\tfor (var i = nodeOutEdges.iterator(); i.hasNext();) {\n\t\t\t\tvar de = i.next();\n\t\t\t\tde.setMarked(true);\n\t\t\t\tvar sym = de.getSym();\n\t\t\t\tif (sym !== null) sym.setMarked(true);\n\t\t\t\tvar e = de.getEdge();\n\t\t\t\tdangleLines.add(e.getLine());\n\t\t\t\tvar toNode = de.getToNode();\n\t\t\t\tif (PolygonizeGraph.getDegreeNonDeleted(toNode) === 1) nodeStack.push(toNode);\n\t\t\t}\n\t\t}\n\t\treturn dangleLines;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PolygonizeGraph;\n\t}\n});\nPolygonizeGraph.findLabeledEdgeRings = function (dirEdges) {\n\tvar edgeRingStarts = new ArrayList();\n\tvar currLabel = 1;\n\tfor (var i = dirEdges.iterator(); i.hasNext();) {\n\t\tvar de = i.next();\n\t\tif (de.isMarked()) continue;\n\t\tif (de.getLabel() >= 0) continue;\n\t\tedgeRingStarts.add(de);\n\t\tvar edges = EdgeRing$1.findDirEdgesInRing(de);\n\t\tPolygonizeGraph.label(edges, currLabel);\n\t\tcurrLabel++;\n\t}\n\treturn edgeRingStarts;\n};\nPolygonizeGraph.getDegreeNonDeleted = function (node) {\n\tvar edges = node.getOutEdges().getEdges();\n\tvar degree = 0;\n\tfor (var i = edges.iterator(); i.hasNext();) {\n\t\tvar de = i.next();\n\t\tif (!de.isMarked()) degree++;\n\t}\n\treturn degree;\n};\nPolygonizeGraph.deleteAllEdges = function (node) {\n\tvar edges = node.getOutEdges().getEdges();\n\tfor (var i = edges.iterator(); i.hasNext();) {\n\t\tvar de = i.next();\n\t\tde.setMarked(true);\n\t\tvar sym = de.getSym();\n\t\tif (sym !== null) sym.setMarked(true);\n\t}\n};\nPolygonizeGraph.label = function (dirEdges, label) {\n\tfor (var i = dirEdges.iterator(); i.hasNext();) {\n\t\tvar de = i.next();\n\t\tde.setLabel(label);\n\t}\n};\nPolygonizeGraph.computeNextCWEdges = function (node) {\n\tvar deStar = node.getOutEdges();\n\tvar startDE = null;\n\tvar prevDE = null;\n\tfor (var i = deStar.getEdges().iterator(); i.hasNext();) {\n\t\tvar outDE = i.next();\n\t\tif (outDE.isMarked()) continue;\n\t\tif (startDE === null) startDE = outDE;\n\t\tif (prevDE !== null) {\n\t\t\tvar sym = prevDE.getSym();\n\t\t\tsym.setNext(outDE);\n\t\t}\n\t\tprevDE = outDE;\n\t}\n\tif (prevDE !== null) {\n\t\tvar sym = prevDE.getSym();\n\t\tsym.setNext(startDE);\n\t}\n};\nPolygonizeGraph.computeNextCCWEdges = function (node, label) {\n\tvar deStar = node.getOutEdges();\n\tvar firstOutDE = null;\n\tvar prevInDE = null;\n\tvar edges = deStar.getEdges();\n\tfor (var i = edges.size() - 1; i >= 0; i--) {\n\t\tvar de = edges.get(i);\n\t\tvar sym = de.getSym();\n\t\tvar outDE = null;\n\t\tif (de.getLabel() === label) outDE = de;\n\t\tvar inDE = null;\n\t\tif (sym.getLabel() === label) inDE = sym;\n\t\tif (outDE === null && inDE === null) continue;\n\t\tif (inDE !== null) {\n\t\t\tprevInDE = inDE;\n\t\t}\n\t\tif (outDE !== null) {\n\t\t\tif (prevInDE !== null) {\n\t\t\t\tprevInDE.setNext(outDE);\n\t\t\t\tprevInDE = null;\n\t\t\t}\n\t\t\tif (firstOutDE === null) firstOutDE = outDE;\n\t\t}\n\t}\n\tif (prevInDE !== null) {\n\t\tAssert.isTrue(firstOutDE !== null);\n\t\tprevInDE.setNext(firstOutDE);\n\t}\n};\nPolygonizeGraph.getDegree = function (node, label) {\n\tvar edges = node.getOutEdges().getEdges();\n\tvar degree = 0;\n\tfor (var i = edges.iterator(); i.hasNext();) {\n\t\tvar de = i.next();\n\t\tif (de.getLabel() === label) degree++;\n\t}\n\treturn degree;\n};\nPolygonizeGraph.findIntersectionNodes = function (startDE, label) {\n\tvar de = startDE;\n\tvar intNodes = null;\n\tdo {\n\t\tvar node = de.getFromNode();\n\t\tif (PolygonizeGraph.getDegree(node, label) > 1) {\n\t\t\tif (intNodes === null) intNodes = new ArrayList();\n\t\t\tintNodes.add(node);\n\t\t}\n\t\tde = de.getNext();\n\t\tAssert.isTrue(de !== null, \"found null DE in ring\");\n\t\tAssert.isTrue(de === startDE || !de.isInRing(), \"found DE already in ring\");\n\t} while (de !== startDE);\n\treturn intNodes;\n};\n\nfunction Polygonizer() {\n\tthis.lineStringAdder = new LineStringAdder(this);\n\tthis.graph = null;\n\tthis.dangles = new ArrayList();\n\tthis.cutEdges = new ArrayList();\n\tthis.invalidRingLines = new ArrayList();\n\tthis.holeList = null;\n\tthis.shellList = null;\n\tthis.polyList = null;\n\tthis.isCheckingRingsValid = true;\n\tthis.extractOnlyPolygonal = null;\n\tthis.geomFactory = null;\n\tif (arguments.length === 0) {\n\t\tPolygonizer.call(this, false);\n\t} else if (arguments.length === 1) {\n\t\tvar extractOnlyPolygonal = arguments[0];\n\t\tthis.extractOnlyPolygonal = extractOnlyPolygonal;\n\t}\n}\nextend(Polygonizer.prototype, {\n\tgetGeometry: function getGeometry() {\n\t\tif (this.geomFactory === null) this.geomFactory = new GeometryFactory();\n\t\tthis.polygonize();\n\t\tif (this.extractOnlyPolygonal) {\n\t\t\treturn this.geomFactory.buildGeometry(this.polyList);\n\t\t}\n\t\treturn this.geomFactory.createGeometryCollection(GeometryFactory.toGeometryArray(this.polyList));\n\t},\n\tgetInvalidRingLines: function getInvalidRingLines() {\n\t\tthis.polygonize();\n\t\treturn this.invalidRingLines;\n\t},\n\tfindValidRings: function findValidRings(edgeRingList, validEdgeRingList, invalidRingList) {\n\t\tfor (var i = edgeRingList.iterator(); i.hasNext();) {\n\t\t\tvar er = i.next();\n\t\t\tif (er.isValid()) validEdgeRingList.add(er);else invalidRingList.add(er.getLineString());\n\t\t}\n\t},\n\tpolygonize: function polygonize() {\n\t\tif (this.polyList !== null) return null;\n\t\tthis.polyList = new ArrayList();\n\t\tif (this.graph === null) return null;\n\t\tthis.dangles = this.graph.deleteDangles();\n\t\tthis.cutEdges = this.graph.deleteCutEdges();\n\t\tvar edgeRingList = this.graph.getEdgeRings();\n\t\tvar validEdgeRingList = new ArrayList();\n\t\tthis.invalidRingLines = new ArrayList();\n\t\tif (this.isCheckingRingsValid) {\n\t\t\tthis.findValidRings(edgeRingList, validEdgeRingList, this.invalidRingLines);\n\t\t} else {\n\t\t\tvalidEdgeRingList = edgeRingList;\n\t\t}\n\t\tthis.findShellsAndHoles(validEdgeRingList);\n\t\tPolygonizer.assignHolesToShells(this.holeList, this.shellList);\n\t\tCollections.sort(this.shellList, new EdgeRing$1.EnvelopeComparator());\n\t\tvar includeAll = true;\n\t\tif (this.extractOnlyPolygonal) {\n\t\t\tPolygonizer.findDisjointShells(this.shellList);\n\t\t\tincludeAll = false;\n\t\t}\n\t\tthis.polyList = Polygonizer.extractPolygons(this.shellList, includeAll);\n\t},\n\tgetDangles: function getDangles() {\n\t\tthis.polygonize();\n\t\treturn this.dangles;\n\t},\n\tgetCutEdges: function getCutEdges() {\n\t\tthis.polygonize();\n\t\treturn this.cutEdges;\n\t},\n\tgetPolygons: function getPolygons() {\n\t\tthis.polygonize();\n\t\treturn this.polyList;\n\t},\n\tadd: function add() {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tvar geomList = arguments[0];\n\t\t\tfor (var i = geomList.iterator(); i.hasNext();) {\n\t\t\t\tvar geometry = i.next();\n\t\t\t\tthis.add(geometry);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof LineString) {\n\t\t\tvar line = arguments[0];\n\t\t\tthis.geomFactory = line.getFactory();\n\t\t\tif (this.graph === null) this.graph = new PolygonizeGraph(this.geomFactory);\n\t\t\tthis.graph.addEdge(line);\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tvar g = arguments[0];\n\t\t\tg.apply(this.lineStringAdder);\n\t\t}\n\t},\n\tsetCheckRingsValid: function setCheckRingsValid(isCheckingRingsValid) {\n\t\tthis.isCheckingRingsValid = isCheckingRingsValid;\n\t},\n\tfindShellsAndHoles: function findShellsAndHoles(edgeRingList) {\n\t\tthis.holeList = new ArrayList();\n\t\tthis.shellList = new ArrayList();\n\t\tfor (var i = edgeRingList.iterator(); i.hasNext();) {\n\t\t\tvar er = i.next();\n\t\t\ter.computeHole();\n\t\t\tif (er.isHole()) this.holeList.add(er);else this.shellList.add(er);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Polygonizer;\n\t}\n});\nPolygonizer.findOuterShells = function (shellList) {\n\tfor (var i = shellList.iterator(); i.hasNext();) {\n\t\tvar er = i.next();\n\t\tvar outerHoleER = er.getOuterHole();\n\t\tif (outerHoleER !== null && !outerHoleER.isProcessed()) {\n\t\t\ter.setIncluded(true);\n\t\t\touterHoleER.setProcessed(true);\n\t\t}\n\t}\n};\nPolygonizer.extractPolygons = function (shellList, includeAll) {\n\tvar polyList = new ArrayList();\n\tfor (var i = shellList.iterator(); i.hasNext();) {\n\t\tvar er = i.next();\n\t\tif (includeAll || er.isIncluded()) {\n\t\t\tpolyList.add(er.getPolygon());\n\t\t}\n\t}\n\treturn polyList;\n};\nPolygonizer.assignHolesToShells = function (holeList, shellList) {\n\tfor (var i = holeList.iterator(); i.hasNext();) {\n\t\tvar holeER = i.next();\n\t\tPolygonizer.assignHoleToShell(holeER, shellList);\n\t}\n};\nPolygonizer.assignHoleToShell = function (holeER, shellList) {\n\tvar shell = EdgeRing$1.findEdgeRingContaining(holeER, shellList);\n\tif (shell !== null) {\n\t\tshell.addHole(holeER);\n\t}\n};\nPolygonizer.findDisjointShells = function (shellList) {\n\tPolygonizer.findOuterShells(shellList);\n\tvar isMoreToScan = null;\n\tdo {\n\t\tisMoreToScan = false;\n\t\tfor (var i = shellList.iterator(); i.hasNext();) {\n\t\t\tvar er = i.next();\n\t\t\tif (er.isIncludedSet()) continue;\n\t\t\ter.updateIncluded();\n\t\t\tif (!er.isIncludedSet()) {\n\t\t\t\tisMoreToScan = true;\n\t\t\t}\n\t\t}\n\t} while (isMoreToScan);\n};\nfunction LineStringAdder() {\n\tthis.p = null;\n\tvar p = arguments[0];\n\tthis.p = p;\n}\nextend(LineStringAdder.prototype, {\n\tfilter: function filter(g) {\n\t\tif (g instanceof LineString) this.p.add(g);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [GeometryComponentFilter];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineStringAdder;\n\t}\n});\nPolygonizer.LineStringAdder = LineStringAdder;\n\n\n\nvar polygonize = Object.freeze({\n\tPolygonizer: Polygonizer\n});\n\nfunction RelateComputer() {\n\tthis.li = new RobustLineIntersector();\n\tthis.ptLocator = new PointLocator();\n\tthis.arg = null;\n\tthis.nodes = new NodeMap(new RelateNodeFactory());\n\tthis.im = null;\n\tthis.isolatedEdges = new ArrayList();\n\tthis.invalidPoint = null;\n\tvar arg = arguments[0];\n\tthis.arg = arg;\n}\nextend(RelateComputer.prototype, {\n\tinsertEdgeEnds: function insertEdgeEnds(ee) {\n\t\tfor (var i = ee.iterator(); i.hasNext();) {\n\t\t\tvar e = i.next();\n\t\t\tthis.nodes.add(e);\n\t\t}\n\t},\n\tcomputeProperIntersectionIM: function computeProperIntersectionIM(intersector, im) {\n\t\tvar dimA = this.arg[0].getGeometry().getDimension();\n\t\tvar dimB = this.arg[1].getGeometry().getDimension();\n\t\tvar hasProper = intersector.hasProperIntersection();\n\t\tvar hasProperInterior = intersector.hasProperInteriorIntersection();\n\t\tif (dimA === 2 && dimB === 2) {\n\t\t\tif (hasProper) im.setAtLeast(\"212101212\");\n\t\t} else if (dimA === 2 && dimB === 1) {\n\t\t\tif (hasProper) im.setAtLeast(\"FFF0FFFF2\");\n\t\t\tif (hasProperInterior) im.setAtLeast(\"1FFFFF1FF\");\n\t\t} else if (dimA === 1 && dimB === 2) {\n\t\t\tif (hasProper) im.setAtLeast(\"F0FFFFFF2\");\n\t\t\tif (hasProperInterior) im.setAtLeast(\"1F1FFFFFF\");\n\t\t} else if (dimA === 1 && dimB === 1) {\n\t\t\tif (hasProperInterior) im.setAtLeast(\"0FFFFFFFF\");\n\t\t}\n\t},\n\tlabelIsolatedEdges: function labelIsolatedEdges(thisIndex, targetIndex) {\n\t\tfor (var ei = this.arg[thisIndex].getEdgeIterator(); ei.hasNext();) {\n\t\t\tvar e = ei.next();\n\t\t\tif (e.isIsolated()) {\n\t\t\t\tthis.labelIsolatedEdge(e, targetIndex, this.arg[targetIndex].getGeometry());\n\t\t\t\tthis.isolatedEdges.add(e);\n\t\t\t}\n\t\t}\n\t},\n\tlabelIsolatedEdge: function labelIsolatedEdge(e, targetIndex, target) {\n\t\tif (target.getDimension() > 0) {\n\t\t\tvar loc = this.ptLocator.locate(e.getCoordinate(), target);\n\t\t\te.getLabel().setAllLocations(targetIndex, loc);\n\t\t} else {\n\t\t\te.getLabel().setAllLocations(targetIndex, Location.EXTERIOR);\n\t\t}\n\t},\n\tcomputeIM: function computeIM() {\n\t\tvar im = new IntersectionMatrix();\n\t\tim.set(Location.EXTERIOR, Location.EXTERIOR, 2);\n\t\tif (!this.arg[0].getGeometry().getEnvelopeInternal().intersects(this.arg[1].getGeometry().getEnvelopeInternal())) {\n\t\t\tthis.computeDisjointIM(im);\n\t\t\treturn im;\n\t\t}\n\t\tthis.arg[0].computeSelfNodes(this.li, false);\n\t\tthis.arg[1].computeSelfNodes(this.li, false);\n\t\tvar intersector = this.arg[0].computeEdgeIntersections(this.arg[1], this.li, false);\n\t\tthis.computeIntersectionNodes(0);\n\t\tthis.computeIntersectionNodes(1);\n\t\tthis.copyNodesAndLabels(0);\n\t\tthis.copyNodesAndLabels(1);\n\t\tthis.labelIsolatedNodes();\n\t\tthis.computeProperIntersectionIM(intersector, im);\n\t\tvar eeBuilder = new EdgeEndBuilder();\n\t\tvar ee0 = eeBuilder.computeEdgeEnds(this.arg[0].getEdgeIterator());\n\t\tthis.insertEdgeEnds(ee0);\n\t\tvar ee1 = eeBuilder.computeEdgeEnds(this.arg[1].getEdgeIterator());\n\t\tthis.insertEdgeEnds(ee1);\n\t\tthis.labelNodeEdges();\n\t\tthis.labelIsolatedEdges(0, 1);\n\t\tthis.labelIsolatedEdges(1, 0);\n\t\tthis.updateIM(im);\n\t\treturn im;\n\t},\n\tlabelNodeEdges: function labelNodeEdges() {\n\t\tfor (var ni = this.nodes.iterator(); ni.hasNext();) {\n\t\t\tvar node = ni.next();\n\t\t\tnode.getEdges().computeLabelling(this.arg);\n\t\t}\n\t},\n\tcopyNodesAndLabels: function copyNodesAndLabels(argIndex) {\n\t\tfor (var i = this.arg[argIndex].getNodeIterator(); i.hasNext();) {\n\t\t\tvar graphNode = i.next();\n\t\t\tvar newNode = this.nodes.addNode(graphNode.getCoordinate());\n\t\t\tnewNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n\t\t}\n\t},\n\tlabelIntersectionNodes: function labelIntersectionNodes(argIndex) {\n\t\tfor (var i = this.arg[argIndex].getEdgeIterator(); i.hasNext();) {\n\t\t\tvar e = i.next();\n\t\t\tvar eLoc = e.getLabel().getLocation(argIndex);\n\t\t\tfor (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext();) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tvar n = this.nodes.find(ei.coord);\n\t\t\t\tif (n.getLabel().isNull(argIndex)) {\n\t\t\t\t\tif (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex);else n.setLabel(argIndex, Location.INTERIOR);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tlabelIsolatedNode: function labelIsolatedNode(n, targetIndex) {\n\t\tvar loc = this.ptLocator.locate(n.getCoordinate(), this.arg[targetIndex].getGeometry());\n\t\tn.getLabel().setAllLocations(targetIndex, loc);\n\t},\n\tcomputeIntersectionNodes: function computeIntersectionNodes(argIndex) {\n\t\tfor (var i = this.arg[argIndex].getEdgeIterator(); i.hasNext();) {\n\t\t\tvar e = i.next();\n\t\t\tvar eLoc = e.getLabel().getLocation(argIndex);\n\t\t\tfor (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext();) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tvar n = this.nodes.addNode(ei.coord);\n\t\t\t\tif (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex);else {\n\t\t\t\t\tif (n.getLabel().isNull(argIndex)) n.setLabel(argIndex, Location.INTERIOR);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tlabelIsolatedNodes: function labelIsolatedNodes() {\n\t\tfor (var ni = this.nodes.iterator(); ni.hasNext();) {\n\t\t\tvar n = ni.next();\n\t\t\tvar label = n.getLabel();\n\t\t\tAssert.isTrue(label.getGeometryCount() > 0, \"node with empty label found\");\n\t\t\tif (n.isIsolated()) {\n\t\t\t\tif (label.isNull(0)) this.labelIsolatedNode(n, 0);else this.labelIsolatedNode(n, 1);\n\t\t\t}\n\t\t}\n\t},\n\tupdateIM: function updateIM(im) {\n\t\tfor (var ei = this.isolatedEdges.iterator(); ei.hasNext();) {\n\t\t\tvar e = ei.next();\n\t\t\te.updateIM(im);\n\t\t}\n\t\tfor (var ni = this.nodes.iterator(); ni.hasNext();) {\n\t\t\tvar node = ni.next();\n\t\t\tnode.updateIM(im);\n\t\t\tnode.updateIMFromEdges(im);\n\t\t}\n\t},\n\tcomputeDisjointIM: function computeDisjointIM(im) {\n\t\tvar ga = this.arg[0].getGeometry();\n\t\tif (!ga.isEmpty()) {\n\t\t\tim.set(Location.INTERIOR, Location.EXTERIOR, ga.getDimension());\n\t\t\tim.set(Location.BOUNDARY, Location.EXTERIOR, ga.getBoundaryDimension());\n\t\t}\n\t\tvar gb = this.arg[1].getGeometry();\n\t\tif (!gb.isEmpty()) {\n\t\t\tim.set(Location.EXTERIOR, Location.INTERIOR, gb.getDimension());\n\t\t\tim.set(Location.EXTERIOR, Location.BOUNDARY, gb.getBoundaryDimension());\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn RelateComputer;\n\t}\n});\n\nfunction RectangleContains() {\n\tthis.rectEnv = null;\n\tvar rectangle = arguments[0];\n\tthis.rectEnv = rectangle.getEnvelopeInternal();\n}\nextend(RectangleContains.prototype, {\n\tisContainedInBoundary: function isContainedInBoundary(geom) {\n\t\tif (geom instanceof Polygon) return false;\n\t\tif (geom instanceof Point) return this.isPointContainedInBoundary(geom);\n\t\tif (geom instanceof LineString) return this.isLineStringContainedInBoundary(geom);\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar comp = geom.getGeometryN(i);\n\t\t\tif (!this.isContainedInBoundary(comp)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tisLineSegmentContainedInBoundary: function isLineSegmentContainedInBoundary(p0, p1) {\n\t\tif (p0.equals(p1)) return this.isPointContainedInBoundary(p0);\n\t\tif (p0.x === p1.x) {\n\t\t\tif (p0.x === this.rectEnv.getMinX() || p0.x === this.rectEnv.getMaxX()) return true;\n\t\t} else if (p0.y === p1.y) {\n\t\t\tif (p0.y === this.rectEnv.getMinY() || p0.y === this.rectEnv.getMaxY()) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tisLineStringContainedInBoundary: function isLineStringContainedInBoundary(line) {\n\t\tvar seq = line.getCoordinateSequence();\n\t\tvar p0 = new Coordinate();\n\t\tvar p1 = new Coordinate();\n\t\tfor (var i = 0; i < seq.size() - 1; i++) {\n\t\t\tseq.getCoordinate(i, p0);\n\t\t\tseq.getCoordinate(i + 1, p1);\n\t\t\tif (!this.isLineSegmentContainedInBoundary(p0, p1)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tisPointContainedInBoundary: function isPointContainedInBoundary() {\n\t\tif (arguments[0] instanceof Point) {\n\t\t\tvar point = arguments[0];\n\t\t\treturn this.isPointContainedInBoundary(point.getCoordinate());\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tvar pt = arguments[0];\n\t\t\treturn pt.x === this.rectEnv.getMinX() || pt.x === this.rectEnv.getMaxX() || pt.y === this.rectEnv.getMinY() || pt.y === this.rectEnv.getMaxY();\n\t\t}\n\t},\n\tcontains: function contains(geom) {\n\t\tif (!this.rectEnv.contains(geom.getEnvelopeInternal())) return false;\n\t\tif (this.isContainedInBoundary(geom)) return false;\n\t\treturn true;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn RectangleContains;\n\t}\n});\nRectangleContains.contains = function (rectangle, b) {\n\tvar rc = new RectangleContains(rectangle);\n\treturn rc.contains(b);\n};\n\nfunction RectangleLineIntersector() {\n\tthis.li = new RobustLineIntersector();\n\tthis.rectEnv = null;\n\tthis.diagUp0 = null;\n\tthis.diagUp1 = null;\n\tthis.diagDown0 = null;\n\tthis.diagDown1 = null;\n\tvar rectEnv = arguments[0];\n\tthis.rectEnv = rectEnv;\n\tthis.diagUp0 = new Coordinate(rectEnv.getMinX(), rectEnv.getMinY());\n\tthis.diagUp1 = new Coordinate(rectEnv.getMaxX(), rectEnv.getMaxY());\n\tthis.diagDown0 = new Coordinate(rectEnv.getMinX(), rectEnv.getMaxY());\n\tthis.diagDown1 = new Coordinate(rectEnv.getMaxX(), rectEnv.getMinY());\n}\nextend(RectangleLineIntersector.prototype, {\n\tintersects: function intersects(p0, p1) {\n\t\tvar segEnv = new Envelope(p0, p1);\n\t\tif (!this.rectEnv.intersects(segEnv)) return false;\n\t\tif (this.rectEnv.intersects(p0)) return true;\n\t\tif (this.rectEnv.intersects(p1)) return true;\n\t\tif (p0.compareTo(p1) > 0) {\n\t\t\tvar tmp = p0;\n\t\t\tp0 = p1;\n\t\t\tp1 = tmp;\n\t\t}\n\t\tvar isSegUpwards = false;\n\t\tif (p1.y > p0.y) isSegUpwards = true;\n\t\tif (isSegUpwards) {\n\t\t\tthis.li.computeIntersection(p0, p1, this.diagDown0, this.diagDown1);\n\t\t} else {\n\t\t\tthis.li.computeIntersection(p0, p1, this.diagUp0, this.diagUp1);\n\t\t}\n\t\tif (this.li.hasIntersection()) return true;\n\t\treturn false;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn RectangleLineIntersector;\n\t}\n});\n\nfunction ShortCircuitedGeometryVisitor() {\n\tthis._isDone = false;\n}\nextend(ShortCircuitedGeometryVisitor.prototype, {\n\tapplyTo: function applyTo(geom) {\n\t\tfor (var i = 0; i < geom.getNumGeometries() && !this._isDone; i++) {\n\t\t\tvar element = geom.getGeometryN(i);\n\t\t\tif (!(element instanceof GeometryCollection)) {\n\t\t\t\tthis.visit(element);\n\t\t\t\tif (this.isDone()) {\n\t\t\t\t\tthis._isDone = true;\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else this.applyTo(element);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ShortCircuitedGeometryVisitor;\n\t}\n});\n\nfunction RectangleIntersects() {\n\tthis.rectangle = null;\n\tthis.rectEnv = null;\n\tvar rectangle = arguments[0];\n\tthis.rectangle = rectangle;\n\tthis.rectEnv = rectangle.getEnvelopeInternal();\n}\nextend(RectangleIntersects.prototype, {\n\tintersects: function intersects(geom) {\n\t\tif (!this.rectEnv.intersects(geom.getEnvelopeInternal())) return false;\n\t\tvar visitor = new EnvelopeIntersectsVisitor(this.rectEnv);\n\t\tvisitor.applyTo(geom);\n\t\tif (visitor.intersects()) return true;\n\t\tvar ecpVisitor = new GeometryContainsPointVisitor(this.rectangle);\n\t\tecpVisitor.applyTo(geom);\n\t\tif (ecpVisitor.containsPoint()) return true;\n\t\tvar riVisitor = new RectangleIntersectsSegmentVisitor(this.rectangle);\n\t\triVisitor.applyTo(geom);\n\t\tif (riVisitor.intersects()) return true;\n\t\treturn false;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn RectangleIntersects;\n\t}\n});\nRectangleIntersects.intersects = function (rectangle, b) {\n\tvar rp = new RectangleIntersects(rectangle);\n\treturn rp.intersects(b);\n};\nfunction EnvelopeIntersectsVisitor() {\n\tShortCircuitedGeometryVisitor.apply(this);\n\tthis.rectEnv = null;\n\tthis._intersects = false;\n\tvar rectEnv = arguments[0];\n\tthis.rectEnv = rectEnv;\n}\ninherits(EnvelopeIntersectsVisitor, ShortCircuitedGeometryVisitor);\nextend(EnvelopeIntersectsVisitor.prototype, {\n\tisDone: function isDone() {\n\t\treturn this._intersects === true;\n\t},\n\tvisit: function visit(element) {\n\t\tvar elementEnv = element.getEnvelopeInternal();\n\t\tif (!this.rectEnv.intersects(elementEnv)) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this.rectEnv.contains(elementEnv)) {\n\t\t\tthis._intersects = true;\n\t\t\treturn null;\n\t\t}\n\t\tif (elementEnv.getMinX() >= this.rectEnv.getMinX() && elementEnv.getMaxX() <= this.rectEnv.getMaxX()) {\n\t\t\tthis._intersects = true;\n\t\t\treturn null;\n\t\t}\n\t\tif (elementEnv.getMinY() >= this.rectEnv.getMinY() && elementEnv.getMaxY() <= this.rectEnv.getMaxY()) {\n\t\t\tthis._intersects = true;\n\t\t\treturn null;\n\t\t}\n\t},\n\tintersects: function intersects() {\n\t\treturn this._intersects;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EnvelopeIntersectsVisitor;\n\t}\n});\nfunction GeometryContainsPointVisitor() {\n\tShortCircuitedGeometryVisitor.apply(this);\n\tthis.rectSeq = null;\n\tthis.rectEnv = null;\n\tthis._containsPoint = false;\n\tvar rectangle = arguments[0];\n\tthis.rectSeq = rectangle.getExteriorRing().getCoordinateSequence();\n\tthis.rectEnv = rectangle.getEnvelopeInternal();\n}\ninherits(GeometryContainsPointVisitor, ShortCircuitedGeometryVisitor);\nextend(GeometryContainsPointVisitor.prototype, {\n\tisDone: function isDone() {\n\t\treturn this._containsPoint === true;\n\t},\n\tvisit: function visit(geom) {\n\t\tif (!(geom instanceof Polygon)) return null;\n\t\tvar elementEnv = geom.getEnvelopeInternal();\n\t\tif (!this.rectEnv.intersects(elementEnv)) return null;\n\t\tvar rectPt = new Coordinate();\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tthis.rectSeq.getCoordinate(i, rectPt);\n\t\t\tif (!elementEnv.contains(rectPt)) continue;\n\t\t\tif (SimplePointInAreaLocator.containsPointInPolygon(rectPt, geom)) {\n\t\t\t\tthis._containsPoint = true;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tcontainsPoint: function containsPoint() {\n\t\treturn this._containsPoint;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryContainsPointVisitor;\n\t}\n});\nfunction RectangleIntersectsSegmentVisitor() {\n\tShortCircuitedGeometryVisitor.apply(this);\n\tthis.rectEnv = null;\n\tthis.rectIntersector = null;\n\tthis.hasIntersection = false;\n\tthis.p0 = new Coordinate();\n\tthis.p1 = new Coordinate();\n\tvar rectangle = arguments[0];\n\tthis.rectEnv = rectangle.getEnvelopeInternal();\n\tthis.rectIntersector = new RectangleLineIntersector(this.rectEnv);\n}\ninherits(RectangleIntersectsSegmentVisitor, ShortCircuitedGeometryVisitor);\nextend(RectangleIntersectsSegmentVisitor.prototype, {\n\tintersects: function intersects() {\n\t\treturn this.hasIntersection;\n\t},\n\tisDone: function isDone() {\n\t\treturn this.hasIntersection === true;\n\t},\n\tvisit: function visit(geom) {\n\t\tvar elementEnv = geom.getEnvelopeInternal();\n\t\tif (!this.rectEnv.intersects(elementEnv)) return null;\n\t\tvar lines = LinearComponentExtracter.getLines(geom);\n\t\tthis.checkIntersectionWithLineStrings(lines);\n\t},\n\tcheckIntersectionWithLineStrings: function checkIntersectionWithLineStrings(lines) {\n\t\tfor (var i = lines.iterator(); i.hasNext();) {\n\t\t\tvar testLine = i.next();\n\t\t\tthis.checkIntersectionWithSegments(testLine);\n\t\t\tif (this.hasIntersection) return null;\n\t\t}\n\t},\n\tcheckIntersectionWithSegments: function checkIntersectionWithSegments(testLine) {\n\t\tvar seq1 = testLine.getCoordinateSequence();\n\t\tfor (var j = 1; j < seq1.size(); j++) {\n\t\t\tseq1.getCoordinate(j - 1, this.p0);\n\t\t\tseq1.getCoordinate(j, this.p1);\n\t\t\tif (this.rectIntersector.intersects(this.p0, this.p1)) {\n\t\t\t\tthis.hasIntersection = true;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn RectangleIntersectsSegmentVisitor;\n\t}\n});\n\nfunction RelateOp() {\n\tthis._relate = null;\n\tif (arguments.length === 2) {\n\t\tvar g0 = arguments[0],\n\t\t    g1 = arguments[1];\n\t\tGeometryGraphOperation.call(this, g0, g1);\n\t\tthis._relate = new RelateComputer(this.arg);\n\t} else if (arguments.length === 3) {\n\t\tvar _g = arguments[0],\n\t\t    _g2 = arguments[1],\n\t\t    boundaryNodeRule = arguments[2];\n\t\tGeometryGraphOperation.call(this, _g, _g2, boundaryNodeRule);\n\t\tthis._relate = new RelateComputer(this.arg);\n\t}\n}\ninherits(RelateOp, GeometryGraphOperation);\nextend(RelateOp.prototype, {\n\tgetIntersectionMatrix: function getIntersectionMatrix() {\n\t\treturn this._relate.computeIM();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn RelateOp;\n\t}\n});\nRelateOp.covers = function (g1, g2) {\n\tif (!g1.getEnvelopeInternal().covers(g2.getEnvelopeInternal())) return false;\n\tif (g1.isRectangle()) {\n\t\treturn true;\n\t}\n\treturn RelateOp.relate(g1, g2).isCovers();\n};\nRelateOp.intersects = function (g1, g2) {\n\tif (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\n\tif (g1.isRectangle()) {\n\t\treturn RectangleIntersects.intersects(g1, g2);\n\t}\n\tif (g2.isRectangle()) {\n\t\treturn RectangleIntersects.intersects(g2, g1);\n\t}\n\treturn RelateOp.relate(g1, g2).isIntersects();\n};\nRelateOp.touches = function (g1, g2) {\n\tif (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\n\treturn RelateOp.relate(g1, g2).isTouches(g1.getDimension(), g2.getDimension());\n};\nRelateOp.within = function (g1, g2) {\n\treturn g2.contains(g1);\n};\nRelateOp.coveredBy = function (g1, g2) {\n\treturn RelateOp.covers(g2, g1);\n};\nRelateOp.relate = function () {\n\tif (arguments.length === 2) {\n\t\tvar a = arguments[0],\n\t\t    b = arguments[1];\n\t\tvar relOp = new RelateOp(a, b);\n\t\tvar im = relOp.getIntersectionMatrix();\n\t\treturn im;\n\t} else if (arguments.length === 3) {\n\t\tif (typeof arguments[2] === \"string\" && arguments[0] instanceof Geometry && arguments[1] instanceof Geometry) {\n\t\t\tvar g1 = arguments[0],\n\t\t\t    g2 = arguments[1],\n\t\t\t    intersectionPattern = arguments[2];\n\t\t\treturn RelateOp.relateWithCheck(g1, g2).matches(intersectionPattern);\n\t\t} else if (hasInterface(arguments[2], BoundaryNodeRule) && arguments[0] instanceof Geometry && arguments[1] instanceof Geometry) {\n\t\t\tvar _a = arguments[0],\n\t\t\t    _b = arguments[1],\n\t\t\t    boundaryNodeRule = arguments[2];\n\t\t\tvar relOp = new RelateOp(_a, _b, boundaryNodeRule);\n\t\t\tvar im = relOp.getIntersectionMatrix();\n\t\t\treturn im;\n\t\t}\n\t}\n};\nRelateOp.overlaps = function (g1, g2) {\n\tif (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\n\treturn RelateOp.relate(g1, g2).isOverlaps(g1.getDimension(), g2.getDimension());\n};\nRelateOp.disjoint = function (g1, g2) {\n\treturn !g1.intersects(g2);\n};\nRelateOp.relateWithCheck = function (g1, g2) {\n\tg1.checkNotGeometryCollection(g1);\n\tg1.checkNotGeometryCollection(g2);\n\treturn RelateOp.relate(g1, g2);\n};\nRelateOp.crosses = function (g1, g2) {\n\tif (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\n\treturn RelateOp.relate(g1, g2).isCrosses(g1.getDimension(), g2.getDimension());\n};\nRelateOp.contains = function (g1, g2) {\n\tif (!g1.getEnvelopeInternal().contains(g2.getEnvelopeInternal())) return false;\n\tif (g1.isRectangle()) {\n\t\treturn RectangleContains.contains(g1, g2);\n\t}\n\treturn RelateOp.relate(g1, g2).isContains();\n};\n\n\n\nvar relate = Object.freeze({\n\tRelateOp: RelateOp\n});\n\nfunction GeometryCombiner() {\n\tthis.geomFactory = null;\n\tthis.skipEmpty = false;\n\tthis.inputGeoms = null;\n\tvar geoms = arguments[0];\n\tthis.geomFactory = GeometryCombiner.extractFactory(geoms);\n\tthis.inputGeoms = geoms;\n}\nextend(GeometryCombiner.prototype, {\n\textractElements: function extractElements(geom, elems) {\n\t\tif (geom === null) return null;\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar elemGeom = geom.getGeometryN(i);\n\t\t\tif (this.skipEmpty && elemGeom.isEmpty()) continue;\n\t\t\telems.add(elemGeom);\n\t\t}\n\t},\n\tcombine: function combine() {\n\t\tvar elems = new ArrayList();\n\t\tfor (var i = this.inputGeoms.iterator(); i.hasNext();) {\n\t\t\tvar g = i.next();\n\t\t\tthis.extractElements(g, elems);\n\t\t}\n\t\tif (elems.size() === 0) {\n\t\t\tif (this.geomFactory !== null) {\n\t\t\t\treturn this.geomFactory.createGeometryCollection(null);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\treturn this.geomFactory.buildGeometry(elems);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryCombiner;\n\t}\n});\nGeometryCombiner.combine = function () {\n\tif (arguments.length === 1) {\n\t\tvar geoms = arguments[0];\n\t\tvar combiner = new GeometryCombiner(geoms);\n\t\treturn combiner.combine();\n\t} else if (arguments.length === 2) {\n\t\tvar g0 = arguments[0],\n\t\t    g1 = arguments[1];\n\t\tvar combiner = new GeometryCombiner(GeometryCombiner.createList(g0, g1));\n\t\treturn combiner.combine();\n\t} else if (arguments.length === 3) {\n\t\tvar _g = arguments[0],\n\t\t    _g2 = arguments[1],\n\t\t    g2 = arguments[2];\n\t\tvar combiner = new GeometryCombiner(GeometryCombiner.createList(_g, _g2, g2));\n\t\treturn combiner.combine();\n\t}\n};\nGeometryCombiner.extractFactory = function (geoms) {\n\tif (geoms.isEmpty()) return null;\n\treturn geoms.iterator().next().getFactory();\n};\nGeometryCombiner.createList = function () {\n\tif (arguments.length === 2) {\n\t\tvar obj0 = arguments[0],\n\t\t    obj1 = arguments[1];\n\t\tvar list = new ArrayList();\n\t\tlist.add(obj0);\n\t\tlist.add(obj1);\n\t\treturn list;\n\t} else if (arguments.length === 3) {\n\t\tvar _obj = arguments[0],\n\t\t    _obj2 = arguments[1],\n\t\t    obj2 = arguments[2];\n\t\tvar list = new ArrayList();\n\t\tlist.add(_obj);\n\t\tlist.add(_obj2);\n\t\tlist.add(obj2);\n\t\treturn list;\n\t}\n};\n\nfunction PointGeometryUnion() {\n\tthis.pointGeom = null;\n\tthis.otherGeom = null;\n\tthis.geomFact = null;\n\tvar pointGeom = arguments[0],\n\t    otherGeom = arguments[1];\n\tthis.pointGeom = pointGeom;\n\tthis.otherGeom = otherGeom;\n\tthis.geomFact = otherGeom.getFactory();\n}\nextend(PointGeometryUnion.prototype, {\n\tunion: function union() {\n\t\tvar locater = new PointLocator();\n\t\tvar exteriorCoords = new TreeSet();\n\t\tfor (var i = 0; i < this.pointGeom.getNumGeometries(); i++) {\n\t\t\tvar point = this.pointGeom.getGeometryN(i);\n\t\t\tvar coord = point.getCoordinate();\n\t\t\tvar loc = locater.locate(coord, this.otherGeom);\n\t\t\tif (loc === Location.EXTERIOR) exteriorCoords.add(coord);\n\t\t}\n\t\tif (exteriorCoords.size() === 0) return this.otherGeom;\n\t\tvar ptComp = null;\n\t\tvar coords = CoordinateArrays.toCoordinateArray(exteriorCoords);\n\t\tif (coords.length === 1) {\n\t\t\tptComp = this.geomFact.createPoint(coords[0]);\n\t\t} else {\n\t\t\tptComp = this.geomFact.createMultiPointFromCoords(coords);\n\t\t}\n\t\treturn GeometryCombiner.combine(ptComp, this.otherGeom);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PointGeometryUnion;\n\t}\n});\nPointGeometryUnion.union = function (pointGeom, otherGeom) {\n\tvar unioner = new PointGeometryUnion(pointGeom, otherGeom);\n\treturn unioner.union();\n};\n\nfunction GeometryExtracter() {\n\tthis.sortIndex = -1;\n\tthis.comps = null;\n\tvar sortIndex = arguments[0],\n\t    comps = arguments[1];\n\tthis.sortIndex = sortIndex;\n\tthis.comps = comps;\n}\nextend(GeometryExtracter.prototype, {\n\tfilter: function filter(geom) {\n\t\tif (this.sortIndex === -1 || geom.getSortIndex() === this.sortIndex) this.comps.add(geom);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [GeometryFilter];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryExtracter;\n\t}\n});\nGeometryExtracter.extract = function () {\n\tif (arguments.length === 2) {\n\t\tvar geom = arguments[0],\n\t\t    sortIndex = arguments[1];\n\t\treturn GeometryExtracter.extract(geom, sortIndex, new ArrayList());\n\t} else if (arguments.length === 3) {\n\t\tvar _geom = arguments[0],\n\t\t    _sortIndex = arguments[1],\n\t\t    list = arguments[2];\n\t\tif (_geom.getSortIndex() === _sortIndex) {\n\t\t\tlist.add(_geom);\n\t\t} else if (_geom instanceof GeometryCollection) {\n\t\t\t_geom.apply(new GeometryExtracter(_sortIndex, list));\n\t\t}\n\t\treturn list;\n\t}\n};\n\nfunction CascadedPolygonUnion() {\n\tthis.inputPolys = null;\n\tthis.geomFactory = null;\n\tvar polys = arguments[0];\n\tthis.inputPolys = polys;\n\tif (this.inputPolys === null) this.inputPolys = new ArrayList();\n}\nextend(CascadedPolygonUnion.prototype, {\n\treduceToGeometries: function reduceToGeometries(geomTree) {\n\t\tvar geoms = new ArrayList();\n\t\tfor (var i = geomTree.iterator(); i.hasNext();) {\n\t\t\tvar o = i.next();\n\t\t\tvar geom = null;\n\t\t\tif (hasInterface(o, List)) {\n\t\t\t\tgeom = this.unionTree(o);\n\t\t\t} else if (o instanceof Geometry) {\n\t\t\t\tgeom = o;\n\t\t\t}\n\t\t\tgeoms.add(geom);\n\t\t}\n\t\treturn geoms;\n\t},\n\textractByEnvelope: function extractByEnvelope(env, geom, disjointGeoms) {\n\t\tvar intersectingGeoms = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar elem = geom.getGeometryN(i);\n\t\t\tif (elem.getEnvelopeInternal().intersects(env)) intersectingGeoms.add(elem);else disjointGeoms.add(elem);\n\t\t}\n\t\treturn this.geomFactory.buildGeometry(intersectingGeoms);\n\t},\n\tunionOptimized: function unionOptimized(g0, g1) {\n\t\tvar g0Env = g0.getEnvelopeInternal();\n\t\tvar g1Env = g1.getEnvelopeInternal();\n\t\tif (!g0Env.intersects(g1Env)) {\n\t\t\tvar combo = GeometryCombiner.combine(g0, g1);\n\t\t\treturn combo;\n\t\t}\n\t\tif (g0.getNumGeometries() <= 1 && g1.getNumGeometries() <= 1) return this.unionActual(g0, g1);\n\t\tvar commonEnv = g0Env.intersection(g1Env);\n\t\treturn this.unionUsingEnvelopeIntersection(g0, g1, commonEnv);\n\t},\n\tunion: function union() {\n\t\tif (this.inputPolys === null) throw new IllegalStateException(\"union() method cannot be called twice\");\n\t\tif (this.inputPolys.isEmpty()) return null;\n\t\tthis.geomFactory = this.inputPolys.iterator().next().getFactory();\n\t\tvar index = new STRtree(CascadedPolygonUnion.STRTREE_NODE_CAPACITY);\n\t\tfor (var i = this.inputPolys.iterator(); i.hasNext();) {\n\t\t\tvar item = i.next();\n\t\t\tindex.insert(item.getEnvelopeInternal(), item);\n\t\t}\n\t\tthis.inputPolys = null;\n\t\tvar itemTree = index.itemsTree();\n\t\tvar unionAll = this.unionTree(itemTree);\n\t\treturn unionAll;\n\t},\n\tbinaryUnion: function binaryUnion() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar geoms = arguments[0];\n\t\t\treturn this.binaryUnion(geoms, 0, geoms.size());\n\t\t} else if (arguments.length === 3) {\n\t\t\tvar _geoms = arguments[0],\n\t\t\t    start = arguments[1],\n\t\t\t    end = arguments[2];\n\t\t\tif (end - start <= 1) {\n\t\t\t\tvar g0 = CascadedPolygonUnion.getGeometry(_geoms, start);\n\t\t\t\treturn this.unionSafe(g0, null);\n\t\t\t} else if (end - start === 2) {\n\t\t\t\treturn this.unionSafe(CascadedPolygonUnion.getGeometry(_geoms, start), CascadedPolygonUnion.getGeometry(_geoms, start + 1));\n\t\t\t} else {\n\t\t\t\tvar mid = Math.trunc((end + start) / 2);\n\t\t\t\tvar g0 = this.binaryUnion(_geoms, start, mid);\n\t\t\t\tvar g1 = this.binaryUnion(_geoms, mid, end);\n\t\t\t\treturn this.unionSafe(g0, g1);\n\t\t\t}\n\t\t}\n\t},\n\trepeatedUnion: function repeatedUnion(geoms) {\n\t\tvar union = null;\n\t\tfor (var i = geoms.iterator(); i.hasNext();) {\n\t\t\tvar g = i.next();\n\t\t\tif (union === null) union = g.copy();else union = union.union(g);\n\t\t}\n\t\treturn union;\n\t},\n\tunionSafe: function unionSafe(g0, g1) {\n\t\tif (g0 === null && g1 === null) return null;\n\t\tif (g0 === null) return g1.copy();\n\t\tif (g1 === null) return g0.copy();\n\t\treturn this.unionOptimized(g0, g1);\n\t},\n\tunionActual: function unionActual(g0, g1) {\n\t\treturn CascadedPolygonUnion.restrictToPolygons(g0.union(g1));\n\t},\n\tunionTree: function unionTree(geomTree) {\n\t\tvar geoms = this.reduceToGeometries(geomTree);\n\t\tvar union = this.binaryUnion(geoms);\n\t\treturn union;\n\t},\n\tunionUsingEnvelopeIntersection: function unionUsingEnvelopeIntersection(g0, g1, common) {\n\t\tvar disjointPolys = new ArrayList();\n\t\tvar g0Int = this.extractByEnvelope(common, g0, disjointPolys);\n\t\tvar g1Int = this.extractByEnvelope(common, g1, disjointPolys);\n\t\tvar union = this.unionActual(g0Int, g1Int);\n\t\tdisjointPolys.add(union);\n\t\tvar overallUnion = GeometryCombiner.combine(disjointPolys);\n\t\treturn overallUnion;\n\t},\n\tbufferUnion: function bufferUnion() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar geoms = arguments[0];\n\t\t\tvar factory = geoms.get(0).getFactory();\n\t\t\tvar gColl = factory.buildGeometry(geoms);\n\t\t\tvar unionAll = gColl.buffer(0.0);\n\t\t\treturn unionAll;\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar g0 = arguments[0],\n\t\t\t    g1 = arguments[1];\n\t\t\tvar factory = g0.getFactory();\n\t\t\tvar gColl = factory.createGeometryCollection([g0, g1]);\n\t\t\tvar unionAll = gColl.buffer(0.0);\n\t\t\treturn unionAll;\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CascadedPolygonUnion;\n\t}\n});\nCascadedPolygonUnion.restrictToPolygons = function (g) {\n\tif (hasInterface(g, Polygonal)) {\n\t\treturn g;\n\t}\n\tvar polygons = PolygonExtracter.getPolygons(g);\n\tif (polygons.size() === 1) return polygons.get(0);\n\treturn g.getFactory().createMultiPolygon(GeometryFactory.toPolygonArray(polygons));\n};\nCascadedPolygonUnion.getGeometry = function (list, index) {\n\tif (index >= list.size()) return null;\n\treturn list.get(index);\n};\nCascadedPolygonUnion.union = function (polys) {\n\tvar op = new CascadedPolygonUnion(polys);\n\treturn op.union();\n};\nCascadedPolygonUnion.STRTREE_NODE_CAPACITY = 4;\n\nfunction UnaryUnionOp() {\n\tthis.polygons = new ArrayList();\n\tthis.lines = new ArrayList();\n\tthis.points = new ArrayList();\n\tthis.geomFact = null;\n\tif (arguments.length === 1) {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tvar geoms = arguments[0];\n\t\t\tthis.extract(geoms);\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tvar geom = arguments[0];\n\t\t\tthis.extract(geom);\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tvar _geoms = arguments[0],\n\t\t    geomFact = arguments[1];\n\t\tthis.geomFact = geomFact;\n\t\tthis.extract(_geoms);\n\t}\n}\nextend(UnaryUnionOp.prototype, {\n\tunionNoOpt: function unionNoOpt(g0) {\n\t\tvar empty = this.geomFact.createPoint();\n\t\treturn SnapIfNeededOverlayOp.overlayOp(g0, empty, OverlayOp.UNION);\n\t},\n\tunionWithNull: function unionWithNull(g0, g1) {\n\t\tif (g0 === null && g1 === null) return null;\n\t\tif (g1 === null) return g0;\n\t\tif (g0 === null) return g1;\n\t\treturn g0.union(g1);\n\t},\n\textract: function extract() {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tvar geoms = arguments[0];\n\t\t\tfor (var i = geoms.iterator(); i.hasNext();) {\n\t\t\t\tvar geom = i.next();\n\t\t\t\tthis.extract(geom);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tvar _geom = arguments[0];\n\t\t\tif (this.geomFact === null) this.geomFact = _geom.getFactory();\n\t\t\tGeometryExtracter.extract(_geom, Geometry.SORTINDEX_POLYGON, this.polygons);\n\t\t\tGeometryExtracter.extract(_geom, Geometry.SORTINDEX_LINESTRING, this.lines);\n\t\t\tGeometryExtracter.extract(_geom, Geometry.SORTINDEX_POINT, this.points);\n\t\t}\n\t},\n\tunion: function union() {\n\t\tif (this.geomFact === null) {\n\t\t\treturn null;\n\t\t}\n\t\tvar unionPoints = null;\n\t\tif (this.points.size() > 0) {\n\t\t\tvar ptGeom = this.geomFact.buildGeometry(this.points);\n\t\t\tunionPoints = this.unionNoOpt(ptGeom);\n\t\t}\n\t\tvar unionLines = null;\n\t\tif (this.lines.size() > 0) {\n\t\t\tvar lineGeom = this.geomFact.buildGeometry(this.lines);\n\t\t\tunionLines = this.unionNoOpt(lineGeom);\n\t\t}\n\t\tvar unionPolygons = null;\n\t\tif (this.polygons.size() > 0) {\n\t\t\tunionPolygons = CascadedPolygonUnion.union(this.polygons);\n\t\t}\n\t\tvar unionLA = this.unionWithNull(unionLines, unionPolygons);\n\t\tvar union = null;\n\t\tif (unionPoints === null) union = unionLA;else if (unionLA === null) union = unionPoints;else union = PointGeometryUnion.union(unionPoints, unionLA);\n\t\tif (union === null) return this.geomFact.createGeometryCollection();\n\t\treturn union;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn UnaryUnionOp;\n\t}\n});\nUnaryUnionOp.union = function () {\n\tif (arguments.length === 1) {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tvar geoms = arguments[0];\n\t\t\tvar op = new UnaryUnionOp(geoms);\n\t\t\treturn op.union();\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tvar geom = arguments[0];\n\t\t\tvar op = new UnaryUnionOp(geom);\n\t\t\treturn op.union();\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tvar _geoms2 = arguments[0],\n\t\t    geomFact = arguments[1];\n\t\tvar op = new UnaryUnionOp(_geoms2, geomFact);\n\t\treturn op.union();\n\t}\n};\n\n\n\nvar union = Object.freeze({\n\tUnaryUnionOp: UnaryUnionOp\n});\n\n\n\nvar valid = Object.freeze({\n\tIsValidOp: IsValidOp,\n\tConsistentAreaTester: ConsistentAreaTester\n});\n\n\n\nvar operation = Object.freeze({\n\tBoundaryOp: BoundaryOp,\n\tIsSimpleOp: IsSimpleOp,\n\tbuffer: buffer,\n\tdistance: distance,\n\tlinemerge: linemerge,\n\toverlay: overlay,\n\tpolygonize: polygonize,\n\trelate: relate,\n\tunion: union,\n\tvalid: valid\n});\n\nfunction PrecisionReducerCoordinateOperation() {\n\tGeometryEditor.CoordinateOperation.apply(this);\n\tthis.targetPM = null;\n\tthis.removeCollapsed = true;\n\tvar targetPM = arguments[0],\n\t    removeCollapsed = arguments[1];\n\tthis.targetPM = targetPM;\n\tthis.removeCollapsed = removeCollapsed;\n}\ninherits(PrecisionReducerCoordinateOperation, GeometryEditor.CoordinateOperation);\nextend(PrecisionReducerCoordinateOperation.prototype, {\n\teditCoordinates: function editCoordinates(coordinates, geom) {\n\t\tif (coordinates.length === 0) return null;\n\t\tvar reducedCoords = new Array(coordinates.length).fill(null);\n\t\tfor (var i = 0; i < coordinates.length; i++) {\n\t\t\tvar coord = new Coordinate(coordinates[i]);\n\t\t\tthis.targetPM.makePrecise(coord);\n\t\t\treducedCoords[i] = coord;\n\t\t}\n\t\tvar noRepeatedCoordList = new CoordinateList(reducedCoords, false);\n\t\tvar noRepeatedCoords = noRepeatedCoordList.toCoordinateArray();\n\t\tvar minLength = 0;\n\t\tif (geom instanceof LineString) minLength = 2;\n\t\tif (geom instanceof LinearRing) minLength = 4;\n\t\tvar collapsedCoords = reducedCoords;\n\t\tif (this.removeCollapsed) collapsedCoords = null;\n\t\tif (noRepeatedCoords.length < minLength) {\n\t\t\treturn collapsedCoords;\n\t\t}\n\t\treturn noRepeatedCoords;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PrecisionReducerCoordinateOperation;\n\t}\n});\n\nfunction GeometryPrecisionReducer() {\n\tthis.targetPM = null;\n\tthis.removeCollapsed = true;\n\tthis.changePrecisionModel = false;\n\tthis.isPointwise = false;\n\tvar pm = arguments[0];\n\tthis.targetPM = pm;\n}\nextend(GeometryPrecisionReducer.prototype, {\n\tfixPolygonalTopology: function fixPolygonalTopology(geom) {\n\t\tvar geomToBuffer = geom;\n\t\tif (!this.changePrecisionModel) {\n\t\t\tgeomToBuffer = this.changePM(geom, this.targetPM);\n\t\t}\n\t\tvar bufGeom = geomToBuffer.buffer(0);\n\t\tvar finalGeom = bufGeom;\n\t\tif (!this.changePrecisionModel) {\n\t\t\tfinalGeom = this.changePM(bufGeom, geom.getPrecisionModel());\n\t\t}\n\t\treturn finalGeom;\n\t},\n\treducePointwise: function reducePointwise(geom) {\n\t\tvar geomEdit = null;\n\t\tif (this.changePrecisionModel) {\n\t\t\tvar newFactory = this.createFactory(geom.getFactory(), this.targetPM);\n\t\t\tgeomEdit = new GeometryEditor(newFactory);\n\t\t} else geomEdit = new GeometryEditor();\n\t\tvar finalRemoveCollapsed = this.removeCollapsed;\n\t\tif (geom.getDimension() >= 2) finalRemoveCollapsed = true;\n\t\tvar reduceGeom = geomEdit.edit(geom, new PrecisionReducerCoordinateOperation(this.targetPM, finalRemoveCollapsed));\n\t\treturn reduceGeom;\n\t},\n\tchangePM: function changePM(geom, newPM) {\n\t\tvar geomEditor = this.createEditor(geom.getFactory(), newPM);\n\t\treturn geomEditor.edit(geom, new GeometryEditor.NoOpGeometryOperation());\n\t},\n\tsetRemoveCollapsedComponents: function setRemoveCollapsedComponents(removeCollapsed) {\n\t\tthis.removeCollapsed = removeCollapsed;\n\t},\n\tcreateFactory: function createFactory(inputFactory, pm) {\n\t\tvar newFactory = new GeometryFactory(pm, inputFactory.getSRID(), inputFactory.getCoordinateSequenceFactory());\n\t\treturn newFactory;\n\t},\n\tsetChangePrecisionModel: function setChangePrecisionModel(changePrecisionModel) {\n\t\tthis.changePrecisionModel = changePrecisionModel;\n\t},\n\treduce: function reduce(geom) {\n\t\tvar reducePW = this.reducePointwise(geom);\n\t\tif (this.isPointwise) return reducePW;\n\t\tif (!hasInterface(reducePW, Polygonal)) return reducePW;\n\t\tif (reducePW.isValid()) return reducePW;\n\t\treturn this.fixPolygonalTopology(reducePW);\n\t},\n\tsetPointwise: function setPointwise(isPointwise) {\n\t\tthis.isPointwise = isPointwise;\n\t},\n\tcreateEditor: function createEditor(geomFactory, newPM) {\n\t\tif (geomFactory.getPrecisionModel() === newPM) return new GeometryEditor();\n\t\tvar newFactory = this.createFactory(geomFactory, newPM);\n\t\tvar geomEdit = new GeometryEditor(newFactory);\n\t\treturn geomEdit;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryPrecisionReducer;\n\t}\n});\nGeometryPrecisionReducer.reduce = function (g, precModel) {\n\tvar reducer = new GeometryPrecisionReducer(precModel);\n\treturn reducer.reduce(g);\n};\nGeometryPrecisionReducer.reducePointwise = function (g, precModel) {\n\tvar reducer = new GeometryPrecisionReducer(precModel);\n\treducer.setPointwise(true);\n\treturn reducer.reduce(g);\n};\n\n\n\nvar precision = Object.freeze({\n\tGeometryPrecisionReducer: GeometryPrecisionReducer\n});\n\nfunction DouglasPeuckerLineSimplifier() {\n\tthis.pts = null;\n\tthis.usePt = null;\n\tthis.distanceTolerance = null;\n\tthis.seg = new LineSegment();\n\tvar pts = arguments[0];\n\tthis.pts = pts;\n}\nextend(DouglasPeuckerLineSimplifier.prototype, {\n\tsimplifySection: function simplifySection(i, j) {\n\t\tif (i + 1 === j) {\n\t\t\treturn null;\n\t\t}\n\t\tthis.seg.p0 = this.pts[i];\n\t\tthis.seg.p1 = this.pts[j];\n\t\tvar maxDistance = -1.0;\n\t\tvar maxIndex = i;\n\t\tfor (var k = i + 1; k < j; k++) {\n\t\t\tvar distance = this.seg.distance(this.pts[k]);\n\t\t\tif (distance > maxDistance) {\n\t\t\t\tmaxDistance = distance;\n\t\t\t\tmaxIndex = k;\n\t\t\t}\n\t\t}\n\t\tif (maxDistance <= this.distanceTolerance) {\n\t\t\tfor (var k = i + 1; k < j; k++) {\n\t\t\t\tthis.usePt[k] = false;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.simplifySection(i, maxIndex);\n\t\t\tthis.simplifySection(maxIndex, j);\n\t\t}\n\t},\n\tsetDistanceTolerance: function setDistanceTolerance(distanceTolerance) {\n\t\tthis.distanceTolerance = distanceTolerance;\n\t},\n\tsimplify: function simplify() {\n\t\tthis.usePt = new Array(this.pts.length).fill(null);\n\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\tthis.usePt[i] = true;\n\t\t}\n\t\tthis.simplifySection(0, this.pts.length - 1);\n\t\tvar coordList = new CoordinateList();\n\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\tif (this.usePt[i]) coordList.add(new Coordinate(this.pts[i]));\n\t\t}\n\t\treturn coordList.toCoordinateArray();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DouglasPeuckerLineSimplifier;\n\t}\n});\nDouglasPeuckerLineSimplifier.simplify = function (pts, distanceTolerance) {\n\tvar simp = new DouglasPeuckerLineSimplifier(pts);\n\tsimp.setDistanceTolerance(distanceTolerance);\n\treturn simp.simplify();\n};\n\nfunction DouglasPeuckerSimplifier() {\n\tthis.inputGeom = null;\n\tthis.distanceTolerance = null;\n\tthis.isEnsureValidTopology = true;\n\tvar inputGeom = arguments[0];\n\tthis.inputGeom = inputGeom;\n}\nextend(DouglasPeuckerSimplifier.prototype, {\n\tsetEnsureValid: function setEnsureValid(isEnsureValidTopology) {\n\t\tthis.isEnsureValidTopology = isEnsureValidTopology;\n\t},\n\tgetResultGeometry: function getResultGeometry() {\n\t\tif (this.inputGeom.isEmpty()) return this.inputGeom.copy();\n\t\treturn new DPTransformer(this.isEnsureValidTopology, this.distanceTolerance).transform(this.inputGeom);\n\t},\n\tsetDistanceTolerance: function setDistanceTolerance(distanceTolerance) {\n\t\tif (distanceTolerance < 0.0) throw new IllegalArgumentException(\"Tolerance must be non-negative\");\n\t\tthis.distanceTolerance = distanceTolerance;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DouglasPeuckerSimplifier;\n\t}\n});\nDouglasPeuckerSimplifier.simplify = function (geom, distanceTolerance) {\n\tvar tss = new DouglasPeuckerSimplifier(geom);\n\ttss.setDistanceTolerance(distanceTolerance);\n\treturn tss.getResultGeometry();\n};\nfunction DPTransformer() {\n\tGeometryTransformer.apply(this);\n\tthis.isEnsureValidTopology = true;\n\tthis.distanceTolerance = null;\n\tvar isEnsureValidTopology = arguments[0],\n\t    distanceTolerance = arguments[1];\n\tthis.isEnsureValidTopology = isEnsureValidTopology;\n\tthis.distanceTolerance = distanceTolerance;\n}\ninherits(DPTransformer, GeometryTransformer);\nextend(DPTransformer.prototype, {\n\ttransformPolygon: function transformPolygon(geom, parent) {\n\t\tif (geom.isEmpty()) return null;\n\t\tvar rawGeom = GeometryTransformer.prototype.transformPolygon.call(this, geom, parent);\n\t\tif (parent instanceof MultiPolygon) {\n\t\t\treturn rawGeom;\n\t\t}\n\t\treturn this.createValidArea(rawGeom);\n\t},\n\tcreateValidArea: function createValidArea(rawAreaGeom) {\n\t\tif (this.isEnsureValidTopology) return rawAreaGeom.buffer(0.0);\n\t\treturn rawAreaGeom;\n\t},\n\ttransformCoordinates: function transformCoordinates(coords, parent) {\n\t\tvar inputPts = coords.toCoordinateArray();\n\t\tvar newPts = null;\n\t\tif (inputPts.length === 0) {\n\t\t\tnewPts = new Array(0).fill(null);\n\t\t} else {\n\t\t\tnewPts = DouglasPeuckerLineSimplifier.simplify(inputPts, this.distanceTolerance);\n\t\t}\n\t\treturn this.factory.getCoordinateSequenceFactory().create(newPts);\n\t},\n\ttransformMultiPolygon: function transformMultiPolygon(geom, parent) {\n\t\tvar rawGeom = GeometryTransformer.prototype.transformMultiPolygon.call(this, geom, parent);\n\t\treturn this.createValidArea(rawGeom);\n\t},\n\ttransformLinearRing: function transformLinearRing(geom, parent) {\n\t\tvar removeDegenerateRings = parent instanceof Polygon;\n\t\tvar simpResult = GeometryTransformer.prototype.transformLinearRing.call(this, geom, parent);\n\t\tif (removeDegenerateRings && !(simpResult instanceof LinearRing)) return null;\n\t\t\n\t\treturn simpResult;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DPTransformer;\n\t}\n});\nDouglasPeuckerSimplifier.DPTransformer = DPTransformer;\n\nfunction TaggedLineSegment() {\n\tthis.parent = null;\n\tthis.index = null;\n\tif (arguments.length === 2) {\n\t\tvar p0 = arguments[0],\n\t\t    p1 = arguments[1];\n\t\tTaggedLineSegment.call(this, p0, p1, null, -1);\n\t} else if (arguments.length === 4) {\n\t\tvar _p = arguments[0],\n\t\t    _p2 = arguments[1],\n\t\t    parent = arguments[2],\n\t\t    index = arguments[3];\n\t\tLineSegment.call(this, _p, _p2);\n\t\tthis.parent = parent;\n\t\tthis.index = index;\n\t}\n}\ninherits(TaggedLineSegment, LineSegment);\nextend(TaggedLineSegment.prototype, {\n\tgetIndex: function getIndex() {\n\t\treturn this.index;\n\t},\n\tgetParent: function getParent() {\n\t\treturn this.parent;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn TaggedLineSegment;\n\t}\n});\n\nfunction TaggedLineString() {\n\tthis.parentLine = null;\n\tthis.segs = null;\n\tthis.resultSegs = new ArrayList();\n\tthis.minimumSize = null;\n\tif (arguments.length === 1) {\n\t\tvar parentLine = arguments[0];\n\t\tTaggedLineString.call(this, parentLine, 2);\n\t} else if (arguments.length === 2) {\n\t\tvar _parentLine = arguments[0],\n\t\t    minimumSize = arguments[1];\n\t\tthis.parentLine = _parentLine;\n\t\tthis.minimumSize = minimumSize;\n\t\tthis.init();\n\t}\n}\nextend(TaggedLineString.prototype, {\n\taddToResult: function addToResult(seg) {\n\t\tthis.resultSegs.add(seg);\n\t},\n\tasLineString: function asLineString() {\n\t\treturn this.parentLine.getFactory().createLineString(TaggedLineString.extractCoordinates(this.resultSegs));\n\t},\n\tgetResultSize: function getResultSize() {\n\t\tvar resultSegsSize = this.resultSegs.size();\n\t\treturn resultSegsSize === 0 ? 0 : resultSegsSize + 1;\n\t},\n\tgetParent: function getParent() {\n\t\treturn this.parentLine;\n\t},\n\tgetSegment: function getSegment(i) {\n\t\treturn this.segs[i];\n\t},\n\tgetParentCoordinates: function getParentCoordinates() {\n\t\treturn this.parentLine.getCoordinates();\n\t},\n\tgetMinimumSize: function getMinimumSize() {\n\t\treturn this.minimumSize;\n\t},\n\tasLinearRing: function asLinearRing() {\n\t\treturn this.parentLine.getFactory().createLinearRing(TaggedLineString.extractCoordinates(this.resultSegs));\n\t},\n\tgetSegments: function getSegments() {\n\t\treturn this.segs;\n\t},\n\tinit: function init() {\n\t\tvar pts = this.parentLine.getCoordinates();\n\t\tthis.segs = new Array(pts.length - 1).fill(null);\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tvar seg = new TaggedLineSegment(pts[i], pts[i + 1], this.parentLine, i);\n\t\t\tthis.segs[i] = seg;\n\t\t}\n\t},\n\tgetResultCoordinates: function getResultCoordinates() {\n\t\treturn TaggedLineString.extractCoordinates(this.resultSegs);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn TaggedLineString;\n\t}\n});\nTaggedLineString.extractCoordinates = function (segs) {\n\tvar pts = new Array(segs.size() + 1).fill(null);\n\tvar seg = null;\n\tfor (var i = 0; i < segs.size(); i++) {\n\t\tseg = segs.get(i);\n\t\tpts[i] = seg.p0;\n\t}\n\tpts[pts.length - 1] = seg.p1;\n\treturn pts;\n};\n\nfunction LineSegmentIndex() {\n\tthis.index = new Quadtree();\n}\nextend(LineSegmentIndex.prototype, {\n\tremove: function remove(seg) {\n\t\tthis.index.remove(new Envelope(seg.p0, seg.p1), seg);\n\t},\n\tadd: function add() {\n\t\tif (arguments[0] instanceof TaggedLineString) {\n\t\t\tvar line = arguments[0];\n\t\t\tvar segs = line.getSegments();\n\t\t\tfor (var i = 0; i < segs.length; i++) {\n\t\t\t\tvar seg = segs[i];\n\t\t\t\tthis.add(seg);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof LineSegment) {\n\t\t\tvar _seg = arguments[0];\n\t\t\tthis.index.insert(new Envelope(_seg.p0, _seg.p1), _seg);\n\t\t}\n\t},\n\tquery: function query(querySeg) {\n\t\tvar env = new Envelope(querySeg.p0, querySeg.p1);\n\t\tvar visitor = new LineSegmentVisitor(querySeg);\n\t\tthis.index.query(env, visitor);\n\t\tvar itemsFound = visitor.getItems();\n\t\treturn itemsFound;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineSegmentIndex;\n\t}\n});\nfunction LineSegmentVisitor() {\n\tthis.querySeg = null;\n\tthis.items = new ArrayList();\n\tvar querySeg = arguments[0];\n\tthis.querySeg = querySeg;\n}\nextend(LineSegmentVisitor.prototype, {\n\tvisitItem: function visitItem(item) {\n\t\tvar seg = item;\n\t\tif (Envelope.intersects(seg.p0, seg.p1, this.querySeg.p0, this.querySeg.p1)) this.items.add(item);\n\t},\n\tgetItems: function getItems() {\n\t\treturn this.items;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [ItemVisitor];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineSegmentVisitor;\n\t}\n});\n\nfunction TaggedLineStringSimplifier() {\n\tthis.li = new RobustLineIntersector();\n\tthis.inputIndex = new LineSegmentIndex();\n\tthis.outputIndex = new LineSegmentIndex();\n\tthis.line = null;\n\tthis.linePts = null;\n\tthis.distanceTolerance = 0.0;\n\tvar inputIndex = arguments[0],\n\t    outputIndex = arguments[1];\n\tthis.inputIndex = inputIndex;\n\tthis.outputIndex = outputIndex;\n}\nextend(TaggedLineStringSimplifier.prototype, {\n\tflatten: function flatten(start, end) {\n\t\tvar p0 = this.linePts[start];\n\t\tvar p1 = this.linePts[end];\n\t\tvar newSeg = new LineSegment(p0, p1);\n\t\tthis.remove(this.line, start, end);\n\t\tthis.outputIndex.add(newSeg);\n\t\treturn newSeg;\n\t},\n\thasBadIntersection: function hasBadIntersection(parentLine, sectionIndex, candidateSeg) {\n\t\tif (this.hasBadOutputIntersection(candidateSeg)) return true;\n\t\tif (this.hasBadInputIntersection(parentLine, sectionIndex, candidateSeg)) return true;\n\t\treturn false;\n\t},\n\tsetDistanceTolerance: function setDistanceTolerance(distanceTolerance) {\n\t\tthis.distanceTolerance = distanceTolerance;\n\t},\n\tsimplifySection: function simplifySection(i, j, depth) {\n\t\tdepth += 1;\n\t\tvar sectionIndex = new Array(2).fill(null);\n\t\tif (i + 1 === j) {\n\t\t\tvar newSeg = this.line.getSegment(i);\n\t\t\tthis.line.addToResult(newSeg);\n\t\t\treturn null;\n\t\t}\n\t\tvar isValidToSimplify = true;\n\t\tif (this.line.getResultSize() < this.line.getMinimumSize()) {\n\t\t\tvar worstCaseSize = depth + 1;\n\t\t\tif (worstCaseSize < this.line.getMinimumSize()) isValidToSimplify = false;\n\t\t}\n\t\tvar distance = new Array(1).fill(null);\n\t\tvar furthestPtIndex = this.findFurthestPoint(this.linePts, i, j, distance);\n\t\tif (distance[0] > this.distanceTolerance) isValidToSimplify = false;\n\t\tvar candidateSeg = new LineSegment();\n\t\tcandidateSeg.p0 = this.linePts[i];\n\t\tcandidateSeg.p1 = this.linePts[j];\n\t\tsectionIndex[0] = i;\n\t\tsectionIndex[1] = j;\n\t\tif (this.hasBadIntersection(this.line, sectionIndex, candidateSeg)) isValidToSimplify = false;\n\t\tif (isValidToSimplify) {\n\t\t\tvar newSeg = this.flatten(i, j);\n\t\t\tthis.line.addToResult(newSeg);\n\t\t\treturn null;\n\t\t}\n\t\tthis.simplifySection(i, furthestPtIndex, depth);\n\t\tthis.simplifySection(furthestPtIndex, j, depth);\n\t},\n\thasBadOutputIntersection: function hasBadOutputIntersection(candidateSeg) {\n\t\tvar querySegs = this.outputIndex.query(candidateSeg);\n\t\tfor (var i = querySegs.iterator(); i.hasNext();) {\n\t\t\tvar querySeg = i.next();\n\t\t\tif (this.hasInteriorIntersection(querySeg, candidateSeg)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tfindFurthestPoint: function findFurthestPoint(pts, i, j, maxDistance) {\n\t\tvar seg = new LineSegment();\n\t\tseg.p0 = pts[i];\n\t\tseg.p1 = pts[j];\n\t\tvar maxDist = -1.0;\n\t\tvar maxIndex = i;\n\t\tfor (var k = i + 1; k < j; k++) {\n\t\t\tvar midPt = pts[k];\n\t\t\tvar distance = seg.distance(midPt);\n\t\t\tif (distance > maxDist) {\n\t\t\t\tmaxDist = distance;\n\t\t\t\tmaxIndex = k;\n\t\t\t}\n\t\t}\n\t\tmaxDistance[0] = maxDist;\n\t\treturn maxIndex;\n\t},\n\tsimplify: function simplify(line) {\n\t\tthis.line = line;\n\t\tthis.linePts = line.getParentCoordinates();\n\t\tthis.simplifySection(0, this.linePts.length - 1, 0);\n\t},\n\tremove: function remove(line, start, end) {\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tvar seg = line.getSegment(i);\n\t\t\tthis.inputIndex.remove(seg);\n\t\t}\n\t},\n\thasInteriorIntersection: function hasInteriorIntersection(seg0, seg1) {\n\t\tthis.li.computeIntersection(seg0.p0, seg0.p1, seg1.p0, seg1.p1);\n\t\treturn this.li.isInteriorIntersection();\n\t},\n\thasBadInputIntersection: function hasBadInputIntersection(parentLine, sectionIndex, candidateSeg) {\n\t\tvar querySegs = this.inputIndex.query(candidateSeg);\n\t\tfor (var i = querySegs.iterator(); i.hasNext();) {\n\t\t\tvar querySeg = i.next();\n\t\t\tif (this.hasInteriorIntersection(querySeg, candidateSeg)) {\n\t\t\t\tif (TaggedLineStringSimplifier.isInLineSection(parentLine, sectionIndex, querySeg)) continue;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn TaggedLineStringSimplifier;\n\t}\n});\nTaggedLineStringSimplifier.isInLineSection = function (line, sectionIndex, seg) {\n\tif (seg.getParent() !== line.getParent()) return false;\n\tvar segIndex = seg.getIndex();\n\tif (segIndex >= sectionIndex[0] && segIndex < sectionIndex[1]) return true;\n\treturn false;\n};\n\nfunction TaggedLinesSimplifier() {\n\tthis.inputIndex = new LineSegmentIndex();\n\tthis.outputIndex = new LineSegmentIndex();\n\tthis.distanceTolerance = 0.0;\n}\nextend(TaggedLinesSimplifier.prototype, {\n\tsetDistanceTolerance: function setDistanceTolerance(distanceTolerance) {\n\t\tthis.distanceTolerance = distanceTolerance;\n\t},\n\tsimplify: function simplify(taggedLines) {\n\t\tfor (var i = taggedLines.iterator(); i.hasNext();) {\n\t\t\tthis.inputIndex.add(i.next());\n\t\t}\n\t\tfor (var i = taggedLines.iterator(); i.hasNext();) {\n\t\t\tvar tlss = new TaggedLineStringSimplifier(this.inputIndex, this.outputIndex);\n\t\t\ttlss.setDistanceTolerance(this.distanceTolerance);\n\t\t\ttlss.simplify(i.next());\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn TaggedLinesSimplifier;\n\t}\n});\n\nfunction TopologyPreservingSimplifier() {\n\tthis.inputGeom = null;\n\tthis.lineSimplifier = new TaggedLinesSimplifier();\n\tthis.linestringMap = null;\n\tvar inputGeom = arguments[0];\n\tthis.inputGeom = inputGeom;\n}\nextend(TopologyPreservingSimplifier.prototype, {\n\tgetResultGeometry: function getResultGeometry() {\n\t\tif (this.inputGeom.isEmpty()) return this.inputGeom.copy();\n\t\tthis.linestringMap = new HashMap();\n\t\tthis.inputGeom.apply(new LineStringMapBuilderFilter(this));\n\t\tthis.lineSimplifier.simplify(this.linestringMap.values());\n\t\tvar result = new LineStringTransformer(this.linestringMap).transform(this.inputGeom);\n\t\treturn result;\n\t},\n\tsetDistanceTolerance: function setDistanceTolerance(distanceTolerance) {\n\t\tif (distanceTolerance < 0.0) throw new IllegalArgumentException(\"Tolerance must be non-negative\");\n\t\tthis.lineSimplifier.setDistanceTolerance(distanceTolerance);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn TopologyPreservingSimplifier;\n\t}\n});\nTopologyPreservingSimplifier.simplify = function (geom, distanceTolerance) {\n\tvar tss = new TopologyPreservingSimplifier(geom);\n\ttss.setDistanceTolerance(distanceTolerance);\n\treturn tss.getResultGeometry();\n};\nfunction LineStringTransformer() {\n\tGeometryTransformer.apply(this);\n\tthis.linestringMap = null;\n\tvar linestringMap = arguments[0];\n\tthis.linestringMap = linestringMap;\n}\ninherits(LineStringTransformer, GeometryTransformer);\nextend(LineStringTransformer.prototype, {\n\ttransformCoordinates: function transformCoordinates(coords, parent) {\n\t\tif (coords.size() === 0) return null;\n\t\tif (parent instanceof LineString) {\n\t\t\tvar taggedLine = this.linestringMap.get(parent);\n\t\t\treturn this.createCoordinateSequence(taggedLine.getResultCoordinates());\n\t\t}\n\t\treturn GeometryTransformer.prototype.transformCoordinates.call(this, coords, parent);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineStringTransformer;\n\t}\n});\nfunction LineStringMapBuilderFilter() {\n\tthis.tps = null;\n\tvar tps = arguments[0];\n\tthis.tps = tps;\n}\nextend(LineStringMapBuilderFilter.prototype, {\n\tfilter: function filter(geom) {\n\t\tif (geom instanceof LineString) {\n\t\t\tvar line = geom;\n\t\t\tif (line.isEmpty()) return null;\n\t\t\tvar minSize = line.isClosed() ? 4 : 2;\n\t\t\tvar taggedLine = new TaggedLineString(line, minSize);\n\t\t\tthis.tps.linestringMap.put(line, taggedLine);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [GeometryComponentFilter];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineStringMapBuilderFilter;\n\t}\n});\nTopologyPreservingSimplifier.LineStringTransformer = LineStringTransformer;\nTopologyPreservingSimplifier.LineStringMapBuilderFilter = LineStringMapBuilderFilter;\n\n\n\nvar simplify = Object.freeze({\n\tDouglasPeuckerSimplifier: DouglasPeuckerSimplifier,\n\tTopologyPreservingSimplifier: TopologyPreservingSimplifier\n});\n\nfunction SplitSegment() {\n\tthis.seg = null;\n\tthis.segLen = null;\n\tthis.splitPt = null;\n\tthis.minimumLen = 0.0;\n\tvar seg = arguments[0];\n\tthis.seg = seg;\n\tthis.segLen = seg.getLength();\n}\nextend(SplitSegment.prototype, {\n\tsplitAt: function splitAt() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar pt = arguments[0];\n\t\t\tvar minFrac = this.minimumLen / this.segLen;\n\t\t\tif (pt.distance(this.seg.p0) < this.minimumLen) {\n\t\t\t\tthis.splitPt = this.seg.pointAlong(minFrac);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (pt.distance(this.seg.p1) < this.minimumLen) {\n\t\t\t\tthis.splitPt = SplitSegment.pointAlongReverse(this.seg, minFrac);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthis.splitPt = pt;\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar length = arguments[0],\n\t\t\t    endPt = arguments[1];\n\t\t\tvar actualLen = this.getConstrainedLength(length);\n\t\t\tvar frac = actualLen / this.segLen;\n\t\t\tif (endPt.equals2D(this.seg.p0)) this.splitPt = this.seg.pointAlong(frac);else this.splitPt = SplitSegment.pointAlongReverse(this.seg, frac);\n\t\t}\n\t},\n\tsetMinimumLength: function setMinimumLength(minLen) {\n\t\tthis.minimumLen = minLen;\n\t},\n\tgetConstrainedLength: function getConstrainedLength(len) {\n\t\tif (len < this.minimumLen) return this.minimumLen;\n\t\treturn len;\n\t},\n\tgetSplitPoint: function getSplitPoint() {\n\t\treturn this.splitPt;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SplitSegment;\n\t}\n});\nSplitSegment.pointAlongReverse = function (seg, segmentLengthFraction) {\n\tvar coord = new Coordinate();\n\tcoord.x = seg.p1.x - segmentLengthFraction * (seg.p1.x - seg.p0.x);\n\tcoord.y = seg.p1.y - segmentLengthFraction * (seg.p1.y - seg.p0.y);\n\treturn coord;\n};\n\nfunction ConstraintSplitPointFinder() {}\nextend(ConstraintSplitPointFinder.prototype, {\n\tfindSplitPoint: function findSplitPoint(seg, encroachPt) {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ConstraintSplitPointFinder;\n\t}\n});\n\nfunction NonEncroachingSplitPointFinder() {}\nextend(NonEncroachingSplitPointFinder.prototype, {\n\tfindSplitPoint: function findSplitPoint(seg, encroachPt) {\n\t\tvar lineSeg = seg.getLineSegment();\n\t\tvar segLen = lineSeg.getLength();\n\t\tvar midPtLen = segLen / 2;\n\t\tvar splitSeg = new SplitSegment(lineSeg);\n\t\tvar projPt = NonEncroachingSplitPointFinder.projectedSplitPoint(seg, encroachPt);\n\t\tvar nonEncroachDiam = projPt.distance(encroachPt) * 2 * 0.8;\n\t\tvar maxSplitLen = nonEncroachDiam;\n\t\tif (maxSplitLen > midPtLen) {\n\t\t\tmaxSplitLen = midPtLen;\n\t\t}\n\t\tsplitSeg.setMinimumLength(maxSplitLen);\n\t\tsplitSeg.splitAt(projPt);\n\t\treturn splitSeg.getSplitPoint();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [ConstraintSplitPointFinder];\n\t},\n\tgetClass: function getClass() {\n\t\treturn NonEncroachingSplitPointFinder;\n\t}\n});\nNonEncroachingSplitPointFinder.projectedSplitPoint = function (seg, encroachPt) {\n\tvar lineSeg = seg.getLineSegment();\n\tvar projPt = lineSeg.project(encroachPt);\n\treturn projPt;\n};\n\nfunction TrianglePredicate() {}\nextend(TrianglePredicate.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn TrianglePredicate;\n\t}\n});\nTrianglePredicate.triArea = function (a, b, c) {\n\treturn (b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x);\n};\nTrianglePredicate.isInCircleDDNormalized = function (a, b, c, p) {\n\tvar adx = DD.valueOf(a.x).selfSubtract(p.x);\n\tvar ady = DD.valueOf(a.y).selfSubtract(p.y);\n\tvar bdx = DD.valueOf(b.x).selfSubtract(p.x);\n\tvar bdy = DD.valueOf(b.y).selfSubtract(p.y);\n\tvar cdx = DD.valueOf(c.x).selfSubtract(p.x);\n\tvar cdy = DD.valueOf(c.y).selfSubtract(p.y);\n\tvar abdet = adx.multiply(bdy).selfSubtract(bdx.multiply(ady));\n\tvar bcdet = bdx.multiply(cdy).selfSubtract(cdx.multiply(bdy));\n\tvar cadet = cdx.multiply(ady).selfSubtract(adx.multiply(cdy));\n\tvar alift = adx.multiply(adx).selfAdd(ady.multiply(ady));\n\tvar blift = bdx.multiply(bdx).selfAdd(bdy.multiply(bdy));\n\tvar clift = cdx.multiply(cdx).selfAdd(cdy.multiply(cdy));\n\tvar sum = alift.selfMultiply(bcdet).selfAdd(blift.selfMultiply(cadet)).selfAdd(clift.selfMultiply(abdet));\n\tvar isInCircle = sum.doubleValue() > 0;\n\treturn isInCircle;\n};\nTrianglePredicate.checkRobustInCircle = function (a, b, c, p) {\n\tvar nonRobustInCircle = TrianglePredicate.isInCircleNonRobust(a, b, c, p);\n\tvar isInCircleDD = TrianglePredicate.isInCircleDDSlow(a, b, c, p);\n\tvar isInCircleCC = TrianglePredicate.isInCircleCC(a, b, c, p);\n\tvar circumCentre = Triangle.circumcentre(a, b, c);\n\tSystem.out.println(\"p radius diff a = \" + Math.abs(p.distance(circumCentre) - a.distance(circumCentre)) / a.distance(circumCentre));\n\tif (nonRobustInCircle !== isInCircleDD || nonRobustInCircle !== isInCircleCC) {\n\t\tSystem.out.println(\"inCircle robustness failure (double result = \" + nonRobustInCircle + \", DD result = \" + isInCircleDD + \", CC result = \" + isInCircleCC + \")\");\n\t\tSystem.out.println(WKTWriter.toLineString(new CoordinateArraySequence([a, b, c, p])));\n\t\tSystem.out.println(\"Circumcentre = \" + WKTWriter.toPoint(circumCentre) + \" radius = \" + a.distance(circumCentre));\n\t\tSystem.out.println(\"p radius diff a = \" + Math.abs(p.distance(circumCentre) / a.distance(circumCentre) - 1));\n\t\tSystem.out.println(\"p radius diff b = \" + Math.abs(p.distance(circumCentre) / b.distance(circumCentre) - 1));\n\t\tSystem.out.println(\"p radius diff c = \" + Math.abs(p.distance(circumCentre) / c.distance(circumCentre) - 1));\n\t\tSystem.out.println();\n\t}\n};\nTrianglePredicate.isInCircleDDFast = function (a, b, c, p) {\n\tvar aTerm = DD.sqr(a.x).selfAdd(DD.sqr(a.y)).selfMultiply(TrianglePredicate.triAreaDDFast(b, c, p));\n\tvar bTerm = DD.sqr(b.x).selfAdd(DD.sqr(b.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, c, p));\n\tvar cTerm = DD.sqr(c.x).selfAdd(DD.sqr(c.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, b, p));\n\tvar pTerm = DD.sqr(p.x).selfAdd(DD.sqr(p.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, b, c));\n\tvar sum = aTerm.selfSubtract(bTerm).selfAdd(cTerm).selfSubtract(pTerm);\n\tvar isInCircle = sum.doubleValue() > 0;\n\treturn isInCircle;\n};\nTrianglePredicate.isInCircleCC = function (a, b, c, p) {\n\tvar cc = Triangle.circumcentre(a, b, c);\n\tvar ccRadius = a.distance(cc);\n\tvar pRadiusDiff = p.distance(cc) - ccRadius;\n\treturn pRadiusDiff <= 0;\n};\nTrianglePredicate.isInCircleNormalized = function (a, b, c, p) {\n\tvar adx = a.x - p.x;\n\tvar ady = a.y - p.y;\n\tvar bdx = b.x - p.x;\n\tvar bdy = b.y - p.y;\n\tvar cdx = c.x - p.x;\n\tvar cdy = c.y - p.y;\n\tvar abdet = adx * bdy - bdx * ady;\n\tvar bcdet = bdx * cdy - cdx * bdy;\n\tvar cadet = cdx * ady - adx * cdy;\n\tvar alift = adx * adx + ady * ady;\n\tvar blift = bdx * bdx + bdy * bdy;\n\tvar clift = cdx * cdx + cdy * cdy;\n\tvar disc = alift * bcdet + blift * cadet + clift * abdet;\n\treturn disc > 0;\n};\nTrianglePredicate.isInCircleDDSlow = function (a, b, c, p) {\n\tvar px = DD.valueOf(p.x);\n\tvar py = DD.valueOf(p.y);\n\tvar ax = DD.valueOf(a.x);\n\tvar ay = DD.valueOf(a.y);\n\tvar bx = DD.valueOf(b.x);\n\tvar by = DD.valueOf(b.y);\n\tvar cx = DD.valueOf(c.x);\n\tvar cy = DD.valueOf(c.y);\n\tvar aTerm = ax.multiply(ax).add(ay.multiply(ay)).multiply(TrianglePredicate.triAreaDDSlow(bx, by, cx, cy, px, py));\n\tvar bTerm = bx.multiply(bx).add(by.multiply(by)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, cx, cy, px, py));\n\tvar cTerm = cx.multiply(cx).add(cy.multiply(cy)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, bx, by, px, py));\n\tvar pTerm = px.multiply(px).add(py.multiply(py)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, bx, by, cx, cy));\n\tvar sum = aTerm.subtract(bTerm).add(cTerm).subtract(pTerm);\n\tvar isInCircle = sum.doubleValue() > 0;\n\treturn isInCircle;\n};\nTrianglePredicate.isInCircleNonRobust = function (a, b, c, p) {\n\tvar isInCircle = (a.x * a.x + a.y * a.y) * TrianglePredicate.triArea(b, c, p) - (b.x * b.x + b.y * b.y) * TrianglePredicate.triArea(a, c, p) + (c.x * c.x + c.y * c.y) * TrianglePredicate.triArea(a, b, p) - (p.x * p.x + p.y * p.y) * TrianglePredicate.triArea(a, b, c) > 0;\n\treturn isInCircle;\n};\nTrianglePredicate.isInCircleRobust = function (a, b, c, p) {\n\treturn TrianglePredicate.isInCircleNormalized(a, b, c, p);\n};\nTrianglePredicate.triAreaDDSlow = function (ax, ay, bx, by, cx, cy) {\n\treturn bx.subtract(ax).multiply(cy.subtract(ay)).subtract(by.subtract(ay).multiply(cx.subtract(ax)));\n};\nTrianglePredicate.triAreaDDFast = function (a, b, c) {\n\tvar t1 = DD.valueOf(b.x).selfSubtract(a.x).selfMultiply(DD.valueOf(c.y).selfSubtract(a.y));\n\tvar t2 = DD.valueOf(b.y).selfSubtract(a.y).selfMultiply(DD.valueOf(c.x).selfSubtract(a.x));\n\treturn t1.selfSubtract(t2);\n};\n\nfunction Vertex() {\n\tthis.p = null;\n\tif (arguments.length === 1) {\n\t\tvar _p = arguments[0];\n\t\tthis.p = new Coordinate(_p);\n\t} else if (arguments.length === 2) {\n\t\tvar _x = arguments[0],\n\t\t    _y = arguments[1];\n\t\tthis.p = new Coordinate(_x, _y);\n\t} else if (arguments.length === 3) {\n\t\tvar _x2 = arguments[0],\n\t\t    _y2 = arguments[1],\n\t\t    _z = arguments[2];\n\t\tthis.p = new Coordinate(_x2, _y2, _z);\n\t}\n}\nextend(Vertex.prototype, {\n\tcircleCenter: function circleCenter(b, c) {\n\t\tvar a = new Vertex(this.getX(), this.getY());\n\t\tvar cab = this.bisector(a, b);\n\t\tvar cbc = this.bisector(b, c);\n\t\tvar hcc = new HCoordinate(cab, cbc);\n\t\tvar cc = null;\n\t\ttry {\n\t\t\tcc = new Vertex(hcc.getX(), hcc.getY());\n\t\t} catch (nre) {\n\t\t\tif (nre instanceof NotRepresentableException) {\n\t\t\t\tSystem.err.println(\"a: \" + a + \"  b: \" + b + \"  c: \" + c);\n\t\t\t\tSystem.err.println(nre);\n\t\t\t} else throw nre;\n\t\t} finally {}\n\t\treturn cc;\n\t},\n\tdot: function dot(v) {\n\t\treturn this.p.x * v.getX() + this.p.y * v.getY();\n\t},\n\tmagn: function magn() {\n\t\treturn Math.sqrt(this.p.x * this.p.x + this.p.y * this.p.y);\n\t},\n\tgetZ: function getZ() {\n\t\treturn this.p.z;\n\t},\n\tbisector: function bisector(a, b) {\n\t\tvar dx = b.getX() - a.getX();\n\t\tvar dy = b.getY() - a.getY();\n\t\tvar l1 = new HCoordinate(a.getX() + dx / 2.0, a.getY() + dy / 2.0, 1.0);\n\t\tvar l2 = new HCoordinate(a.getX() - dy + dx / 2.0, a.getY() + dx + dy / 2.0, 1.0);\n\t\treturn new HCoordinate(l1, l2);\n\t},\n\tequals: function equals() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar _x = arguments[0];\n\t\t\tif (this.p.x === _x.getX() && this.p.y === _x.getY()) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar _x3 = arguments[0],\n\t\t\t    tolerance = arguments[1];\n\t\t\tif (this.p.distance(_x3.getCoordinate()) < tolerance) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this.p;\n\t},\n\tisInCircle: function isInCircle(a, b, c) {\n\t\treturn TrianglePredicate.isInCircleRobust(a.p, b.p, c.p, this.p);\n\t},\n\tinterpolateZValue: function interpolateZValue(v0, v1, v2) {\n\t\tvar x0 = v0.getX();\n\t\tvar y0 = v0.getY();\n\t\tvar a = v1.getX() - x0;\n\t\tvar b = v2.getX() - x0;\n\t\tvar c = v1.getY() - y0;\n\t\tvar d = v2.getY() - y0;\n\t\tvar det = a * d - b * c;\n\t\tvar dx = this.getX() - x0;\n\t\tvar dy = this.getY() - y0;\n\t\tvar t = (d * dx - b * dy) / det;\n\t\tvar u = (-c * dx + a * dy) / det;\n\t\tvar z = v0.getZ() + t * (v1.getZ() - v0.getZ()) + u * (v2.getZ() - v0.getZ());\n\t\treturn z;\n\t},\n\tmidPoint: function midPoint(a) {\n\t\tvar xm = (this.p.x + a.getX()) / 2.0;\n\t\tvar ym = (this.p.y + a.getY()) / 2.0;\n\t\tvar zm = (this.p.z + a.getZ()) / 2.0;\n\t\treturn new Vertex(xm, ym, zm);\n\t},\n\trightOf: function rightOf(e) {\n\t\treturn this.isCCW(e.dest(), e.orig());\n\t},\n\tisCCW: function isCCW(b, c) {\n\t\treturn (b.p.x - this.p.x) * (c.p.y - this.p.y) - (b.p.y - this.p.y) * (c.p.x - this.p.x) > 0;\n\t},\n\tgetX: function getX() {\n\t\treturn this.p.x;\n\t},\n\tcrossProduct: function crossProduct(v) {\n\t\treturn this.p.x * v.getY() - this.p.y * v.getX();\n\t},\n\tsetZ: function setZ(_z) {\n\t\tthis.p.z = _z;\n\t},\n\ttimes: function times(c) {\n\t\treturn new Vertex(c * this.p.x, c * this.p.y);\n\t},\n\tcross: function cross() {\n\t\treturn new Vertex(this.p.y, -this.p.x);\n\t},\n\tleftOf: function leftOf(e) {\n\t\treturn this.isCCW(e.orig(), e.dest());\n\t},\n\ttoString: function toString() {\n\t\treturn \"POINT (\" + this.p.x + \" \" + this.p.y + \")\";\n\t},\n\tsub: function sub(v) {\n\t\treturn new Vertex(this.p.x - v.getX(), this.p.y - v.getY());\n\t},\n\tgetY: function getY() {\n\t\treturn this.p.y;\n\t},\n\tclassify: function classify(p0, p1) {\n\t\tvar p2 = this;\n\t\tvar a = p1.sub(p0);\n\t\tvar b = p2.sub(p0);\n\t\tvar sa = a.crossProduct(b);\n\t\tif (sa > 0.0) return Vertex.LEFT;\n\t\tif (sa < 0.0) return Vertex.RIGHT;\n\t\tif (a.getX() * b.getX() < 0.0 || a.getY() * b.getY() < 0.0) return Vertex.BEHIND;\n\t\tif (a.magn() < b.magn()) return Vertex.BEYOND;\n\t\tif (p0.equals(p2)) return Vertex.ORIGIN;\n\t\tif (p1.equals(p2)) return Vertex.DESTINATION;\n\t\treturn Vertex.BETWEEN;\n\t},\n\tsum: function sum(v) {\n\t\treturn new Vertex(this.p.x + v.getX(), this.p.y + v.getY());\n\t},\n\tdistance: function distance(v1, v2) {\n\t\treturn Math.sqrt(Math.pow(v2.getX() - v1.getX(), 2.0) + Math.pow(v2.getY() - v1.getY(), 2.0));\n\t},\n\tcircumRadiusRatio: function circumRadiusRatio(b, c) {\n\t\tvar x = this.circleCenter(b, c);\n\t\tvar radius = this.distance(x, b);\n\t\tvar edgeLength = this.distance(this, b);\n\t\tvar el = this.distance(b, c);\n\t\tif (el < edgeLength) {\n\t\t\tedgeLength = el;\n\t\t}\n\t\tel = this.distance(c, this);\n\t\tif (el < edgeLength) {\n\t\t\tedgeLength = el;\n\t\t}\n\t\treturn radius / edgeLength;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Vertex;\n\t}\n});\nVertex.interpolateZ = function () {\n\tif (arguments.length === 3) {\n\t\tvar p = arguments[0],\n\t\t    p0 = arguments[1],\n\t\t    p1 = arguments[2];\n\t\tvar segLen = p0.distance(p1);\n\t\tvar ptLen = p.distance(p0);\n\t\tvar dz = p1.z - p0.z;\n\t\tvar pz = p0.z + dz * (ptLen / segLen);\n\t\treturn pz;\n\t} else if (arguments.length === 4) {\n\t\tvar _p2 = arguments[0],\n\t\t    v0 = arguments[1],\n\t\t    v1 = arguments[2],\n\t\t    v2 = arguments[3];\n\t\tvar x0 = v0.x;\n\t\tvar y0 = v0.y;\n\t\tvar a = v1.x - x0;\n\t\tvar b = v2.x - x0;\n\t\tvar c = v1.y - y0;\n\t\tvar d = v2.y - y0;\n\t\tvar det = a * d - b * c;\n\t\tvar dx = _p2.x - x0;\n\t\tvar dy = _p2.y - y0;\n\t\tvar t = (d * dx - b * dy) / det;\n\t\tvar u = (-c * dx + a * dy) / det;\n\t\tvar z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\n\t\treturn z;\n\t}\n};\nVertex.LEFT = 0;\nVertex.RIGHT = 1;\nVertex.BEYOND = 2;\nVertex.BEHIND = 3;\nVertex.BETWEEN = 4;\nVertex.ORIGIN = 5;\nVertex.DESTINATION = 6;\n\nfunction ConstraintVertex() {\n\tthis._isOnConstraint = null;\n\tthis.constraint = null;\n\tvar p = arguments[0];\n\tVertex.call(this, p);\n}\ninherits(ConstraintVertex, Vertex);\nextend(ConstraintVertex.prototype, {\n\tgetConstraint: function getConstraint() {\n\t\treturn this.constraint;\n\t},\n\tsetOnConstraint: function setOnConstraint(isOnConstraint) {\n\t\tthis._isOnConstraint = isOnConstraint;\n\t},\n\tmerge: function merge(other) {\n\t\tif (other._isOnConstraint) {\n\t\t\tthis._isOnConstraint = true;\n\t\t\tthis.constraint = other.constraint;\n\t\t}\n\t},\n\tisOnConstraint: function isOnConstraint() {\n\t\treturn this._isOnConstraint;\n\t},\n\tsetConstraint: function setConstraint(constraint) {\n\t\tthis._isOnConstraint = true;\n\t\tthis.constraint = constraint;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ConstraintVertex;\n\t}\n});\n\nfunction QuadEdge() {\n\tthis._rot = null;\n\tthis.vertex = null;\n\tthis.next = null;\n\tthis.data = null;\n}\nextend(QuadEdge.prototype, {\n\tequalsNonOriented: function equalsNonOriented(qe) {\n\t\tif (this.equalsOriented(qe)) return true;\n\t\tif (this.equalsOriented(qe.sym())) return true;\n\t\treturn false;\n\t},\n\ttoLineSegment: function toLineSegment() {\n\t\treturn new LineSegment(this.vertex.getCoordinate(), this.dest().getCoordinate());\n\t},\n\tdest: function dest() {\n\t\treturn this.sym().orig();\n\t},\n\toNext: function oNext() {\n\t\treturn this.next;\n\t},\n\tequalsOriented: function equalsOriented(qe) {\n\t\tif (this.orig().getCoordinate().equals2D(qe.orig().getCoordinate()) && this.dest().getCoordinate().equals2D(qe.dest().getCoordinate())) return true;\n\t\treturn false;\n\t},\n\tdNext: function dNext() {\n\t\treturn this.sym().oNext().sym();\n\t},\n\tlPrev: function lPrev() {\n\t\treturn this.next.sym();\n\t},\n\trPrev: function rPrev() {\n\t\treturn this.sym().oNext();\n\t},\n\trot: function rot() {\n\t\treturn this._rot;\n\t},\n\toPrev: function oPrev() {\n\t\treturn this._rot.next._rot;\n\t},\n\tsym: function sym() {\n\t\treturn this._rot._rot;\n\t},\n\tsetOrig: function setOrig(o) {\n\t\tthis.vertex = o;\n\t},\n\tlNext: function lNext() {\n\t\treturn this.invRot().oNext().rot();\n\t},\n\tgetLength: function getLength() {\n\t\treturn this.orig().getCoordinate().distance(this.dest().getCoordinate());\n\t},\n\tinvRot: function invRot() {\n\t\treturn this._rot.sym();\n\t},\n\tsetDest: function setDest(d) {\n\t\tthis.sym().setOrig(d);\n\t},\n\tsetData: function setData(data) {\n\t\tthis.data = data;\n\t},\n\tgetData: function getData() {\n\t\treturn this.data;\n\t},\n\tdelete: function _delete() {\n\t\tthis._rot = null;\n\t},\n\torig: function orig() {\n\t\treturn this.vertex;\n\t},\n\trNext: function rNext() {\n\t\treturn this._rot.next.invRot();\n\t},\n\ttoString: function toString() {\n\t\tvar p0 = this.vertex.getCoordinate();\n\t\tvar p1 = this.dest().getCoordinate();\n\t\treturn WKTWriter.toLineString(p0, p1);\n\t},\n\tisLive: function isLive() {\n\t\treturn this._rot !== null;\n\t},\n\tgetPrimary: function getPrimary() {\n\t\tif (this.orig().getCoordinate().compareTo(this.dest().getCoordinate()) <= 0) return this;else return this.sym();\n\t},\n\tdPrev: function dPrev() {\n\t\treturn this.invRot().oNext().invRot();\n\t},\n\tsetNext: function setNext(next) {\n\t\tthis.next = next;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn QuadEdge;\n\t}\n});\nQuadEdge.makeEdge = function (o, d) {\n\tvar q0 = new QuadEdge();\n\tvar q1 = new QuadEdge();\n\tvar q2 = new QuadEdge();\n\tvar q3 = new QuadEdge();\n\tq0._rot = q1;\n\tq1._rot = q2;\n\tq2._rot = q3;\n\tq3._rot = q0;\n\tq0.setNext(q0);\n\tq1.setNext(q3);\n\tq2.setNext(q2);\n\tq3.setNext(q1);\n\tvar base = q0;\n\tbase.setOrig(o);\n\tbase.setDest(d);\n\treturn base;\n};\nQuadEdge.swap = function (e) {\n\tvar a = e.oPrev();\n\tvar b = e.sym().oPrev();\n\tQuadEdge.splice(e, a);\n\tQuadEdge.splice(e.sym(), b);\n\tQuadEdge.splice(e, a.lNext());\n\tQuadEdge.splice(e.sym(), b.lNext());\n\te.setOrig(a.dest());\n\te.setDest(b.dest());\n};\nQuadEdge.splice = function (a, b) {\n\tvar alpha = a.oNext().rot();\n\tvar beta = b.oNext().rot();\n\tvar t1 = b.oNext();\n\tvar t2 = a.oNext();\n\tvar t3 = beta.oNext();\n\tvar t4 = alpha.oNext();\n\ta.setNext(t1);\n\tb.setNext(t2);\n\talpha.setNext(t3);\n\tbeta.setNext(t4);\n};\nQuadEdge.connect = function (a, b) {\n\tvar e = QuadEdge.makeEdge(a.dest(), b.orig());\n\tQuadEdge.splice(e, a.lNext());\n\tQuadEdge.splice(e.sym(), b);\n\treturn e;\n};\n\nfunction IncrementalDelaunayTriangulator() {\n\tthis.subdiv = null;\n\tthis.isUsingTolerance = false;\n\tvar subdiv = arguments[0];\n\tthis.subdiv = subdiv;\n\tthis.isUsingTolerance = subdiv.getTolerance() > 0.0;\n}\nextend(IncrementalDelaunayTriangulator.prototype, {\n\tinsertSite: function insertSite(v) {\n\t\tvar e = this.subdiv.locate(v);\n\t\tif (this.subdiv.isVertexOfEdge(e, v)) {\n\t\t\treturn e;\n\t\t} else if (this.subdiv.isOnEdge(e, v.getCoordinate())) {\n\t\t\te = e.oPrev();\n\t\t\tthis.subdiv.delete(e.oNext());\n\t\t}\n\t\tvar base = this.subdiv.makeEdge(e.orig(), v);\n\t\tQuadEdge.splice(base, e);\n\t\tvar startEdge = base;\n\t\tdo {\n\t\t\tbase = this.subdiv.connect(e, base.sym());\n\t\t\te = base.oPrev();\n\t\t} while (e.lNext() !== startEdge);\n\t\tdo {\n\t\t\tvar t = e.oPrev();\n\t\t\tif (t.dest().rightOf(e) && v.isInCircle(e.orig(), t.dest(), e.dest())) {\n\t\t\t\tQuadEdge.swap(e);\n\t\t\t\te = e.oPrev();\n\t\t\t} else if (e.oNext() === startEdge) {\n\t\t\t\treturn base;\n\t\t\t} else {\n\t\t\t\te = e.oNext().lPrev();\n\t\t\t}\n\t\t} while (true);\n\t},\n\tinsertSites: function insertSites(vertices) {\n\t\tfor (var i = vertices.iterator(); i.hasNext();) {\n\t\t\tvar v = i.next();\n\t\t\tthis.insertSite(v);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn IncrementalDelaunayTriangulator;\n\t}\n});\n\nfunction QuadEdgeLocator() {}\nextend(QuadEdgeLocator.prototype, {\n\tlocate: function locate(v) {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn QuadEdgeLocator;\n\t}\n});\n\nfunction LastFoundQuadEdgeLocator() {\n\tthis.subdiv = null;\n\tthis.lastEdge = null;\n\tvar subdiv = arguments[0];\n\tthis.subdiv = subdiv;\n\tthis.init();\n}\nextend(LastFoundQuadEdgeLocator.prototype, {\n\tinit: function init() {\n\t\tthis.lastEdge = this.findEdge();\n\t},\n\tlocate: function locate(v) {\n\t\tif (!this.lastEdge.isLive()) {\n\t\t\tthis.init();\n\t\t}\n\t\tvar e = this.subdiv.locateFromEdge(v, this.lastEdge);\n\t\tthis.lastEdge = e;\n\t\treturn e;\n\t},\n\tfindEdge: function findEdge() {\n\t\tvar edges = this.subdiv.getEdges();\n\t\treturn edges.iterator().next();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [QuadEdgeLocator];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LastFoundQuadEdgeLocator;\n\t}\n});\n\nfunction LocateFailureException() {\n\tthis.seg = null;\n\tif (arguments.length === 1) {\n\t\tif (typeof arguments[0] === \"string\") {\n\t\t\tvar msg = arguments[0];\n\t\t\tRuntimeException.call(this, msg);\n\t\t} else if (arguments[0] instanceof LineSegment) {\n\t\t\tvar seg = arguments[0];\n\t\t\tRuntimeException.call(this, \"Locate failed to converge (at edge: \" + seg + \").  Possible causes include invalid Subdivision topology or very close sites\");\n\t\t\tthis.seg = new LineSegment(seg);\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tvar _msg = arguments[0],\n\t\t    _seg = arguments[1];\n\t\tRuntimeException.call(this, LocateFailureException.msgWithSpatial(_msg, _seg));\n\t\tthis.seg = new LineSegment(_seg);\n\t}\n}\ninherits(LocateFailureException, RuntimeException);\nextend(LocateFailureException.prototype, {\n\tgetSegment: function getSegment() {\n\t\treturn this.seg;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LocateFailureException;\n\t}\n});\nLocateFailureException.msgWithSpatial = function (msg, seg) {\n\tif (seg !== null) return msg + \" [ \" + seg + \" ]\";\n\treturn msg;\n};\n\nfunction TriangleVisitor() {}\nextend(TriangleVisitor.prototype, {\n\tvisit: function visit(triEdges) {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn TriangleVisitor;\n\t}\n});\n\nfunction QuadEdgeSubdivision() {\n\tthis.visitedKey = 0;\n\tthis.quadEdges = new ArrayList();\n\tthis.startingEdge = null;\n\tthis.tolerance = null;\n\tthis.edgeCoincidenceTolerance = null;\n\tthis.frameVertex = new Array(3).fill(null);\n\tthis.frameEnv = null;\n\tthis.locator = null;\n\tthis.seg = new LineSegment();\n\tthis.triEdges = new Array(3).fill(null);\n\tvar env = arguments[0],\n\t    tolerance = arguments[1];\n\tthis.tolerance = tolerance;\n\tthis.edgeCoincidenceTolerance = tolerance / QuadEdgeSubdivision.EDGE_COINCIDENCE_TOL_FACTOR;\n\tthis.createFrame(env);\n\tthis.startingEdge = this.initSubdiv();\n\tthis.locator = new LastFoundQuadEdgeLocator(this);\n}\nextend(QuadEdgeSubdivision.prototype, {\n\tgetTriangleVertices: function getTriangleVertices(includeFrame) {\n\t\tvar visitor = new TriangleVertexListVisitor();\n\t\tthis.visitTriangles(visitor, includeFrame);\n\t\treturn visitor.getTriangleVertices();\n\t},\n\tisFrameVertex: function isFrameVertex(v) {\n\t\tif (v.equals(this.frameVertex[0])) return true;\n\t\tif (v.equals(this.frameVertex[1])) return true;\n\t\tif (v.equals(this.frameVertex[2])) return true;\n\t\treturn false;\n\t},\n\tisVertexOfEdge: function isVertexOfEdge(e, v) {\n\t\tif (v.equals(e.orig(), this.tolerance) || v.equals(e.dest(), this.tolerance)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\tconnect: function connect(a, b) {\n\t\tvar q = QuadEdge.connect(a, b);\n\t\tthis.quadEdges.add(q);\n\t\treturn q;\n\t},\n\tgetVoronoiCellPolygon: function getVoronoiCellPolygon(qe, geomFact) {\n\t\tvar cellPts = new ArrayList();\n\t\tvar startQE = qe;\n\t\tdo {\n\t\t\tvar cc = qe.rot().orig().getCoordinate();\n\t\t\tcellPts.add(cc);\n\t\t\tqe = qe.oPrev();\n\t\t} while (qe !== startQE);\n\t\tvar coordList = new CoordinateList();\n\t\tcoordList.addAll(cellPts, false);\n\t\tcoordList.closeRing();\n\t\tif (coordList.size() < 4) {\n\t\t\tSystem.out.println(coordList);\n\t\t\tcoordList.add(coordList.get(coordList.size() - 1), true);\n\t\t}\n\t\tvar pts = coordList.toCoordinateArray();\n\t\tvar cellPoly = geomFact.createPolygon(geomFact.createLinearRing(pts), null);\n\t\tvar v = startQE.orig();\n\t\tcellPoly.setUserData(v.getCoordinate());\n\t\treturn cellPoly;\n\t},\n\tsetLocator: function setLocator(locator) {\n\t\tthis.locator = locator;\n\t},\n\tinitSubdiv: function initSubdiv() {\n\t\tvar ea = this.makeEdge(this.frameVertex[0], this.frameVertex[1]);\n\t\tvar eb = this.makeEdge(this.frameVertex[1], this.frameVertex[2]);\n\t\tQuadEdge.splice(ea.sym(), eb);\n\t\tvar ec = this.makeEdge(this.frameVertex[2], this.frameVertex[0]);\n\t\tQuadEdge.splice(eb.sym(), ec);\n\t\tQuadEdge.splice(ec.sym(), ea);\n\t\treturn ea;\n\t},\n\tisFrameBorderEdge: function isFrameBorderEdge(e) {\n\t\tvar leftTri = new Array(3).fill(null);\n\t\tQuadEdgeSubdivision.getTriangleEdges(e, leftTri);\n\t\tvar rightTri = new Array(3).fill(null);\n\t\tQuadEdgeSubdivision.getTriangleEdges(e.sym(), rightTri);\n\t\tvar vLeftTriOther = e.lNext().dest();\n\t\tif (this.isFrameVertex(vLeftTriOther)) return true;\n\t\tvar vRightTriOther = e.sym().lNext().dest();\n\t\tif (this.isFrameVertex(vRightTriOther)) return true;\n\t\treturn false;\n\t},\n\tmakeEdge: function makeEdge(o, d) {\n\t\tvar q = QuadEdge.makeEdge(o, d);\n\t\tthis.quadEdges.add(q);\n\t\treturn q;\n\t},\n\tvisitTriangles: function visitTriangles(triVisitor, includeFrame) {\n\t\tthis.visitedKey++;\n\t\tvar edgeStack = new Stack();\n\t\tedgeStack.push(this.startingEdge);\n\t\tvar visitedEdges = new HashSet();\n\t\twhile (!edgeStack.empty()) {\n\t\t\tvar edge = edgeStack.pop();\n\t\t\tif (!visitedEdges.contains(edge)) {\n\t\t\t\tvar triEdges = this.fetchTriangleToVisit(edge, edgeStack, includeFrame, visitedEdges);\n\t\t\t\tif (triEdges !== null) triVisitor.visit(triEdges);\n\t\t\t}\n\t\t}\n\t},\n\tisFrameEdge: function isFrameEdge(e) {\n\t\tif (this.isFrameVertex(e.orig()) || this.isFrameVertex(e.dest())) return true;\n\t\treturn false;\n\t},\n\tisOnEdge: function isOnEdge(e, p) {\n\t\tthis.seg.setCoordinates(e.orig().getCoordinate(), e.dest().getCoordinate());\n\t\tvar dist = this.seg.distance(p);\n\t\treturn dist < this.edgeCoincidenceTolerance;\n\t},\n\tgetEnvelope: function getEnvelope() {\n\t\treturn new Envelope(this.frameEnv);\n\t},\n\tcreateFrame: function createFrame(env) {\n\t\tvar deltaX = env.getWidth();\n\t\tvar deltaY = env.getHeight();\n\t\tvar offset = 0.0;\n\t\tif (deltaX > deltaY) {\n\t\t\toffset = deltaX * 10.0;\n\t\t} else {\n\t\t\toffset = deltaY * 10.0;\n\t\t}\n\t\tthis.frameVertex[0] = new Vertex((env.getMaxX() + env.getMinX()) / 2.0, env.getMaxY() + offset);\n\t\tthis.frameVertex[1] = new Vertex(env.getMinX() - offset, env.getMinY() - offset);\n\t\tthis.frameVertex[2] = new Vertex(env.getMaxX() + offset, env.getMinY() - offset);\n\t\tthis.frameEnv = new Envelope(this.frameVertex[0].getCoordinate(), this.frameVertex[1].getCoordinate());\n\t\tthis.frameEnv.expandToInclude(this.frameVertex[2].getCoordinate());\n\t},\n\tgetTriangleCoordinates: function getTriangleCoordinates(includeFrame) {\n\t\tvar visitor = new TriangleCoordinatesVisitor();\n\t\tthis.visitTriangles(visitor, includeFrame);\n\t\treturn visitor.getTriangles();\n\t},\n\tgetVertices: function getVertices(includeFrame) {\n\t\tvar vertices = new HashSet();\n\t\tfor (var i = this.quadEdges.iterator(); i.hasNext();) {\n\t\t\tvar qe = i.next();\n\t\t\tvar v = qe.orig();\n\t\t\tif (includeFrame || !this.isFrameVertex(v)) vertices.add(v);\n\t\t\tvar vd = qe.dest();\n\t\t\tif (includeFrame || !this.isFrameVertex(vd)) vertices.add(vd);\n\t\t}\n\t\treturn vertices;\n\t},\n\tfetchTriangleToVisit: function fetchTriangleToVisit(edge, edgeStack, includeFrame, visitedEdges) {\n\t\tvar curr = edge;\n\t\tvar edgeCount = 0;\n\t\tvar isFrame = false;\n\t\tdo {\n\t\t\tthis.triEdges[edgeCount] = curr;\n\t\t\tif (this.isFrameEdge(curr)) isFrame = true;\n\t\t\tvar sym = curr.sym();\n\t\t\tif (!visitedEdges.contains(sym)) edgeStack.push(sym);\n\t\t\tvisitedEdges.add(curr);\n\t\t\tedgeCount++;\n\t\t\tcurr = curr.lNext();\n\t\t} while (curr !== edge);\n\t\tif (isFrame && !includeFrame) return null;\n\t\treturn this.triEdges;\n\t},\n\tgetEdges: function getEdges() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.quadEdges;\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar geomFact = arguments[0];\n\t\t\tvar quadEdges = this.getPrimaryEdges(false);\n\t\t\tvar edges = new Array(quadEdges.size()).fill(null);\n\t\t\tvar i = 0;\n\t\t\tfor (var it = quadEdges.iterator(); it.hasNext();) {\n\t\t\t\tvar qe = it.next();\n\t\t\t\tedges[i++] = geomFact.createLineString([qe.orig().getCoordinate(), qe.dest().getCoordinate()]);\n\t\t\t}\n\t\t\treturn geomFact.createMultiLineString(edges);\n\t\t}\n\t},\n\tgetVertexUniqueEdges: function getVertexUniqueEdges(includeFrame) {\n\t\tvar edges = new ArrayList();\n\t\tvar visitedVertices = new HashSet();\n\t\tfor (var i = this.quadEdges.iterator(); i.hasNext();) {\n\t\t\tvar qe = i.next();\n\t\t\tvar v = qe.orig();\n\t\t\tif (!visitedVertices.contains(v)) {\n\t\t\t\tvisitedVertices.add(v);\n\t\t\t\tif (includeFrame || !this.isFrameVertex(v)) {\n\t\t\t\t\tedges.add(qe);\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar qd = qe.sym();\n\t\t\tvar vd = qd.orig();\n\t\t\tif (!visitedVertices.contains(vd)) {\n\t\t\t\tvisitedVertices.add(vd);\n\t\t\t\tif (includeFrame || !this.isFrameVertex(vd)) {\n\t\t\t\t\tedges.add(qd);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn edges;\n\t},\n\tgetTriangleEdges: function getTriangleEdges(includeFrame) {\n\t\tvar visitor = new TriangleEdgesListVisitor();\n\t\tthis.visitTriangles(visitor, includeFrame);\n\t\treturn visitor.getTriangleEdges();\n\t},\n\tgetPrimaryEdges: function getPrimaryEdges(includeFrame) {\n\t\tthis.visitedKey++;\n\t\tvar edges = new ArrayList();\n\t\tvar edgeStack = new Stack();\n\t\tedgeStack.push(this.startingEdge);\n\t\tvar visitedEdges = new HashSet();\n\t\twhile (!edgeStack.empty()) {\n\t\t\tvar edge = edgeStack.pop();\n\t\t\tif (!visitedEdges.contains(edge)) {\n\t\t\t\tvar priQE = edge.getPrimary();\n\t\t\t\tif (includeFrame || !this.isFrameEdge(priQE)) edges.add(priQE);\n\t\t\t\tedgeStack.push(edge.oNext());\n\t\t\t\tedgeStack.push(edge.sym().oNext());\n\t\t\t\tvisitedEdges.add(edge);\n\t\t\t\tvisitedEdges.add(edge.sym());\n\t\t\t}\n\t\t}\n\t\treturn edges;\n\t},\n\tdelete: function _delete(e) {\n\t\tQuadEdge.splice(e, e.oPrev());\n\t\tQuadEdge.splice(e.sym(), e.sym().oPrev());\n\t\tvar eSym = e.sym();\n\t\tvar eRot = e.rot();\n\t\tvar eRotSym = e.rot().sym();\n\t\tthis.quadEdges.remove(e);\n\t\tthis.quadEdges.remove(eSym);\n\t\tthis.quadEdges.remove(eRot);\n\t\tthis.quadEdges.remove(eRotSym);\n\t\te.delete();\n\t\teSym.delete();\n\t\teRot.delete();\n\t\teRotSym.delete();\n\t},\n\tlocateFromEdge: function locateFromEdge(v, startEdge) {\n\t\tvar iter = 0;\n\t\tvar maxIter = this.quadEdges.size();\n\t\tvar e = startEdge;\n\t\twhile (true) {\n\t\t\titer++;\n\t\t\tif (iter > maxIter) {\n\t\t\t\tthrow new LocateFailureException(e.toLineSegment());\n\t\t\t}\n\t\t\tif (v.equals(e.orig()) || v.equals(e.dest())) {\n\t\t\t\tbreak;\n\t\t\t} else if (v.rightOf(e)) {\n\t\t\t\te = e.sym();\n\t\t\t} else if (!v.rightOf(e.oNext())) {\n\t\t\t\te = e.oNext();\n\t\t\t} else if (!v.rightOf(e.dPrev())) {\n\t\t\t\te = e.dPrev();\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn e;\n\t},\n\tgetTolerance: function getTolerance() {\n\t\treturn this.tolerance;\n\t},\n\tgetVoronoiCellPolygons: function getVoronoiCellPolygons(geomFact) {\n\t\tthis.visitTriangles(new TriangleCircumcentreVisitor(), true);\n\t\tvar cells = new ArrayList();\n\t\tvar edges = this.getVertexUniqueEdges(false);\n\t\tfor (var i = edges.iterator(); i.hasNext();) {\n\t\t\tvar qe = i.next();\n\t\t\tcells.add(this.getVoronoiCellPolygon(qe, geomFact));\n\t\t}\n\t\treturn cells;\n\t},\n\tgetVoronoiDiagram: function getVoronoiDiagram(geomFact) {\n\t\tvar vorCells = this.getVoronoiCellPolygons(geomFact);\n\t\treturn geomFact.createGeometryCollection(GeometryFactory.toGeometryArray(vorCells));\n\t},\n\tgetTriangles: function getTriangles(geomFact) {\n\t\tvar triPtsList = this.getTriangleCoordinates(false);\n\t\tvar tris = new Array(triPtsList.size()).fill(null);\n\t\tvar i = 0;\n\t\tfor (var it = triPtsList.iterator(); it.hasNext();) {\n\t\t\tvar triPt = it.next();\n\t\t\ttris[i++] = geomFact.createPolygon(geomFact.createLinearRing(triPt), null);\n\t\t}\n\t\treturn geomFact.createGeometryCollection(tris);\n\t},\n\tinsertSite: function insertSite(v) {\n\t\tvar e = this.locate(v);\n\t\tif (v.equals(e.orig(), this.tolerance) || v.equals(e.dest(), this.tolerance)) {\n\t\t\treturn e;\n\t\t}\n\t\tvar base = this.makeEdge(e.orig(), v);\n\t\tQuadEdge.splice(base, e);\n\t\tvar startEdge = base;\n\t\tdo {\n\t\t\tbase = this.connect(e, base.sym());\n\t\t\te = base.oPrev();\n\t\t} while (e.lNext() !== startEdge);\n\t\treturn startEdge;\n\t},\n\tlocate: function locate() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Vertex) {\n\t\t\t\tvar v = arguments[0];\n\t\t\t\treturn this.locator.locate(v);\n\t\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\t\tvar p = arguments[0];\n\t\t\t\treturn this.locator.locate(new Vertex(p));\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar p0 = arguments[0],\n\t\t\t    p1 = arguments[1];\n\t\t\tvar e = this.locator.locate(new Vertex(p0));\n\t\t\tif (e === null) return null;\n\t\t\tvar base = e;\n\t\t\tif (e.dest().getCoordinate().equals2D(p0)) base = e.sym();\n\t\t\tvar locEdge = base;\n\t\t\tdo {\n\t\t\t\tif (locEdge.dest().getCoordinate().equals2D(p1)) return locEdge;\n\t\t\t\tlocEdge = locEdge.oNext();\n\t\t\t} while (locEdge !== base);\n\t\t\treturn null;\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn QuadEdgeSubdivision;\n\t}\n});\nQuadEdgeSubdivision.getTriangleEdges = function (startQE, triEdge) {\n\ttriEdge[0] = startQE;\n\ttriEdge[1] = triEdge[0].lNext();\n\ttriEdge[2] = triEdge[1].lNext();\n\tif (triEdge[2].lNext() !== triEdge[0]) throw new IllegalArgumentException(\"Edges do not form a triangle\");\n};\nfunction TriangleCircumcentreVisitor() {}\nextend(TriangleCircumcentreVisitor.prototype, {\n\tvisit: function visit(triEdges) {\n\t\tvar a = triEdges[0].orig().getCoordinate();\n\t\tvar b = triEdges[1].orig().getCoordinate();\n\t\tvar c = triEdges[2].orig().getCoordinate();\n\t\tvar cc = Triangle.circumcentre(a, b, c);\n\t\tvar ccVertex = new Vertex(cc);\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\ttriEdges[i].rot().setOrig(ccVertex);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [TriangleVisitor];\n\t},\n\tgetClass: function getClass() {\n\t\treturn TriangleCircumcentreVisitor;\n\t}\n});\nfunction TriangleEdgesListVisitor() {\n\tthis.triList = new ArrayList();\n}\nextend(TriangleEdgesListVisitor.prototype, {\n\tgetTriangleEdges: function getTriangleEdges() {\n\t\treturn this.triList;\n\t},\n\tvisit: function visit(triEdges) {\n\t\tthis.triList.add(triEdges.clone());\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [TriangleVisitor];\n\t},\n\tgetClass: function getClass() {\n\t\treturn TriangleEdgesListVisitor;\n\t}\n});\nfunction TriangleVertexListVisitor() {\n\tthis.triList = new ArrayList();\n}\nextend(TriangleVertexListVisitor.prototype, {\n\tvisit: function visit(triEdges) {\n\t\tthis.triList.add([triEdges[0].orig(), triEdges[1].orig(), triEdges[2].orig()]);\n\t},\n\tgetTriangleVertices: function getTriangleVertices() {\n\t\treturn this.triList;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [TriangleVisitor];\n\t},\n\tgetClass: function getClass() {\n\t\treturn TriangleVertexListVisitor;\n\t}\n});\nfunction TriangleCoordinatesVisitor() {\n\tthis.coordList = new CoordinateList();\n\tthis.triCoords = new ArrayList();\n}\nextend(TriangleCoordinatesVisitor.prototype, {\n\tcheckTriangleSize: function checkTriangleSize(pts) {\n\t\tvar loc = \"\";\n\t\tif (pts.length >= 2) loc = WKTWriter.toLineString(pts[0], pts[1]);else {\n\t\t\tif (pts.length >= 1) loc = WKTWriter.toPoint(pts[0]);\n\t\t}\n\t},\n\tvisit: function visit(triEdges) {\n\t\tthis.coordList.clear();\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\tvar v = triEdges[i].orig();\n\t\t\tthis.coordList.add(v.getCoordinate());\n\t\t}\n\t\tif (this.coordList.size() > 0) {\n\t\t\tthis.coordList.closeRing();\n\t\t\tvar pts = this.coordList.toCoordinateArray();\n\t\t\tif (pts.length !== 4) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthis.triCoords.add(pts);\n\t\t}\n\t},\n\tgetTriangles: function getTriangles() {\n\t\treturn this.triCoords;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [TriangleVisitor];\n\t},\n\tgetClass: function getClass() {\n\t\treturn TriangleCoordinatesVisitor;\n\t}\n});\nQuadEdgeSubdivision.TriangleCircumcentreVisitor = TriangleCircumcentreVisitor;\nQuadEdgeSubdivision.TriangleEdgesListVisitor = TriangleEdgesListVisitor;\nQuadEdgeSubdivision.TriangleVertexListVisitor = TriangleVertexListVisitor;\nQuadEdgeSubdivision.TriangleCoordinatesVisitor = TriangleCoordinatesVisitor;\nQuadEdgeSubdivision.EDGE_COINCIDENCE_TOL_FACTOR = 1000;\n\nfunction Segment() {\n\tthis.ls = null;\n\tthis.data = null;\n\tif (arguments.length === 2) {\n\t\tvar p0 = arguments[0],\n\t\t    p1 = arguments[1];\n\t\tthis.ls = new LineSegment(p0, p1);\n\t} else if (arguments.length === 3) {\n\t\tvar _p = arguments[0],\n\t\t    _p2 = arguments[1],\n\t\t    data = arguments[2];\n\t\tthis.ls = new LineSegment(_p, _p2);\n\t\tthis.data = data;\n\t} else if (arguments.length === 6) {\n\t\tvar x1 = arguments[0],\n\t\t    y1 = arguments[1],\n\t\t    z1 = arguments[2],\n\t\t    x2 = arguments[3],\n\t\t    y2 = arguments[4],\n\t\t    z2 = arguments[5];\n\t\tSegment.call(this, new Coordinate(x1, y1, z1), new Coordinate(x2, y2, z2));\n\t} else if (arguments.length === 7) {\n\t\tvar _x = arguments[0],\n\t\t    _y = arguments[1],\n\t\t    _z = arguments[2],\n\t\t    _x2 = arguments[3],\n\t\t    _y2 = arguments[4],\n\t\t    _z2 = arguments[5],\n\t\t    _data = arguments[6];\n\t\tSegment.call(this, new Coordinate(_x, _y, _z), new Coordinate(_x2, _y2, _z2), _data);\n\t}\n}\nextend(Segment.prototype, {\n\tgetLineSegment: function getLineSegment() {\n\t\treturn this.ls;\n\t},\n\tgetEndZ: function getEndZ() {\n\t\tvar p = this.ls.getCoordinate(1);\n\t\treturn p.z;\n\t},\n\tgetStartZ: function getStartZ() {\n\t\tvar p = this.ls.getCoordinate(0);\n\t\treturn p.z;\n\t},\n\tintersection: function intersection(s) {\n\t\treturn this.ls.intersection(s.getLineSegment());\n\t},\n\tgetStart: function getStart() {\n\t\treturn this.ls.getCoordinate(0);\n\t},\n\tgetEnd: function getEnd() {\n\t\treturn this.ls.getCoordinate(1);\n\t},\n\tgetEndY: function getEndY() {\n\t\tvar p = this.ls.getCoordinate(1);\n\t\treturn p.y;\n\t},\n\tgetStartX: function getStartX() {\n\t\tvar p = this.ls.getCoordinate(0);\n\t\treturn p.x;\n\t},\n\tequalsTopo: function equalsTopo(s) {\n\t\treturn this.ls.equalsTopo(s.getLineSegment());\n\t},\n\tgetStartY: function getStartY() {\n\t\tvar p = this.ls.getCoordinate(0);\n\t\treturn p.y;\n\t},\n\tsetData: function setData(data) {\n\t\tthis.data = data;\n\t},\n\tgetData: function getData() {\n\t\treturn this.data;\n\t},\n\tgetEndX: function getEndX() {\n\t\tvar p = this.ls.getCoordinate(1);\n\t\treturn p.x;\n\t},\n\ttoString: function toString() {\n\t\treturn this.ls.toString();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Segment;\n\t}\n});\n\nfunction KdNodeVisitor() {}\nextend(KdNodeVisitor.prototype, {\n\tvisit: function visit(node) {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn KdNodeVisitor;\n\t}\n});\n\nfunction KdNode() {\n\tthis.p = null;\n\tthis.data = null;\n\tthis.left = null;\n\tthis.right = null;\n\tthis.count = null;\n\tif (arguments.length === 2) {\n\t\tvar p = arguments[0],\n\t\t    data = arguments[1];\n\t\tthis.p = new Coordinate(p);\n\t\tthis.left = null;\n\t\tthis.right = null;\n\t\tthis.count = 1;\n\t\tthis.data = data;\n\t} else if (arguments.length === 3) {\n\t\tvar _x = arguments[0],\n\t\t    _y = arguments[1],\n\t\t    _data = arguments[2];\n\t\tthis.p = new Coordinate(_x, _y);\n\t\tthis.left = null;\n\t\tthis.right = null;\n\t\tthis.count = 1;\n\t\tthis.data = _data;\n\t}\n}\nextend(KdNode.prototype, {\n\tisRepeated: function isRepeated() {\n\t\treturn this.count > 1;\n\t},\n\tgetRight: function getRight() {\n\t\treturn this.right;\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this.p;\n\t},\n\tsetLeft: function setLeft(_left) {\n\t\tthis.left = _left;\n\t},\n\tgetX: function getX() {\n\t\treturn this.p.x;\n\t},\n\tgetData: function getData() {\n\t\treturn this.data;\n\t},\n\tgetCount: function getCount() {\n\t\treturn this.count;\n\t},\n\tgetLeft: function getLeft() {\n\t\treturn this.left;\n\t},\n\tgetY: function getY() {\n\t\treturn this.p.y;\n\t},\n\tincrement: function increment() {\n\t\tthis.count = this.count + 1;\n\t},\n\tsetRight: function setRight(_right) {\n\t\tthis.right = _right;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn KdNode;\n\t}\n});\n\nfunction KdTree() {\n\tthis.root = null;\n\tthis.numberOfNodes = null;\n\tthis.tolerance = null;\n\tif (arguments.length === 0) {\n\t\tKdTree.call(this, 0.0);\n\t} else if (arguments.length === 1) {\n\t\tvar tolerance = arguments[0];\n\t\tthis.tolerance = tolerance;\n\t}\n}\nextend(KdTree.prototype, {\n\tinsert: function insert() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar p = arguments[0];\n\t\t\treturn this.insert(p, null);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar _p = arguments[0],\n\t\t\t    data = arguments[1];\n\t\t\tif (this.root === null) {\n\t\t\t\tthis.root = new KdNode(_p, data);\n\t\t\t\treturn this.root;\n\t\t\t}\n\t\t\tif (this.tolerance > 0) {\n\t\t\t\tvar matchNode = this.findBestMatchNode(_p);\n\t\t\t\tif (matchNode !== null) {\n\t\t\t\t\tmatchNode.increment();\n\t\t\t\t\treturn matchNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.insertExact(_p, data);\n\t\t}\n\t},\n\tquery: function query() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar queryEnv = arguments[0];\n\t\t\tvar result = new ArrayList();\n\t\t\tthis.query(queryEnv, result);\n\t\t\treturn result;\n\t\t} else if (arguments.length === 2) {\n\t\t\tif (arguments[0] instanceof Envelope && hasInterface(arguments[1], List)) {\n\t\t\t\tvar _queryEnv = arguments[0],\n\t\t\t\t    _result = arguments[1];\n\t\t\t\tthis.queryNode(this.root, _queryEnv, true, {\n\t\t\t\t\tinterfaces_: function interfaces_() {\n\t\t\t\t\t\treturn [KdNodeVisitor];\n\t\t\t\t\t},\n\t\t\t\t\tvisit: function visit(node) {\n\t\t\t\t\t\t_result.add(node);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (arguments[0] instanceof Envelope && hasInterface(arguments[1], KdNodeVisitor)) {\n\t\t\t\tvar _queryEnv2 = arguments[0],\n\t\t\t\t    visitor = arguments[1];\n\t\t\t\tthis.queryNode(this.root, _queryEnv2, true, visitor);\n\t\t\t}\n\t\t}\n\t},\n\tqueryNode: function queryNode(currentNode, queryEnv, odd, visitor) {\n\t\tif (currentNode === null) return null;\n\t\tvar min = null;\n\t\tvar max = null;\n\t\tvar discriminant = null;\n\t\tif (odd) {\n\t\t\tmin = queryEnv.getMinX();\n\t\t\tmax = queryEnv.getMaxX();\n\t\t\tdiscriminant = currentNode.getX();\n\t\t} else {\n\t\t\tmin = queryEnv.getMinY();\n\t\t\tmax = queryEnv.getMaxY();\n\t\t\tdiscriminant = currentNode.getY();\n\t\t}\n\t\tvar searchLeft = min < discriminant;\n\t\tvar searchRight = discriminant <= max;\n\t\tif (searchLeft) {\n\t\t\tthis.queryNode(currentNode.getLeft(), queryEnv, !odd, visitor);\n\t\t}\n\t\tif (queryEnv.contains(currentNode.getCoordinate())) {\n\t\t\tvisitor.visit(currentNode);\n\t\t}\n\t\tif (searchRight) {\n\t\t\tthis.queryNode(currentNode.getRight(), queryEnv, !odd, visitor);\n\t\t}\n\t},\n\tfindBestMatchNode: function findBestMatchNode(p) {\n\t\tvar visitor = new BestMatchVisitor(p, this.tolerance);\n\t\tthis.query(visitor.queryEnvelope(), visitor);\n\t\treturn visitor.getNode();\n\t},\n\tisEmpty: function isEmpty() {\n\t\tif (this.root === null) return true;\n\t\treturn false;\n\t},\n\tinsertExact: function insertExact(p, data) {\n\t\tvar currentNode = this.root;\n\t\tvar leafNode = this.root;\n\t\tvar isOddLevel = true;\n\t\tvar isLessThan = true;\n\t\twhile (currentNode !== null) {\n\t\t\tif (currentNode !== null) {\n\t\t\t\tvar isInTolerance = p.distance(currentNode.getCoordinate()) <= this.tolerance;\n\t\t\t\tif (isInTolerance) {\n\t\t\t\t\tcurrentNode.increment();\n\t\t\t\t\treturn currentNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isOddLevel) {\n\t\t\t\tisLessThan = p.x < currentNode.getX();\n\t\t\t} else {\n\t\t\t\tisLessThan = p.y < currentNode.getY();\n\t\t\t}\n\t\t\tleafNode = currentNode;\n\t\t\tif (isLessThan) {\n\t\t\t\tcurrentNode = currentNode.getLeft();\n\t\t\t} else {\n\t\t\t\tcurrentNode = currentNode.getRight();\n\t\t\t}\n\t\t\tisOddLevel = !isOddLevel;\n\t\t}\n\t\tthis.numberOfNodes = this.numberOfNodes + 1;\n\t\tvar node = new KdNode(p, data);\n\t\tif (isLessThan) {\n\t\t\tleafNode.setLeft(node);\n\t\t} else {\n\t\t\tleafNode.setRight(node);\n\t\t}\n\t\treturn node;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn KdTree;\n\t}\n});\nKdTree.toCoordinates = function () {\n\tif (arguments.length === 1) {\n\t\tvar kdnodes = arguments[0];\n\t\treturn KdTree.toCoordinates(kdnodes, false);\n\t} else if (arguments.length === 2) {\n\t\tvar _kdnodes = arguments[0],\n\t\t    includeRepeated = arguments[1];\n\t\tvar coord = new CoordinateList();\n\t\tfor (var it = _kdnodes.iterator(); it.hasNext();) {\n\t\t\tvar node = it.next();\n\t\t\tvar count = includeRepeated ? node.getCount() : 1;\n\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\tcoord.add(node.getCoordinate(), true);\n\t\t\t}\n\t\t}\n\t\treturn coord.toCoordinateArray();\n\t}\n};\nfunction BestMatchVisitor() {\n\tthis.tolerance = null;\n\tthis.matchNode = null;\n\tthis.matchDist = 0.0;\n\tthis.p = null;\n\tvar p = arguments[0],\n\t    tolerance = arguments[1];\n\tthis.p = p;\n\tthis.tolerance = tolerance;\n}\nextend(BestMatchVisitor.prototype, {\n\tvisit: function visit(node) {\n\t\tvar dist = this.p.distance(node.getCoordinate());\n\t\tvar isInTolerance = dist <= this.tolerance;\n\t\tif (!isInTolerance) return null;\n\t\tvar update = false;\n\t\tif (this.matchNode === null || dist < this.matchDist || this.matchNode !== null && dist === this.matchDist && node.getCoordinate().compareTo(this.matchNode.getCoordinate()) < 1) update = true;\n\t\tif (update) {\n\t\t\tthis.matchNode = node;\n\t\t\tthis.matchDist = dist;\n\t\t}\n\t},\n\tqueryEnvelope: function queryEnvelope() {\n\t\tvar queryEnv = new Envelope(this.p);\n\t\tqueryEnv.expandBy(this.tolerance);\n\t\treturn queryEnv;\n\t},\n\tgetNode: function getNode() {\n\t\treturn this.matchNode;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [KdNodeVisitor];\n\t},\n\tgetClass: function getClass() {\n\t\treturn BestMatchVisitor;\n\t}\n});\nKdTree.BestMatchVisitor = BestMatchVisitor;\n\nfunction ConformingDelaunayTriangulator() {\n\tthis.initialVertices = null;\n\tthis.segVertices = null;\n\tthis.segments = new ArrayList();\n\tthis.subdiv = null;\n\tthis.incDel = null;\n\tthis.convexHull = null;\n\tthis.splitFinder = new NonEncroachingSplitPointFinder();\n\tthis.kdt = null;\n\tthis.vertexFactory = null;\n\tthis.computeAreaEnv = null;\n\tthis.splitPt = null;\n\tthis.tolerance = null;\n\tvar initialVertices = arguments[0],\n\t    tolerance = arguments[1];\n\tthis.initialVertices = new ArrayList(initialVertices);\n\tthis.tolerance = tolerance;\n\tthis.kdt = new KdTree(tolerance);\n}\nextend(ConformingDelaunayTriangulator.prototype, {\n\tgetInitialVertices: function getInitialVertices() {\n\t\treturn this.initialVertices;\n\t},\n\tgetKDT: function getKDT() {\n\t\treturn this.kdt;\n\t},\n\tenforceConstraints: function enforceConstraints() {\n\t\tthis.addConstraintVertices();\n\t\tvar count = 0;\n\t\tvar splits = 0;\n\t\tdo {\n\t\t\tsplits = this.enforceGabriel(this.segments);\n\t\t\tcount++;\n\t\t} while (splits > 0 && count < ConformingDelaunayTriangulator.MAX_SPLIT_ITER);\n\t},\n\tinsertSites: function insertSites(vertices) {\n\t\tfor (var i = vertices.iterator(); i.hasNext();) {\n\t\t\tvar v = i.next();\n\t\t\tthis.insertSite(v);\n\t\t}\n\t},\n\tgetVertexFactory: function getVertexFactory() {\n\t\treturn this.vertexFactory;\n\t},\n\tgetPointArray: function getPointArray() {\n\t\tvar pts = new Array(this.initialVertices.size() + this.segVertices.size()).fill(null);\n\t\tvar index = 0;\n\t\tfor (var i = this.initialVertices.iterator(); i.hasNext();) {\n\t\t\tvar v = i.next();\n\t\t\tpts[index++] = v.getCoordinate();\n\t\t}\n\t\tfor (var i2 = this.segVertices.iterator(); i2.hasNext();) {\n\t\t\tvar v = i2.next();\n\t\t\tpts[index++] = v.getCoordinate();\n\t\t}\n\t\treturn pts;\n\t},\n\tsetConstraints: function setConstraints(segments, segVertices) {\n\t\tthis.segments = segments;\n\t\tthis.segVertices = segVertices;\n\t},\n\tcomputeConvexHull: function computeConvexHull() {\n\t\tvar fact = new GeometryFactory();\n\t\tvar coords = this.getPointArray();\n\t\tvar hull = new ConvexHull(coords, fact);\n\t\tthis.convexHull = hull.getConvexHull();\n\t},\n\taddConstraintVertices: function addConstraintVertices() {\n\t\tthis.computeConvexHull();\n\t\tthis.insertSites(this.segVertices);\n\t},\n\tfindNonGabrielPoint: function findNonGabrielPoint(seg) {\n\t\tvar p = seg.getStart();\n\t\tvar q = seg.getEnd();\n\t\tvar midPt = new Coordinate((p.x + q.x) / 2.0, (p.y + q.y) / 2.0);\n\t\tvar segRadius = p.distance(midPt);\n\t\tvar env = new Envelope(midPt);\n\t\tenv.expandBy(segRadius);\n\t\tvar result = this.kdt.query(env);\n\t\tvar closestNonGabriel = null;\n\t\tvar minDist = Double.MAX_VALUE;\n\t\tfor (var i = result.iterator(); i.hasNext();) {\n\t\t\tvar nextNode = i.next();\n\t\t\tvar testPt = nextNode.getCoordinate();\n\t\t\tif (testPt.equals2D(p) || testPt.equals2D(q)) continue;\n\t\t\tvar testRadius = midPt.distance(testPt);\n\t\t\tif (testRadius < segRadius) {\n\t\t\t\tvar testDist = testRadius;\n\t\t\t\tif (closestNonGabriel === null || testDist < minDist) {\n\t\t\t\t\tclosestNonGabriel = testPt;\n\t\t\t\t\tminDist = testDist;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn closestNonGabriel;\n\t},\n\tgetConstraintSegments: function getConstraintSegments() {\n\t\treturn this.segments;\n\t},\n\tsetSplitPointFinder: function setSplitPointFinder(splitFinder) {\n\t\tthis.splitFinder = splitFinder;\n\t},\n\tgetConvexHull: function getConvexHull() {\n\t\treturn this.convexHull;\n\t},\n\tgetTolerance: function getTolerance() {\n\t\treturn this.tolerance;\n\t},\n\tenforceGabriel: function enforceGabriel(segsToInsert) {\n\t\tvar newSegments = new ArrayList();\n\t\tvar splits = 0;\n\t\tvar segsToRemove = new ArrayList();\n\t\tfor (var i = segsToInsert.iterator(); i.hasNext();) {\n\t\t\tvar seg = i.next();\n\t\t\tvar encroachPt = this.findNonGabrielPoint(seg);\n\t\t\tif (encroachPt === null) continue;\n\t\t\tthis.splitPt = this.splitFinder.findSplitPoint(seg, encroachPt);\n\t\t\tvar splitVertex = this.createVertex(this.splitPt, seg);\n\t\t\tvar insertedVertex = this.insertSite(splitVertex);\n\t\t\tvar s1 = new Segment(seg.getStartX(), seg.getStartY(), seg.getStartZ(), splitVertex.getX(), splitVertex.getY(), splitVertex.getZ(), seg.getData());\n\t\t\tvar s2 = new Segment(splitVertex.getX(), splitVertex.getY(), splitVertex.getZ(), seg.getEndX(), seg.getEndY(), seg.getEndZ(), seg.getData());\n\t\t\tnewSegments.add(s1);\n\t\t\tnewSegments.add(s2);\n\t\t\tsegsToRemove.add(seg);\n\t\t\tsplits = splits + 1;\n\t\t}\n\t\tsegsToInsert.removeAll(segsToRemove);\n\t\tsegsToInsert.addAll(newSegments);\n\t\treturn splits;\n\t},\n\tcreateVertex: function createVertex() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar p = arguments[0];\n\t\t\tvar v = null;\n\t\t\tif (this.vertexFactory !== null) v = this.vertexFactory.createVertex(p, null);else v = new ConstraintVertex(p);\n\t\t\treturn v;\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar _p = arguments[0],\n\t\t\t    seg = arguments[1];\n\t\t\tvar v = null;\n\t\t\tif (this.vertexFactory !== null) v = this.vertexFactory.createVertex(_p, seg);else v = new ConstraintVertex(_p);\n\t\t\tv.setOnConstraint(true);\n\t\t\treturn v;\n\t\t}\n\t},\n\tgetSubdivision: function getSubdivision() {\n\t\treturn this.subdiv;\n\t},\n\tcomputeBoundingBox: function computeBoundingBox() {\n\t\tvar vertexEnv = ConformingDelaunayTriangulator.computeVertexEnvelope(this.initialVertices);\n\t\tvar segEnv = ConformingDelaunayTriangulator.computeVertexEnvelope(this.segVertices);\n\t\tvar allPointsEnv = new Envelope(vertexEnv);\n\t\tallPointsEnv.expandToInclude(segEnv);\n\t\tvar deltaX = allPointsEnv.getWidth() * 0.2;\n\t\tvar deltaY = allPointsEnv.getHeight() * 0.2;\n\t\tvar delta = Math.max(deltaX, deltaY);\n\t\tthis.computeAreaEnv = new Envelope(allPointsEnv);\n\t\tthis.computeAreaEnv.expandBy(delta);\n\t},\n\tsetVertexFactory: function setVertexFactory(vertexFactory) {\n\t\tthis.vertexFactory = vertexFactory;\n\t},\n\tformInitialDelaunay: function formInitialDelaunay() {\n\t\tthis.computeBoundingBox();\n\t\tthis.subdiv = new QuadEdgeSubdivision(this.computeAreaEnv, this.tolerance);\n\t\tthis.subdiv.setLocator(new LastFoundQuadEdgeLocator(this.subdiv));\n\t\tthis.incDel = new IncrementalDelaunayTriangulator(this.subdiv);\n\t\tthis.insertSites(this.initialVertices);\n\t},\n\tinsertSite: function insertSite() {\n\t\tif (arguments[0] instanceof ConstraintVertex) {\n\t\t\tvar v = arguments[0];\n\t\t\tvar kdnode = this.kdt.insert(v.getCoordinate(), v);\n\t\t\tif (!kdnode.isRepeated()) {\n\t\t\t\tthis.incDel.insertSite(v);\n\t\t\t} else {\n\t\t\t\tvar snappedV = kdnode.getData();\n\t\t\t\tsnappedV.merge(v);\n\t\t\t\treturn snappedV;\n\t\t\t}\n\t\t\treturn v;\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tvar p = arguments[0];\n\t\t\tthis.insertSite(this.createVertex(p));\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ConformingDelaunayTriangulator;\n\t}\n});\nConformingDelaunayTriangulator.computeVertexEnvelope = function (vertices) {\n\tvar env = new Envelope();\n\tfor (var i = vertices.iterator(); i.hasNext();) {\n\t\tvar v = i.next();\n\t\tenv.expandToInclude(v.getCoordinate());\n\t}\n\treturn env;\n};\nConformingDelaunayTriangulator.MAX_SPLIT_ITER = 99;\n\nfunction DelaunayTriangulationBuilder() {\n\tthis.siteCoords = null;\n\tthis.tolerance = 0.0;\n\tthis.subdiv = null;\n}\nextend(DelaunayTriangulationBuilder.prototype, {\n\tcreate: function create() {\n\t\tif (this.subdiv !== null) return null;\n\t\tvar siteEnv = DelaunayTriangulationBuilder.envelope(this.siteCoords);\n\t\tvar vertices = DelaunayTriangulationBuilder.toVertices(this.siteCoords);\n\t\tthis.subdiv = new QuadEdgeSubdivision(siteEnv, this.tolerance);\n\t\tvar triangulator = new IncrementalDelaunayTriangulator(this.subdiv);\n\t\ttriangulator.insertSites(vertices);\n\t},\n\tsetTolerance: function setTolerance(tolerance) {\n\t\tthis.tolerance = tolerance;\n\t},\n\tsetSites: function setSites() {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tvar geom = arguments[0];\n\t\t\tthis.siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom);\n\t\t} else if (hasInterface(arguments[0], Collection)) {\n\t\t\tvar coords = arguments[0];\n\t\t\tthis.siteCoords = DelaunayTriangulationBuilder.unique(CoordinateArrays.toCoordinateArray(coords));\n\t\t}\n\t},\n\tgetEdges: function getEdges(geomFact) {\n\t\tthis.create();\n\t\treturn this.subdiv.getEdges(geomFact);\n\t},\n\tgetSubdivision: function getSubdivision() {\n\t\tthis.create();\n\t\treturn this.subdiv;\n\t},\n\tgetTriangles: function getTriangles(geomFact) {\n\t\tthis.create();\n\t\treturn this.subdiv.getTriangles(geomFact);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DelaunayTriangulationBuilder;\n\t}\n});\nDelaunayTriangulationBuilder.extractUniqueCoordinates = function (geom) {\n\tif (geom === null) return new CoordinateList();\n\tvar coords = geom.getCoordinates();\n\treturn DelaunayTriangulationBuilder.unique(coords);\n};\nDelaunayTriangulationBuilder.envelope = function (coords) {\n\tvar env = new Envelope();\n\tfor (var i = coords.iterator(); i.hasNext();) {\n\t\tvar coord = i.next();\n\t\tenv.expandToInclude(coord);\n\t}\n\treturn env;\n};\nDelaunayTriangulationBuilder.unique = function (coords) {\n\tvar coordsCopy = CoordinateArrays.copyDeep(coords);\n\tArrays.sort(coordsCopy);\n\tvar coordList = new CoordinateList(coordsCopy, false);\n\treturn coordList;\n};\nDelaunayTriangulationBuilder.toVertices = function (coords) {\n\tvar verts = new ArrayList();\n\tfor (var i = coords.iterator(); i.hasNext();) {\n\t\tvar coord = i.next();\n\t\tverts.add(new Vertex(coord));\n\t}\n\treturn verts;\n};\n\nfunction ConformingDelaunayTriangulationBuilder() {\n\tthis.siteCoords = null;\n\tthis.constraintLines = null;\n\tthis.tolerance = 0.0;\n\tthis.subdiv = null;\n\tthis.constraintVertexMap = new TreeMap();\n}\nextend(ConformingDelaunayTriangulationBuilder.prototype, {\n\tcreateSiteVertices: function createSiteVertices(coords) {\n\t\tvar verts = new ArrayList();\n\t\tfor (var i = coords.iterator(); i.hasNext();) {\n\t\t\tvar coord = i.next();\n\t\t\tif (this.constraintVertexMap.containsKey(coord)) continue;\n\t\t\tverts.add(new ConstraintVertex(coord));\n\t\t}\n\t\treturn verts;\n\t},\n\tcreate: function create() {\n\t\tif (this.subdiv !== null) return null;\n\t\tvar siteEnv = DelaunayTriangulationBuilder.envelope(this.siteCoords);\n\t\tvar segments = new ArrayList();\n\t\tif (this.constraintLines !== null) {\n\t\t\tsiteEnv.expandToInclude(this.constraintLines.getEnvelopeInternal());\n\t\t\tthis.createVertices(this.constraintLines);\n\t\t\tsegments = ConformingDelaunayTriangulationBuilder.createConstraintSegments(this.constraintLines);\n\t\t}\n\t\tvar sites = this.createSiteVertices(this.siteCoords);\n\t\tvar cdt = new ConformingDelaunayTriangulator(sites, this.tolerance);\n\t\tcdt.setConstraints(segments, new ArrayList(this.constraintVertexMap.values()));\n\t\tcdt.formInitialDelaunay();\n\t\tcdt.enforceConstraints();\n\t\tthis.subdiv = cdt.getSubdivision();\n\t},\n\tsetTolerance: function setTolerance(tolerance) {\n\t\tthis.tolerance = tolerance;\n\t},\n\tsetConstraints: function setConstraints(constraintLines) {\n\t\tthis.constraintLines = constraintLines;\n\t},\n\tsetSites: function setSites(geom) {\n\t\tthis.siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom);\n\t},\n\tgetEdges: function getEdges(geomFact) {\n\t\tthis.create();\n\t\treturn this.subdiv.getEdges(geomFact);\n\t},\n\tgetSubdivision: function getSubdivision() {\n\t\tthis.create();\n\t\treturn this.subdiv;\n\t},\n\tgetTriangles: function getTriangles(geomFact) {\n\t\tthis.create();\n\t\treturn this.subdiv.getTriangles(geomFact);\n\t},\n\tcreateVertices: function createVertices(geom) {\n\t\tvar coords = geom.getCoordinates();\n\t\tfor (var i = 0; i < coords.length; i++) {\n\t\t\tvar v = new ConstraintVertex(coords[i]);\n\t\t\tthis.constraintVertexMap.put(coords[i], v);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ConformingDelaunayTriangulationBuilder;\n\t}\n});\nConformingDelaunayTriangulationBuilder.createConstraintSegments = function () {\n\tif (arguments.length === 1) {\n\t\tvar geom = arguments[0];\n\t\tvar lines = LinearComponentExtracter.getLines(geom);\n\t\tvar constraintSegs = new ArrayList();\n\t\tfor (var i = lines.iterator(); i.hasNext();) {\n\t\t\tvar line = i.next();\n\t\t\tConformingDelaunayTriangulationBuilder.createConstraintSegments(line, constraintSegs);\n\t\t}\n\t\treturn constraintSegs;\n\t} else if (arguments.length === 2) {\n\t\tvar _line = arguments[0],\n\t\t    _constraintSegs = arguments[1];\n\t\tvar coords = _line.getCoordinates();\n\t\tfor (var i = 1; i < coords.length; i++) {\n\t\t\t_constraintSegs.add(new Segment(coords[i - 1], coords[i]));\n\t\t}\n\t}\n};\n\nfunction VoronoiDiagramBuilder() {\n\tthis.siteCoords = null;\n\tthis.tolerance = 0.0;\n\tthis.subdiv = null;\n\tthis.clipEnv = null;\n\tthis.diagramEnv = null;\n}\nextend(VoronoiDiagramBuilder.prototype, {\n\tcreate: function create() {\n\t\tif (this.subdiv !== null) return null;\n\t\tvar siteEnv = DelaunayTriangulationBuilder.envelope(this.siteCoords);\n\t\tthis.diagramEnv = siteEnv;\n\t\tvar expandBy = Math.max(this.diagramEnv.getWidth(), this.diagramEnv.getHeight());\n\t\tthis.diagramEnv.expandBy(expandBy);\n\t\tif (this.clipEnv !== null) this.diagramEnv.expandToInclude(this.clipEnv);\n\t\tvar vertices = DelaunayTriangulationBuilder.toVertices(this.siteCoords);\n\t\tthis.subdiv = new QuadEdgeSubdivision(siteEnv, this.tolerance);\n\t\tvar triangulator = new IncrementalDelaunayTriangulator(this.subdiv);\n\t\ttriangulator.insertSites(vertices);\n\t},\n\tgetDiagram: function getDiagram(geomFact) {\n\t\tthis.create();\n\t\tvar polys = this.subdiv.getVoronoiDiagram(geomFact);\n\t\treturn VoronoiDiagramBuilder.clipGeometryCollection(polys, this.diagramEnv);\n\t},\n\tsetTolerance: function setTolerance(tolerance) {\n\t\tthis.tolerance = tolerance;\n\t},\n\tsetSites: function setSites() {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tvar geom = arguments[0];\n\t\t\tthis.siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom);\n\t\t} else if (hasInterface(arguments[0], Collection)) {\n\t\t\tvar coords = arguments[0];\n\t\t\tthis.siteCoords = DelaunayTriangulationBuilder.unique(CoordinateArrays.toCoordinateArray(coords));\n\t\t}\n\t},\n\tsetClipEnvelope: function setClipEnvelope(clipEnv) {\n\t\tthis.clipEnv = clipEnv;\n\t},\n\tgetSubdivision: function getSubdivision() {\n\t\tthis.create();\n\t\treturn this.subdiv;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn VoronoiDiagramBuilder;\n\t}\n});\nVoronoiDiagramBuilder.clipGeometryCollection = function (geom, clipEnv) {\n\tvar clipPoly = geom.getFactory().toGeometry(clipEnv);\n\tvar clipped = new ArrayList();\n\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\tvar g = geom.getGeometryN(i);\n\t\tvar result = null;\n\t\tif (clipEnv.contains(g.getEnvelopeInternal())) result = g;else if (clipEnv.intersects(g.getEnvelopeInternal())) {\n\t\t\tresult = clipPoly.intersection(g);\n\t\t\tresult.setUserData(g.getUserData());\n\t\t}\n\t\tif (result !== null && !result.isEmpty()) {\n\t\t\tclipped.add(result);\n\t\t}\n\t}\n\treturn geom.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(clipped));\n};\n\n\n\nvar quadedge = Object.freeze({\n\tVertex: Vertex\n});\n\n\n\nvar triangulate = Object.freeze({\n\tConformingDelaunayTriangulationBuilder: ConformingDelaunayTriangulationBuilder,\n\tDelaunayTriangulationBuilder: DelaunayTriangulationBuilder,\n\tVoronoiDiagramBuilder: VoronoiDiagramBuilder,\n\tquadedge: quadedge\n});\n\nfunction LinearLocation() {\n\tthis.componentIndex = 0;\n\tthis.segmentIndex = 0;\n\tthis.segmentFraction = 0.0;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tvar loc = arguments[0];\n\t\tthis.componentIndex = loc.componentIndex;\n\t\tthis.segmentIndex = loc.segmentIndex;\n\t\tthis.segmentFraction = loc.segmentFraction;\n\t} else if (arguments.length === 2) {\n\t\tvar segmentIndex = arguments[0],\n\t\t    segmentFraction = arguments[1];\n\t\tLinearLocation.call(this, 0, segmentIndex, segmentFraction);\n\t} else if (arguments.length === 3) {\n\t\tvar componentIndex = arguments[0],\n\t\t    _segmentIndex = arguments[1],\n\t\t    _segmentFraction = arguments[2];\n\t\tthis.componentIndex = componentIndex;\n\t\tthis.segmentIndex = _segmentIndex;\n\t\tthis.segmentFraction = _segmentFraction;\n\t\tthis.normalize();\n\t} else if (arguments.length === 4) {\n\t\tvar _componentIndex = arguments[0],\n\t\t    _segmentIndex2 = arguments[1],\n\t\t    _segmentFraction2 = arguments[2],\n\t\t    doNormalize = arguments[3];\n\t\tthis.componentIndex = _componentIndex;\n\t\tthis.segmentIndex = _segmentIndex2;\n\t\tthis.segmentFraction = _segmentFraction2;\n\t\tif (doNormalize) this.normalize();\n\t}\n}\nextend(LinearLocation.prototype, {\n\tgetSegmentIndex: function getSegmentIndex() {\n\t\treturn this.segmentIndex;\n\t},\n\tgetComponentIndex: function getComponentIndex() {\n\t\treturn this.componentIndex;\n\t},\n\tisEndpoint: function isEndpoint(linearGeom) {\n\t\tvar lineComp = linearGeom.getGeometryN(this.componentIndex);\n\t\tvar nseg = lineComp.getNumPoints() - 1;\n\t\treturn this.segmentIndex >= nseg || this.segmentIndex === nseg && this.segmentFraction >= 1.0;\n\t},\n\tisValid: function isValid(linearGeom) {\n\t\tif (this.componentIndex < 0 || this.componentIndex >= linearGeom.getNumGeometries()) return false;\n\t\tvar lineComp = linearGeom.getGeometryN(this.componentIndex);\n\t\tif (this.segmentIndex < 0 || this.segmentIndex > lineComp.getNumPoints()) return false;\n\t\tif (this.segmentIndex === lineComp.getNumPoints() && this.segmentFraction !== 0.0) return false;\n\t\tif (this.segmentFraction < 0.0 || this.segmentFraction > 1.0) return false;\n\t\treturn true;\n\t},\n\tnormalize: function normalize() {\n\t\tif (this.segmentFraction < 0.0) {\n\t\t\tthis.segmentFraction = 0.0;\n\t\t}\n\t\tif (this.segmentFraction > 1.0) {\n\t\t\tthis.segmentFraction = 1.0;\n\t\t}\n\t\tif (this.componentIndex < 0) {\n\t\t\tthis.componentIndex = 0;\n\t\t\tthis.segmentIndex = 0;\n\t\t\tthis.segmentFraction = 0.0;\n\t\t}\n\t\tif (this.segmentIndex < 0) {\n\t\t\tthis.segmentIndex = 0;\n\t\t\tthis.segmentFraction = 0.0;\n\t\t}\n\t\tif (this.segmentFraction === 1.0) {\n\t\t\tthis.segmentFraction = 0.0;\n\t\t\tthis.segmentIndex += 1;\n\t\t}\n\t},\n\ttoLowest: function toLowest(linearGeom) {\n\t\tvar lineComp = linearGeom.getGeometryN(this.componentIndex);\n\t\tvar nseg = lineComp.getNumPoints() - 1;\n\t\tif (this.segmentIndex < nseg) return this;\n\t\treturn new LinearLocation(this.componentIndex, nseg, 1.0, false);\n\t},\n\tgetCoordinate: function getCoordinate(linearGeom) {\n\t\tvar lineComp = linearGeom.getGeometryN(this.componentIndex);\n\t\tvar p0 = lineComp.getCoordinateN(this.segmentIndex);\n\t\tif (this.segmentIndex >= lineComp.getNumPoints() - 1) return p0;\n\t\tvar p1 = lineComp.getCoordinateN(this.segmentIndex + 1);\n\t\treturn LinearLocation.pointAlongSegmentByFraction(p0, p1, this.segmentFraction);\n\t},\n\tgetSegmentFraction: function getSegmentFraction() {\n\t\treturn this.segmentFraction;\n\t},\n\tgetSegment: function getSegment(linearGeom) {\n\t\tvar lineComp = linearGeom.getGeometryN(this.componentIndex);\n\t\tvar p0 = lineComp.getCoordinateN(this.segmentIndex);\n\t\tif (this.segmentIndex >= lineComp.getNumPoints() - 1) {\n\t\t\tvar prev = lineComp.getCoordinateN(lineComp.getNumPoints() - 2);\n\t\t\treturn new LineSegment(prev, p0);\n\t\t}\n\t\tvar p1 = lineComp.getCoordinateN(this.segmentIndex + 1);\n\t\treturn new LineSegment(p0, p1);\n\t},\n\tclamp: function clamp(linear) {\n\t\tif (this.componentIndex >= linear.getNumGeometries()) {\n\t\t\tthis.setToEnd(linear);\n\t\t\treturn null;\n\t\t}\n\t\tif (this.segmentIndex >= linear.getNumPoints()) {\n\t\t\tvar line = linear.getGeometryN(this.componentIndex);\n\t\t\tthis.segmentIndex = line.getNumPoints() - 1;\n\t\t\tthis.segmentFraction = 1.0;\n\t\t}\n\t},\n\tsetToEnd: function setToEnd(linear) {\n\t\tthis.componentIndex = linear.getNumGeometries() - 1;\n\t\tvar lastLine = linear.getGeometryN(this.componentIndex);\n\t\tthis.segmentIndex = lastLine.getNumPoints() - 1;\n\t\tthis.segmentFraction = 1.0;\n\t},\n\tcompareTo: function compareTo(o) {\n\t\tvar other = o;\n\t\tif (this.componentIndex < other.componentIndex) return -1;\n\t\tif (this.componentIndex > other.componentIndex) return 1;\n\t\tif (this.segmentIndex < other.segmentIndex) return -1;\n\t\tif (this.segmentIndex > other.segmentIndex) return 1;\n\t\tif (this.segmentFraction < other.segmentFraction) return -1;\n\t\tif (this.segmentFraction > other.segmentFraction) return 1;\n\t\treturn 0;\n\t},\n\tclone: function clone() {\n\t\treturn new LinearLocation(this.componentIndex, this.segmentIndex, this.segmentFraction);\n\t},\n\ttoString: function toString() {\n\t\treturn \"LinearLoc[\" + this.componentIndex + \", \" + this.segmentIndex + \", \" + this.segmentFraction + \"]\";\n\t},\n\tisOnSameSegment: function isOnSameSegment(loc) {\n\t\tif (this.componentIndex !== loc.componentIndex) return false;\n\t\tif (this.segmentIndex === loc.segmentIndex) return true;\n\t\tif (loc.segmentIndex - this.segmentIndex === 1 && loc.segmentFraction === 0.0) return true;\n\t\tif (this.segmentIndex - loc.segmentIndex === 1 && this.segmentFraction === 0.0) return true;\n\t\treturn false;\n\t},\n\tsnapToVertex: function snapToVertex(linearGeom, minDistance) {\n\t\tif (this.segmentFraction <= 0.0 || this.segmentFraction >= 1.0) return null;\n\t\tvar segLen = this.getSegmentLength(linearGeom);\n\t\tvar lenToStart = this.segmentFraction * segLen;\n\t\tvar lenToEnd = segLen - lenToStart;\n\t\tif (lenToStart <= lenToEnd && lenToStart < minDistance) {\n\t\t\tthis.segmentFraction = 0.0;\n\t\t} else if (lenToEnd <= lenToStart && lenToEnd < minDistance) {\n\t\t\tthis.segmentFraction = 1.0;\n\t\t}\n\t},\n\tcompareLocationValues: function compareLocationValues(componentIndex1, segmentIndex1, segmentFraction1) {\n\t\tif (this.componentIndex < componentIndex1) return -1;\n\t\tif (this.componentIndex > componentIndex1) return 1;\n\t\tif (this.segmentIndex < segmentIndex1) return -1;\n\t\tif (this.segmentIndex > segmentIndex1) return 1;\n\t\tif (this.segmentFraction < segmentFraction1) return -1;\n\t\tif (this.segmentFraction > segmentFraction1) return 1;\n\t\treturn 0;\n\t},\n\tgetSegmentLength: function getSegmentLength(linearGeom) {\n\t\tvar lineComp = linearGeom.getGeometryN(this.componentIndex);\n\t\tvar segIndex = this.segmentIndex;\n\t\tif (this.segmentIndex >= lineComp.getNumPoints() - 1) segIndex = lineComp.getNumPoints() - 2;\n\t\tvar p0 = lineComp.getCoordinateN(segIndex);\n\t\tvar p1 = lineComp.getCoordinateN(segIndex + 1);\n\t\treturn p0.distance(p1);\n\t},\n\tisVertex: function isVertex() {\n\t\treturn this.segmentFraction <= 0.0 || this.segmentFraction >= 1.0;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LinearLocation;\n\t}\n});\nLinearLocation.getEndLocation = function (linear) {\n\tvar loc = new LinearLocation();\n\tloc.setToEnd(linear);\n\treturn loc;\n};\nLinearLocation.pointAlongSegmentByFraction = function (p0, p1, frac) {\n\tif (frac <= 0.0) return p0;\n\tif (frac >= 1.0) return p1;\n\tvar x = (p1.x - p0.x) * frac + p0.x;\n\tvar y = (p1.y - p0.y) * frac + p0.y;\n\tvar z = (p1.z - p0.z) * frac + p0.z;\n\treturn new Coordinate(x, y, z);\n};\nLinearLocation.compareLocationValues = function (componentIndex0, segmentIndex0, segmentFraction0, componentIndex1, segmentIndex1, segmentFraction1) {\n\tif (componentIndex0 < componentIndex1) return -1;\n\tif (componentIndex0 > componentIndex1) return 1;\n\tif (segmentIndex0 < segmentIndex1) return -1;\n\tif (segmentIndex0 > segmentIndex1) return 1;\n\tif (segmentFraction0 < segmentFraction1) return -1;\n\tif (segmentFraction0 > segmentFraction1) return 1;\n\treturn 0;\n};\n\nfunction LinearIterator() {\n\tthis.linearGeom = null;\n\tthis.numLines = null;\n\tthis.currentLine = null;\n\tthis.componentIndex = 0;\n\tthis.vertexIndex = 0;\n\tif (arguments.length === 1) {\n\t\tvar linear = arguments[0];\n\t\tLinearIterator.call(this, linear, 0, 0);\n\t} else if (arguments.length === 2) {\n\t\tvar _linear = arguments[0],\n\t\t    start = arguments[1];\n\t\tLinearIterator.call(this, _linear, start.getComponentIndex(), LinearIterator.segmentEndVertexIndex(start));\n\t} else if (arguments.length === 3) {\n\t\tvar linearGeom = arguments[0],\n\t\t    componentIndex = arguments[1],\n\t\t    vertexIndex = arguments[2];\n\t\tif (!hasInterface(linearGeom, Lineal)) throw new IllegalArgumentException(\"Lineal geometry is required\");\n\t\tthis.linearGeom = linearGeom;\n\t\tthis.numLines = linearGeom.getNumGeometries();\n\t\tthis.componentIndex = componentIndex;\n\t\tthis.vertexIndex = vertexIndex;\n\t\tthis.loadCurrentLine();\n\t}\n}\nextend(LinearIterator.prototype, {\n\tgetComponentIndex: function getComponentIndex() {\n\t\treturn this.componentIndex;\n\t},\n\tgetLine: function getLine() {\n\t\treturn this.currentLine;\n\t},\n\tgetVertexIndex: function getVertexIndex() {\n\t\treturn this.vertexIndex;\n\t},\n\tgetSegmentEnd: function getSegmentEnd() {\n\t\tif (this.vertexIndex < this.getLine().getNumPoints() - 1) return this.currentLine.getCoordinateN(this.vertexIndex + 1);\n\t\treturn null;\n\t},\n\tnext: function next() {\n\t\tif (!this.hasNext()) return null;\n\t\tthis.vertexIndex++;\n\t\tif (this.vertexIndex >= this.currentLine.getNumPoints()) {\n\t\t\tthis.componentIndex++;\n\t\t\tthis.loadCurrentLine();\n\t\t\tthis.vertexIndex = 0;\n\t\t}\n\t},\n\tloadCurrentLine: function loadCurrentLine() {\n\t\tif (this.componentIndex >= this.numLines) {\n\t\t\tthis.currentLine = null;\n\t\t\treturn null;\n\t\t}\n\t\tthis.currentLine = this.linearGeom.getGeometryN(this.componentIndex);\n\t},\n\tgetSegmentStart: function getSegmentStart() {\n\t\treturn this.currentLine.getCoordinateN(this.vertexIndex);\n\t},\n\tisEndOfLine: function isEndOfLine() {\n\t\tif (this.componentIndex >= this.numLines) return false;\n\t\tif (this.vertexIndex < this.currentLine.getNumPoints() - 1) return false;\n\t\treturn true;\n\t},\n\thasNext: function hasNext() {\n\t\tif (this.componentIndex >= this.numLines) return false;\n\t\tif (this.componentIndex === this.numLines - 1 && this.vertexIndex >= this.currentLine.getNumPoints()) return false;\n\t\treturn true;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LinearIterator;\n\t}\n});\nLinearIterator.segmentEndVertexIndex = function (loc) {\n\tif (loc.getSegmentFraction() > 0.0) return loc.getSegmentIndex() + 1;\n\treturn loc.getSegmentIndex();\n};\n\nfunction LocationIndexOfPoint() {\n\tthis.linearGeom = null;\n\tvar linearGeom = arguments[0];\n\tthis.linearGeom = linearGeom;\n}\nextend(LocationIndexOfPoint.prototype, {\n\tindexOf: function indexOf(inputPt) {\n\t\treturn this.indexOfFromStart(inputPt, null);\n\t},\n\tindexOfFromStart: function indexOfFromStart(inputPt, minIndex) {\n\t\tvar minDistance = Double.MAX_VALUE;\n\t\tvar minComponentIndex = 0;\n\t\tvar minSegmentIndex = 0;\n\t\tvar minFrac = -1.0;\n\t\tvar seg = new LineSegment();\n\t\tfor (var it = new LinearIterator(this.linearGeom); it.hasNext(); it.next()) {\n\t\t\tif (!it.isEndOfLine()) {\n\t\t\t\tseg.p0 = it.getSegmentStart();\n\t\t\t\tseg.p1 = it.getSegmentEnd();\n\t\t\t\tvar segDistance = seg.distance(inputPt);\n\t\t\t\tvar segFrac = seg.segmentFraction(inputPt);\n\t\t\t\tvar candidateComponentIndex = it.getComponentIndex();\n\t\t\t\tvar candidateSegmentIndex = it.getVertexIndex();\n\t\t\t\tif (segDistance < minDistance) {\n\t\t\t\t\tif (minIndex === null || minIndex.compareLocationValues(candidateComponentIndex, candidateSegmentIndex, segFrac) < 0) {\n\t\t\t\t\t\tminComponentIndex = candidateComponentIndex;\n\t\t\t\t\t\tminSegmentIndex = candidateSegmentIndex;\n\t\t\t\t\t\tminFrac = segFrac;\n\t\t\t\t\t\tminDistance = segDistance;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (minDistance === Double.MAX_VALUE) {\n\t\t\treturn new LinearLocation(minIndex);\n\t\t}\n\t\tvar loc = new LinearLocation(minComponentIndex, minSegmentIndex, minFrac);\n\t\treturn loc;\n\t},\n\tindexOfAfter: function indexOfAfter(inputPt, minIndex) {\n\t\tif (minIndex === null) return this.indexOf(inputPt);\n\t\tvar endLoc = LinearLocation.getEndLocation(this.linearGeom);\n\t\tif (endLoc.compareTo(minIndex) <= 0) return endLoc;\n\t\tvar closestAfter = this.indexOfFromStart(inputPt, minIndex);\n\t\tAssert.isTrue(closestAfter.compareTo(minIndex) >= 0, \"computed location is before specified minimum location\");\n\t\treturn closestAfter;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LocationIndexOfPoint;\n\t}\n});\nLocationIndexOfPoint.indexOf = function (linearGeom, inputPt) {\n\tvar locater = new LocationIndexOfPoint(linearGeom);\n\treturn locater.indexOf(inputPt);\n};\nLocationIndexOfPoint.indexOfAfter = function (linearGeom, inputPt, minIndex) {\n\tvar locater = new LocationIndexOfPoint(linearGeom);\n\treturn locater.indexOfAfter(inputPt, minIndex);\n};\n\nfunction LocationIndexOfLine() {\n\tthis.linearGeom = null;\n\tvar linearGeom = arguments[0];\n\tthis.linearGeom = linearGeom;\n}\nextend(LocationIndexOfLine.prototype, {\n\tindicesOf: function indicesOf(subLine) {\n\t\tvar startPt = subLine.getGeometryN(0).getCoordinateN(0);\n\t\tvar lastLine = subLine.getGeometryN(subLine.getNumGeometries() - 1);\n\t\tvar endPt = lastLine.getCoordinateN(lastLine.getNumPoints() - 1);\n\t\tvar locPt = new LocationIndexOfPoint(this.linearGeom);\n\t\tvar subLineLoc = new Array(2).fill(null);\n\t\tsubLineLoc[0] = locPt.indexOf(startPt);\n\t\tif (subLine.getLength() === 0.0) {\n\t\t\tsubLineLoc[1] = subLineLoc[0].clone();\n\t\t} else {\n\t\t\tsubLineLoc[1] = locPt.indexOfAfter(endPt, subLineLoc[0]);\n\t\t}\n\t\treturn subLineLoc;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LocationIndexOfLine;\n\t}\n});\nLocationIndexOfLine.indicesOf = function (linearGeom, subLine) {\n\tvar locater = new LocationIndexOfLine(linearGeom);\n\treturn locater.indicesOf(subLine);\n};\n\nfunction LinearGeometryBuilder() {\n\tthis.geomFact = null;\n\tthis.lines = new ArrayList();\n\tthis.coordList = null;\n\tthis.ignoreInvalidLines = false;\n\tthis.fixInvalidLines = false;\n\tthis.lastPt = null;\n\tvar geomFact = arguments[0];\n\tthis.geomFact = geomFact;\n}\nextend(LinearGeometryBuilder.prototype, {\n\tgetGeometry: function getGeometry() {\n\t\tthis.endLine();\n\t\treturn this.geomFact.buildGeometry(this.lines);\n\t},\n\tgetLastCoordinate: function getLastCoordinate() {\n\t\treturn this.lastPt;\n\t},\n\tendLine: function endLine() {\n\t\tif (this.coordList === null) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this.ignoreInvalidLines && this.coordList.size() < 2) {\n\t\t\tthis.coordList = null;\n\t\t\treturn null;\n\t\t}\n\t\tvar rawPts = this.coordList.toCoordinateArray();\n\t\tvar pts = rawPts;\n\t\tif (this.fixInvalidLines) pts = this.validCoordinateSequence(rawPts);\n\t\tthis.coordList = null;\n\t\tvar line = null;\n\t\ttry {\n\t\t\tline = this.geomFact.createLineString(pts);\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof IllegalArgumentException) {\n\t\t\t\tif (!this.ignoreInvalidLines) throw ex;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t\tif (line !== null) this.lines.add(line);\n\t},\n\tsetFixInvalidLines: function setFixInvalidLines(fixInvalidLines) {\n\t\tthis.fixInvalidLines = fixInvalidLines;\n\t},\n\tadd: function add() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar pt = arguments[0];\n\t\t\tthis.add(pt, true);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar _pt = arguments[0],\n\t\t\t    allowRepeatedPoints = arguments[1];\n\t\t\tif (this.coordList === null) this.coordList = new CoordinateList();\n\t\t\tthis.coordList.add(_pt, allowRepeatedPoints);\n\t\t\tthis.lastPt = _pt;\n\t\t}\n\t},\n\tsetIgnoreInvalidLines: function setIgnoreInvalidLines(ignoreInvalidLines) {\n\t\tthis.ignoreInvalidLines = ignoreInvalidLines;\n\t},\n\tvalidCoordinateSequence: function validCoordinateSequence(pts) {\n\t\tif (pts.length >= 2) return pts;\n\t\tvar validPts = [pts[0], pts[0]];\n\t\treturn validPts;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LinearGeometryBuilder;\n\t}\n});\n\nfunction ExtractLineByLocation() {\n\tthis.line = null;\n\tvar line = arguments[0];\n\tthis.line = line;\n}\nextend(ExtractLineByLocation.prototype, {\n\tcomputeLinear: function computeLinear(start, end) {\n\t\tvar builder = new LinearGeometryBuilder(this.line.getFactory());\n\t\tbuilder.setFixInvalidLines(true);\n\t\tif (!start.isVertex()) builder.add(start.getCoordinate(this.line));\n\t\tfor (var it = new LinearIterator(this.line, start); it.hasNext(); it.next()) {\n\t\t\tif (end.compareLocationValues(it.getComponentIndex(), it.getVertexIndex(), 0.0) < 0) break;\n\t\t\tvar pt = it.getSegmentStart();\n\t\t\tbuilder.add(pt);\n\t\t\tif (it.isEndOfLine()) builder.endLine();\n\t\t}\n\t\tif (!end.isVertex()) builder.add(end.getCoordinate(this.line));\n\t\treturn builder.getGeometry();\n\t},\n\tcomputeLine: function computeLine(start, end) {\n\t\tvar coordinates = this.line.getCoordinates();\n\t\tvar newCoordinates = new CoordinateList();\n\t\tvar startSegmentIndex = start.getSegmentIndex();\n\t\tif (start.getSegmentFraction() > 0.0) startSegmentIndex += 1;\n\t\tvar lastSegmentIndex = end.getSegmentIndex();\n\t\tif (end.getSegmentFraction() === 1.0) lastSegmentIndex += 1;\n\t\tif (lastSegmentIndex >= coordinates.length) lastSegmentIndex = coordinates.length - 1;\n\t\tif (!start.isVertex()) newCoordinates.add(start.getCoordinate(this.line));\n\t\tfor (var i = startSegmentIndex; i <= lastSegmentIndex; i++) {\n\t\t\tnewCoordinates.add(coordinates[i]);\n\t\t}\n\t\tif (!end.isVertex()) newCoordinates.add(end.getCoordinate(this.line));\n\t\tif (newCoordinates.size() <= 0) newCoordinates.add(start.getCoordinate(this.line));\n\t\tvar newCoordinateArray = newCoordinates.toCoordinateArray();\n\t\tif (newCoordinateArray.length <= 1) {\n\t\t\tnewCoordinateArray = [newCoordinateArray[0], newCoordinateArray[0]];\n\t\t}\n\t\treturn this.line.getFactory().createLineString(newCoordinateArray);\n\t},\n\textract: function extract(start, end) {\n\t\tif (end.compareTo(start) < 0) {\n\t\t\treturn this.reverse(this.computeLinear(end, start));\n\t\t}\n\t\treturn this.computeLinear(start, end);\n\t},\n\treverse: function reverse(linear) {\n\t\tif (linear instanceof LineString) return linear.reverse();\n\t\tif (linear instanceof MultiLineString) return linear.reverse();\n\t\tAssert.shouldNeverReachHere(\"non-linear geometry encountered\");\n\t\treturn null;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ExtractLineByLocation;\n\t}\n});\nExtractLineByLocation.extract = function (line, start, end) {\n\tvar ls = new ExtractLineByLocation(line);\n\treturn ls.extract(start, end);\n};\n\nfunction LocationIndexedLine() {\n\tthis.linearGeom = null;\n\tvar linearGeom = arguments[0];\n\tthis.linearGeom = linearGeom;\n\tthis.checkGeometryType();\n}\nextend(LocationIndexedLine.prototype, {\n\tclampIndex: function clampIndex(index) {\n\t\tvar loc = index.clone();\n\t\tloc.clamp(this.linearGeom);\n\t\treturn loc;\n\t},\n\tproject: function project(pt) {\n\t\treturn LocationIndexOfPoint.indexOf(this.linearGeom, pt);\n\t},\n\tcheckGeometryType: function checkGeometryType() {\n\t\tif (!(this.linearGeom instanceof LineString || this.linearGeom instanceof MultiLineString)) throw new IllegalArgumentException(\"Input geometry must be linear\");\n\t},\n\textractPoint: function extractPoint() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar index = arguments[0];\n\t\t\treturn index.getCoordinate(this.linearGeom);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar _index = arguments[0],\n\t\t\t    offsetDistance = arguments[1];\n\t\t\tvar indexLow = _index.toLowest(this.linearGeom);\n\t\t\treturn indexLow.getSegment(this.linearGeom).pointAlongOffset(indexLow.getSegmentFraction(), offsetDistance);\n\t\t}\n\t},\n\tisValidIndex: function isValidIndex(index) {\n\t\treturn index.isValid(this.linearGeom);\n\t},\n\tgetEndIndex: function getEndIndex() {\n\t\treturn LinearLocation.getEndLocation(this.linearGeom);\n\t},\n\tgetStartIndex: function getStartIndex() {\n\t\treturn new LinearLocation();\n\t},\n\tindexOfAfter: function indexOfAfter(pt, minIndex) {\n\t\treturn LocationIndexOfPoint.indexOfAfter(this.linearGeom, pt, minIndex);\n\t},\n\textractLine: function extractLine(startIndex, endIndex) {\n\t\treturn ExtractLineByLocation.extract(this.linearGeom, startIndex, endIndex);\n\t},\n\tindexOf: function indexOf(pt) {\n\t\treturn LocationIndexOfPoint.indexOf(this.linearGeom, pt);\n\t},\n\tindicesOf: function indicesOf(subLine) {\n\t\treturn LocationIndexOfLine.indicesOf(this.linearGeom, subLine);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LocationIndexedLine;\n\t}\n});\n\nfunction LengthIndexOfPoint() {\n\tthis.linearGeom = null;\n\tvar linearGeom = arguments[0];\n\tthis.linearGeom = linearGeom;\n}\nextend(LengthIndexOfPoint.prototype, {\n\tindexOf: function indexOf(inputPt) {\n\t\treturn this.indexOfFromStart(inputPt, -1.0);\n\t},\n\tindexOfFromStart: function indexOfFromStart(inputPt, minIndex) {\n\t\tvar minDistance = Double.MAX_VALUE;\n\t\tvar ptMeasure = minIndex;\n\t\tvar segmentStartMeasure = 0.0;\n\t\tvar seg = new LineSegment();\n\t\tvar it = new LinearIterator(this.linearGeom);\n\t\twhile (it.hasNext()) {\n\t\t\tif (!it.isEndOfLine()) {\n\t\t\t\tseg.p0 = it.getSegmentStart();\n\t\t\t\tseg.p1 = it.getSegmentEnd();\n\t\t\t\tvar segDistance = seg.distance(inputPt);\n\t\t\t\tvar segMeasureToPt = this.segmentNearestMeasure(seg, inputPt, segmentStartMeasure);\n\t\t\t\tif (segDistance < minDistance && segMeasureToPt > minIndex) {\n\t\t\t\t\tptMeasure = segMeasureToPt;\n\t\t\t\t\tminDistance = segDistance;\n\t\t\t\t}\n\t\t\t\tsegmentStartMeasure += seg.getLength();\n\t\t\t}\n\t\t\tit.next();\n\t\t}\n\t\treturn ptMeasure;\n\t},\n\tindexOfAfter: function indexOfAfter(inputPt, minIndex) {\n\t\tif (minIndex < 0.0) return this.indexOf(inputPt);\n\t\tvar endIndex = this.linearGeom.getLength();\n\t\tif (endIndex < minIndex) return endIndex;\n\t\tvar closestAfter = this.indexOfFromStart(inputPt, minIndex);\n\t\tAssert.isTrue(closestAfter >= minIndex, \"computed index is before specified minimum index\");\n\t\treturn closestAfter;\n\t},\n\tsegmentNearestMeasure: function segmentNearestMeasure(seg, inputPt, segmentStartMeasure) {\n\t\tvar projFactor = seg.projectionFactor(inputPt);\n\t\tif (projFactor <= 0.0) return segmentStartMeasure;\n\t\tif (projFactor <= 1.0) return segmentStartMeasure + projFactor * seg.getLength();\n\t\treturn segmentStartMeasure + seg.getLength();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LengthIndexOfPoint;\n\t}\n});\nLengthIndexOfPoint.indexOf = function (linearGeom, inputPt) {\n\tvar locater = new LengthIndexOfPoint(linearGeom);\n\treturn locater.indexOf(inputPt);\n};\nLengthIndexOfPoint.indexOfAfter = function (linearGeom, inputPt, minIndex) {\n\tvar locater = new LengthIndexOfPoint(linearGeom);\n\treturn locater.indexOfAfter(inputPt, minIndex);\n};\n\nfunction LengthLocationMap() {\n\tthis.linearGeom = null;\n\tvar linearGeom = arguments[0];\n\tthis.linearGeom = linearGeom;\n}\nextend(LengthLocationMap.prototype, {\n\tgetLength: function getLength(loc) {\n\t\tvar totalLength = 0.0;\n\t\tvar it = new LinearIterator(this.linearGeom);\n\t\twhile (it.hasNext()) {\n\t\t\tif (!it.isEndOfLine()) {\n\t\t\t\tvar p0 = it.getSegmentStart();\n\t\t\t\tvar p1 = it.getSegmentEnd();\n\t\t\t\tvar segLen = p1.distance(p0);\n\t\t\t\tif (loc.getComponentIndex() === it.getComponentIndex() && loc.getSegmentIndex() === it.getVertexIndex()) {\n\t\t\t\t\treturn totalLength + segLen * loc.getSegmentFraction();\n\t\t\t\t}\n\t\t\t\ttotalLength += segLen;\n\t\t\t}\n\t\t\tit.next();\n\t\t}\n\t\treturn totalLength;\n\t},\n\tresolveHigher: function resolveHigher(loc) {\n\t\tif (!loc.isEndpoint(this.linearGeom)) return loc;\n\t\tvar compIndex = loc.getComponentIndex();\n\t\tif (compIndex >= this.linearGeom.getNumGeometries() - 1) return loc;\n\t\tdo {\n\t\t\tcompIndex++;\n\t\t} while (compIndex < this.linearGeom.getNumGeometries() - 1 && this.linearGeom.getGeometryN(compIndex).getLength() === 0);\n\t\treturn new LinearLocation(compIndex, 0, 0.0);\n\t},\n\tgetLocation: function getLocation() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar length = arguments[0];\n\t\t\treturn this.getLocation(length, true);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar _length = arguments[0],\n\t\t\t    resolveLower = arguments[1];\n\t\t\tvar forwardLength = _length;\n\t\t\tif (_length < 0.0) {\n\t\t\t\tvar lineLen = this.linearGeom.getLength();\n\t\t\t\tforwardLength = lineLen + _length;\n\t\t\t}\n\t\t\tvar loc = this.getLocationForward(forwardLength);\n\t\t\tif (resolveLower) {\n\t\t\t\treturn loc;\n\t\t\t}\n\t\t\treturn this.resolveHigher(loc);\n\t\t}\n\t},\n\tgetLocationForward: function getLocationForward(length) {\n\t\tif (length <= 0.0) return new LinearLocation();\n\t\tvar totalLength = 0.0;\n\t\tvar it = new LinearIterator(this.linearGeom);\n\t\twhile (it.hasNext()) {\n\t\t\tif (it.isEndOfLine()) {\n\t\t\t\tif (totalLength === length) {\n\t\t\t\t\tvar compIndex = it.getComponentIndex();\n\t\t\t\t\tvar segIndex = it.getVertexIndex();\n\t\t\t\t\treturn new LinearLocation(compIndex, segIndex, 0.0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar p0 = it.getSegmentStart();\n\t\t\t\tvar p1 = it.getSegmentEnd();\n\t\t\t\tvar segLen = p1.distance(p0);\n\t\t\t\tif (totalLength + segLen > length) {\n\t\t\t\t\tvar frac = (length - totalLength) / segLen;\n\t\t\t\t\tvar compIndex = it.getComponentIndex();\n\t\t\t\t\tvar segIndex = it.getVertexIndex();\n\t\t\t\t\treturn new LinearLocation(compIndex, segIndex, frac);\n\t\t\t\t}\n\t\t\t\ttotalLength += segLen;\n\t\t\t}\n\t\t\tit.next();\n\t\t}\n\t\treturn LinearLocation.getEndLocation(this.linearGeom);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LengthLocationMap;\n\t}\n});\nLengthLocationMap.getLength = function (linearGeom, loc) {\n\tvar locater = new LengthLocationMap(linearGeom);\n\treturn locater.getLength(loc);\n};\nLengthLocationMap.getLocation = function () {\n\tif (arguments.length === 2) {\n\t\tvar linearGeom = arguments[0],\n\t\t    length = arguments[1];\n\t\tvar locater = new LengthLocationMap(linearGeom);\n\t\treturn locater.getLocation(length);\n\t} else if (arguments.length === 3) {\n\t\tvar _linearGeom = arguments[0],\n\t\t    _length2 = arguments[1],\n\t\t    resolveLower = arguments[2];\n\t\tvar locater = new LengthLocationMap(_linearGeom);\n\t\treturn locater.getLocation(_length2, resolveLower);\n\t}\n};\n\nfunction LengthIndexedLine() {\n\tthis.linearGeom = null;\n\tvar linearGeom = arguments[0];\n\tthis.linearGeom = linearGeom;\n}\nextend(LengthIndexedLine.prototype, {\n\tclampIndex: function clampIndex(index) {\n\t\tvar posIndex = this.positiveIndex(index);\n\t\tvar startIndex = this.getStartIndex();\n\t\tif (posIndex < startIndex) return startIndex;\n\t\tvar endIndex = this.getEndIndex();\n\t\tif (posIndex > endIndex) return endIndex;\n\t\treturn posIndex;\n\t},\n\tlocationOf: function locationOf() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar index = arguments[0];\n\t\t\treturn LengthLocationMap.getLocation(this.linearGeom, index);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar _index = arguments[0],\n\t\t\t    resolveLower = arguments[1];\n\t\t\treturn LengthLocationMap.getLocation(this.linearGeom, _index, resolveLower);\n\t\t}\n\t},\n\tproject: function project(pt) {\n\t\treturn LengthIndexOfPoint.indexOf(this.linearGeom, pt);\n\t},\n\tpositiveIndex: function positiveIndex(index) {\n\t\tif (index >= 0.0) return index;\n\t\treturn this.linearGeom.getLength() + index;\n\t},\n\textractPoint: function extractPoint() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar index = arguments[0];\n\t\t\tvar loc = LengthLocationMap.getLocation(this.linearGeom, index);\n\t\t\treturn loc.getCoordinate(this.linearGeom);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar _index2 = arguments[0],\n\t\t\t    offsetDistance = arguments[1];\n\t\t\tvar loc = LengthLocationMap.getLocation(this.linearGeom, _index2);\n\t\t\tvar locLow = loc.toLowest(this.linearGeom);\n\t\t\treturn locLow.getSegment(this.linearGeom).pointAlongOffset(locLow.getSegmentFraction(), offsetDistance);\n\t\t}\n\t},\n\tisValidIndex: function isValidIndex(index) {\n\t\treturn index >= this.getStartIndex() && index <= this.getEndIndex();\n\t},\n\tgetEndIndex: function getEndIndex() {\n\t\treturn this.linearGeom.getLength();\n\t},\n\tgetStartIndex: function getStartIndex() {\n\t\treturn 0.0;\n\t},\n\tindexOfAfter: function indexOfAfter(pt, minIndex) {\n\t\treturn LengthIndexOfPoint.indexOfAfter(this.linearGeom, pt, minIndex);\n\t},\n\textractLine: function extractLine(startIndex, endIndex) {\n\t\tvar lil = new LocationIndexedLine(this.linearGeom);\n\t\tvar startIndex2 = this.clampIndex(startIndex);\n\t\tvar endIndex2 = this.clampIndex(endIndex);\n\t\tvar resolveStartLower = startIndex2 === endIndex2;\n\t\tvar startLoc = this.locationOf(startIndex2, resolveStartLower);\n\t\tvar endLoc = this.locationOf(endIndex2);\n\t\treturn ExtractLineByLocation.extract(this.linearGeom, startLoc, endLoc);\n\t},\n\tindexOf: function indexOf(pt) {\n\t\treturn LengthIndexOfPoint.indexOf(this.linearGeom, pt);\n\t},\n\tindicesOf: function indicesOf(subLine) {\n\t\tvar locIndex = LocationIndexOfLine.indicesOf(this.linearGeom, subLine);\n\t\tvar index = [LengthLocationMap.getLength(this.linearGeom, locIndex[0]), LengthLocationMap.getLength(this.linearGeom, locIndex[1])];\n\t\treturn index;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LengthIndexedLine;\n\t}\n});\n\n\n\nvar linearref = Object.freeze({\n\tLengthIndexedLine: LengthIndexedLine,\n\tLengthLocationMap: LengthLocationMap,\n\tLinearGeometryBuilder: LinearGeometryBuilder,\n\tLinearIterator: LinearIterator,\n\tLinearLocation: LinearLocation,\n\tLocationIndexedLine: LocationIndexedLine\n});\n\nfunction UnionOp() {}\nextend(UnionOp.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn UnionOp;\n\t}\n});\nUnionOp.union = function (g, other) {\n\tif (g.isEmpty() || other.isEmpty()) {\n\t\tif (g.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.UNION, g, other, g.getFactory());\n\t\tif (g.isEmpty()) return other.copy();\n\t\tif (other.isEmpty()) return g.copy();\n\t}\n\tg.checkNotGeometryCollection(g);\n\tg.checkNotGeometryCollection(other);\n\treturn SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.UNION);\n};\n\nextend(Geometry.prototype, {\n\tequalsTopo: function equalsTopo(g) {\n\t\tif (!this.getEnvelopeInternal().equals(g.getEnvelopeInternal())) return false;\n\t\treturn RelateOp.relate(this, g).isEquals(this.getDimension(), g.getDimension());\n\t},\n\tunion: function union() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn UnaryUnionOp.union(this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar other = arguments[0];\n\t\t\treturn UnionOp.union(this, other);\n\t\t}\n\t},\n\tisValid: function isValid() {\n\t\treturn IsValidOp.isValid(this);\n\t},\n\tintersection: function intersection(other) {\n\t\tif (this.isEmpty() || other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, this, other, this.factory);\n\t\tif (this.isGeometryCollection()) {\n\t\t\tvar g2 = other;\n\t\t\treturn GeometryCollectionMapper.map(this, {\n\t\t\t\tinterfaces_: function interfaces_() {\n\t\t\t\t\treturn [MapOp];\n\t\t\t\t},\n\t\t\t\tmap: function map(g) {\n\t\t\t\t\treturn g.intersection(g2);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.checkNotGeometryCollection(this);\n\t\tthis.checkNotGeometryCollection(other);\n\t\treturn SnapIfNeededOverlayOp.overlayOp(this, other, OverlayOp.INTERSECTION);\n\t},\n\tcovers: function covers(g) {\n\t\treturn RelateOp.covers(this, g);\n\t},\n\tcoveredBy: function coveredBy(g) {\n\t\treturn RelateOp.coveredBy(this, g);\n\t},\n\ttouches: function touches(g) {\n\t\treturn RelateOp.touches(this, g);\n\t},\n\tintersects: function intersects(g) {\n\t\treturn RelateOp.intersects(this, g);\n\t},\n\twithin: function within(g) {\n\t\treturn RelateOp.within(this, g);\n\t},\n\toverlaps: function overlaps(g) {\n\t\treturn RelateOp.overlaps(this, g);\n\t},\n\tdisjoint: function disjoint(g) {\n\t\treturn RelateOp.disjoint(this, g);\n\t},\n\tcrosses: function crosses(g) {\n\t\treturn RelateOp.crosses(this, g);\n\t},\n\tbuffer: function buffer() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar distance = arguments[0];\n\t\t\treturn BufferOp.bufferOp(this, distance);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar _distance = arguments[0],\n\t\t\t    quadrantSegments = arguments[1];\n\t\t\treturn BufferOp.bufferOp(this, _distance, quadrantSegments);\n\t\t} else if (arguments.length === 3) {\n\t\t\tvar _distance2 = arguments[0],\n\t\t\t    _quadrantSegments = arguments[1],\n\t\t\t    endCapStyle = arguments[2];\n\t\t\treturn BufferOp.bufferOp(this, _distance2, _quadrantSegments, endCapStyle);\n\t\t}\n\t},\n\tconvexHull: function convexHull() {\n\t\treturn new ConvexHull(this).getConvexHull();\n\t},\n\trelate: function relate() {\n\t\tfor (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t\t\targs[_key] = arguments[_key];\n\t\t}\n\n\t\treturn RelateOp.relate.apply(RelateOp, [this].concat(args));\n\t},\n\tgetCentroid: function getCentroid() {\n\t\tif (this.isEmpty()) return this.factory.createPoint();\n\t\tvar centPt = Centroid.getCentroid(this);\n\t\treturn this.createPointFromInternalCoord(centPt, this);\n\t},\n\tgetInteriorPoint: function getInteriorPoint() {\n\t\tif (this.isEmpty()) return this.factory.createPoint();\n\t\tvar interiorPt = null;\n\t\tvar dim = this.getDimension();\n\t\tif (dim === 0) {\n\t\t\tvar intPt = new InteriorPointPoint(this);\n\t\t\tinteriorPt = intPt.getInteriorPoint();\n\t\t} else if (dim === 1) {\n\t\t\tvar intPt = new InteriorPointLine(this);\n\t\t\tinteriorPt = intPt.getInteriorPoint();\n\t\t} else {\n\t\t\tvar intPt = new InteriorPointArea(this);\n\t\t\tinteriorPt = intPt.getInteriorPoint();\n\t\t}\n\t\treturn this.createPointFromInternalCoord(interiorPt, this);\n\t},\n\tsymDifference: function symDifference(other) {\n\t\tif (this.isEmpty() || other.isEmpty()) {\n\t\t\tif (this.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, this, other, this.factory);\n\t\t\tif (this.isEmpty()) return other.copy();\n\t\t\tif (other.isEmpty()) return this.copy();\n\t\t}\n\t\tthis.checkNotGeometryCollection(this);\n\t\tthis.checkNotGeometryCollection(other);\n\t\treturn SnapIfNeededOverlayOp.overlayOp(this, other, OverlayOp.SYMDIFFERENCE);\n\t},\n\tcreatePointFromInternalCoord: function createPointFromInternalCoord(coord, exemplar) {\n\t\texemplar.getPrecisionModel().makePrecise(coord);\n\t\treturn exemplar.getFactory().createPoint(coord);\n\t},\n\ttoText: function toText() {\n\t\tvar writer = new WKTWriter();\n\t\treturn writer.write(this);\n\t},\n\ttoString: function toString() {\n\t\tthis.toText();\n\t},\n\tcontains: function contains(g) {\n\t\treturn RelateOp.contains(this, g);\n\t},\n\tdifference: function difference(other) {\n\t\tif (this.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, this, other, this.factory);\n\t\tif (other.isEmpty()) return this.copy();\n\t\tthis.checkNotGeometryCollection(this);\n\t\tthis.checkNotGeometryCollection(other);\n\t\treturn SnapIfNeededOverlayOp.overlayOp(this, other, OverlayOp.DIFFERENCE);\n\t},\n\tisSimple: function isSimple() {\n\t\tvar op = new IsSimpleOp(this);\n\t\treturn op.isSimple();\n\t},\n\tisWithinDistance: function isWithinDistance(geom, distance) {\n\t\tvar envDist = this.getEnvelopeInternal().distance(geom.getEnvelopeInternal());\n\t\tif (envDist > distance) return false;\n\t\treturn DistanceOp.isWithinDistance(this, geom, distance);\n\t},\n\tdistance: function distance(g) {\n\t\treturn DistanceOp.distance(this, g);\n\t},\n\tisEquivalentClass: function isEquivalentClass(other) {\n\t\treturn this.getClass() === other.getClass();\n\t}\n});\n\nvar version = '1.4.0 (93f117d)';\n\nexports.version = version;\nexports.algorithm = algorithm;\nexports.densify = densify;\nexports.dissolve = dissolve;\nexports.geom = geom;\nexports.geomgraph = geomgraph;\nexports.index = index;\nexports.io = io;\nexports.noding = noding;\nexports.operation = operation;\nexports.precision = precision;\nexports.simplify = simplify;\nexports.triangulate = triangulate;\nexports.linearref = linearref;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=jsts.js.map\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _jsts = __webpack_require__(0);\n\nvar jsts = _interopRequireWildcard(_jsts);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * ROUTER routing class for ECG data\n * Gregor Allensworth   gregor@greeninfo.org\n * apololgies in advance for it not being a proper ES6 class\n *\n * Params:\n * ROUTER.findRoute(start_lat, start_lng, target_lat, target_lng, success_callback, failure_callback)\n *\n * Return:\n * A GeoJSON-compliant structure suited for consumption by Leaflet or almost anything\n *\n * Feature properties are:\n * id -- The ID# of the line in CartoDB.\n * title -- The name of the road or trail which this line represents.\n * length -- Length of this section, in meters.\n * transition -- Metadata about the transition to the next segment on the route.\n * transition.title -- Human-readable text for this transition, e.g. \"Turn left onto Hayward Avenue\"\n * transition.lat -- The latitude at which the transition occurs.\n * transition.lng -- The longitude at which the transition occurs.\n * transition.code -- A domain code indicating the type of transition, e.g. \"RT\" for a right turn. This domain-coded version would be suited to selecting icons. Search this document for TRANSITION_CODES to see the list.\n *\n * Additionally, the structure contains a .properties attribute of its own, containing medatata about the route. The attributes of route.properties are as follows:\n * total_meters -- The total length of the route in meters, summed from the individual steps.\n * startpoint_wanted -- The desired starting latlng. GeoJSON-compliant point feature object.\n * endpoint_wanted -- The desired ending latlng. GeoJSON-compliant point feature object.\n * startpoint_trail -- The closest latlng on the route to the desired starting latlng. GeoJSON-compliant point feature object.\n * endpoint_trail -- The closest latlng on the route to the desired starting latlng. GeoJSON-compliant point feature object.\n * startpoint_meters -- The distance in meters, between startpoint_wanted and startpoint_trail.\n * endpoint_meters -- The distance in meters, between endpoint_wanted and endpoint_trail.\n */\n\nvar ROUTER = {\n    init: function init(user, table) {\n        // set the router's CARTO account / user & route segments table\n        this.CARTODB_USER = user;\n        this.DBTABLE_EDGES = table;\n    },\n\n    //\n    // main entry point: find a route from start lat+lng to target lat+lng, prettied up with turning directions and all\n    // wraps several other functions to find start/end nodes, assemble a path, clean up topology, add turning words, etc.\n    // asynchronous: provide success + failure callbacks\n    // success -- will be passed 1 param: a GeoJSON document of the segments representing the route\n    // error -- will be passed 1 param: error message\n    //\n    findRoute: function findRoute(start_lat, start_lng, target_lat, target_lng, success_callback, failure_callback) {\n        var self = this;\n\n        // is this northbound or southbound? the edges and cues are tagged with N/S/B as a proxy for one-way behavior\n        //TODO is that really how they want to do things?\n        //TODO e.g. Pierson, FL to Daytona Beach, FL is east-northeast but the northern route is the longer\n        //TODO perhaps the one-way field is better for this, indicating that travel must be in the direction of the vertices?\n        var northbound = start_lat <= target_lat;\n\n        // find the best edges for our starting and ending location\n        self.findNearestSegmentToLatLng(start_lat, start_lng, northbound ? 'N' : 'S', function (start_segment) {\n            self.findNearestSegmentToLatLng(target_lat, target_lng, northbound ? 'N' : 'S', function (target_segment) {\n                console.log(['start segment', start_lat, start_lng, start_segment]);\n                console.log(['target segment', target_lat, target_lng, target_segment]);\n\n                // fetch relevant route segments\n                // loading the whole dataset can be workable over a fast connection, but we'd rather not\n                // and a bounding box filter to fetch only the relevant area; no path near Boston can be relevant to a route within Florida\n                var params = {\n                    n: Math.max(target_segment.n, start_segment.n) + 1.0,\n                    s: Math.min(target_segment.s, start_segment.s) - 1.0,\n                    e: Math.max(target_segment.e, start_segment.e) + 1.0,\n                    w: Math.min(target_segment.w, start_segment.w) - 1.0,\n                    dir: northbound ? 'N' : 'S'\n                };\n\n                var geomtext = \"ST_SIMPLIFY(the_geom,0.0001)\"; // a teeny-tiny simplification to clean some of their flourishes that have wonky angles at starts and ends\n\n                var sql = \"SELECT pline_id AS id, title, meters, ST_ASTEXT(\" + geomtext + \") AS geom FROM \" + self.DBTABLE_EDGES + \" WHERE DIRECTION IN ('B', '{{ dir }}') AND the_geom && ST_MAKEENVELOPE({{ w }}, {{ s }}, {{ e }}, {{ n }}, 4326)\";\n\n                new cartodb.SQL({ user: self.CARTODB_USER }).execute(sql, params).done(function (data) {\n                    var wktreader = new jsts.io.WKTReader();\n                    var gfactory = new jsts.geom.GeometryFactory();\n\n                    data.rows = data.rows.map(function (segment) {\n                        // data massage as we load the lines\n\n                        // add the ID+title as a single \"debug\" flag; makes debugging easier\n                        segment.debug = segment.id + ' ' + segment.title;\n\n                        // - convert the WKT geometry to a JSTS geometry\n                        // - add the starting point and ending point, kept as-is; for \"purity\" e.g. decorating the line or adding an icon)\n                        // - add the starting point and ending point, with a buffer; provides \"snapping\" for finding other candidate lines\n                        // - add the centroid of this line segment; a \"general sense\" of its location for Manhattan heuristic\n                        segment.geom = wktreader.read(segment.geom);\n\n                        segment.centroid = segment.geom.getCentroid();\n\n                        var mypoints = segment.geom.getCoordinates();\n                        segment.firstpoint = gfactory.createPoint(mypoints[0]);\n                        segment.lastpoint = gfactory.createPoint(mypoints[mypoints.length - 1]);\n\n                        // done\n                        return segment;\n                    });\n\n                    // hand off to our path-finder\n                    // tack on some metadata to the resulting list of segments\n                    // then pass the results through cleanup and serialization\n                    console.log('downloaded ' + data.rows.length + ' segments, starting assembly');\n                    try {\n                        var route = self.assemblePath(start_segment, target_segment, data.rows, northbound);\n\n                        if (!route) {\n                            failure_callback(\"No route could be found between those locations.\");return;\n                        }\n\n                        route.start_lat = start_lat;\n                        route.start_lng = start_lng;\n                        route.target_lat = target_lat;\n                        route.target_lng = target_lng;\n                        route.start_segment = start_segment;\n                        route.target_segment = target_segment;\n\n                        route = self.routeDecorate(route);\n                        route = self.routeSerialize(route);\n                        success_callback(route);\n                    } catch (errmsg) {\n                        failure_callback(errmsg);\n                    }\n                }).error(function (errors) {\n                    var errmsg = \"error fetching lines universe: \" + errors[0];\n                    failure_callback(errmsg);\n                });\n            }, function (errmsg) {\n                failure_callback(\"error finding target segment: \" + errmsg);\n            });\n        }, function (errmsg) {\n            failure_callback(\"error finding start segment: \" + errmsg);\n        });\n    },\n\n    //\n    // utility function: find the nearest segment to the given latlng\n    // asynchronous: provide success + failure callbacks\n    // success -- will be passed 1 param: the resulting segment\n    // error -- will be passed 1 param: error message\n    //\n    findNearestSegmentToLatLng: function findNearestSegmentToLatLng(lat, lng, direction, success_callback, failure_callback) {\n        var self = this;\n        var closest_segment;\n\n        var directionclause = \"TRUE\";\n        switch (direction) {\n            case 'N':\n                // N trails only\n                directionclause = \"direction IN ('B', 'N')\";\n                break;\n            case 'S':\n                // S trails only\n                directionclause = \"direction IN ('B', 'S')\";\n                break;\n            default:\n                // undefined, null, etc. do not filter by directionality\n                break;\n        }\n\n        var sql = \"SELECT pline_id AS id, title, ST_DISTANCE(the_geom::geography, ST_SETSRID(ST_MAKEPOINT({{ lng }}, {{ lat }}), 4326)::geography) AS closest_distance, ST_Y(ST_CLOSESTPOINT(the_geom, ST_SETSRID(ST_MAKEPOINT({{ lng }}, {{ lat }}), 4326))) AS closest_lat, ST_X(ST_CLOSESTPOINT(the_geom, ST_SETSRID(ST_MAKEPOINT({{ lng }}, {{ lat }}), 4326))) AS closest_lng, ST_XMAX(the_geom) AS e, ST_XMIN(the_geom) AS w, ST_YMIN(the_geom) AS s, ST_YMAX(the_geom) AS n FROM \" + self.DBTABLE_EDGES + \" WHERE \" + directionclause + \" ORDER BY the_geom <-> ST_SETSRID(ST_MAKEPOINT({{ lng }}, {{ lat }}), 4326) LIMIT 1\";\n        var params = { lng: lng, lat: lat };\n\n        new cartodb.SQL({ user: self.CARTODB_USER }).execute(sql, params).done(function (data) {\n            closest_segment = data.rows[0];\n\n            closest_segment.wanted_lat = lat; // decorate with the actually-requested lat+lng\n            closest_segment.wanted_lng = lng; // decorate with the actually-requested lat+lng\n\n            success_callback(closest_segment);\n        }).error(function (errors) {\n            var errmsg = \"findNearestSegmentToLatLng failed: \" + errors[0];\n            failure_callback(errmsg);\n        });\n    },\n\n    //\n    // internal function: given a universe of edges/segments, find a path from start to end\n    //\n    assemblePath: function assemblePath(start_segment, target_segment, universe_segments, northbound) {\n        var self = this;\n\n        // a list of edges which we have already traversed: so we never go backward esp. when exploring forks\n        var poisoned = {};\n\n        // from our universe, extract the target edge\n        // we'll refer to this to check our distance to see whether we are going the right direction (Manhattan heuristic)\n        var target_geom = universe_segments.filter(function (segment) {\n            return segment.id == target_segment.id;\n        })[0];\n\n        // start by pulling from the universe, our first edge\n        // then poison it so we don't try to re-cross our own starting point\n        var route = universe_segments.filter(function (segment) {\n            return segment.id == start_segment.id;\n        });\n        poisoned[start_segment.id] = true;\n\n        // the big loop\n        // starting at our latest segment, find all other segments which touch it (more or less) and they are candidates for our next step\n        // unless they've been poisoned (tagged as backward)\n        while (true) {\n            var here = route[route.length - 1];\n            if (here.id == target_segment.id) console.log([\"arrived\", here.debug]);\n            if (here.id == target_segment.id) break; // we're there! done!\n\n            console.log([\"current location:\", here.debug]);\n            var candidates = universe_segments.filter(function (candidate) {\n                // use this to debug if two segments aren't connecting but you think they should\n                // compare their endpoint-to-endpoint distance to the tolerance below\n                // tip: if the end-to-end distance is greater than the minimum distance, maybe the ends you see aren't really the ends, e.g. the line bends back over itself\n                /*\n                if (here.id == 661596 && candidate.id == 661598) {\n                    console.log([ 'minimum distance between segments', here.geom.distance(candidate.geom) ]);\n                    console.log([ 'distance to next segment first endpoint', here.geom.distance(candidate.firstpoint), here.geom.distance(candidate.firstpoint) <= 0.002 ]);\n                    console.log([ 'distance to next segment last endpoint', here.geom.distance(candidate.lastpoint), here.geom.distance(candidate.lastpoint) <= 0.002 ]);\n                }\n                */\n\n                var tolerance = 0.002; // about 50ft; the topology is bad but we should tolerate it\n                if (poisoned[candidate.id]) return false;\n                return here.geom.distance(candidate.firstpoint) <= tolerance || here.geom.distance(candidate.lastpoint) <= tolerance;\n            });\n\n            var nextsegment = null;\n            if (candidates.length == 1) {\n                // only 1 candidate = okay, guess that's our way forward\n                // explicitly set fork=false; maybe this step in our route was a fork, and we poisoned enough wrong forks that it's not a decision anymore\n                here.fork = false;\n                nextsegment = candidates[0];\n            } else if (candidates.length) {\n                // more than 1 unpoisoned candidate = this is a fork; pick one and move on\n                // if we were wrong we'd eventually end up with 0 candidates, a dead end; see below\n                console.log([\"fork detected here:\", here.debug, 'candidates are:', candidates]);\n                here.fork = true;\n\n                // Manhattan heuristic: whichever candidate is closer to our destination, is probably right\n                candidates.sort(function (p, q) {\n                    return p.centroid.distance(target_geom.centroid) < q.centroid.distance(target_geom.centroid) ? -1 : 1;\n                });\n                nextsegment = candidates[0];\n            } else {\n                // no candidates at all? then we're at a dead end and it's not our destination\n                here.fork = false;\n\n                // find the last node in our route which is a fork\n                // strip off the remainder of the route\n                // then let nextsegment remain null, so our next pass will be on that fork node with one less option\n                console.log(['dead end at:', here.debug]);\n\n                for (var i = route.length - 1; i >= 0; i--) {\n                    // if we are all the way back at the start and are seeing 0 candidates, it's not gonna happen\n                    if (i == 0) {\n                        console.log([\"zero candidates at starting node. there is no path\"]);\n                        route = null;\n                        break;\n                    }\n\n                    if (!route[i].fork) continue;\n                    console.log([\"last fork was at step:\", i, route[i].debug]);\n                    route.splice(i + 1);\n                    console.log(['stripped back to last fork:', route[route.length - 1].debug]);\n                    break;\n                }\n            }\n\n            // the only way that route can become null is by giving up entirely (it's an array with at least the 1 starting segment)\n            if (route === null) break;\n\n            // add this segment to our route\n            // then poison this segment so we won't try it again (backward is never a way forward)\n            if (nextsegment) {\n                poisoned[nextsegment.id] = true;\n                route.push(nextsegment);\n            }\n        } // end of potentially infinite loop\n\n        // done assembling the path; or else a null because there is no path\n        // hand back to caller, probably for postprocessing\n        return route;\n    },\n\n    //\n    // internal function: given a completed path from assemblePath() do some cleanup to it\n    // flip segments end-to-end so they have a consistent sequence\n    // give each segment a \"transition\" object describing the turn and the transition\n    //\n    routeDecorate: function routeDecorate(route) {\n        // tip: Point.clone() does not work, thus the use of gfactory\n        // also to compose new point objects based on route metadata\n        var gfactory = new jsts.geom.GeometryFactory();\n\n        // segment flipping -- align each step's ending vertex to the next line's starting vertex\n        // this makes the vertices truly sequential along the route, which is relevant to:\n        // - generating elevation profile charts, as one would want the elevations in sequence\n        // - filling in gaps, by fudging the starting and ending points so they have the same vertex\n        // - generating turning directions, where one lines changes into the next\n        // http://gregorthemapguy.blogspot.com/2012/08/turning-directions-for-every-segment.html\n        //\n        // DON'T FORGET when flipping the linestring geometry TO ALSO update the firstpoint and lastpoint references\n        // as we will likely be comparing them for later phases of work\n        for (var i = 0, l = route.length - 2; i <= l; i++) {\n            var thisstep = route[i];\n            var nextstep = route[i + 1];\n\n            var dx11 = thisstep.firstpoint.distance(nextstep.firstpoint);\n            var dx22 = thisstep.lastpoint.distance(nextstep.lastpoint);\n            var dx12 = thisstep.firstpoint.distance(nextstep.lastpoint);\n            var dx21 = thisstep.lastpoint.distance(nextstep.firstpoint);\n            switch (Math.min(dx11, dx12, dx22, dx21)) {\n                case dx21:\n                    // this segment's end meets the next segment's start; great!\n                    console.log(['segment end align', thisstep.debug, nextstep.debug, 'ok as is']);\n                    break;\n                case dx11:\n                    // this segment's start meets the next segment's start; flip this one\n                    console.log(['segment end align', thisstep.debug, nextstep.debug, 'flip this']);\n\n                    thisstep.geom.geometries[0].points.coordinates.reverse();\n\n                    var thispoints = thisstep.geom.getCoordinates();\n                    thisstep.firstpoint = gfactory.createPoint(thispoints[0]);\n                    thisstep.lastpoint = gfactory.createPoint(thispoints[thispoints.length - 1]);\n\n                    break;\n                case dx12:\n                    // this segment's start meets the next segment's end; flip both\n                    console.log(['segment end align', thisstep.debug, nextstep.debug, 'flip both']);\n\n                    thisstep.geom.geometries[0].points.coordinates.reverse();\n                    nextstep.geom.geometries[0].points.coordinates.reverse();\n\n                    var thispoints = thisstep.geom.getCoordinates();\n                    thisstep.firstpoint = gfactory.createPoint(thispoints[0]);\n                    thisstep.lastpoint = gfactory.createPoint(thispoints[thispoints.length - 1]);\n\n                    var nextpoints = nextstep.geom.getCoordinates();\n                    nextstep.firstpoint = gfactory.createPoint(nextpoints[0]);\n                    nextstep.lastpoint = gfactory.createPoint(nextpoints[nextpoints.length - 1]);\n\n                    break;\n                case dx22:\n                    // this segment's end meets the next segment's end; flip next one\n                    console.log(['segment end align', thisstep.debug, nextstep.debug, 'flip next']);\n\n                    nextstep.geom.geometries[0].points.coordinates.reverse();\n\n                    var nextpoints = nextstep.geom.getCoordinates();\n                    nextstep.firstpoint = gfactory.createPoint(nextpoints[0]);\n                    nextstep.lastpoint = gfactory.createPoint(nextpoints[nextpoints.length - 1]);\n\n                    break;\n            }\n        }\n\n        // go through the transitions and clean up non-matching ends, which form visible breaks where the segments don't really touch\n        // effectively, fudge the last point of the previous trail to be the same as the first point of next, so they will overlap\n        for (var i = 0, l = route.length - 2; i <= l; i++) {\n            var thisstep = route[i];\n            var nextstep = route[i + 1];\n            // if the distance between the two points is quite close, don't bother; the topology is destined for a significant cleanup which will solve many of them\n            var dx = thisstep.lastpoint.distance(nextstep.firstpoint);\n            if (dx < 0.0001) continue;\n\n            // clone the next segment's starting point, append it to our linestring; don't forget to update our lastpoint\n            // this is way off API, modifying the geometry in place\n            var newpoint = gfactory.createPoint(nextstep.firstpoint.coordinates.coordinates[0]);\n            console.log(['patching gap', thisstep.debug, nextstep.debug, newpoint]);\n            thisstep.geom.geometries[0].points.coordinates.push(newpoint.coordinates.coordinates[0]);\n            thisstep.lastpoint = newpoint;\n        }\n\n        // go through the transitions and generate a directions attribute by comparing the azimuth of the old path and the new path\n        // - human directions with the name \"Turn right onto Schermerhorn Ct\"\n        // - simplified directions fitting a domain \"R\"\n        // - latlong of this step-segment's lastpoint vertex for the location of this transition\n        //\n        // add to the final point a transition as well, so caller doesn't need to scramble with \"if not segment.transition\"\n\n        var TRANSITION_CODES = {\n            RIGHT_TURN: { code: 'RT', text: \"Turn right onto \" },\n            RIGHT_SOFT: { code: 'RS', text: \"Bear right onto \" },\n            RIGHT_HARD: { code: 'RH', text: \"Turn sharply right onto \" },\n            LEFT_TURN: { code: 'LT', text: \"Turn left onto \" },\n            LEFT_SOFT: { code: 'LS', text: \"Bear left onto \" },\n            LEFT_HARD: { code: 'LH', text: \"Turn sharply left onto \" },\n            STRAIGHT: { code: 'ST', text: \"Continue onto \" },\n            ARRIVE: { code: 'AR', text: \"Arrive\" },\n            OTHER: { code: 'XX', text: \"\" }\n        };\n\n        function rad2deg(angle) {\n            return angle * 57.29577951308232; // angle / Math.PI * 180\n        }\n        function deg2rad(angle) {\n            return angle * 0.017453292519943295; // (angle / 180) * Math.PI;\n        }\n\n        for (var i = 0, l = route.length - 2; i <= l; i++) {\n            var thisstep = route[i];\n            var nextstep = route[i + 1];\n\n            // find the azimuth (compass heading) of the two paths, and the difference between the azimuths, thus the turning\n            // the azimuth of the line's overall bent (firstpoint to lastpoint) is easily thrown off by curves characteristic of trails\n            // the azimuth of the very first or last vertex-pair, is too sensitive to very tiny variations when drawing shapes e.g. hand jitters\n            // so try the azimuth of the last 3 such pairs, if that many exist\n\n            var thispoints = thisstep.geom.getCoordinates().slice(-3);\n            var this_last = thispoints[thispoints.length - 1],\n                this_prev = thispoints[0];\n\n            var nextpoints = nextstep.geom.getCoordinates().slice(0, 3);\n            var next_first = nextpoints[0],\n                next_second = nextpoints[nextpoints.length - 1];\n\n            var thislon2 = this_prev.x,\n                thislat2 = this_prev.y,\n                thislon1 = this_last.x,\n                thislat1 = this_last.y;\n            var nextlon2 = next_first.x,\n                nextlat2 = next_first.y,\n                nextlon1 = next_second.x,\n                nextlat1 = next_second.y;\n\n            var thisaz = (180 + rad2deg(Math.atan2(Math.sin(deg2rad(thislon2) - deg2rad(thislon1)) * Math.cos(deg2rad(thislat2)), Math.cos(deg2rad(thislat1)) * Math.sin(deg2rad(thislat2)) - Math.sin(deg2rad(thislat1)) * Math.cos(deg2rad(thislat2)) * Math.cos(deg2rad(thislon2) - deg2rad(thislon1))))) % 360;\n            var nextaz = (180 + rad2deg(Math.atan2(Math.sin(deg2rad(nextlon2) - deg2rad(nextlon1)) * Math.cos(deg2rad(nextlat2)), Math.cos(deg2rad(nextlat1)) * Math.sin(deg2rad(nextlat2)) - Math.sin(deg2rad(nextlat1)) * Math.cos(deg2rad(nextlat2)) * Math.cos(deg2rad(nextlon2) - deg2rad(nextlon1))))) % 360;\n            var angle = Math.round(nextaz - thisaz);\n            if (angle > 180) angle = angle - 360;\n            if (angle < -180) angle = angle + 360;\n            console.log(['turning', thisstep.debug, nextstep.debug, thisaz, nextaz, angle]);\n\n            var turntype = TRANSITION_CODES.OTHER;\n            if (angle >= -30 && angle <= 30) turntype = TRANSITION_CODES.STRAIGHT;else if (angle >= 31 && angle <= 60) turntype = TRANSITION_CODES.RIGHT_SOFT;else if (angle >= 61 && angle <= 100) turntype = TRANSITION_CODES.RIGHT_TURN;else if (angle >= 101) turntype = TRANSITION_CODES.RIGHT_HARD;else if (angle <= -30 && angle >= -60) turntype = TRANSITION_CODES.LEFT_SOFT;else if (angle <= -61 && angle >= -100) turntype = TRANSITION_CODES.LEFT_TURN;else if (angle <= -101) turntype = TRANSITION_CODES.LEFT_HARD;\n\n            thisstep.transition = _defineProperty({\n                lat: thisstep.lastpoint.coordinates.coordinates[0].y, // wow, no method for this?\n                lng: thisstep.lastpoint.coordinates.coordinates[0].x, // wow, no method for this?\n                title: thisstep.title + ' to ' + nextstep.title,\n                code: turntype.code\n            }, 'title', turntype.text + nextstep.title);\n        }\n\n        var thisstep = route[route.length - 1];\n        thisstep.transition = {\n            lat: thisstep.lastpoint.coordinates.coordinates[0].y, // wow, no method for this?\n            lng: thisstep.lastpoint.coordinates.coordinates[0].x, // wow, no method for this?\n            code: TRANSITION_CODES.ARRIVE.code,\n            title: TRANSITION_CODES.ARRIVE.text\n        };\n\n        // metadata: the actually-requested starting latlng and target latlng\n        route.wanted_start = gfactory.createPoint(new jsts.geom.Coordinate(route.start_segment.wanted_lng, route.start_segment.wanted_lat));\n        route.wanted_end = gfactory.createPoint(new jsts.geom.Coordinate(route.target_segment.wanted_lng, route.target_segment.wanted_lat));\n\n        // metadata: the closest point latlng and the closest distance, to our starting and ending segment\n        // they already have these from findNearestSegmentToLatLng() but let's formalize them into the output\n        route.closest_point_start = gfactory.createPoint(new jsts.geom.Coordinate(route.start_segment.closest_lng, route.start_segment.closest_lat));\n        route.closest_point_end = gfactory.createPoint(new jsts.geom.Coordinate(route.target_segment.closest_lng, route.target_segment.closest_lat));\n        route.closest_distance_start = route.start_segment.closest_distance;\n        route.closest_distance_end = route.target_segment.closest_distance;\n\n        // metadata: the sum distance from all the segments, e.g. total trip length\n        route.total_meters = route.reduce(function (sum, segment) {\n            return sum + segment.meters;\n        }, 0);\n\n        // and Bob's your uncle\n        return route;\n    },\n\n    //\n    // internal / utility function: given a completed and decorated route from routeDecorate()\n    // serialize the sequence of linestrings into a GeoJSON document, ready for consumption\n    //\n    routeSerialize: function routeSerialize(route) {\n        // final prep for hanging back the route\n        // massage it into a GeoJSON-shaped structure, so it's ready to consume by almost anything\n        var self = this;\n\n        var wktwriter = new jsts.io.GeoJSONWriter();\n\n        var structure = {\n            type: \"FeatureCollection\",\n            properties: {\n                total_meters: route.total_meters,\n                startpoint_wanted: wktwriter.write(route.wanted_start),\n                endpoint_wanted: wktwriter.write(route.wanted_end),\n                startpoint_trail: wktwriter.write(route.closest_point_start),\n                endpoint_trail: wktwriter.write(route.closest_point_end),\n                startpoint_meters: route.closest_distance_start,\n                endpoint_meters: route.closest_distance_end\n            },\n            features: route.map(function (routestep) {\n                var feature = wktwriter.write(routestep.geom);\n\n                feature.properties = {\n                    id: routestep.id,\n                    title: routestep.title,\n                    length: routestep.meters,\n                    transition: routestep.transition\n                };\n\n                return feature;\n            })\n        };\n\n        // done!\n        return structure;\n    }\n};\n\nexports.default = ROUTER;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// ./lib/ecgClientRouter.js"],"sourceRoot":""}